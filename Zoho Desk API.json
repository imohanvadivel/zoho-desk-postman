{
	"info": {
		"_postman_id": "bc554b53-8d7a-43b1-a366-ed2cee6401f1",
		"name": "Zoho Desk API",
		"description": "This is a Postman collection covering the Zoho Desk API.\n\n### Disclaimer\n\n- This collection is not by any means officially supported by Zoho Desk.  \n- Visit [Zoho Desk Developer APIs forum](https://help.zoho.com/portal/en/community/zoho-desk/zoho-desk-developer-apis) for any API queries.  \n- Also refer [official API documentation](https://desk.zoho.com/DeskAPIDocument) for more details.\n\n---\n\n## Get Started\n\nGet started by forking this collection.\n\n### Forking Postman collection\n\n- Fork this collection from the Zoho Desk [public workspace](https://www.postman.com/imohanvadivel/workspace/zoho-desk/overview).\n\n<img src=\"https://raw.githubusercontent.com/imohanvadivel/zoho-desk-postman/main/images/Frk_1.png\" width=\"1069\">\n\n- Enter a name for your fork and select the workspace where it will be created.\n\n<img src=\"https://raw.githubusercontent.com/imohanvadivel/zoho-desk-postman/main/images/Frk_2.png\" width=\"1069\">\n\n- Similarly click on the `Environments` tab and fork the environment template.\n\n<img src=\"https://raw.githubusercontent.com/imohanvadivel/zoho-desk-postman/main/images/Frk_3.png\" width=\"1069\">\n\n- You should now see the Zoho Desk API collection and environment in your selected workspace.\n\n<img src=\"https://raw.githubusercontent.com/imohanvadivel/zoho-desk-postman/main/images/Frk_4.png\" width=\"1069\">\n\n- Update the environment variables with your secret keys and save.\n\n<img src=\"https://raw.githubusercontent.com/imohanvadivel/zoho-desk-postman/main/images/Frk_5.png\" width=\"1069\">\n\n- Set the environment to active.\n\n<img src=\"https://raw.githubusercontent.com/imohanvadivel/zoho-desk-postman/main/images/Frk_6.png\" width=\"1069\">\n\nYou are now up and running with Zoho Desk API collections.\n\n---\n\n### Conventions\n\n1. All Zoho Desk APIs require `Authorization` fields in the header.\n2. Always ignore undocumented fields or enum values present in the api response.These fields could be either experimental or deprecated.\n3. Data fields in tickets, contacts, accounts, tasks etc are dynamic. This is due to security field filtering applied for user profile. Hence when coding with data from these api always consider them as dynamic.\n    \n\n### Include\n\nZoho Desk enables you to retrieve different related resources through a single API request, which is made possible by the `include` query param. This query param takes a comma separated list of values corresponding to the API.\n\n### Compatibility\n\nBackwards Compatibility on api changes is always maintained. Minor api changes like field, URL, query param deprecation will be notified via forum with a transition period. Support will be revoked after the end of transition period. Only major api interface change will involve the version number in the URL to change.\n\n### Pagination\n\nIn Zoho Desk, you can fetch multiple resources using listing APIs, such as list tickets , list agents and list departments and so on. The retrieval and arrangement of these resources on end-users' screen is called pagination. Pagination in listing APIs is made possible by two parameters: from and limit\n\n| Attributes | Description |\n| --- | --- |\n| from | from indicates the offset from which the records is to be fetched the default value of from parameter is 1 |\n| limit | limit indicates the number of records the API must fetch. The default value of limit will be 10. A single API request can fetch a maximum of 50 resources. However, some APIs support higher limits, which is mentioned in the API document, wherever applicable |\n\nThe paginated responses are retrieved in the form of JSON objects that contain a key called data and a JSON array of resources (objects) as the value.\n\n### API Limits\n\nEach Zoho Desk edition provides a default number of API calls. The default number is enforced daily and applies to the entire org irrespective of factors such as the number of IP addresses used to make the call. This limitation protects the service from overload while ensuring equitable resource sharing in the multitenant environment.\n\n#### Maximum API limit in a 24-hour window for various edition of Zoho Desk\n\n| Edition | Maximum API Calls |\n| --- | --- |\n| Free Edition | 15,000 |\n| Standard Edition | 200,000 |\n| Professional Edition | 500,000 |\n| Enterprise Edition | 1,000,000 |\n\n**Note:** The 24-hour window commences from 00:00 to 23:59:59 and follows the timezone of your data center.\n\n#### Concurrency Limits\n\nIn addition to the above API limits, Zoho Desk also uses a Concurrency system to calculate API Limits based on the number of concurrent calls made per API client(used to generate OAuth token) per org in Zoho Desk. These concurrency limits specify the maximum number of API calls that can be simultaneously active at a given point of time per API client per org.\n\n| Edition | Concurrency Limits per API Client/Org |\n| --- | --- |\n| Free Edition | 5 |\n| Standard Edition | 10 |\n| Professional Edition | 15 |\n| Enterprise Edition | 25 |",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7584004"
	},
	"item": [
		{
			"name": "OAuth",
			"item": [
				{
					"name": "Generate Grant Token",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://accounts.zoho.com/oauth/v2/auth?client_id={{client_id}}&response_type={{client_secret}}&redirect_uri={{redirect_uri}}&scope={{scope}}",
							"protocol": "https",
							"host": [
								"accounts",
								"zoho",
								"com"
							],
							"path": [
								"oauth",
								"v2",
								"auth"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"description": "Client ID generated after registering the client."
								},
								{
									"key": "response_type",
									"value": "{{client_secret}}",
									"description": "code"
								},
								{
									"key": "redirect_uri",
									"value": "{{redirect_uri}}",
									"description": "Redirect URI mentioned while registering the client."
								},
								{
									"key": "scope",
									"value": "{{scope}}",
									"description": "The various scopes associated with Zoho Desk.You can use the list of scopes as per your requirement"
								},
								{
									"key": "access_type",
									"value": "offline",
									"description": "\"offline\"/\"online\". In cases where refresh tokens can't be stored, use online access_type. The default will be online",
									"disabled": true
								},
								{
									"key": "state",
									"value": "3RraTnDomc3ahrpoJkU7",
									"description": "State is an opaque value used by the client to maintain state between the request and callback.",
									"disabled": true
								}
							]
						},
						"description": "### Step 2: Authorization Request\n\nTo authenticate your application, you need to redirect the user of the client application to the suitable **authorization endpoint**. On successful login, Zoho Desk will call your redirect URI along with an `authorization` code (Grant Token)."
					},
					"response": []
				},
				{
					"name": "Generate Access Token and Refresh Token",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://accounts.zoho.com/oauth/v2/token?code=&client_id={{client_id}}&client_secret={{client_secret}}&grant_type=authorization_code&redirect_uri={{redirect_uri}}",
							"protocol": "https",
							"host": [
								"accounts",
								"zoho",
								"com"
							],
							"path": [
								"oauth",
								"v2",
								"token"
							],
							"query": [
								{
									"key": "code",
									"value": "",
									"description": "Authorization code obtained after generating the grant token."
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"description": "Client ID obtained after registering the client."
								},
								{
									"key": "client_secret",
									"value": "{{client_secret}}",
									"description": "Client secret obtained after registering the client."
								},
								{
									"key": "grant_type",
									"value": "authorization_code"
								},
								{
									"key": "redirect_uri",
									"value": "{{redirect_uri}}",
									"description": "Redirect URI mentioned while registering the client."
								}
							]
						},
						"description": "### Step 3: Generate Access Token and Refresh Token\n\nOAuth2.0 requests are usually authenticated with an access token.Send this request to exchange the authorization code (Grant Token) with an OAuthToken.\n\nAfter invoking the URL, you will be presented with an access token, which you must include in all API calls.\n\n#### Note:\n\n\\*   Each access token is valid for only an hour and used only for the operations defined in the scope.\n\\*   Refresh token does not expire. Use it to refresh access tokens when they expire.\n\\*   You can only generate a maximum of five refresh tokens in a minute."
					},
					"response": [
						{
							"name": "Generate Access Token and Refresh Token",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://accounts.zoho.com/oauth/v2/token?code=1000.fadbca4c2be2f08b0ce82a54f4313.ba5325853af6f12a0f160&client_id=1000.R2Z0WWOLFVMR287126QED3B4JWQ5EN&client_secret=39c689de68c712fa5f1f06c3b1319ab98f59fa921b&grant_type=authorization_code&redirect_uri=https://www.zylker.com/oauthgrant",
									"protocol": "https",
									"host": [
										"accounts",
										"zoho",
										"com"
									],
									"path": [
										"oauth",
										"v2",
										"token"
									],
									"query": [
										{
											"key": "code",
											"value": "1000.fadbca4c2be2f08b0ce82a54f4313.ba5325853af6f12a0f160",
											"description": "Authorization code obtained after generating the grant token."
										},
										{
											"key": "client_id",
											"value": "1000.R2Z0WWOLFVMR287126QED3B4JWQ5EN",
											"description": "Client ID obtained after registering the client."
										},
										{
											"key": "client_secret",
											"value": "39c689de68c712fa5f1f06c3b1319ab98f59fa921b",
											"description": "Client secret obtained after registering the client."
										},
										{
											"key": "grant_type",
											"value": "authorization_code"
										},
										{
											"key": "redirect_uri",
											"value": "https://www.zylker.com/oauthgrant",
											"description": "Redirect URI mentioned while registering the client."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"access_token\": \"1000.67013ab3960787bcf3affae67e649fc0.83a789c859e040bf11e7d05f9c8b5ef6\",\n    \"refresh_token\": \"1000.aed4288cd9cfb2d63d093faef1b98890.2f4aa58ddadbec9fbbfd683805da839b\",\n    \"token_type\": \"Bearer\",\n    \"expires_in\": 3600\n}"
						}
					]
				},
				{
					"name": "Refresh Access Token",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://accounts.zoho.com/oauth/v2/token?refresh_token={{refresh_token}}&client_id={{client_id}}&client_secret={{client_secret}}&scope={{scope}}&redirect_uri={{redirect_uri}}&grant_type=refresh_token",
							"protocol": "https",
							"host": [
								"accounts",
								"zoho",
								"com"
							],
							"path": [
								"oauth",
								"v2",
								"token"
							],
							"query": [
								{
									"key": "refresh_token",
									"value": "{{refresh_token}}",
									"description": "Refresh token obtained while generating Access Token"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"description": "Client ID obtained after registering the client."
								},
								{
									"key": "client_secret",
									"value": "{{client_secret}}",
									"description": "Client secret obtained after registering the client."
								},
								{
									"key": "scope",
									"value": "{{scope}}",
									"description": "The various scopes associated with Zoho Desk.You can use the list of scopes as per your requirement"
								},
								{
									"key": "redirect_uri",
									"value": "{{redirect_uri}}",
									"description": "Redirect URI mentioned while registering the client."
								},
								{
									"key": "grant_type",
									"value": "refresh_token"
								}
							]
						},
						"description": "### Step 4: Refresh Access Tokens\n\nAccess tokens generally expire in one hour, which means a new access token has to be generated to keep the process going. You can eliminate the need to perform the entire procedure to generate access tokens, by using refresh tokens. Once the access token expires, the refresh token can be used to generate a new access token.\n\nRefresh token can be obtained only when `access_type` is set to `offline` while creating the access token.\n\nRefer to the example to understand how an access token can be obtained using the refresh token.\n\n#### Note:\n\n- A \"User\" in an organization can have a maximum of 20 refresh tokens. And each refresh token can have a maximum of 30 active access tokens (non expired).  \n-  When a user creates a 31st access token, the system deletes the first created access token. Similarly, when the user creates the 21st refresh token, the system deletes the first created refresh token.  \n-  You can only generate a maximum of five refresh tokens in a minute.  \n-  We have provided with a sample test OAuth in all the examples, so that you can test any example on your own. You can replace the sample OAuth Token with your actual token to test requests from your Desk account."
					},
					"response": [
						{
							"name": "Refresh Access Token",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://accounts.zoho.com/oauth/v2/token?refresh_token=1000.dd7e67013ab396012e3d6eb1a9bc08.40bf11e7d0a1781ffec859e&client_id=1000.R2Z0WWOLFVMR287126QED3B4JWQ5EN&client_secret=39c689de68c712fa5f1f06c3b1319ab98f59fa921b&scope=Desk.tickets.READ,Desk.basic.READ&redirect_uri=https://www.zylker.com/oauthgrant&grant_type=refresh_token",
									"protocol": "https",
									"host": [
										"accounts",
										"zoho",
										"com"
									],
									"path": [
										"oauth",
										"v2",
										"token"
									],
									"query": [
										{
											"key": "refresh_token",
											"value": "1000.dd7e67013ab396012e3d6eb1a9bc08.40bf11e7d0a1781ffec859e",
											"description": "Refresh token obtained while generating Access Token"
										},
										{
											"key": "client_id",
											"value": "1000.R2Z0WWOLFVMR287126QED3B4JWQ5EN",
											"description": "Client ID obtained after registering the client."
										},
										{
											"key": "client_secret",
											"value": "39c689de68c712fa5f1f06c3b1319ab98f59fa921b",
											"description": "Client secret obtained after registering the client."
										},
										{
											"key": "scope",
											"value": "Desk.tickets.READ,Desk.basic.READ",
											"description": "The various scopes associated with Zoho Desk.You can use the list of scopes as per your requirement"
										},
										{
											"key": "redirect_uri",
											"value": "https://www.zylker.com/oauthgrant",
											"description": "Redirect URI mentioned while registering the client."
										},
										{
											"key": "grant_type",
											"value": "refresh_token"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"access_token\": \"1000.2d4437b4f862641d76dedac5f95a3f8a.fac6eb7129da540de1d53b06562e744d\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": 3600\n}"
						}
					]
				},
				{
					"name": "Revoke Token",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://accounts.zoho.com/oauth/v2/token/revoke?token={{refresh_token}}",
							"protocol": "https",
							"host": [
								"accounts",
								"zoho",
								"com"
							],
							"path": [
								"oauth",
								"v2",
								"token",
								"revoke"
							],
							"query": [
								{
									"key": "token",
									"value": "{{refresh_token}}",
									"description": "Refresh token obtained while generating Access Token"
								}
							]
						},
						"description": "### Step 5: Revoking Tokens\n\nIn case if you wish to revoke the refresh_token, use this approach."
					},
					"response": [
						{
							"name": "Revoke Token",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://accounts.zoho.com/oauth/v2/token/revoke?token=1000.aed4288cd9cfb2d63d093faef1b98890.2f4aa58ddadbec9fbbfd683805da839b",
									"protocol": "https",
									"host": [
										"accounts",
										"zoho",
										"com"
									],
									"path": [
										"oauth",
										"v2",
										"token",
										"revoke"
									],
									"query": [
										{
											"key": "token",
											"value": "1000.aed4288cd9cfb2d63d093faef1b98890.2f4aa58ddadbec9fbbfd683805da839b",
											"description": "Refresh token obtained while generating Access Token"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Server",
									"value": "ZGS"
								},
								{
									"key": "Date",
									"value": "Sat, 10 Sep 2022 14:13:50 GMT"
								},
								{
									"key": "Content-Length",
									"value": "20"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Content-Language",
									"value": "en-US"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								}
							],
							"cookie": [],
							"body": "{\"status\":\"success\"}"
						}
					]
				}
			],
			"description": "The Zoho Desk API is authenticated using OAuth2.0 protocol. This allows you to share specific data with any application while keeping your usernames and passwords private.\n\n#### OAuth Scopes\n\nThe various scopes accessible using Zoho Desk's APIs are as follows:\n\n| ScopeName | Description |\n| --- | --- |\n| Desk.tickets.ALL | Grants read and write access to tickets and related data. |\n| Desk.tickets.READ | Grants read access to tickets and related data. |\n| Desk.tickets.WRITE | Grants write access to tickets. |\n| Desk.tickets.UPDATE | Grants update access to tickets and related data. |\n| Desk.tickets.CREATE | Grants access to create tickets |\n| Desk.tickets.DELETE | Grants access to delete tickets |\n| Desk.contacts.READ | Grants read access to contacts, accounts and related data |\n| Desk.contacts.WRITE | Grants write access to contacts, accounts and related data |\n| Desk.contacts.UPDATE | Grants update access to contacts, accounts and related data |\n| Desk.contacts.CREATE | Grants access to create contacts and accounts |\n| Desk.tasks.ALL | Grants read and write access to tasks and related data |\n| Desk.tasks.WRITE | Grants write access to tasks and related data |\n| Desk.tasks.READ | Grants read access to tasks and related data |\n| Desk.tasks.CREATE | Grants access to create tasks |\n| Desk.tasks.UPDATE | Grants update access to tasks and related data |\n| Desk.tasks.DELETE | Grants access to delete tasks |\n| Desk.basic.READ | Grants read access to basic data, such as organizations, agents and departments |\n| Desk.basic.CREATE | Grants access to create basic data, such as organizations, agents and departments |\n| Desk.settings.ALL | Grants read and write access to settings data |\n| Desk.settings.WRITE | Grants write access to settings data |\n| Desk.settings.READ | Grants read access to settings data |\n| Desk.settings.CREATE | Grants access to create new settings data |\n| Desk.settings.UPDATE | Grants access to update existing settings data |\n| Desk.settings.DELETE | Grants access to delete settings data |\n| Desk.search.READ | Grants access to search for data |\n| Desk.events.ALL | Grants read and write access to the events subscription |\n| Desk.events.READ | Grants read access to the events subscription |\n| Desk.events.WRITE | Grants write access to the events subscription |\n| Desk.events.CREATE | Grants access to create events subscription |\n| Desk.events.UPDATE | Grants update access to the events subscription |\n| Desk.events.DELETE | Grants delete access to the events subscription |\n| Desk.articles.READ | Grants read access to articles |\n| Desk.articles.CREATE | Grants access to create articles |\n| Desk.articles.UPDATE | Grants update access to articles |\n| Desk.articles.DELETE | Grants delete access to articles |\n\n### Step 1: Register your application\n\nBefore you get started with authorization and make any calls to the Zoho Desk API, you need to register your application.\n\nTo register:\n\n1.  Visit [Zoho Api Console](https://accounts.zoho.com/developerconsole)\n2.  Click **Add Client** and choose your client type.\n3.  Enter the Client Name, Homepage URL, Redirect URI and click **Create**.\n4.  Note down your `Client ID`, `Client Secret` and `Redirect URI`.\n    \n\nRegistered applications will receive the following credentials:\n- **Client id** – The consumer key generated from the connected app.  \n- **Client Secret** – The consumer secret generated from the connected app.  \n- **Redirect URI** – The Callback URL that you registered during the app registration."
		},
		{
			"name": "Organizations",
			"item": [
				{
					"name": "Get organization",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/organizations/:organization_Id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizations",
								":organization_Id"
							],
							"query": [
								{
									"key": "includeCustomDomain",
									"value": "<boolean>\ndefault : false",
									"description": "Key that denotes if the customDomain field must be included in the API response",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "organization_Id"
								}
							]
						},
						"description": "This API fetches the details of an organization from your help desk.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get organization",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/organizations/3981311?includeCustomDomain=true",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"organizations",
										"3981311"
									],
									"query": [
										{
											"key": "includeCustomDomain",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"country\" : \"United States\",\n  \"city\" : \"Bernierview\",\n  \"companyName\" : \"Zylker INC.\",\n  \"description\" : \"We are Zylker Support.\",\n  \"edition\" : \"ENTERPRISE\",\n  \"employeeCount\" : \"10\",\n  \"isAdminInOrg\" : true,\n  \"faviconURL\" : \"https://desk.zoho.com/api/v1/organizations/3981311/favicon?no-cache=d61a9627de49ffe046fcab71af3359e8\",\n  \"portalName\" : \"zylker\",\n  \"street\" : \"70961 Powlowski Crossing\",\n  \"currencyLocale\" : \"US\",\n  \"alias\" : \"Zylker Teams\",\n  \"id\" : \"3981311\",\n  \"state\" : \"NC\",\n  \"fax\" : \"8392839821\",\n  \"zip\" : \"68838-2640\",\n  \"website\" : \"www.zylker.com\",\n  \"mobile\" : \"9848022338\",\n  \"currencySymbol\" : \"$\",\n  \"logoURL\" : \"https://desk.zoho.com/api/v1/organizations/3981311/logo?no-cache=ffc59c3ba6585c12fb306f5174948ff6\",\n  \"customDomain\" : \"support.zylker.com\",\n  \"isDefault\" : \"false\",\n  \"phoneNumber\" : \"9884358081\",\n  \"portalURL\" : \"http://support.zylker.com/support/zylker/ShowHomePage.do\",\n  \"primaryContact\" : \"steve@zylker.com\",\n  \"currencyCode\" : \"USD\"\n}"
						}
					]
				},
				{
					"name": "Get all organizations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizations"
							]
						},
						"description": "This API lists all organizations to which the current user belongs.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get all organizations",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/organizations",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"organizations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"country\" : \"United States\",\n    \"city\" : \"Bernierview\",\n    \"companyName\" : \"Zylker INC.\",\n    \"description\" : \"We are Zylker Support.\",\n    \"edition\" : \"ENTERPRISE\",\n    \"employeeCount\" : \"10\",\n    \"isAdminInOrg\" : true,\n    \"faviconURL\" : \"https://desk.zoho.com/api/v1/organizations/3981311/favicon?no-cache=d61a9627de49ffe046fcab71af3359e8\",\n    \"portalName\" : \"zylker\",\n    \"street\" : \"70961 Powlowski Crossing\",\n    \"currencyLocale\" : \"US\",\n    \"alias\" : \"Zylker Teams\",\n    \"id\" : \"3981311\",\n    \"state\" : \"NC\",\n    \"fax\" : \"8392839821\",\n    \"zip\" : \"68838-2640\",\n    \"website\" : \"www.zylker.com\",\n    \"mobile\" : \"9848022338\",\n    \"currencySymbol\" : \"$\",\n    \"logoURL\" : \"https://desk.zoho.com/api/v1/organizations/3981311/logo?no-cache=ffc59c3ba6585c12fb306f5174948ff6\",\n    \"isDefault\" : \"false\",\n    \"phoneNumber\" : \"9884358081\",\n    \"portalURL\" : \"http://support.zylker.com/support/zylker/ShowHomePage.do\",\n    \"primaryContact\" : \"steve@zylker.com\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"country\" : \"United States\",\n    \"city\" : \"Port Cierra\",\n    \"companyName\" : \"Nshlerin LLC.\",\n    \"description\" : \"We are Nshlerin Support.\",\n    \"edition\" : \"PROFESSIONAL\",\n    \"employeeCount\" : \"20\",\n    \"isAdminInOrg\" : true,\n    \"faviconURL\" : \"https://desk.zoho.com/api/v1/organizations/5988319/favicon?no-cache=b31a9627de49fge046fcab71sf3359eq\",\n    \"portalName\" : \"nshlerin\",\n    \"street\" : \"269 Adam Flats\",\n    \"currencyLocale\" : \"US\",\n    \"alias\" : \"Nshlerinians\",\n    \"id\" : \"5988319\",\n    \"state\" : \"Port Cierra\",\n    \"fax\" : \"987654321\",\n    \"zip\" : \"33560-8932\",\n    \"website\" : \"www.nshlerin.com\",\n    \"mobile\" : \"987654321\",\n    \"currencySymbol\" : \"$\",\n    \"logoURL\" : \"http://img.zohostatic.com/support/1284527/images/portalLogo.png\",\n    \"isDefault\" : \"false\",\n    \"phoneNumber\" : \"9884309090\",\n    \"portalURL\" : \"http://support.nshlerin.com/support/nshlerin/ShowHomePage.do\",\n    \"primaryContact\" : \"kelvin@zylker.com\",\n    \"currencyCode\" : \"USD\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get accessible organizations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/accessibleOrganizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"accessibleOrganizations"
							]
						},
						"description": "This API lists all organizations which can be accessed using the current Oauth token.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get accessible organizations",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/accessibleOrganizations",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accessibleOrganizations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"country\" : \"United States\",\n    \"city\" : \"Bernierview\",\n    \"companyName\" : \"Zylker INC.\",\n    \"description\" : \"We are Zylker Support.\",\n    \"edition\" : \"ENTERPRISE\",\n    \"employeeCount\" : \"10\",\n    \"isAdminInOrg\" : true,\n    \"faviconURL\" : \"https://desk.zoho.com/api/v1/organizations/3981311/favicon?no-cache=d61a9627de49ffe046fcab71af3359e8\",\n    \"portalName\" : \"zylker\",\n    \"street\" : \"70961 Powlowski Crossing\",\n    \"currencyLocale\" : \"US\",\n    \"alias\" : \"Zylker Teams\",\n    \"id\" : \"3981311\",\n    \"state\" : \"NC\",\n    \"fax\" : \"8392839821\",\n    \"zip\" : \"68838-2640\",\n    \"website\" : \"www.zylker.com\",\n    \"mobile\" : \"9848022338\",\n    \"currencySymbol\" : \"$\",\n    \"logoURL\" : \"https://desk.zoho.com/api/v1/organizations/3981311/logo?no-cache=ffc59c3ba6585c12fb306f5174948ff6\",\n    \"isDefault\" : \"false\",\n    \"phoneNumber\" : \"9884358081\",\n    \"portalURL\" : \"https://support.zylker.com/support/zylker/ShowHomePage.do\",\n    \"primaryContact\" : \"steve@zylker.com\",\n    \"currencyCode\" : \"USD\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Update organization",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/organizations/:organization_Id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizations",
								":organization_Id"
							],
							"variable": [
								{
									"key": "organization_Id"
								}
							]
						},
						"description": "This API updates the details of an organization.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| companyName  | &lt;string&gt;<br />max chars : 50 | Actual name of the organization/business \n| portalName  | &lt;string&gt;<br />max chars : 100 | Unique name for the help desk portal. Only lower-case letters and numbers are allowed in the name. \n| phoneNumber  | &lt;string&gt;<br />max chars : 30 | Phone number of the organization \n| edition  | &lt;string&gt;<br />max chars : 100 | Zoho Desk edition purchased. Values allowed are:&nbsp;`FREE`,&nbsp;`ENTERPRISE`, and&nbsp;`PROFESSIONAL`. \n| alias  | &lt;string&gt;<br />max chars : 50 | Alternative name for the help desk portal \n| employeeCount  | &lt;string&gt;<br />max chars : 19 | Number of employees in the organization \n| description  | &lt;string&gt;<br />max chars : 250 | Brief description of the organization \n| mobile  | &lt;string&gt;<br />max chars : 30 | Mobile number of the organization \n| website  | &lt;string&gt;<br />max chars : 50 | Website of the organization \n| fax  | &lt;string&gt;<br />max chars : 100 | Fax number of the organization \n| primaryContact  | &lt;string&gt;<br />max chars : 100 | Primary contact person in the organization \n| street  | &lt;string&gt;<br />max chars : 50 | Street in which the organization's office is located \n| city  | &lt;string&gt;<br />max chars : 50 | City in which the organization's office is located \n| state  | &lt;string&gt;<br />max chars : 50 | State in which the organization's office is located \n| zip  | &lt;string&gt;<br />max chars : 100 | Zip code of the organization's address \n| country  | &lt;string&gt;<br />max chars : 50 | Country in which the organization's office is located \n| currencyLocale  | &lt;string&gt;<br />max chars : 100 | Currency locale in which the organization operates \n"
					},
					"response": [
						{
							"name": "Update organization",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"portalName\" : \"zylkerdesk\",\n  \"companyName\" : \"Zylker Desk\",\n  \"primaryContact\" : \"kelvin@zylker.com\",\n  \"mobile\" : \"9848022338\",\n  \"employeeCount\" : \"10\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/organizations/3981311",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"organizations",
										"3981311"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"country\" : \"United States\",\n  \"city\" : \"Bernierview\",\n  \"companyName\" : \"Zylker Desk\",\n  \"description\" : \"We are Zylker Support.\",\n  \"edition\" : \"ENTERPRISE\",\n  \"employeeCount\" : \"10\",\n  \"isAdminInOrg\" : true,\n  \"faviconURL\" : \"https://desk.zoho.com/api/v1/organizations/3981311/favicon?no-cache=d61a9627de49ffe046fcab71af3359e8\",\n  \"portalName\" : \"zylkerdesk\",\n  \"street\" : \"70961 Powlowski Crossing\",\n  \"currencyLocale\" : \"US\",\n  \"alias\" : \"Zylker Teams\",\n  \"id\" : \"3981311\",\n  \"state\" : \"NC\",\n  \"fax\" : \"8392839821\",\n  \"zip\" : \"68838-2640\",\n  \"website\" : \"www.zylker.com\",\n  \"mobile\" : \"9848022338\",\n  \"currencySymbol\" : \"$\",\n  \"logoURL\" : \"http://img.zohostatic.com/support/1284527/images/portalLogo.png\",\n  \"isDefault\" : \"false\",\n  \"phoneNumber\" : \"9884358081\",\n  \"portalURL\" : \"http://support.zylker.com/support/zylkerdesk/ShowHomePage.do\",\n  \"primaryContact\" : \"kelvin@zylker.com\",\n  \"currencyCode\" : \"USD\"\n}"
						}
					]
				},
				{
					"name": "Get organization logo",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/organizations/:organization_Id/logo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizations",
								":organization_Id",
								"logo"
							],
							"query": [
								{
									"key": "no-cache",
									"value": "<string>\nmax chars : 100",
									"description": "Key that helps avoid browser cache. Only alphanumeric values are allowed.",
									"disabled": true
								},
								{
									"key": "fileSize",
									"value": "<string>\nmax chars : 100",
									"description": "Size of the image file to download. Values allowed are `THUMBNAIL` (image with reduced dimensions and size) and `ACTUAL` (image with actual dimensions and size). The default value is `ACTUAL`.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "organization_Id"
								}
							]
						},
						"description": "This API fetches the logo set for an organization/portal in your help desk.\n#### OAuth Scope\n- ``\n\n"
					},
					"response": [
						{
							"name": "Get organization logo",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/organizations/3981311/logo",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"organizations",
										"3981311",
										"logo"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get organization favicon",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/organizations/:organization_Id/favicon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizations",
								":organization_Id",
								"favicon"
							],
							"query": [
								{
									"key": "no-cache",
									"value": "<string>\nmax chars : 100",
									"description": "Key that helps avoid browser cache. Only alphanumeric values are allowed.",
									"disabled": true
								},
								{
									"key": "fileSize",
									"value": "<string>\nmax chars : 100",
									"description": "Size of the image file to download. Values allowed are `THUMBNAIL` (image with reduced dimensions and size) and `ACTUAL` (image with actual dimensions and size). The default value is `ACTUAL`.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "organization_Id"
								}
							]
						},
						"description": "This API fetches the favicon set for an organization/portal in your help desk.\n#### OAuth Scope\n- ``\n\n"
					},
					"response": [
						{
							"name": "Get organization favicon",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/organizations/3981311/favicon",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"organizations",
										"3981311",
										"favicon"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update organization logo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/organizations/:organization_Id/logo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizations",
								":organization_Id",
								"logo"
							],
							"variable": [
								{
									"key": "organization_Id"
								}
							]
						},
						"description": "This API updates the logo set for an organization/portal in your help desk.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n"
					},
					"response": [
						{
							"name": "Update organization logo",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/organizations/3981311/logo",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"organizations",
										"3981311",
										"logo"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"companyLogoURL\" : \"https://desk.zoho.com/api/v1/organizations/3981311/logo?no-cache=ffc59c3ba6585c12fb306f5174948ff6\"\n}"
						}
					]
				},
				{
					"name": "Update organization favicon",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/organizations/:organization_Id/favicon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizations",
								":organization_Id",
								"favicon"
							],
							"variable": [
								{
									"key": "organization_Id"
								}
							]
						},
						"description": "This API updates the favicon set for an organization/portal in your help desk.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n"
					},
					"response": [
						{
							"name": "Update organization favicon",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/organizations/3981311/favicon",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"organizations",
										"3981311",
										"favicon"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"faviIconURL\" : \"https://desk.zoho.com/api/v1/organizations/3981311/favicon?no-cache=ffc59c3ba6585c12fb306f5174948ff6\"\n}"
						}
					]
				},
				{
					"name": "Delete organization logo",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/organizations/:organization_Id/logo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizations",
								":organization_Id",
								"logo"
							],
							"variable": [
								{
									"key": "organization_Id"
								}
							]
						},
						"description": "This API deletes the logo set for an organization/portal in your help desk.\n#### OAuth Scope\n- `Desk.settings.DELETE`\n- `Desk.basic.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete organization logo",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/organizations/3981311/logo",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"organizations",
										"3981311",
										"logo"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete organization favicon",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/organizations/:organization_Id/favicon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizations",
								":organization_Id",
								"favicon"
							],
							"variable": [
								{
									"key": "organization_Id"
								}
							]
						},
						"description": "This API updates the favicon set for an organization/portal in your help desk.\n#### OAuth Scope\n- `Desk.settings.DELETE`\n- `Desk.basic.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete organization favicon",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/organizations/3981311/favicon",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"organizations",
										"3981311",
										"favicon"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update default organization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/organizations/markDefault",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizations",
								"markDefault"
							]
						},
						"description": "This API updates the default organization for the current user in Zoho Desk.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| id (required) | &lt;long&gt;<br /> | Unique ID of the organization to be marked as default org \n"
					},
					"response": [
						{
							"name": "Update default organization",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\" : \"3981311\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/organizations/markDefault",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"organizations",
										"markDefault"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "In Zoho Desk, each business is categorized as an organization. If you have multiple businesses, set each business up as an individual organization by creating a new signup and generating a unique organization ID. All APIs except the ones directly related to organizations must include the organization ID in the header in this format: orgId:{organization_id}"
		},
		{
			"name": "Agents",
			"item": [
				{
					"name": "Get agent",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agents/:agent_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								":agent_id"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Secondary information related to the agent. Values allowed are `profile`, `role`, `associatedDepartments`, and `associatedChatDepartments`. You can include all four values by separating them with commas in the API request.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "agent_id"
								}
							]
						},
						"description": "This API fetches details of an agent in your help desk.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get agent",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/agents/1892000000056096?include=profile,role,associatedDepartments,associatedChatDepartments",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agents",
										"1892000000056096"
									],
									"query": [
										{
											"key": "include",
											"value": "profile,role,associatedDepartments,associatedChatDepartments"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"associatedChatDepartments\" : [ {\n    \"name\" : \"Developement\",\n    \"id\" : \"1892000000006907\"\n  } ],\n  \"lastName\" : \"case\",\n  \"extn\" : \"3298\",\n  \"role\" : {\n    \"name\" : \"CEO\",\n    \"id\" : \"1892000000056099\"\n  },\n  \"langCode\" : \"fr_FR\",\n  \"emailId\" : \"case@zylker.com\",\n  \"photoURL\" : null,\n  \"countryCode\" : \"en_US\",\n  \"isConfirmed\" : true,\n  \"id\" : \"1892000000056096\",\n  \"roleId\" : \"1892000000056099\",\n  \"profile\" : {\n    \"name\" : \"Administrator\",\n    \"id\" : \"1892000000056091\"\n  },\n  \"mobile\" : \"\",\n  \"timeZone\" : \"Pacific/Majuro\",\n  \"associatedChatDepartmentIds\" : [ \"1892000000006907\" ],\n  \"zuid\" : \"10687231\",\n  \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\" ],\n  \"associatedDepartments\" : [ {\n    \"name\" : \"Developement\",\n    \"id\" : \"1892000000006907\"\n  }, {\n    \"name\" : \"R & D\",\n    \"id\" : \"1892000000082069\"\n  } ],\n  \"firstName\" : \"\",\n  \"phone\" : \"492-736-6424\",\n  \"profileId\" : \"1892000000056091\",\n  \"channelExpert\" : [ \"Facebook\", \"Chat\", \"Phone\", \"Twitter\", \"Web\", \"Email\", \"Forums\" ],\n  \"name\" : \"case\",\n  \"rolePermissionType\" : \"Admin\",\n  \"aboutInfo\" : \"Expert in handling tickets and Automations\",\n  \"status\" : \"ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "List agents",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agents",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agents"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\nrange : >=0",
									"description": "Index number, starting from which the agents must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 0-200",
									"description": "Number of agents to fetch. The default value is 10 and the maximum value supported is 200.",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<string>\nmax chars : 100",
									"description": "Key that filters agents based on their activation status: `ACTIVE` or `DISABLED`",
									"disabled": true
								},
								{
									"key": "departmentIds",
									"value": "<long>\n",
									"description": "Comma-separated array of department IDs. Maximum number of IDs allowed is 50.",
									"disabled": true
								},
								{
									"key": "profileIds",
									"value": "<long>\n",
									"description": "Comma-separated array of profile IDs. Maximum number of IDs allowed is 50.",
									"disabled": true
								},
								{
									"key": "roleIds",
									"value": "<long>\n",
									"description": "Comma-separated array of role IDs. Maximum number of IDs allowed is 50.",
									"disabled": true
								},
								{
									"key": "rolePermissionType",
									"value": "<string>\nmax chars : 100",
									"description": "Types of roles and permissions of the agents to list. Values allowed are `AgentPublic`, `AgentPersonal`,`AgentTeamPersonal`, `Admin`, `Light`, `Custom`, and `${NON_LIGHT}`. `${NON_LIGHT}` refers to agents who are not associated with the light agent profile.",
									"disabled": true
								},
								{
									"key": "isConfirmed",
									"value": "<boolean>\n",
									"description": "Key that denotes if the agents must be confirmed or unconfirmed.",
									"disabled": true
								},
								{
									"key": "isLightAgent",
									"value": "<boolean>\n",
									"description": "Key that denotes if the agents must be light or non light.",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Secondary information related to agents, Values allowed are `profile`, `role`. You can include all two values by separating them with commas in the API request.",
									"disabled": true
								},
								{
									"key": "searchStr",
									"value": "<string>\nmax chars : 100",
									"description": "String to search for agents by first name, last name, or email ID. The string must contain at least one character. Three search methods are supported: 1) string* - Searches for agents whose first name, last name, or email ID start with the string, 2) *string* - Searches for agents whose first name, last name, or email ID contain the string, 3) string - Searches for agents whose first name, last name, or email ID is an exact match for the string",
									"disabled": true
								},
								{
									"key": "fieldName",
									"value": "<string>\nmax chars : 100",
									"description": "Name of the field that must be used for searching and listing agents. Values allowed are: `firstName`, `lastName`, `name`, and `emailId`",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "<string>\nmax chars : 100",
									"description": "To sort the available list of agents in either ascending or descending order. Values allowed are: `asc` or `desc`",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of agents, based on the limit specified.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List agents",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/agents",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agents"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"lastName\" : \"case\",\n    \"extn\" : \"3298\",\n    \"roleId\" : \"1892000000056099\",\n    \"langCode\" : \"en_US\",\n    \"mobile\" : \"\",\n    \"timeZone\" : \"Asia/Kolkata\",\n    \"emailId\" : \"case@zylker.com\",\n    \"associatedChatDepartmentIds\" : [ ],\n    \"zuid\" : \"10687231\",\n    \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\", \"1892000000639717\" ],\n    \"firstName\" : \"zyl\",\n    \"photoURL\" : null,\n    \"phone\" : \"492-736-6424\",\n    \"profileId\" : \"1892000000056091\",\n    \"countryCode\" : \"en_US\",\n    \"channelExpert\" : [ \"Facebook\", \"Chat\", \"Phone\", \"Twitter\", \"Web\", \"Email\", \"Forums\" ],\n    \"name\" : \"zyl case\",\n    \"rolePermissionType\" : \"Admin\",\n    \"isConfirmed\" : true,\n    \"aboutInfo\" : \"Expert in handling tickets and Automations\",\n    \"id\" : \"1892000000056007\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"lastName\" : \"jade\",\n    \"extn\" : \"3203\",\n    \"roleId\" : \"1892000000056899\",\n    \"langCode\" : \"en_US\",\n    \"mobile\" : \"\",\n    \"timeZone\" : \"Asia/Kolkata\",\n    \"emailId\" : \"jade@zylker.com\",\n    \"associatedChatDepartmentIds\" : [ ],\n    \"zuid\" : \"10657727\",\n    \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\", \"1892000000639717\", \"1892000001019041\", \"1892000001106673\", \"1892000001109673\" ],\n    \"firstName\" : \"\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000042001/photo?orgId=3981311\",\n    \"phone\" : \"\",\n    \"profileId\" : \"1892000000056091\",\n    \"countryCode\" : \"en_US\",\n    \"channelExpert\" : [ \"Facebook\", \"Chat\", \"Phone\", \"Twitter\", \"Web\" ],\n    \"name\" : \"jade\",\n    \"rolePermissionType\" : \"Light\",\n    \"isConfirmed\" : true,\n    \"aboutInfo\" : \"Expert in handling tasks\",\n    \"id\" : \"1892000000042001\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"lastName\" : \"john\",\n    \"extn\" : \"3228\",\n    \"roleId\" : \"1892000000056004\",\n    \"langCode\" : \"en_US\",\n    \"mobile\" : \"\",\n    \"timeZone\" : \"Asia/Kolkata\",\n    \"emailId\" : \"john@zylker.com\",\n    \"associatedChatDepartmentIds\" : [ ],\n    \"zuid\" : \"10713988\",\n    \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000001019041\" ],\n    \"firstName\" : \"\",\n    \"photoURL\" : null,\n    \"phone\" : \"68779989\",\n    \"profileId\" : \"18920000000232043\",\n    \"countryCode\" : \"en_US\",\n    \"channelExpert\" : [ \"Chat\", \"Phone\", \"Twitter\", \"Web\", \"Email\" ],\n    \"name\" : \"john\",\n    \"rolePermissionType\" : \"AgentPersonal\",\n    \"isConfirmed\" : true,\n    \"aboutInfo\" : \"Expert in handling Workflows and Agents\",\n    \"id\" : \"1892000000070001\",\n    \"status\" : \"DISABLED\"\n  }, {\n    \"lastName\" : \"Waugh\",\n    \"extn\" : \"4020\",\n    \"roleId\" : \"1892000000056004\",\n    \"langCode\" : \"ja_JP\",\n    \"mobile\" : \"\",\n    \"timeZone\" : \"Asia/Tokyo\",\n    \"emailId\" : \"stephen@zylker.com\",\n    \"associatedChatDepartmentIds\" : [ ],\n    \"zuid\" : null,\n    \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\", \"1892000000639717\" ],\n    \"firstName\" : \"Steve\",\n    \"photoURL\" : null,\n    \"phone\" : \"\",\n    \"profileId\" : \"18920000000232043\",\n    \"countryCode\" : \"en_US\",\n    \"channelExpert\" : [ ],\n    \"name\" : \"Steve Waugh\",\n    \"rolePermissionType\" : \"Custom\",\n    \"isConfirmed\" : false,\n    \"aboutInfo\" : \"Expert in handling Knowledge base and comunity \",\n    \"id\" : \"1892000000888059\",\n    \"status\" : \"ACTIVE\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get agents count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agents/count",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								"count"
							],
							"query": [
								{
									"key": "status",
									"value": "<string>\nmax chars : 100",
									"description": "Parameter that filters agents based on their activation status: `ACTIVE` or `DISABLED`",
									"disabled": true
								},
								{
									"key": "isConfirmed",
									"value": "<boolean>\n",
									"description": "Filters Confirmed &amp; Unconfirmed agents",
									"disabled": true
								},
								{
									"key": "includeLightAgent",
									"value": "<boolean>\n",
									"description": "Count light agent.",
									"disabled": true
								}
							]
						},
						"description": "This API lists the agents count by status, confirmed and include light\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get agents count",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/agents/count",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agents",
										"count"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"count\" : 5\n}"
						}
					]
				},
				{
					"name": "Get agent details by agentId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agentsByIds?agentIds=:agent_ids?agentIds=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agentsByIds"
							],
							"query": [
								{
									"key": "agentIds",
									"value": "<long>\n",
									"description": "Comma-separated array of agent IDs. Maximum number of IDs allowed is 50."
								}
							]
						},
						"description": "This API fetches details of agents via the agent IDs passed in the API request.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get agent details by agentId",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/agentsByIds?agentIds=1892000000056007,1892000000042001,1892000000888059",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agentsByIds"
									],
									"query": [
										{
											"key": "agentIds",
											"value": "1892000000056007,1892000000042001,1892000000888059"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"firstName\" : \"\",\n    \"lastName\" : \"case\",\n    \"photoURL\" : null,\n    \"roleId\" : \"7000000012324\",\n    \"profileId\" : \"7000000012339\",\n    \"emailId\" : \"case@zylker.com\",\n    \"id\" : \"1892000000056007\",\n    \"zuid\" : \"437793\"\n  }, {\n    \"firstName\" : \"\",\n    \"lastName\" : \"jade\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000042001/photo?orgId=3981311\",\n    \"roleId\" : \"7000000012324\",\n    \"profileId\" : \"7000000012339\",\n    \"emailId\" : \"jade@zylker.com\",\n    \"id\" : \"1892000000042001\",\n    \"zuid\" : \"279392\"\n  }, {\n    \"firstName\" : \"Steve\",\n    \"lastName\" : \"Waugh\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000888059/photo?orgId=3981311\",\n    \"roleId\" : \"70000000127346\",\n    \"profileId\" : \"70000000120834\",\n    \"emailId\" : \"stephen@zylker.com\",\n    \"id\" : \"1892000000888059\",\n    \"zuid\" : \"91723912\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get My Information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/myinfo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"myinfo"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Secondary information related to the agent. Values allowed are `profile`, `role`, `associatedDepartments`, and `associatedChatDepartments`. You can pass multiple values by separating them with commas in the query param",
									"disabled": true
								}
							]
						},
						"description": "This API fetches details of the currently logged in agent.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get My Information",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/myinfo?include=profile,role,associatedDepartments,associatedChatDepartments",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"myinfo"
									],
									"query": [
										{
											"key": "include",
											"value": "profile,role,associatedDepartments,associatedChatDepartments"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"associatedChatDepartments\" : [ {\n    \"sanitizedName\" : \"Developement\",\n    \"name\" : \"Developement\",\n    \"id\" : \"1892000000006907\"\n  } ],\n  \"lastName\" : \"Emard\",\n  \"extn\" : \"\",\n  \"role\" : {\n    \"name\" : \"CEO\",\n    \"id\" : \"1892000000056099\"\n  },\n  \"langCode\" : \"fr_FR\",\n  \"emailId\" : \"emardtorrey@zylker.com\",\n  \"photoURL\" : null,\n  \"countryCode\" : \"en_US\",\n  \"isConfirmed\" : true,\n  \"id\" : \"1892000000056007\",\n  \"roleId\" : \"1892000000056099\",\n  \"profile\" : {\n    \"name\" : \"Administrator\",\n    \"id\" : \"1892000000056091\"\n  },\n  \"mobile\" : \"\",\n  \"timeZone\" : \"Pacific/Majuro\",\n  \"associatedChatDepartmentIds\" : [ \"1892000000006907\" ],\n  \"zuid\" : \"10687231\",\n  \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\" ],\n  \"associatedDepartments\" : [ {\n    \"sanitizedName\" : \"Developement\",\n    \"name\" : \"Developement\",\n    \"id\" : \"1892000000006907\"\n  }, {\n    \"sanitizedName\" : \"r-d\",\n    \"name\" : \"R & D\",\n    \"id\" : \"1892000000082069\"\n  } ],\n  \"firstName\" : \"Torrey\",\n  \"phone\" : \"\",\n  \"profileId\" : \"1892000000056091\",\n  \"channelExpert\" : [ \"Facebook\", \"Chat\", \"Phone\", \"Twitter\", \"Web\", \"Email\", \"Forums\" ],\n  \"name\" : \"Torrey Emard\",\n  \"rolePermissionType\" : \"Admin\",\n  \"aboutInfo\" : \"Expert in handling tickets and Automations\",\n  \"status\" : \"ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "Activate agents",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agents/activate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								"activate"
							]
						},
						"description": "This API activates agents in your help desk.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| agentIds (required) | &lt;list&gt;<br /> | Ids of Agents \n"
					},
					"response": [
						{
							"name": "Activate agents",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agentIds\" : [ 1892000000056007, 1892000000056008 ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/agents/activate",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agents",
										"activate"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Deactivate agent",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agents/:agent_id/deactivate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								":agent_id",
								"deactivate"
							],
							"variable": [
								{
									"key": "agent_id"
								}
							]
						},
						"description": "This API deactivates an agent in your help desk.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Deactivate agent",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/agents/19000001075071/deactivate",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agents",
										"19000001075071",
										"deactivate"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Reinvite unconfirmed agents",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agents/reinvite",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								"reinvite"
							]
						},
						"description": "This API sends reinvitation mails to unconfirmed agents.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| agentIds (required) | &lt;list&gt;<br /> | Ids of Agents \n"
					},
					"response": [
						{
							"name": "Reinvite unconfirmed agents",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agentIds\" : [ 1892000000056007, 1892000000056008 ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/agents/reinvite",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agents",
										"reinvite"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add agent",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agents",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agents"
							]
						},
						"description": "This API adds an agent to your help desk.\n#### OAuth Scope\n- `Desk.settings.CREATE`\n- `Desk.basic.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| emailId (required) | &lt;string&gt;<br />max chars : 100 | Email ID of the agent \n| lastName (required) | &lt;string&gt;<br />max chars : 50 | Last name of the agent \n| firstName  | &lt;string&gt;<br />max chars : 50 | First name of the agent \n| phone  | &lt;string&gt;<br />max chars : 100 | Phone number of the agent \n| mobile  | &lt;string&gt;<br />max chars : 100 | Mobile number of the agent \n| extn  | &lt;string&gt;<br />max chars : 100 | Extension number of the agent \n| associatedDepartmentIds (required) | &lt;list&gt;<br /> | Departments with which the agent is associated \n| associatedChatDepartmentIds  | &lt;list&gt;<br /> | Chat departments with which the agent is associated \n| rolePermissionType (required) | &lt;string&gt;<br />max chars : 100 | The Role Permission type of Agent \n| aboutInfo  | &lt;string&gt;<br />max chars : 255 | Agent's about info \n| channelExpert  | &lt;list&gt;<br /> | The channels handled for the Agent \n| countryCode  | &lt;string&gt;<br />max chars : 100 | Country code of the agent. Agents can update only their countryCode. They cannot update the countryCode of other users. \n| timeZone  | &lt;string&gt;<br />max chars : 100 | The timeZone of the agent. Eg Asia/Calcutta, Europe/Moscow. One can update his own timeZone only. If it is passed for other agent it will be ignored. \n| langCode  | &lt;string&gt;<br />max chars : 100 | Language code of the agent. Agents can update only their langCode. They cannot update the langCode of other users. \n"
					},
					"response": [
						{
							"name": "Add agent",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"lastName\" : \"Walsh\",\n  \"firstName\" : \"Marisol\",\n  \"countryCode\" : \"en_US\",\n  \"langCode\" : \"fr_FR\",\n  \"rolePermissionType\" : \"Admin\",\n  \"emailId\" : \"marisol51@zylker.com\",\n  \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/agents",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agents"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"lastName\" : \"Walsh\",\n  \"extn\" : \"\",\n  \"roleId\" : \"1892000000056099\",\n  \"langCode\" : \"fr_FR\",\n  \"mobile\" : \"\",\n  \"timeZone\" : \"Pacific/Majuro\",\n  \"emailId\" : \"marisol51@zylker.com\",\n  \"associatedChatDepartmentIds\" : [ ],\n  \"zuid\" : \"\",\n  \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\" ],\n  \"firstName\" : \"Marisol\",\n  \"photoURL\" : null,\n  \"phone\" : \"\",\n  \"profileId\" : \"1892000000056091\",\n  \"countryCode\" : \"en_US\",\n  \"channelExpert\" : [ ],\n  \"name\" : \"Walsh Marisol\",\n  \"rolePermissionType\" : \"Admin\",\n  \"isConfirmed\" : true,\n  \"aboutInfo\" : \"\",\n  \"id\" : \"1892000000056007\",\n  \"status\" : \"ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "Update agent",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agents/:agent_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								":agent_id"
							],
							"variable": [
								{
									"key": "agent_id"
								}
							]
						},
						"description": "This API updates details of an agent.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| emailId  | &lt;string&gt;<br />max chars : 100 | Email ID of the agent \n| lastName  | &lt;string&gt;<br />max chars : 50 | Last name of the agent \n| firstName  | &lt;string&gt;<br />max chars : 50 | First name of the agent \n| phone  | &lt;string&gt;<br />max chars : 100 | Phone number of the agent \n| mobile  | &lt;string&gt;<br />max chars : 100 | Mobile number of the agent \n| extn  | &lt;string&gt;<br />max chars : 100 | Extension number of the agent \n| associatedDepartmentIds  | &lt;list&gt;<br /> | Departments with which the agent is associated \n| associatedChatDepartmentIds  | &lt;list&gt;<br /> | Chat departments with which the agent is associated \n| rolePermissionType  | &lt;string&gt;<br />max chars : 100 | The Role Permission type of Agent \n| aboutInfo  | &lt;string&gt;<br />max chars : 255 | Agent's about info \n| channelExpert  | &lt;list&gt;<br /> | The channels handled for the Agent \n| countryCode  | &lt;string&gt;<br />max chars : 100 | Country code of the agent. Agents can update only their countryCode. They cannot update the countryCode of other users. \n| timeZone  | &lt;string&gt;<br />max chars : 100 | The timeZone of the agent. Eg Asia/Calcutta, Europe/Moscow. One can update his own timeZone only. If it is passed for other agent it will be ignored. \n| langCode  | &lt;string&gt;<br />max chars : 100 | Language code of the agent. Agents can update only their langCode. They cannot update the langCode of other users. \n"
					},
					"response": [
						{
							"name": "Update agent",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"lastName\" : \"Marisol Walsh\",\n  \"firstName\" : \"K\",\n  \"phone\" : \"764-484-8068\",\n  \"rolePermissionType\" : \"Light\",\n  \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/agents/1892000000056007",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agents",
										"1892000000056007"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"lastName\" : \"Marisol Walsh\",\n  \"extn\" : \"3298\",\n  \"roleId\" : \"1892000000056099\",\n  \"langCode\" : \"fr_FR\",\n  \"mobile\" : \"\",\n  \"timeZone\" : \"Pacific/Majuro\",\n  \"emailId\" : \"marisol51@zylker.com\",\n  \"associatedChatDepartmentIds\" : [ ],\n  \"zuid\" : \"10687231\",\n  \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\" ],\n  \"firstName\" : \"K\",\n  \"photoURL\" : null,\n  \"phone\" : \"764-484-8068\",\n  \"profileId\" : \"1892000000056091\",\n  \"countryCode\" : \"en_US\",\n  \"channelExpert\" : [ \"Facebook\", \"Email\", \"Forums\" ],\n  \"name\" : \"K Marisol Walsh\",\n  \"rolePermissionType\" : \"Admin\",\n  \"isConfirmed\" : true,\n  \"aboutInfo\" : \"Expert in handling Reports\",\n  \"id\" : \"1892000000056007\",\n  \"status\" : \"ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "Delete unconfirmed agents",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agents/deleteUnconfirmed",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								"deleteUnconfirmed"
							]
						},
						"description": "This API deletes unconfirmed agents from your help desk.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| agentIds (required) | &lt;list&gt;<br /> | Ids of Agents \n"
					},
					"response": [
						{
							"name": "Delete unconfirmed agents",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agentIds\" : [ 1892000000056007, 1892000000056008 ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/agents/deleteUnconfirmed",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agents",
										"deleteUnconfirmed"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete confirmed agent",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agents/:agent_id/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								":agent_id",
								"delete"
							],
							"variable": [
								{
									"key": "agent_id"
								}
							]
						},
						"description": "This API deletes a confirmed agent from your help desk.\n#### OAuth Scope\n- `Desk.settings.DELETE`\n- `Desk.basic.DELETE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| anonymizedName  | &lt;string&gt;<br />max chars : 50 | Nickname of the agent, which will appear on their entity history page \n| isAnonymize  | &lt;boolean&gt;<br /> | Key that determines if the deleted agent must be anonymized in the help desk \n"
					},
					"response": [
						{
							"name": "Delete confirmed agent",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"anonymizedName\" : \"Anonyme\",\n  \"isAnonymize\" : true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/agents/19000001075071/delete",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agents",
										"19000001075071",
										"delete"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Anonymize deleted agent",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/deletedAgents/:agent_id/anonymize",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"deletedAgents",
								":agent_id",
								"anonymize"
							],
							"variable": [
								{
									"key": "agent_id"
								}
							]
						},
						"description": "This API removes the identification details of a deleted agent.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| anonymizedName  | &lt;string&gt;<br />max chars : 50 | Nickname of the agent, which will appear on their entity history page \n"
					},
					"response": [
						{
							"name": "Anonymize deleted agent",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"anonymizedName\" : \"Anonyme\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/deletedAgents/19000001075071/anonymize",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"deletedAgents",
										"19000001075071",
										"anonymize"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Upload my photo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/uploadMyPhoto",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"uploadMyPhoto"
							]
						},
						"description": "This API sets the profile photo for the currently logged in agent.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n"
					},
					"response": [
						{
							"name": "Upload my photo",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/uploadMyPhoto",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"uploadMyPhoto"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo?orgId=3981311\"\n}"
						}
					]
				},
				{
					"name": "Get agent photo",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agents/:agent_id/photo?orgId={org_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								":agent_id",
								"photo"
							],
							"query": [
								{
									"key": "fileSize",
									"value": "<string>\nmax chars : 100",
									"description": "Size of the image file to download. Values allowed are `THUMBNAIL` (image with reduced dimensions and size) and `ACTUAL` (image with actual dimensions and size). The default value is `ACTUAL`.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "agent_id"
								}
							]
						},
						"description": "This API gets the profile photo for the given agent id.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get agent photo",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/agents/1892000000056007/photo?orgId=3981311&fileSize=THUMBNAIL",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agents",
										"1892000000056007",
										"photo"
									],
									"query": [
										{
											"key": "orgId",
											"value": "3981311"
										},
										{
											"key": "fileSize",
											"value": "THUMBNAIL"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete My Photo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/deleteMyPhoto",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"deleteMyPhoto"
							]
						},
						"description": "This API deletes the profile photo of the currently logged in agent.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Delete My Photo",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/deleteMyPhoto",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"deleteMyPhoto"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get My Preferences",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/myPreferences",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"myPreferences"
							]
						},
						"description": "This API fetches the preferences of the currently logged in agent.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get My Preferences",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/myPreferences",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"myPreferences"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"namePattern\" : [ \"FIRST_NAME\", \"LAST_NAME\" ],\n  \"articleAutoSuggestion\" : \"ENABLED\",\n  \"keyBoardShortcuts\" : \"ENABLED\",\n  \"pinAllAccounts\" : \"ENABLED\",\n  \"outBoxDelayTime\" : \"60S\",\n  \"collapseSidePanel\" : \"DISABLED\",\n  \"pinAllTickets\" : \"ENABLED\",\n  \"ticketConversationView\" : \"ENABLED\",\n  \"contactsView\" : \"LIST\",\n  \"accountsView\" : \"LIST\",\n  \"pinAllContacts\" : \"ENABLED\",\n  \"ticketsView\" : \"DUEDATE_QUEUE\",\n  \"datePattern\" : \"dd/MM/yyyy\",\n  \"defaultSendBehavior\" : \"Send\",\n  \"currentDepartment\" : \"allDepartment\",\n  \"timeFormat\" : \"12-hour\",\n  \"outBoxDelay\" : \"DISABLED\",\n  \"pinAllDashboards\" : \"DISABLED\",\n  \"loginLandingPage\" : \"LISTVIEW\",\n  \"loadGettingStartedPage\" : \"DISABLED\",\n  \"pinAllReports\" : \"ENABLED\"\n}"
						}
					]
				},
				{
					"name": "Update My Preferences",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/myPreferences",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"myPreferences"
							]
						},
						"description": "This API updates the preferences of the currently logged in agent.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| namePattern  | &lt;List&gt;<br /> | Pattern that defines how the names should be displayed \n| currentDepartment  | &lt;long&gt;<br /> | A valid active departmentId to which the agent is associated | `'allDepartment'` \n"
					},
					"response": [
						{
							"name": "Update My Preferences",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"namePattern\" : [ \"LAST_NAME\", \"FIRST_NAME\" ],\n  \"articleAutoSuggestion\" : \"ENABLED\",\n  \"keyBoardShortcuts\" : \"ENABLED\",\n  \"pinAllAccounts\" : \"ENABLED\",\n  \"outBoxDelayTime\" : \"60S\",\n  \"collapseSidePanel\" : \"DISABLED\",\n  \"pinAllTickets\" : \"ENABLED\",\n  \"ticketConversationView\" : \"ENABLED\",\n  \"contactsView\" : \"LIST\",\n  \"accountsView\" : \"LIST\",\n  \"pinAllContacts\" : \"ENABLED\",\n  \"ticketsView\" : \"STATUS_QUEUE\",\n  \"defaultSendBehavior\" : \"Send\",\n  \"datePattern\" : \"dd/MM/yyyy\",\n  \"currentDepartment\" : \"1892000000082069\",\n  \"timeFormat\" : \"12-hour\",\n  \"outBoxDelay\" : \"DISABLED\",\n  \"pinAllDashboards\" : \"DISABLED\",\n  \"loginLandingPage\" : \"LISTVIEW\",\n  \"loadGettingStartedPage\" : \"DISABLED\",\n  \"pinAllReports\" : \"ENABLED\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/myPreferences",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"myPreferences"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get agent by email ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agents/email/:email",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								"email",
								":email"
							],
							"variable": [
								{
									"key": "email"
								}
							]
						},
						"description": "This API fetches details of an agent via the email ID passed in the API request.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get agent by email ID",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/agents/email/case@zylker.com",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agents",
										"email",
										"case@zylker.com"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"lastName\" : \"case\",\n  \"extn\" : \"3298\",\n  \"roleId\" : \"1892000000056099\",\n  \"langCode\" : \"fr_FR\",\n  \"mobile\" : \"\",\n  \"timeZone\" : \"Pacific/Majuro\",\n  \"emailId\" : \"case@zylker.com\",\n  \"associatedChatDepartmentIds\" : [ ],\n  \"zuid\" : \"10687231\",\n  \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\", \"1892000000639717\" ],\n  \"firstName\" : \"\",\n  \"photoURL\" : null,\n  \"phone\" : \"492-736-6424\",\n  \"profileId\" : \"1892000000056091\",\n  \"countryCode\" : \"en_US\",\n  \"channelExpert\" : [ \"Facebook\", \"Chat\", \"Phone\", \"Twitter\", \"Web\", \"Email\", \"Forums\" ],\n  \"name\" : \"case\",\n  \"rolePermissionType\" : \"Admin\",\n  \"isConfirmed\" : true,\n  \"aboutInfo\" : \"Expert in handling Tasks and Automations\",\n  \"id\" : \"1892000000056007\",\n  \"status\" : \"ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "Schedule reassignment for deactivated or deleted agents",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agents/:agent_id/reassignment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								":agent_id",
								"reassignment"
							],
							"variable": [
								{
									"key": "agent_id"
								}
							]
						},
						"description": "This API schedules reassignment of tickets, tasks, and automations belonging to a deleted/deactivated agent to another agent within the same department.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| agentReassignment (required) | &lt;list&gt;<br /> | Details of agents to whom the resources associated with the agent will be reassigned \n"
					},
					"response": [
						{
							"name": "Schedule reassignment for deactivated or deleted agents",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agentReassignment\" : [ {\n    \"departmentId\" : 19000000012754,\n    \"taskNewOwner\" : \"19000000008734\",\n    \"ticketNewOwner\" : \"19000000142005\"\n  }, {\n    \"departmentId\" : 19000000010674,\n    \"taskNewOwner\" : \"19000000008872\",\n    \"ticketNewOwner\" : \"19000000182001\"\n  }, {\n    \"departmentId\" : 19000000007073,\n    \"taskNewOwner\" : \"19000000008872\",\n    \"ticketNewOwner\" : \"19000000182001\"\n  } ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/agents/19000001075071/reassignment",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agents",
										"19000001075071",
										"reassignment"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Agents are the customer service executives in your organization. They are the primary users of the helpdesk software, using which they interact with contacts and resolve tickets."
		},
		{
			"name": "Profiles",
			"item": [
				{
					"name": "List profiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/profiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"profiles"
							],
							"query": [
								{
									"key": "visible",
									"value": "<boolean>\n",
									"description": "Key that filters profiles according to their visibility in the UI",
									"disabled": true
								},
								{
									"key": "default",
									"value": "<boolean>\n",
									"description": "Key that denotes whether the profiles must be default profiles or custom profiles",
									"disabled": true
								},
								{
									"key": "searchStr",
									"value": "<string>\nmax chars : 100",
									"description": "String to search for profile by name or description. The string must contain at least one character. Three search methods are supported: 1) string* - Searches for profiles whose name or description start with the string, 2) *string* - Searches for profiles whose name or description contain the string, 3) string -  Searches for profiles whose name or description is an exact match for the string",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of user profiles, based on the limit specified.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List profiles",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/profiles?visible=true",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"profiles"
									],
									"query": [
										{
											"key": "visible",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"default\" : true,\n    \"permissions\" : {\n      \"crmInteg\" : {\n        \"crmContactsActivityEvents\" : false,\n        \"crmAccountsActivityEvents\" : false,\n        \"crmAccountsActivityTasks\" : false,\n        \"crmAccountsInfo\" : false,\n        \"crmContactsActivityCalls\" : false,\n        \"crmAccountsNotes\" : false,\n        \"crmAccountsActivityCalls\" : false,\n        \"crmContactsInfo\" : false,\n        \"crmContactsNotes\" : false,\n        \"crmContactsActivityTasks\" : false,\n        \"crmAccountsPotentials\" : false,\n        \"crmContactsPotentials\" : false\n      },\n      \"reports\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"tickets\" : {\n        \"mergeTickets\" : true,\n        \"changeOwner\" : true,\n        \"import\" : true,\n        \"handleUnassigned\" : true,\n        \"edit\" : true,\n        \"closeTicket\" : true,\n        \"mailReview\" : true,\n        \"delete\" : true,\n        \"view\" : true,\n        \"create\" : true,\n        \"addFollowers\" : true,\n        \"export\" : true,\n        \"mailSend\" : true,\n        \"unassignedChangeOwner\" : false,\n        \"shareTickets\" : true\n      },\n      \"comments\" : {\n        \"edit\" : true,\n        \"delete\" : true\n      },\n      \"social\" : {\n        \"view\" : true\n      },\n      \"contracts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"community\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"moderate\" : true\n      },\n      \"products\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"agents\" : {\n        \"overview\" : true,\n        \"edit\" : false,\n        \"create\" : true,\n        \"delete\" : true,\n        \"viewAllFields\" : true\n      },\n      \"kbCategory\" : {\n        \"view\" : true,\n        \"editAllArticles\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"setup\" : {\n        \"timeTracking\" : true,\n        \"fetchAcrossDepartment\" : true,\n        \"globalReports\" : true,\n        \"exportPortalUsers\" : true,\n        \"layouts\" : true,\n        \"automation\" : true,\n        \"featureConfig\" : true,\n        \"customerHappiness\" : true,\n        \"department\" : true,\n        \"portal\" : true,\n        \"webForm\" : true,\n        \"rebranding\" : true,\n        \"email\" : true,\n        \"tabsAndFields\" : true,\n        \"exportUsers\" : true,\n        \"teams\" : true,\n        \"social\" : true,\n        \"templates\" : true,\n        \"moveRecords\" : true,\n        \"permission\" : true,\n        \"signUpApproval\" : true,\n        \"community\" : true,\n        \"importHistory\" : true,\n        \"manageAgents\" : true,\n        \"portalUsers\" : true,\n        \"managerDashboard\" : true,\n        \"googleAnalytics\" : true,\n        \"chat\" : true,\n        \"telephony\" : true\n      },\n      \"financeInteg\" : {\n        \"sendInvoice\" : false,\n        \"createEstimate\" : false,\n        \"createContact\" : false,\n        \"viewInvoice\" : false,\n        \"createInvoice\" : false,\n        \"sendEstimate\" : false,\n        \"viewEstimate\" : false\n      },\n      \"accounts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"timeEntry\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true\n      },\n      \"contacts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"tasks\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      }\n    },\n    \"name\" : \"Support Administrator\",\n    \"description\" : \"Set the privileges for support administrators.\",\n    \"id\" : \"5000000015288\",\n    \"isVisible\" : true,\n    \"type\" : \"Administrator\"\n  }, {\n    \"default\" : true,\n    \"permissions\" : {\n      \"crmInteg\" : {\n        \"crmContactsActivityEvents\" : false,\n        \"crmAccountsActivityEvents\" : false,\n        \"crmAccountsActivityTasks\" : false,\n        \"crmAccountsInfo\" : false,\n        \"crmContactsActivityCalls\" : false,\n        \"crmAccountsNotes\" : false,\n        \"crmAccountsActivityCalls\" : false,\n        \"crmContactsInfo\" : false,\n        \"crmContactsNotes\" : false,\n        \"crmContactsActivityTasks\" : false,\n        \"crmAccountsPotentials\" : false,\n        \"crmContactsPotentials\" : false\n      },\n      \"reports\" : {\n        \"view\" : true,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : true\n      },\n      \"tickets\" : {\n        \"mergeTickets\" : false,\n        \"changeOwner\" : false,\n        \"import\" : false,\n        \"handleUnassigned\" : false,\n        \"edit\" : false,\n        \"closeTicket\" : false,\n        \"mailReview\" : false,\n        \"delete\" : false,\n        \"view\" : true,\n        \"create\" : false,\n        \"addFollowers\" : false,\n        \"export\" : true,\n        \"mailSend\" : false,\n        \"unassignedChangeOwner\" : false,\n        \"shareTickets\" : false\n      },\n      \"comments\" : {\n        \"edit\" : false,\n        \"delete\" : false\n      },\n      \"social\" : {\n        \"view\" : true\n      },\n      \"contracts\" : {\n        \"view\" : true,\n        \"import\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : true\n      },\n      \"community\" : {\n        \"view\" : false\n      },\n      \"products\" : {\n        \"view\" : true,\n        \"import\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : true\n      },\n      \"agents\" : {\n        \"overview\" : true,\n        \"edit\" : false,\n        \"create\" : true,\n        \"delete\" : true,\n        \"viewAllFields\" : true\n      },\n      \"kbCategory\" : {\n        \"view\" : true,\n        \"editAllArticles\" : false,\n        \"import\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : true\n      },\n      \"setup\" : {\n        \"timeTracking\" : false,\n        \"fetchAcrossDepartment\" : true,\n        \"globalReports\" : false,\n        \"exportPortalUsers\" : false,\n        \"layouts\" : false,\n        \"automation\" : false,\n        \"featureConfig\" : false,\n        \"customerHappiness\" : false,\n        \"department\" : false,\n        \"portal\" : false,\n        \"webForm\" : false,\n        \"rebranding\" : false,\n        \"email\" : false,\n        \"tabsAndFields\" : false,\n        \"exportUsers\" : false,\n        \"teams\" : false,\n        \"social\" : false,\n        \"templates\" : false,\n        \"moveRecords\" : false,\n        \"permission\" : false,\n        \"signUpApproval\" : false,\n        \"community\" : false,\n        \"importHistory\" : false,\n        \"manageAgents\" : false,\n        \"portalUsers\" : false,\n        \"managerDashboard\" : true,\n        \"googleAnalytics\" : true,\n        \"chat\" : false,\n        \"telephony\" : false\n      },\n      \"financeInteg\" : {\n        \"sendInvoice\" : false,\n        \"createEstimate\" : false,\n        \"createContact\" : false,\n        \"viewInvoice\" : false,\n        \"createInvoice\" : false,\n        \"sendEstimate\" : false,\n        \"viewEstimate\" : false\n      },\n      \"accounts\" : {\n        \"view\" : true,\n        \"import\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : true\n      },\n      \"timeEntry\" : {\n        \"view\" : true,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false\n      },\n      \"contacts\" : {\n        \"view\" : true,\n        \"import\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : true\n      },\n      \"tasks\" : {\n        \"view\" : true,\n        \"import\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : true\n      }\n    },\n    \"name\" : \"Light Agent\",\n    \"description\" : \"Set the privilege for light agents\",\n    \"id\" : \"5000000015306\",\n    \"isVisible\" : true,\n    \"type\" : \"Light\"\n  }, {\n    \"default\" : false,\n    \"permissions\" : {\n      \"crmInteg\" : {\n        \"crmContactsActivityEvents\" : false,\n        \"crmAccountsActivityEvents\" : false,\n        \"crmAccountsActivityTasks\" : false,\n        \"crmAccountsInfo\" : false,\n        \"crmContactsActivityCalls\" : false,\n        \"crmAccountsNotes\" : false,\n        \"crmAccountsActivityCalls\" : false,\n        \"crmContactsInfo\" : false,\n        \"crmContactsNotes\" : false,\n        \"crmContactsActivityTasks\" : false,\n        \"crmAccountsPotentials\" : false,\n        \"crmContactsPotentials\" : false\n      },\n      \"reports\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : false\n      },\n      \"tickets\" : {\n        \"mergeTickets\" : false,\n        \"changeOwner\" : true,\n        \"import\" : false,\n        \"handleUnassigned\" : true,\n        \"edit\" : true,\n        \"closeTicket\" : false,\n        \"mailReview\" : false,\n        \"delete\" : true,\n        \"view\" : true,\n        \"create\" : true,\n        \"addFollowers\" : false,\n        \"export\" : false,\n        \"mailSend\" : false,\n        \"unassignedChangeOwner\" : false,\n        \"shareTickets\" : false\n      },\n      \"comments\" : {\n        \"edit\" : false,\n        \"delete\" : false\n      },\n      \"social\" : {\n        \"view\" : true\n      },\n      \"contracts\" : {\n        \"view\" : true,\n        \"import\" : false,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : false\n      },\n      \"community\" : {\n        \"view\" : true\n      },\n      \"products\" : {\n        \"view\" : true,\n        \"import\" : false,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : false\n      },\n      \"agents\" : {\n        \"overview\" : true,\n        \"edit\" : false,\n        \"create\" : true,\n        \"delete\" : true,\n        \"viewAllFields\" : true\n      },\n      \"kbCategory\" : {\n        \"view\" : true,\n        \"editAllArticles\" : true,\n        \"import\" : false,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : false\n      },\n      \"setup\" : {\n        \"timeTracking\" : false,\n        \"fetchAcrossDepartment\" : false,\n        \"globalReports\" : false,\n        \"exportPortalUsers\" : false,\n        \"layouts\" : false,\n        \"automation\" : false,\n        \"featureConfig\" : false,\n        \"customerHappiness\" : false,\n        \"department\" : false,\n        \"portal\" : false,\n        \"webForm\" : false,\n        \"rebranding\" : false,\n        \"email\" : false,\n        \"tabsAndFields\" : false,\n        \"exportUsers\" : false,\n        \"teams\" : false,\n        \"social\" : false,\n        \"templates\" : false,\n        \"moveRecords\" : false,\n        \"permission\" : false,\n        \"signUpApproval\" : false,\n        \"community\" : false,\n        \"importHistory\" : false,\n        \"manageAgents\" : false,\n        \"portalUsers\" : false,\n        \"managerDashboard\" : false,\n        \"googleAnalytics\" : false,\n        \"chat\" : false,\n        \"telephony\" : false\n      },\n      \"financeInteg\" : {\n        \"sendInvoice\" : false,\n        \"createEstimate\" : false,\n        \"createContact\" : false,\n        \"viewInvoice\" : false,\n        \"createInvoice\" : false,\n        \"sendEstimate\" : false,\n        \"viewEstimate\" : false\n      },\n      \"accounts\" : {\n        \"view\" : true,\n        \"import\" : false,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : false\n      },\n      \"timeEntry\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true\n      },\n      \"contacts\" : {\n        \"view\" : true,\n        \"import\" : false,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : false\n      },\n      \"tasks\" : {\n        \"view\" : true,\n        \"import\" : false,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : false\n      }\n    },\n    \"name\" : \"Newbie Agent\",\n    \"description\" : \"Set the privileges for new agents.\",\n    \"id\" : \"5000000015303\",\n    \"isVisible\" : true,\n    \"type\" : \"Custom\"\n  }, {\n    \"default\" : true,\n    \"permissions\" : {\n      \"crmInteg\" : {\n        \"crmContactsActivityEvents\" : false,\n        \"crmAccountsActivityEvents\" : false,\n        \"crmAccountsActivityTasks\" : false,\n        \"crmAccountsInfo\" : false,\n        \"crmContactsActivityCalls\" : false,\n        \"crmAccountsNotes\" : false,\n        \"crmAccountsActivityCalls\" : false,\n        \"crmContactsInfo\" : false,\n        \"crmContactsNotes\" : false,\n        \"crmContactsActivityTasks\" : false,\n        \"crmAccountsPotentials\" : false,\n        \"crmContactsPotentials\" : false\n      },\n      \"reports\" : {\n        \"view\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : false\n      },\n      \"tickets\" : {\n        \"mergeTickets\" : false,\n        \"changeOwner\" : false,\n        \"import\" : false,\n        \"handleUnassigned\" : false,\n        \"edit\" : false,\n        \"closeTicket\" : false,\n        \"mailReview\" : false,\n        \"delete\" : false,\n        \"view\" : true,\n        \"create\" : true,\n        \"addFollowers\" : false,\n        \"export\" : true,\n        \"mailSend\" : false,\n        \"unassignedChangeOwner\" : false,\n        \"shareTickets\" : false\n      },\n      \"comments\" : {\n        \"edit\" : false,\n        \"delete\" : false\n      },\n      \"social\" : {\n        \"view\" : false\n      },\n      \"contracts\" : {\n        \"view\" : false,\n        \"import\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : false\n      },\n      \"community\" : {\n        \"view\" : false\n      },\n      \"products\" : {\n        \"view\" : false,\n        \"import\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : false\n      },\n      \"agents\" : {\n        \"overview\" : true,\n        \"edit\" : false,\n        \"create\" : true,\n        \"delete\" : true,\n        \"viewAllFields\" : true\n      },\n      \"kbCategory\" : {\n        \"view\" : true,\n        \"editAllArticles\" : false,\n        \"import\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : true\n      },\n      \"setup\" : {\n        \"timeTracking\" : false,\n        \"fetchAcrossDepartment\" : false,\n        \"globalReports\" : false,\n        \"exportPortalUsers\" : false,\n        \"layouts\" : false,\n        \"automation\" : false,\n        \"featureConfig\" : false,\n        \"customerHappiness\" : false,\n        \"department\" : false,\n        \"portal\" : false,\n        \"webForm\" : false,\n        \"rebranding\" : false,\n        \"email\" : false,\n        \"tabsAndFields\" : false,\n        \"exportUsers\" : false,\n        \"teams\" : false,\n        \"social\" : false,\n        \"templates\" : false,\n        \"moveRecords\" : false,\n        \"permission\" : false,\n        \"signUpApproval\" : false,\n        \"community\" : false,\n        \"importHistory\" : false,\n        \"manageAgents\" : false,\n        \"portalUsers\" : false,\n        \"managerDashboard\" : false,\n        \"googleAnalytics\" : false,\n        \"chat\" : false,\n        \"telephony\" : false\n      },\n      \"financeInteg\" : {\n        \"sendInvoice\" : false,\n        \"createEstimate\" : false,\n        \"createContact\" : false,\n        \"viewInvoice\" : false,\n        \"createInvoice\" : false,\n        \"sendEstimate\" : false,\n        \"viewEstimate\" : false\n      },\n      \"accounts\" : {\n        \"view\" : false,\n        \"import\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : false\n      },\n      \"timeEntry\" : {\n        \"view\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false\n      },\n      \"contacts\" : {\n        \"view\" : false,\n        \"import\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : false\n      },\n      \"tasks\" : {\n        \"view\" : false,\n        \"import\" : false,\n        \"edit\" : false,\n        \"create\" : false,\n        \"delete\" : false,\n        \"export\" : false\n      }\n    },\n    \"name\" : \"Help Center\",\n    \"description\" : \"This profile will have the permissions of End Users\",\n    \"id\" : \"5000000015294\",\n    \"isVisible\" : false,\n    \"type\" : \"Portal\"\n  }, {\n    \"default\" : true,\n    \"permissions\" : {\n      \"crmInteg\" : {\n        \"crmContactsActivityEvents\" : false,\n        \"crmAccountsActivityEvents\" : false,\n        \"crmAccountsActivityTasks\" : false,\n        \"crmAccountsInfo\" : false,\n        \"crmContactsActivityCalls\" : false,\n        \"crmAccountsNotes\" : false,\n        \"crmAccountsActivityCalls\" : false,\n        \"crmContactsInfo\" : false,\n        \"crmContactsNotes\" : false,\n        \"crmContactsActivityTasks\" : false,\n        \"crmAccountsPotentials\" : false,\n        \"crmContactsPotentials\" : false\n      },\n      \"reports\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"tickets\" : {\n        \"mergeTickets\" : true,\n        \"changeOwner\" : true,\n        \"import\" : true,\n        \"handleUnassigned\" : true,\n        \"edit\" : true,\n        \"closeTicket\" : true,\n        \"mailReview\" : true,\n        \"delete\" : true,\n        \"view\" : true,\n        \"create\" : true,\n        \"addFollowers\" : true,\n        \"export\" : true,\n        \"mailSend\" : true,\n        \"unassignedChangeOwner\" : false,\n        \"shareTickets\" : false\n      },\n      \"comments\" : {\n        \"edit\" : true,\n        \"delete\" : true\n      },\n      \"social\" : {\n        \"view\" : true\n      },\n      \"contracts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"community\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"moderate\" : false\n      },\n      \"products\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"agents\" : {\n        \"overview\" : true,\n        \"edit\" : false,\n        \"create\" : true,\n        \"delete\" : true,\n        \"viewAllFields\" : true\n      },\n      \"kbCategory\" : {\n        \"view\" : true,\n        \"editAllArticles\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"setup\" : {\n        \"timeTracking\" : false,\n        \"fetchAcrossDepartment\" : true,\n        \"globalReports\" : false,\n        \"exportPortalUsers\" : true,\n        \"layouts\" : false,\n        \"automation\" : false,\n        \"featureConfig\" : false,\n        \"customerHappiness\" : false,\n        \"department\" : false,\n        \"portal\" : false,\n        \"webForm\" : false,\n        \"rebranding\" : false,\n        \"email\" : false,\n        \"tabsAndFields\" : false,\n        \"exportUsers\" : true,\n        \"teams\" : false,\n        \"social\" : false,\n        \"templates\" : false,\n        \"moveRecords\" : true,\n        \"permission\" : false,\n        \"signUpApproval\" : false,\n        \"community\" : false,\n        \"importHistory\" : true,\n        \"manageAgents\" : false,\n        \"portalUsers\" : false,\n        \"managerDashboard\" : false,\n        \"googleAnalytics\" : false,\n        \"chat\" : false,\n        \"telephony\" : false\n      },\n      \"financeInteg\" : {\n        \"sendInvoice\" : false,\n        \"createEstimate\" : false,\n        \"createContact\" : false,\n        \"viewInvoice\" : false,\n        \"createInvoice\" : false,\n        \"sendEstimate\" : false,\n        \"viewEstimate\" : false\n      },\n      \"accounts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"timeEntry\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true\n      },\n      \"contacts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"tasks\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      }\n    },\n    \"name\" : \"Agent\",\n    \"description\" : \"Set the privileges for standard agents\",\n    \"id\" : \"5000000015291\",\n    \"isVisible\" : true,\n    \"type\" : \"Standard\"\n  }, {\n    \"default\" : false,\n    \"permissions\" : {\n      \"crmInteg\" : {\n        \"crmContactsActivityEvents\" : false,\n        \"crmAccountsActivityEvents\" : false,\n        \"crmAccountsActivityTasks\" : false,\n        \"crmAccountsInfo\" : false,\n        \"crmContactsActivityCalls\" : false,\n        \"crmAccountsNotes\" : false,\n        \"crmAccountsActivityCalls\" : false,\n        \"crmContactsInfo\" : false,\n        \"crmContactsNotes\" : false,\n        \"crmContactsActivityTasks\" : false,\n        \"crmAccountsPotentials\" : false,\n        \"crmContactsPotentials\" : false\n      },\n      \"reports\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"tickets\" : {\n        \"mergeTickets\" : true,\n        \"changeOwner\" : true,\n        \"import\" : true,\n        \"handleUnassigned\" : true,\n        \"edit\" : true,\n        \"closeTicket\" : true,\n        \"mailReview\" : true,\n        \"delete\" : true,\n        \"view\" : true,\n        \"create\" : true,\n        \"addFollowers\" : true,\n        \"export\" : true,\n        \"mailSend\" : true,\n        \"unassignedChangeOwner\" : false,\n        \"shareTickets\" : false\n      },\n      \"comments\" : {\n        \"edit\" : true,\n        \"delete\" : true\n      },\n      \"social\" : {\n        \"view\" : true\n      },\n      \"contracts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"community\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"moderate\" : true\n      },\n      \"products\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"agents\" : {\n        \"overview\" : true,\n        \"edit\" : false,\n        \"create\" : true,\n        \"delete\" : true,\n        \"viewAllFields\" : true\n      },\n      \"kbCategory\" : {\n        \"view\" : true,\n        \"editAllArticles\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"setup\" : {\n        \"timeTracking\" : false,\n        \"fetchAcrossDepartment\" : true,\n        \"globalReports\" : false,\n        \"exportPortalUsers\" : true,\n        \"layouts\" : false,\n        \"automation\" : false,\n        \"featureConfig\" : false,\n        \"customerHappiness\" : false,\n        \"department\" : false,\n        \"portal\" : false,\n        \"webForm\" : false,\n        \"rebranding\" : false,\n        \"email\" : false,\n        \"tabsAndFields\" : false,\n        \"exportUsers\" : true,\n        \"teams\" : false,\n        \"social\" : false,\n        \"templates\" : false,\n        \"moveRecords\" : true,\n        \"permission\" : false,\n        \"signUpApproval\" : false,\n        \"community\" : false,\n        \"importHistory\" : true,\n        \"manageAgents\" : false,\n        \"portalUsers\" : false,\n        \"managerDashboard\" : true,\n        \"googleAnalytics\" : false,\n        \"chat\" : false,\n        \"telephony\" : false\n      },\n      \"financeInteg\" : {\n        \"sendInvoice\" : false,\n        \"createEstimate\" : false,\n        \"createContact\" : false,\n        \"viewInvoice\" : false,\n        \"createInvoice\" : false,\n        \"sendEstimate\" : false,\n        \"viewEstimate\" : false\n      },\n      \"accounts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"timeEntry\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true\n      },\n      \"contacts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"tasks\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      }\n    },\n    \"name\" : \"Supervisor\",\n    \"description\" : \"Set the privileges for supervisory users.\",\n    \"id\" : \"5000000015297\",\n    \"isVisible\" : true,\n    \"type\" : \"Custom\"\n  }, {\n    \"default\" : false,\n    \"permissions\" : {\n      \"crmInteg\" : {\n        \"crmContactsActivityEvents\" : false,\n        \"crmAccountsActivityEvents\" : false,\n        \"crmAccountsActivityTasks\" : false,\n        \"crmAccountsInfo\" : false,\n        \"crmContactsActivityCalls\" : false,\n        \"crmAccountsNotes\" : false,\n        \"crmAccountsActivityCalls\" : false,\n        \"crmContactsInfo\" : false,\n        \"crmContactsNotes\" : false,\n        \"crmContactsActivityTasks\" : false,\n        \"crmAccountsPotentials\" : false,\n        \"crmContactsPotentials\" : false\n      },\n      \"reports\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"tickets\" : {\n        \"mergeTickets\" : true,\n        \"changeOwner\" : true,\n        \"import\" : true,\n        \"handleUnassigned\" : true,\n        \"edit\" : true,\n        \"closeTicket\" : true,\n        \"mailReview\" : true,\n        \"delete\" : true,\n        \"view\" : true,\n        \"create\" : true,\n        \"addFollowers\" : true,\n        \"export\" : true,\n        \"mailSend\" : true,\n        \"unassignedChangeOwner\" : false,\n        \"shareTickets\" : false\n      },\n      \"comments\" : {\n        \"edit\" : true,\n        \"delete\" : true\n      },\n      \"social\" : {\n        \"view\" : true\n      },\n      \"contracts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"community\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"moderate\" : true\n      },\n      \"products\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"agents\" : {\n        \"overview\" : true,\n        \"edit\" : false,\n        \"create\" : true,\n        \"delete\" : true,\n        \"viewAllFields\" : true\n      },\n      \"kbCategory\" : {\n        \"view\" : true,\n        \"editAllArticles\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"setup\" : {\n        \"timeTracking\" : false,\n        \"fetchAcrossDepartment\" : true,\n        \"globalReports\" : false,\n        \"exportPortalUsers\" : true,\n        \"layouts\" : false,\n        \"automation\" : true,\n        \"featureConfig\" : false,\n        \"customerHappiness\" : false,\n        \"department\" : false,\n        \"portal\" : false,\n        \"webForm\" : false,\n        \"rebranding\" : false,\n        \"email\" : false,\n        \"tabsAndFields\" : false,\n        \"exportUsers\" : true,\n        \"teams\" : false,\n        \"social\" : false,\n        \"templates\" : false,\n        \"moveRecords\" : true,\n        \"permission\" : false,\n        \"signUpApproval\" : false,\n        \"community\" : false,\n        \"importHistory\" : true,\n        \"manageAgents\" : false,\n        \"portalUsers\" : false,\n        \"managerDashboard\" : true,\n        \"googleAnalytics\" : true,\n        \"chat\" : false,\n        \"telephony\" : false\n      },\n      \"financeInteg\" : {\n        \"sendInvoice\" : false,\n        \"createEstimate\" : false,\n        \"createContact\" : false,\n        \"viewInvoice\" : false,\n        \"createInvoice\" : false,\n        \"sendEstimate\" : false,\n        \"viewEstimate\" : false\n      },\n      \"accounts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"timeEntry\" : {\n        \"view\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true\n      },\n      \"contacts\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      },\n      \"tasks\" : {\n        \"view\" : true,\n        \"import\" : true,\n        \"edit\" : true,\n        \"create\" : true,\n        \"delete\" : true,\n        \"export\" : true\n      }\n    },\n    \"name\" : \"Support Manager\",\n    \"description\" : \"Set the privileges for managerial users.\",\n    \"id\" : \"5000000015300\",\n    \"isVisible\" : true,\n    \"type\" : \"Custom\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get profile count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/profiles/count",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"profiles",
								"count"
							],
							"query": [
								{
									"key": "visible",
									"value": "<boolean>\n",
									"description": "Key that filters profiles according to their visibility in the UI",
									"disabled": true
								},
								{
									"key": "default",
									"value": "<boolean>\n",
									"description": " Key that denotes whether the profiles must be default profiles or custom profiles",
									"disabled": true
								}
							]
						},
						"description": "This API fetches the number of profiles configured in your help desk.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get profile count",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/profiles/count?visible=true",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"profiles",
										"count"
									],
									"query": [
										{
											"key": "visible",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"count\" : 8\n}"
						}
					]
				},
				{
					"name": "Get profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/profiles/:profile_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"profiles",
								":profile_id"
							],
							"variable": [
								{
									"key": "profile_id"
								}
							]
						},
						"description": "This API fetches the details of a particular profile.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get profile",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/profiles/4000000008464",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"profiles",
										"4000000008464"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"default\" : true,\n  \"permissions\" : {\n    \"crmInteg\" : {\n      \"crmContactsActivityEvents\" : false,\n      \"crmAccountsActivityEvents\" : false,\n      \"crmAccountsActivityTasks\" : false,\n      \"crmAccountsInfo\" : false,\n      \"crmContactsActivityCalls\" : false,\n      \"crmAccountsNotes\" : false,\n      \"crmAccountsActivityCalls\" : false,\n      \"crmContactsInfo\" : false,\n      \"crmContactsNotes\" : false,\n      \"crmContactsActivityTasks\" : false,\n      \"crmAccountsPotentials\" : false,\n      \"crmContactsPotentials\" : false\n    },\n    \"reports\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"tickets\" : {\n      \"mergeTickets\" : true,\n      \"changeOwner\" : true,\n      \"import\" : true,\n      \"handleUnassigned\" : true,\n      \"edit\" : true,\n      \"closeTicket\" : true,\n      \"mailReview\" : true,\n      \"delete\" : true,\n      \"view\" : true,\n      \"create\" : true,\n      \"addFollowers\" : true,\n      \"export\" : true,\n      \"mailSend\" : true,\n      \"unassignedChangeOwner\" : false,\n      \"shareTickets\" : true\n    },\n    \"comments\" : {\n      \"edit\" : true,\n      \"delete\" : true\n    },\n    \"social\" : {\n      \"view\" : true\n    },\n    \"contracts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"community\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"moderate\" : true\n    },\n    \"products\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"agents\" : {\n      \"overview\" : true,\n      \"edit\" : false,\n      \"create\" : true,\n      \"delete\" : true,\n      \"viewAllFields\" : true\n    },\n    \"kbCategory\" : {\n      \"view\" : true,\n      \"editAllArticles\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"setup\" : {\n      \"timeTracking\" : true,\n      \"fetchAcrossDepartment\" : true,\n      \"globalReports\" : true,\n      \"exportPortalUsers\" : true,\n      \"layouts\" : true,\n      \"automation\" : true,\n      \"featureConfig\" : true,\n      \"customerHappiness\" : true,\n      \"department\" : true,\n      \"portal\" : true,\n      \"webForm\" : true,\n      \"rebranding\" : true,\n      \"email\" : true,\n      \"tabsAndFields\" : true,\n      \"exportUsers\" : true,\n      \"teams\" : true,\n      \"social\" : true,\n      \"templates\" : true,\n      \"moveRecords\" : true,\n      \"permission\" : true,\n      \"signUpApproval\" : true,\n      \"community\" : true,\n      \"importHistory\" : true,\n      \"manageAgents\" : true,\n      \"portalUsers\" : true,\n      \"managerDashboard\" : true,\n      \"googleAnalytics\" : true,\n      \"chat\" : true,\n      \"telephony\" : true\n    },\n    \"financeInteg\" : {\n      \"sendInvoice\" : false,\n      \"createEstimate\" : false,\n      \"createContact\" : false,\n      \"viewInvoice\" : false,\n      \"createInvoice\" : false,\n      \"sendEstimate\" : false,\n      \"viewEstimate\" : false\n    },\n    \"accounts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"timeEntry\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true\n    },\n    \"contacts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"tasks\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    }\n  },\n  \"name\" : \"Support Administrator\",\n  \"description\" : \"Set the privileges for support administrators.\",\n  \"id\" : \"4000000008464\",\n  \"isVisible\" : true,\n  \"type\" : \"Administrator\"\n}"
						}
					]
				},
				{
					"name": "Clone profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/profiles/:profile_id/clone",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"profiles",
								":profile_id",
								"clone"
							],
							"variable": [
								{
									"key": "profile_id"
								}
							]
						},
						"description": "This API replicates an existing profile.\n#### OAuth Scope\n- `Desk.settings.CREATE`\n- `Desk.basic.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name (required) | &lt;string&gt;<br />max chars : 50 | Name of the profile to be created \n| description  | &lt;String&gt;<br /> | Description of the profile to be created \n"
					},
					"response": [
						{
							"name": "Clone profile",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"Admin Advisors\",\n  \"description\" : \"Advisors from management to assist the Support Administrators.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/profiles/4000000008543/clone",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"profiles",
										"4000000008543",
										"clone"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"default\" : false,\n  \"permissions\" : {\n    \"crmInteg\" : {\n      \"crmContactsActivityEvents\" : false,\n      \"crmAccountsActivityEvents\" : false,\n      \"crmAccountsActivityTasks\" : false,\n      \"crmAccountsInfo\" : false,\n      \"crmContactsActivityCalls\" : false,\n      \"crmAccountsNotes\" : false,\n      \"crmAccountsActivityCalls\" : false,\n      \"crmContactsInfo\" : false,\n      \"crmContactsNotes\" : false,\n      \"crmContactsActivityTasks\" : false,\n      \"crmAccountsPotentials\" : false,\n      \"crmContactsPotentials\" : false\n    },\n    \"reports\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"tickets\" : {\n      \"mergeTickets\" : true,\n      \"changeOwner\" : true,\n      \"import\" : true,\n      \"handleUnassigned\" : true,\n      \"edit\" : true,\n      \"closeTicket\" : true,\n      \"mailReview\" : true,\n      \"delete\" : true,\n      \"view\" : true,\n      \"create\" : true,\n      \"addFollowers\" : true,\n      \"export\" : true,\n      \"mailSend\" : true,\n      \"unassignedChangeOwner\" : false,\n      \"shareTickets\" : false\n    },\n    \"comments\" : {\n      \"edit\" : true,\n      \"delete\" : true\n    },\n    \"social\" : {\n      \"view\" : true\n    },\n    \"contracts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"community\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"moderate\" : true\n    },\n    \"products\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"agents\" : {\n      \"overview\" : true,\n      \"edit\" : false,\n      \"create\" : true,\n      \"delete\" : true,\n      \"viewAllFields\" : true\n    },\n    \"kbCategory\" : {\n      \"view\" : true,\n      \"editAllArticles\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"setup\" : {\n      \"timeTracking\" : false,\n      \"fetchAcrossDepartment\" : true,\n      \"globalReports\" : false,\n      \"exportPortalUsers\" : true,\n      \"layouts\" : false,\n      \"automation\" : false,\n      \"featureConfig\" : false,\n      \"customerHappiness\" : false,\n      \"department\" : false,\n      \"portal\" : false,\n      \"webForm\" : false,\n      \"rebranding\" : false,\n      \"email\" : false,\n      \"tabsAndFields\" : false,\n      \"exportUsers\" : true,\n      \"teams\" : true,\n      \"social\" : false,\n      \"templates\" : false,\n      \"moveRecords\" : true,\n      \"permission\" : false,\n      \"signUpApproval\" : false,\n      \"community\" : false,\n      \"importHistory\" : true,\n      \"manageAgents\" : false,\n      \"portalUsers\" : false,\n      \"managerDashboard\" : false,\n      \"googleAnalytics\" : false,\n      \"chat\" : false,\n      \"telephony\" : false\n    },\n    \"financeInteg\" : {\n      \"sendInvoice\" : false,\n      \"createEstimate\" : false,\n      \"createContact\" : false,\n      \"viewInvoice\" : false,\n      \"createInvoice\" : false,\n      \"sendEstimate\" : false,\n      \"viewEstimate\" : false\n    },\n    \"accounts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"timeEntry\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true\n    },\n    \"contacts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"tasks\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    }\n  },\n  \"name\" : \"Admin Advisors\",\n  \"description\" : \"Advisors from management to assist the Support Administrators.\",\n  \"id\" : \"5000000046001\",\n  \"isVisible\" : true,\n  \"type\" : \"Custom\"\n}"
						}
					]
				},
				{
					"name": "Update profile",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/profiles/:profile_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"profiles",
								":profile_id"
							],
							"variable": [
								{
									"key": "profile_id"
								}
							]
						},
						"description": "This API updates the details of an existing profile.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name  | &lt;string&gt;<br />max chars : 50 | Name of the profile \n| description  | &lt;string&gt;<br />max chars : 3200 | Description of the profile \n| permissions  | &lt;object&gt;<br /> | Details of the permissions for the profile \n"
					},
					"response": [
						{
							"name": "Update profile",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"permissions\" : {\n    \"reports\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : false,\n      \"delete\" : false,\n      \"export\" : false\n    }\n  },\n  \"name\" : \"Agent Advisors\",\n  \"description\" : \"Advisors from CRM to assist the Support Agents.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/profiles/4000000018001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"profiles",
										"4000000018001"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"default\" : true,\n  \"permissions\" : {\n    \"crmInteg\" : {\n      \"crmContactsActivityEvents\" : false,\n      \"crmAccountsActivityEvents\" : false,\n      \"crmAccountsActivityTasks\" : false,\n      \"crmAccountsInfo\" : false,\n      \"crmContactsActivityCalls\" : false,\n      \"crmAccountsNotes\" : false,\n      \"crmAccountsActivityCalls\" : false,\n      \"crmContactsInfo\" : false,\n      \"crmContactsNotes\" : false,\n      \"crmContactsActivityTasks\" : false,\n      \"crmAccountsPotentials\" : false,\n      \"crmContactsPotentials\" : false\n    },\n    \"reports\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : false,\n      \"delete\" : false,\n      \"export\" : false\n    },\n    \"tickets\" : {\n      \"mergeTickets\" : true,\n      \"changeOwner\" : true,\n      \"import\" : true,\n      \"handleUnassigned\" : true,\n      \"edit\" : true,\n      \"closeTicket\" : true,\n      \"mailReview\" : true,\n      \"delete\" : true,\n      \"view\" : true,\n      \"create\" : true,\n      \"addFollowers\" : true,\n      \"export\" : true,\n      \"mailSend\" : true,\n      \"unassignedChangeOwner\" : false,\n      \"shareTickets\" : false\n    },\n    \"comments\" : {\n      \"edit\" : true,\n      \"delete\" : true\n    },\n    \"social\" : {\n      \"view\" : true\n    },\n    \"contracts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"community\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"moderate\" : false\n    },\n    \"products\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"agents\" : {\n      \"overview\" : true,\n      \"import\" : true,\n      \"edit\" : false,\n      \"create\" : false,\n      \"delete\" : false,\n      \"viewAllFields\" : true\n    },\n    \"kbCategory\" : {\n      \"view\" : true,\n      \"editAllArticles\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"setup\" : {\n      \"timeTracking\" : false,\n      \"fetchAcrossDepartment\" : true,\n      \"globalReports\" : false,\n      \"exportPortalUsers\" : true,\n      \"layouts\" : false,\n      \"automation\" : false,\n      \"featureConfig\" : false,\n      \"customerHappiness\" : false,\n      \"department\" : false,\n      \"portal\" : false,\n      \"webForm\" : false,\n      \"rebranding\" : false,\n      \"email\" : false,\n      \"tabsAndFields\" : false,\n      \"exportUsers\" : true,\n      \"teams\" : true,\n      \"social\" : false,\n      \"templates\" : false,\n      \"moveRecords\" : true,\n      \"permission\" : false,\n      \"signUpApproval\" : false,\n      \"community\" : false,\n      \"importHistory\" : true,\n      \"manageAgents\" : false,\n      \"portalUsers\" : false,\n      \"managerDashboard\" : false,\n      \"googleAnalytics\" : false,\n      \"chat\" : false,\n      \"telephony\" : false\n    },\n    \"financeInteg\" : {\n      \"sendInvoice\" : false,\n      \"createEstimate\" : false,\n      \"createContact\" : false,\n      \"viewInvoice\" : false,\n      \"createInvoice\" : false,\n      \"sendEstimate\" : false,\n      \"viewEstimate\" : false\n    },\n    \"accounts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"timeEntry\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true\n    },\n    \"contacts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"tasks\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    }\n  },\n  \"name\" : \"Agent Advisors\",\n  \"description\" : \"Advisors from CRM to assist the Support Agents.\",\n  \"id\" : \"4000000018001\",\n  \"isVisible\" : true,\n  \"type\" : \"Custom\"\n}"
						}
					]
				},
				{
					"name": "Delete profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/profiles/:profile_id/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"profiles",
								":profile_id",
								"delete"
							],
							"variable": [
								{
									"key": "profile_id"
								}
							]
						},
						"description": "This API deletes a profile from your help desk.\n#### OAuth Scope\n- `Desk.settings.DELETE`\n- `Desk.basic.DELETE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| transferToProfileId (required) | &lt;long&gt;<br /> | The profile id to which the agents in the delete profile to be transferred to \n"
					},
					"response": [
						{
							"name": "Delete profile",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transferToProfileId\" : \"4000000008454\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/profiles/4000000018001/delete",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"profiles",
										"4000000018001",
										"delete"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get my profile details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/myProfile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"myProfile"
							]
						},
						"description": "This API fetches the configuration details and permissions defined for the profile of the currently logged in user.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get my profile details",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/myProfile",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"myProfile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"default\" : true,\n  \"permissions\" : {\n    \"crmInteg\" : {\n      \"crmContactsActivityEvents\" : false,\n      \"crmAccountsActivityEvents\" : false,\n      \"crmAccountsActivityTasks\" : false,\n      \"crmAccountsInfo\" : false,\n      \"crmContactsActivityCalls\" : false,\n      \"crmAccountsNotes\" : false,\n      \"crmAccountsActivityCalls\" : false,\n      \"crmContactsInfo\" : false,\n      \"crmContactsNotes\" : false,\n      \"crmContactsActivityTasks\" : false,\n      \"crmAccountsPotentials\" : false,\n      \"crmContactsPotentials\" : false\n    },\n    \"reports\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"tickets\" : {\n      \"mergeTickets\" : true,\n      \"changeOwner\" : true,\n      \"import\" : true,\n      \"handleUnassigned\" : true,\n      \"edit\" : true,\n      \"closeTicket\" : true,\n      \"mailReview\" : true,\n      \"delete\" : true,\n      \"view\" : true,\n      \"create\" : true,\n      \"addFollowers\" : true,\n      \"export\" : true,\n      \"mailSend\" : true,\n      \"unassignedChangeOwner\" : false,\n      \"shareTickets\" : true\n    },\n    \"comments\" : {\n      \"edit\" : true,\n      \"delete\" : true\n    },\n    \"social\" : {\n      \"view\" : true\n    },\n    \"contracts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"community\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"moderate\" : true\n    },\n    \"products\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"agents\" : {\n      \"overview\" : true,\n      \"edit\" : false,\n      \"create\" : true,\n      \"delete\" : true,\n      \"viewAllFields\" : true\n    },\n    \"kbCategory\" : {\n      \"view\" : true,\n      \"editAllArticles\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"setup\" : {\n      \"timeTracking\" : true,\n      \"fetchAcrossDepartment\" : true,\n      \"globalReports\" : true,\n      \"exportPortalUsers\" : true,\n      \"layouts\" : true,\n      \"automation\" : true,\n      \"featureConfig\" : true,\n      \"customerHappiness\" : true,\n      \"department\" : true,\n      \"portal\" : true,\n      \"webForm\" : true,\n      \"rebranding\" : true,\n      \"email\" : true,\n      \"tabsAndFields\" : true,\n      \"exportUsers\" : true,\n      \"teams\" : true,\n      \"social\" : true,\n      \"templates\" : true,\n      \"moveRecords\" : true,\n      \"permission\" : true,\n      \"signUpApproval\" : true,\n      \"community\" : true,\n      \"importHistory\" : true,\n      \"manageAgents\" : true,\n      \"portalUsers\" : true,\n      \"managerDashboard\" : true,\n      \"googleAnalytics\" : true,\n      \"chat\" : true,\n      \"telephony\" : true\n    },\n    \"financeInteg\" : {\n      \"sendInvoice\" : false,\n      \"createEstimate\" : false,\n      \"createContact\" : false,\n      \"viewInvoice\" : false,\n      \"createInvoice\" : false,\n      \"sendEstimate\" : false,\n      \"viewEstimate\" : false\n    },\n    \"accounts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"timeEntry\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true\n    },\n    \"contacts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"tasks\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    }\n  },\n  \"name\" : \"Support Administrator\",\n  \"description\" : \"Set the privileges for support administrators.\",\n  \"id\" : \"35483000000008343\",\n  \"isVisible\" : true,\n  \"type\" : \"Administrator\"\n}"
						}
					]
				},
				{
					"name": "Get my profile permissions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/myProfilePermissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"myProfilePermissions"
							]
						},
						"description": "This API fetches the permissions associated with the profile of the currently logged in user.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get my profile permissions",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/myProfilePermissions",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"myProfilePermissions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"permissions\" : {\n    \"crmInteg\" : {\n      \"crmContactsActivityEvents\" : false,\n      \"crmAccountsActivityEvents\" : false,\n      \"crmAccountsActivityTasks\" : false,\n      \"crmAccountsInfo\" : false,\n      \"crmContactsActivityCalls\" : false,\n      \"crmAccountsNotes\" : false,\n      \"crmAccountsActivityCalls\" : false,\n      \"crmContactsInfo\" : false,\n      \"crmContactsNotes\" : false,\n      \"crmContactsActivityTasks\" : false,\n      \"crmAccountsPotentials\" : false,\n      \"crmContactsPotentials\" : false\n    },\n    \"reports\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"tickets\" : {\n      \"mergeTickets\" : true,\n      \"changeOwner\" : true,\n      \"import\" : true,\n      \"handleUnassigned\" : true,\n      \"edit\" : true,\n      \"closeTicket\" : true,\n      \"mailReview\" : true,\n      \"delete\" : true,\n      \"view\" : true,\n      \"create\" : true,\n      \"addFollowers\" : true,\n      \"export\" : true,\n      \"mailSend\" : true,\n      \"unassignedChangeOwner\" : false,\n      \"shareTickets\" : true\n    },\n    \"comments\" : {\n      \"edit\" : true,\n      \"delete\" : true\n    },\n    \"social\" : {\n      \"view\" : true\n    },\n    \"contracts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"community\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"moderate\" : true\n    },\n    \"products\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"agents\" : {\n      \"overview\" : true,\n      \"edit\" : false,\n      \"create\" : true,\n      \"delete\" : true,\n      \"viewAllFields\" : true\n    },\n    \"kbCategory\" : {\n      \"view\" : true,\n      \"editAllArticles\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"setup\" : {\n      \"timeTracking\" : true,\n      \"fetchAcrossDepartment\" : true,\n      \"globalReports\" : true,\n      \"exportPortalUsers\" : true,\n      \"layouts\" : true,\n      \"automation\" : true,\n      \"featureConfig\" : true,\n      \"customerHappiness\" : true,\n      \"department\" : true,\n      \"portal\" : true,\n      \"webForm\" : true,\n      \"rebranding\" : true,\n      \"email\" : true,\n      \"tabsAndFields\" : true,\n      \"exportUsers\" : true,\n      \"teams\" : true,\n      \"social\" : true,\n      \"templates\" : true,\n      \"moveRecords\" : true,\n      \"permission\" : true,\n      \"signUpApproval\" : true,\n      \"community\" : true,\n      \"importHistory\" : true,\n      \"manageAgents\" : true,\n      \"portalUsers\" : true,\n      \"managerDashboard\" : true,\n      \"googleAnalytics\" : true,\n      \"chat\" : true,\n      \"telephony\" : true\n    },\n    \"financeInteg\" : {\n      \"sendInvoice\" : false,\n      \"createEstimate\" : false,\n      \"createContact\" : false,\n      \"viewInvoice\" : false,\n      \"createInvoice\" : false,\n      \"sendEstimate\" : false,\n      \"viewEstimate\" : false\n    },\n    \"accounts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"timeEntry\" : {\n      \"view\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true\n    },\n    \"contacts\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    },\n    \"tasks\" : {\n      \"view\" : true,\n      \"import\" : true,\n      \"edit\" : true,\n      \"create\" : true,\n      \"delete\" : true,\n      \"export\" : true\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List agents by profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/profiles/:profile_id/agents",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"profiles",
								":profile_id",
								"agents"
							],
							"query": [
								{
									"key": "active",
									"value": "<boolean>\n",
									"description": "Activation status of the agents to list",
									"disabled": true
								},
								{
									"key": "confirmed",
									"value": "<boolean>\n",
									"description": "Confirmation status of the agents to list",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "profile_id"
								}
							]
						},
						"description": "This API lists agents mapped to a particular profile.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List agents by profile",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/profiles/6000000011303/agents?active=true",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"profiles",
										"6000000011303",
										"agents"
									],
									"query": [
										{
											"key": "active",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"agents\" : [ {\n    \"firstName\" : \"\",\n    \"lastName\" : \"John\",\n    \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=437793\",\n    \"roleId\" : \"7000000012324\",\n    \"profileId\" : \"6000000011303\",\n    \"emailId\" : \"john@zylker.com\",\n    \"id\" : \"7000000013328\",\n    \"zuid\" : \"437793\"\n  }, {\n    \"firstName\" : \"Steve\",\n    \"lastName\" : \"Kyle\",\n    \"photoURL\" : null,\n    \"roleId\" : \"7000000012324\",\n    \"profileId\" : \"6000000011303\",\n    \"emailId\" : \"kyle@zylker.com\",\n    \"id\" : \"7000000012958\",\n    \"zuid\" : \"5625416\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get light agent profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/lightAgentProfile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"lightAgentProfile"
							]
						},
						"description": "This API fetches the different permissions configured for the light agent profile.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get light agent profile",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/lightAgentProfile",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"lightAgentProfile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"default\" : true,\n  \"permissions\" : {\n    \"crmInteg\" : {\n      \"crmContactsActivityEvents\" : false,\n      \"crmAccountsActivityEvents\" : false,\n      \"crmAccountsActivityTasks\" : false,\n      \"crmAccountsInfo\" : false,\n      \"crmContactsActivityCalls\" : false,\n      \"crmAccountsNotes\" : false,\n      \"crmAccountsActivityCalls\" : false,\n      \"crmContactsInfo\" : false,\n      \"crmContactsNotes\" : false,\n      \"crmContactsActivityTasks\" : false,\n      \"crmAccountsPotentials\" : false,\n      \"crmContactsPotentials\" : false\n    },\n    \"reports\" : {\n      \"view\" : true,\n      \"edit\" : false,\n      \"create\" : false,\n      \"delete\" : false,\n      \"export\" : true\n    },\n    \"tickets\" : {\n      \"mergeTickets\" : false,\n      \"changeOwner\" : false,\n      \"import\" : false,\n      \"handleUnassigned\" : false,\n      \"edit\" : false,\n      \"closeTicket\" : false,\n      \"mailReview\" : false,\n      \"delete\" : false,\n      \"view\" : true,\n      \"create\" : false,\n      \"addFollowers\" : false,\n      \"export\" : true,\n      \"mailSend\" : false,\n      \"unassignedChangeOwner\" : false,\n      \"shareTickets\" : false\n    },\n    \"comments\" : {\n      \"edit\" : false,\n      \"delete\" : false\n    },\n    \"social\" : {\n      \"view\" : true\n    },\n    \"contracts\" : {\n      \"view\" : true,\n      \"import\" : false,\n      \"edit\" : false,\n      \"create\" : false,\n      \"delete\" : false,\n      \"export\" : true\n    },\n    \"community\" : {\n      \"view\" : false\n    },\n    \"products\" : {\n      \"view\" : true,\n      \"import\" : false,\n      \"edit\" : false,\n      \"create\" : false,\n      \"delete\" : false,\n      \"export\" : true\n    },\n    \"agents\" : {\n      \"overview\" : true,\n      \"edit\" : false,\n      \"create\" : false,\n      \"delete\" : false,\n      \"viewAllFields\" : true\n    },\n    \"kbCategory\" : {\n      \"view\" : true,\n      \"editAllArticles\" : false,\n      \"import\" : false,\n      \"edit\" : false,\n      \"create\" : false,\n      \"delete\" : false,\n      \"export\" : true\n    },\n    \"setup\" : {\n      \"timeTracking\" : false,\n      \"fetchAcrossDepartment\" : true,\n      \"globalReports\" : false,\n      \"exportPortalUsers\" : false,\n      \"layouts\" : false,\n      \"automation\" : false,\n      \"featureConfig\" : false,\n      \"customerHappiness\" : false,\n      \"department\" : false,\n      \"portal\" : false,\n      \"webForm\" : false,\n      \"rebranding\" : false,\n      \"email\" : false,\n      \"tabsAndFields\" : false,\n      \"exportUsers\" : false,\n      \"teams\" : true,\n      \"social\" : false,\n      \"templates\" : false,\n      \"moveRecords\" : false,\n      \"permission\" : false,\n      \"signUpApproval\" : false,\n      \"community\" : false,\n      \"importHistory\" : false,\n      \"manageAgents\" : false,\n      \"portalUsers\" : false,\n      \"managerDashboard\" : true,\n      \"googleAnalytics\" : true,\n      \"chat\" : false,\n      \"telephony\" : false\n    },\n    \"financeInteg\" : {\n      \"sendInvoice\" : false,\n      \"createEstimate\" : false,\n      \"createContact\" : false,\n      \"viewInvoice\" : false,\n      \"createInvoice\" : false,\n      \"sendEstimate\" : false,\n      \"viewEstimate\" : false\n    },\n    \"accounts\" : {\n      \"view\" : true,\n      \"import\" : false,\n      \"edit\" : false,\n      \"create\" : false,\n      \"delete\" : false,\n      \"export\" : true\n    },\n    \"timeEntry\" : {\n      \"view\" : true,\n      \"edit\" : false,\n      \"create\" : false,\n      \"delete\" : false\n    },\n    \"contacts\" : {\n      \"view\" : true,\n      \"import\" : false,\n      \"edit\" : false,\n      \"create\" : false,\n      \"delete\" : false,\n      \"export\" : true\n    },\n    \"tasks\" : {\n      \"view\" : true,\n      \"import\" : false,\n      \"edit\" : false,\n      \"create\" : false,\n      \"delete\" : false,\n      \"export\" : true\n    }\n  },\n  \"name\" : \"Light Agent\",\n  \"description\" : \"Set the privilege for light agents\",\n  \"id\" : \"15000000012421\",\n  \"isVisible\" : true,\n  \"type\" : \"Light\"\n}"
						}
					]
				}
			],
			"description": "Profiles control the user permissions to access help desk modules, records, fields in a record, and other utilities, such as import, export, send email, etc. Users associated with a profile can access only the functions that are assigned to that profile."
		},
		{
			"name": "Roles",
			"item": [
				{
					"name": "List roles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"roles"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\nrange : >=0",
									"description": "Index number, starting from which the roles must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 0-500",
									"description": "Number of roles to display. The default value is 15 and the maximum value allowed is 500.",
									"disabled": true
								},
								{
									"key": "isVisible",
									"value": "<boolean>\n",
									"description": "Key that filters roles according to their visibility in the UI",
									"disabled": true
								},
								{
									"key": "isDefault",
									"value": "<boolean>\n",
									"description": "Key that denotes whether the roles must be default roles or custom roles",
									"disabled": true
								},
								{
									"key": "searchStr",
									"value": "<string>\nmax chars : 100",
									"description": "String to search for roles by name or description. The string must contain at least one character. Three search methods are supported: 1) string* - Searches for roles whose name or description start with the string, 2) *string* - Searches for roles whose name or description contain the string, 3) string -  Searches for roles whose name or description is an exact match for the string",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of roles, based on the limit specified.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List roles",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.comhttp/desk.zoho.com/api/v1/roles",
									"host": [
										"desk",
										"zoho",
										"comhttp"
									],
									"path": [
										"desk.zoho.com",
										"api",
										"v1",
										"roles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"isDefault\" : true,\n    \"shareDataWithPeers\" : true,\n    \"immediateSubRoles\" : [ \"50000785582324\", \"50000000779019\", \"50000001319909\" ],\n    \"name\" : \"CEO\",\n    \"description\" : \"Agent belongs to this role can access all other user's data.\",\n    \"reportsTo\" : null,\n    \"id\" : \"50000000008337\",\n    \"isVisible\" : true\n  }, {\n    \"isDefault\" : false,\n    \"shareDataWithPeers\" : false,\n    \"immediateSubRoles\" : [ \"50000091844659\" ],\n    \"name\" : \"Manager\",\n    \"description\" : \"Agents belongs to this cannot see admin role users data\",\n    \"reportsTo\" : \"50000000008337\",\n    \"id\" : \"50000000008339\",\n    \"isVisible\" : true\n  }, {\n    \"isDefault\" : false,\n    \"shareDataWithPeers\" : false,\n    \"immediateSubRoles\" : [ ],\n    \"name\" : \"PortalUser\",\n    \"description\" : \"User belongs to this role are portal users they can access their cases and solutions only\",\n    \"reportsTo\" : \"50000000008337\",\n    \"id\" : \"50000000008341\",\n    \"isVisible\" : false\n  }, {\n    \"isDefault\" : false,\n    \"shareDataWithPeers\" : false,\n    \"immediateSubRoles\" : [ ],\n    \"name\" : \"Development Team Member\",\n    \"description\" : \"Development team members from Engineering\",\n    \"reportsTo\" : \"50000000008337\",\n    \"id\" : \"50000000469017\",\n    \"isVisible\" : true\n  }, {\n    \"isDefault\" : false,\n    \"shareDataWithPeers\" : false,\n    \"immediateSubRoles\" : [ ],\n    \"name\" : \"Product Team Member\",\n    \"description\" : \"Products Managers\",\n    \"reportsTo\" : \"50000000008337\",\n    \"id\" : \"50000000551386\",\n    \"isVisible\" : true\n  }, {\n    \"isDefault\" : false,\n    \"shareDataWithPeers\" : true,\n    \"immediateSubRoles\" : [ ],\n    \"name\" : \"Sales Team Member\",\n    \"description\" : \"\",\n    \"reportsTo\" : \"50000000008337\",\n    \"id\" : \"50000000779019\",\n    \"isVisible\" : true\n  }, {\n    \"isDefault\" : false,\n    \"shareDataWithPeers\" : false,\n    \"immediateSubRoles\" : [ ],\n    \"name\" : \"Personal\",\n    \"description\" : \"Agents belongs to this role can see only unassigned and his/her data\",\n    \"reportsTo\" : null,\n    \"id\" : \"50000002634005\",\n    \"isVisible\" : false\n  }, {\n    \"isDefault\" : false,\n    \"shareDataWithPeers\" : false,\n    \"immediateSubRoles\" : [ ],\n    \"name\" : \"Marketing Team Member\",\n    \"description\" : \"\",\n    \"reportsTo\" : \"50000000008337\",\n    \"id\" : \"50000009610999\",\n    \"isVisible\" : true\n  }, {\n    \"isDefault\" : true,\n    \"shareDataWithPeers\" : false,\n    \"immediateSubRoles\" : [ ],\n    \"name\" : \"LightAgent\",\n    \"description\" : \"Agents belonging to this role can access all user's data.\",\n    \"reportsTo\" : null,\n    \"id\" : \"50000565365005\",\n    \"isVisible\" : false\n  } ]\n}"
						}
					]
				},
				{
					"name": "List agents by role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/roles/:role_id/agents",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"roles",
								":role_id",
								"agents"
							],
							"variable": [
								{
									"key": "role_id"
								}
							]
						},
						"description": "This API lists agents mapped to a particular role.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List agents by role",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/roles/50000000008446/agents",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"roles",
										"50000000008446",
										"agents"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"associatedAgents\" : [ \"50000000009163\", \"50000000009300\", \"50000000010007\", \"50000000010011\", \"50000000062391\", \"50000000062393\" ]\n}"
						}
					]
				},
				{
					"name": "Create role",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"roles"
							]
						},
						"description": "This API creates a role in your help desk.\n#### OAuth Scope\n- `Desk.settings.CREATE`\n- `Desk.basic.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name (required) | &lt;string&gt;<br />max chars : 50 | Name of the role \n| description  | &lt;string&gt;<br />max chars : 3200 | A short description of the role \n| shareDataWithPeers (required) | &lt;boolean&gt;<br /> | Key that denotes if the role shares data with its peer roles \n| reportsTo  | &lt;long&gt;<br /> | ID of the role to which the current role reports \n"
					},
					"response": [
						{
							"name": "Create role",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"shareDataWithPeers\" : true,\n  \"name\" : \"Customer Care Associate\",\n  \"description\" : \"Can work on own tickets and can not re-assign tickets.\",\n  \"reportsTo\" : 5000000008807\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/roles",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"roles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"isDefault\" : false,\n  \"shareDataWithPeers\" : true,\n  \"immediateSubRoles\" : [ ],\n  \"name\" : \"Customer Care Associate\",\n  \"description\" : \"Can work on own tickets and can not re-assign tickets.\",\n  \"reportsTo\" : 5000000008807,\n  \"id\" : \"5000000002973\",\n  \"isVisible\" : true\n}"
						}
					]
				},
				{
					"name": "Update role",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/roles/:role_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"roles",
								":role_id"
							],
							"variable": [
								{
									"key": "role_id"
								}
							]
						},
						"description": "This API updates details of an existing role.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name  | &lt;string&gt;<br />max chars : 50 | Name of the role \n| description  | &lt;string&gt;<br />max chars : 3200 | A short description of the role \n| shareDataWithPeers  | &lt;boolean&gt;<br /> | Key that denotes if the role shares data with its peer roles \n| reportsTo  | &lt;long&gt;<br /> | ID of the role to which the current role reports \n"
					},
					"response": [
						{
							"name": "Update role",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"shareDataWithPeers\" : true,\n  \"name\" : \"Customer Care and Sales Associate\",\n  \"description\" : \"Can work on own tickets and can not re-assign tickets.\",\n  \"reportsTo\" : 5000000008807\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/roles/5000000002973",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"roles",
										"5000000002973"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"isDefault\" : false,\n  \"shareDataWithPeers\" : true,\n  \"immediateSubRoles\" : [ ],\n  \"name\" : \"Customer Care and Sales Associate\",\n  \"description\" : \"Can work on own tickets and can not re-assign tickets.\",\n  \"reportsTo\" : 5000000008807,\n  \"id\" : \"5000000002973\",\n  \"isVisible\" : true\n}"
						}
					]
				},
				{
					"name": "Delete role",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/roles/:role_id/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"roles",
								":role_id",
								"delete"
							],
							"variable": [
								{
									"key": "role_id"
								}
							]
						},
						"description": "This API deletes a role from your help desk.\n#### OAuth Scope\n- `Desk.settings.DELETE`\n- `Desk.basic.DELETE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| transferToRoleId (required) | &lt;long&gt;<br /> | Transfer the child-roles to the given role \n"
					},
					"response": [
						{
							"name": "Delete role",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transferToRoleId\" : \"5000000008807\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/roles/5000000002973/delete",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"roles",
										"5000000002973",
										"delete"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/roles/:role_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"roles",
								":role_id"
							],
							"variable": [
								{
									"key": "role_id"
								}
							]
						},
						"description": "This API fetches the details of a particular role.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get role",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/roles/4000000012414",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"roles",
										"4000000012414"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"isDefault\" : true,\n  \"shareDataWithPeers\" : false,\n  \"immediateSubRoles\" : [ \"4000000012420\", \"4000000012417\" ],\n  \"name\" : \"CEO\",\n  \"description\" : \"Agent belongs to this role can access all other user's data.\",\n  \"reportsTo\" : null,\n  \"id\" : \"4000000012414\",\n  \"isVisible\" : true\n}"
						}
					]
				},
				{
					"name": "Get role count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/roles/count",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"roles",
								"count"
							],
							"query": [
								{
									"key": "isVisible",
									"value": "<boolean>\n",
									"description": "Key that filters roles according to their visibility in the UI",
									"disabled": true
								},
								{
									"key": "isDefault",
									"value": "<boolean>\n",
									"description": "Key that denotes whether the roles must be default roles or custom roles",
									"disabled": true
								}
							]
						},
						"description": "This API fetches the number of roles configured in your help desk.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get role count",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/roles/count",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"roles",
										"count"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"count\" : 5\n}"
						}
					]
				},
				{
					"name": "Get personal role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/personalRole",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"personalRole"
							]
						},
						"description": "This API fetches the details of the personal role configured in your help desk. Agents with personal role can view only the tickets assigned to them and unassigned tickets.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get personal role",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/personalRole",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"personalRole"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"isDefault\" : false,\n  \"shareDataWithPeers\" : false,\n  \"immediateSubRoles\" : [ ],\n  \"name\" : \"Personal\",\n  \"description\" : \"Agents belongs to this role can see only unassigned and his/her data\",\n  \"reportsTo\" : null,\n  \"id\" : \"4000000012423\",\n  \"isVisible\" : false\n}"
						}
					]
				},
				{
					"name": "List roles by role IDs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/rolesByIds?roleIds=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"rolesByIds"
							],
							"query": [
								{
									"key": "roleIds",
									"value": "<long>\n",
									"description": "Comma separated role ids. Maximum allowed count is 50"
								}
							]
						},
						"description": "This API lists details of the roles whose IDs are passed in the API request.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List roles by role IDs",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/rolesByIds?roleIds=4000000012423,4000000012420,4000000012414",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"rolesByIds"
									],
									"query": [
										{
											"key": "roleIds",
											"value": "4000000012423,4000000012420,4000000012414"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"isDefault\" : true,\n    \"shareDataWithPeers\" : false,\n    \"immediateSubRoles\" : [ \"4000000012420\", \"4000000012417\" ],\n    \"name\" : \"CEO\",\n    \"description\" : \"Agent belongs to this role can access all other user's data.\",\n    \"reportsTo\" : null,\n    \"id\" : \"4000000012414\",\n    \"isVisible\" : true\n  }, {\n    \"isDefault\" : false,\n    \"shareDataWithPeers\" : false,\n    \"immediateSubRoles\" : [ ],\n    \"name\" : \"PortalUser\",\n    \"description\" : \"User belongs to this role are portal users they can access their cases and solutions only\",\n    \"reportsTo\" : \"4000000012414\",\n    \"id\" : \"4000000012420\",\n    \"isVisible\" : false\n  }, {\n    \"isDefault\" : false,\n    \"shareDataWithPeers\" : false,\n    \"immediateSubRoles\" : [ ],\n    \"name\" : \"Personal\",\n    \"description\" : \"Agents belongs to this role can see only unassigned and his/her data\",\n    \"reportsTo\" : null,\n    \"id\" : \"4000000012423\",\n    \"isVisible\" : false\n  } ]\n}"
						}
					]
				}
			],
			"description": "Role refers to the user role that can be defined in Zoho Desk. Roles help define organization-wide hierarchy. Users at a higher hierarchy can always access all the records of at a lower hierarchy. For example, a Support Manager can access all the Agents' records, whereas Agents can access only their records."
		},
		{
			"name": "Teams",
			"item": [
				{
					"name": "Create team",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/teams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"teams"
							]
						},
						"description": "This API creates a team in your help desk portal.\n#### OAuth Scope\n- `Desk.settings.CREATE`\n- `Desk.basic.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name (required) | &lt;String&gt;<br /> | Name of the team \n| description  | &lt;String&gt;<br /> | A short description of the team \n| departmentId (required) | &lt;Long&gt;<br /> | ID of the department to which the team belongs \n| subTeams  | &lt;list&gt;<br /> | List of sub-teams within the team \n| roles  | &lt;list&gt;<br /> | List of roles to add to the team \n| rolesWithSubordinates  | &lt;list&gt;<br /> | List of roles with subordinates to add to the team \n| agents  | &lt;list&gt;<br /> | List of agents to add to the team \n"
					},
					"response": [
						{
							"name": "Create team",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rolesWithSubordinates\" : [ \"6000000008684\", \"6000000008686\" ],\n  \"departmentId\" : \"6000000009893\",\n  \"roles\" : [ \"6000000011307\", \"6000000011309\", \"6000000011311\" ],\n  \"name\" : \"Sales Representatives\",\n  \"description\" : \"Sales teams for customer engagement.\",\n  \"subTeams\" : [ \"6000000012001\" ],\n  \"agents\" : [ \"6000000009086\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/teams",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"teams"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"rolesWithSubordinates\" : [ \"6000000008684\", \"6000000008686\" ],\n  \"departmentId\" : \"6000000009893\",\n  \"roles\" : [ \"6000000011311\", \"6000000011309\", \"6000000011307\" ],\n  \"name\" : \"Sales Representatives\",\n  \"description\" : \"Sales teams for customer engagement.\",\n  \"derivedAgents\" : [ \"6000000009086\", \"6000000012003\" ],\n  \"id\" : \"6000000014007\",\n  \"subTeams\" : [ \"6000000012001\" ],\n  \"agents\" : [ \"6000000009086\" ]\n}"
						}
					]
				},
				{
					"name": "Update team",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/teams/:team_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"teams",
								":team_id"
							],
							"variable": [
								{
									"key": "team_id"
								}
							]
						},
						"description": "This API updates details of an existing team.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name  | &lt;String&gt;<br /> | Name of the team \n| description  | &lt;String&gt;<br /> | A short description of the team \n| subTeams  | &lt;list&gt;<br /> | List of sub-teams within the team \n| roles  | &lt;list&gt;<br /> | List of roles to add to the team \n| rolesWithSubordinates  | &lt;list&gt;<br /> | List of roles with subordinates to add to the team \n| agents  | &lt;list&gt;<br /> | List of agents to add to the team \n"
					},
					"response": [
						{
							"name": "Update team",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roles\" : [ \"6000000011307\", \"6000000011311\" ],\n  \"name\" : \"Sales Reps.\",\n  \"description\" : \"Sales teams for winning customers.\",\n  \"subTeams\" : [ \"6000000011303\" ],\n  \"agents\" : [ \"6000000009086\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/teams/6000000014007",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"teams",
										"6000000014007"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"rolesWithSubordinates\" : [ \"6000000008684\", \"6000000008686\" ],\n  \"departmentId\" : \"6000000009893\",\n  \"roles\" : [ \"6000000011311\", \"6000000011307\" ],\n  \"name\" : \"Sales Reps.\",\n  \"description\" : \"Sales teams for winning customers.\",\n  \"derivedAgents\" : [ \"6000000009086\", \"6000000012003\" ],\n  \"id\" : \"6000000014007\",\n  \"subTeams\" : [ \"6000000011303\" ],\n  \"agents\" : [ \"6000000009086\" ]\n}"
						}
					]
				},
				{
					"name": "Delete team",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/teams/:team_id/deleteTeam",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"teams",
								":team_id",
								"deleteTeam"
							],
							"variable": [
								{
									"key": "team_id"
								}
							]
						},
						"description": "This API deletes an existing team from your help desk portal. To reassign the open and on hold tickets and tasks of the deleted team to a different team, pass the ticketNewTeam, taskNewTeam, ticketNewAgent, and taskNewAgent team parameters in the API request. If you do not want to assign the tickets to another team, pass the values of ticketNewTeam and ticketNewAgent as null. However, in the case of tasks, either taskNewTeam or taskNewAgent must have a valid value. Both parameters cannot be passed as null.\n#### OAuth Scope\n- `Desk.settings.DELETE`\n- `Desk.basic.DELETE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ticketNewTeam (required) | &lt;long&gt;<br /> | Assign open and on hold tickets of the team being deleted to this team. \n| ticketNewAgent (required) | &lt;long&gt;<br /> | Assign open and on hold tickets of the team being deleted to this agent. \n| taskNewTeam (required) | &lt;long&gt;<br /> | Assign open tasks of the team being deleted to this team. \n| taskNewAgent (required) | &lt;long&gt;<br /> | Assign open tasks of the team being deleted to this agent. \n"
					},
					"response": [
						{
							"name": "Delete team",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ticketNewAgent\" : \"5000000013005\",\n  \"ticketNewTeam\" : \"5000000013001\",\n  \"taskNewTeam\" : \"5000000013001\",\n  \"taskNewAgent\" : \"5000000013009\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/teams/6000000014007/deleteTeam",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"teams",
										"6000000014007",
										"deleteTeam"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get team",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/teams/:team_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"teams",
								":team_id"
							],
							"variable": [
								{
									"key": "team_id"
								}
							]
						},
						"description": "This API fetches the details of a team.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get team",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/teams/6000000014007",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"teams",
										"6000000014007"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"rolesWithSubordinates\" : [ \"6000000008684\", \"6000000008686\" ],\n  \"departmentId\" : \"6000000009893\",\n  \"roles\" : [ \"6000000011311\", \"6000000011307\" ],\n  \"name\" : \"Sales Reps.\",\n  \"description\" : \"Sales teams for winning customers.\",\n  \"derivedAgents\" : [ \"6000000009086\", \"6000000012003\" ],\n  \"id\" : \"6000000014007\",\n  \"subTeams\" : [ \"6000000011303\" ],\n  \"agents\" : [ \"6000000009086\" ]\n}"
						}
					]
				},
				{
					"name": "List teams from all associated departments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/teams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"teams"
							]
						},
						"description": "This API fetches details of all teams created in all departments to which the current user belongs.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List teams from all associated departments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/teams",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"teams"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"teams\" : [ {\n    \"rolesWithSubordinates\" : [ ],\n    \"departmentId\" : \"17000000007253\",\n    \"roles\" : [ ],\n    \"name\" : \"Sales Reps.\",\n    \"description\" : \"Sales teams for winning customers.\",\n    \"derivedAgents\" : [ ],\n    \"id\" : \"17000000013003\",\n    \"subTeams\" : [ ],\n    \"agents\" : [ ]\n  }, {\n    \"rolesWithSubordinates\" : [ ],\n    \"departmentId\" : \"17000000009326\",\n    \"roles\" : [ ],\n    \"name\" : \"Support Teams\",\n    \"description\" : \"Support teams for solving customer issues.\",\n    \"derivedAgents\" : [ ],\n    \"id\" : \"17000000013005\",\n    \"subTeams\" : [ ],\n    \"agents\" : [ ]\n  }, {\n    \"rolesWithSubordinates\" : [ ],\n    \"departmentId\" : \"17000000007253\",\n    \"roles\" : [ ],\n    \"name\" : \"Engineering\",\n    \"description\" : \"Developers and Engineers.\",\n    \"derivedAgents\" : [ ],\n    \"id\" : \"17000000013001\",\n    \"subTeams\" : [ ],\n    \"agents\" : [ ]\n  } ]\n}"
						}
					]
				},
				{
					"name": "List details of team members",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/teams/:team_id/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"teams",
								":team_id",
								"members"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Secondary information related to the team. Values allowed are `profile`, `role`. You can include all two values by separating them with commas in the API request.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "team_id"
								}
							]
						},
						"description": "This API fetches details of all the members of a particular team.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List details of team members",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/teams/6000000011303/members",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"teams",
										"6000000011303",
										"members"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"members\" : [ {\n    \"firstName\" : \"\",\n    \"lastName\" : \"John\",\n    \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=437793\",\n    \"roleId\" : \"7000000012324\",\n    \"profileId\" : \"7000000012339\",\n    \"emailId\" : \"john@zylker.com\",\n    \"id\" : \"7000000013328\",\n    \"zuid\" : \"437793\"\n  }, {\n    \"firstName\" : \"Steve\",\n    \"lastName\" : \"Kyle\",\n    \"photoURL\" : null,\n    \"roleId\" : \"7000000012324\",\n    \"profileId\" : \"7000000012339\",\n    \"emailId\" : \"kyle@zylker.com\",\n    \"id\" : \"7000000012958\",\n    \"zuid\" : \"5625416\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List associable teams",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/teams/:team_id/associables",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"teams",
								":team_id",
								"associables"
							],
							"variable": [
								{
									"key": "team_id"
								}
							]
						},
						"description": "This API lists the other teams that can be added as sub-teams to the current team.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List associable teams",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/teams/6000000011303/associables",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"teams",
										"6000000011303",
										"associables"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"teams\" : [ 6000000011303, 6000000017021, 6000000017023, 6000000016013, 6000000017017, 6000000016015, 6000000017019, 6000000017013, 6000000017015, 6000000017009, 6000000012001, 6000000017011, 6000000017005, 6000000016025, 6000000017007, 6000000017059, 6000000016027, 6000000017001, 6000000016029, 6000000017003, 6000000016031, 6000000016017, 6000000015001, 6000000016019, 6000000016021 ]\n}"
						}
					]
				},
				{
					"name": "List associated teams of agent",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agents/:agent_id/teams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								":agent_id",
								"teams"
							],
							"variable": [
								{
									"key": "agent_id"
								}
							]
						},
						"description": "This API fetches details of all the teams to which an agent belongs.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List associated teams of agent",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/agents/6000000011313/teams",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agents",
										"6000000011313",
										"teams"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"teams\" : [ {\n    \"rolesWithSubordinates\" : [ ],\n    \"departmentId\" : \"60000000839483\",\n    \"roles\" : [ \"60000000098623\" ],\n    \"name\" : \"Sales Reps.\",\n    \"description\" : \"Sales teams for winning customers.\",\n    \"derivedAgents\" : [ \"6000000011313\", \"60000000120230\" ],\n    \"id\" : \"6000000083003\",\n    \"subTeams\" : [ ],\n    \"agents\" : [ ]\n  }, {\n    \"rolesWithSubordinates\" : [ ],\n    \"departmentId\" : \"60000000839483\",\n    \"roles\" : [ ],\n    \"name\" : \"Support Teams\",\n    \"description\" : \"Support teams for solving customer issues.\",\n    \"derivedAgents\" : [ \"6000000011313\" ],\n    \"id\" : \"6000000083034\",\n    \"subTeams\" : [ ],\n    \"agents\" : [ \"6000000011313\" ]\n  } ]\n}"
						}
					]
				},
				{
					"name": "List associated teams for a role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/roles/:role_id/teams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"roles",
								":role_id",
								"teams"
							],
							"variable": [
								{
									"key": "role_id"
								}
							]
						},
						"description": "This API fetches details of all the teams associated with a particular role.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List associated teams for a role",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/roles/6000000008684/teams",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"roles",
										"6000000008684",
										"teams"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"teams\" : [ {\n    \"rolesWithSubordinates\" : [ \"6000000008684\" ],\n    \"departmentId\" : \"60000000839483\",\n    \"roles\" : [ \"60000000098623\" ],\n    \"name\" : \"Sales Reps.\",\n    \"description\" : \"Sales teams for winning customers.\",\n    \"derivedAgents\" : [ \"6000000011313\", \"60000000120230\" ],\n    \"id\" : \"6000000083003\",\n    \"subTeams\" : [ ],\n    \"agents\" : [ ]\n  }, {\n    \"rolesWithSubordinates\" : [ ],\n    \"departmentId\" : \"60000000839483\",\n    \"roles\" : [ \"6000000008684\" ],\n    \"name\" : \"Support Teams\",\n    \"description\" : \"Support teams for solving customer issues.\",\n    \"derivedAgents\" : [ \"6000000011313\" ],\n    \"id\" : \"6000000083034\",\n    \"subTeams\" : [ ],\n    \"agents\" : [ \"6000000011313\" ]\n  } ]\n}"
						}
					]
				},
				{
					"name": "List teams in department",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/departments/:department_id/teams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"departments",
								":department_id",
								"teams"
							],
							"variable": [
								{
									"key": "department_id"
								}
							]
						},
						"description": "This API fetches details of all the teams in a particular department.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List teams in department",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/departments/6000000007245/teams",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"departments",
										"6000000007245",
										"teams"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"teams\" : [ {\n    \"rolesWithSubordinates\" : [ \"6000000008684\", \"6000000008686\" ],\n    \"roles\" : [ \"6000000011311\", \"6000000011309\", \"6000000011307\" ],\n    \"departmentId\" : \"6000000007245\",\n    \"name\" : \"Field Agents\",\n    \"derivedAgents\" : [ \"6000000009086\" ],\n    \"description\" : \"Field Agents team for customer issues\",\n    \"id\" : \"6000000017039\",\n    \"subTeams\" : [ ],\n    \"agents\" : [ \"6000000009086\" ]\n  }, {\n    \"rolesWithSubordinates\" : [ \"6000000008684\", \"6000000008686\" ],\n    \"roles\" : [ \"6000000011311\", \"6000000011309\", \"6000000011307\" ],\n    \"departmentId\" : \"6000000007245\",\n    \"name\" : \"Managers\",\n    \"derivedAgents\" : [ \"6000000009086\" ],\n    \"description\" : \"Managers\",\n    \"id\" : \"6000000016007\",\n    \"subTeams\" : [ \"6000000016011\", \"6000000014005\" ],\n    \"agents\" : [ \"6000000009086\" ]\n  } ]\n}"
						}
					]
				}
			],
			"description": "A team is a group of agents/users in a department. Just like how you can assign tickets or tasks to agents, you can also assign tickets and tasks to teams."
		},
		{
			"name": "Departments",
			"item": [
				{
					"name": "Get department",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/departments/:department_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"departments",
								":department_id"
							],
							"variable": [
								{
									"key": "department_id"
								}
							]
						},
						"description": "This API fetches the details of a department from your help desk\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get department",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/departments/1892000000082069",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"departments",
										"1892000000082069"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"isAssignToTeamEnabled\" : true,\n  \"chatStatus\" : \"AVAILABLE\",\n  \"hasLogo\" : true,\n  \"isVisibleInCustomerPortal\" : true,\n  \"creatorId\" : \"1892000000042001\",\n  \"description\" : \"Zylker Inc. is a multinational technology company that designs, develops, and sells consumer electronics.\",\n  \"associatedAgentIds\" : [ \"1892000000042001\", \"1892000000056007\", \"1892000000888059\" ],\n  \"isDefault\" : true,\n  \"isEnabled\" : true,\n  \"name\" : \"Zylker\",\n  \"createdTime\" : \"2019-07-26T13:11:02.000Z\",\n  \"id\" : \"1892000000082069\",\n  \"nameInCustomerPortal\" : \"ZylCares\"\n}"
						}
					]
				},
				{
					"name": "List departments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/departments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"departments"
							],
							"query": [
								{
									"key": "isEnabled",
									"value": "<boolean>\n",
									"description": "Key that filters departments based on their enabled status",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\nrange : >=0",
									"description": "Index number, starting from which the departments must be fetched",
									"disabled": true
								},
								{
									"key": "searchStr",
									"value": "<string>\nmax chars : 100",
									"description": "String to search for departments by name, help center name, or description. The string must contain at least one character. Three search methods are supported: 1) string* - Searches for departments whose name, help center name, or description start with the string, 2) *string* - Searches for departments whose name, help center name, or description contain the string, 3) string - Searches for departments whose name, help center name, or description is an exact match for the string",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 0-200",
									"description": "Number of departments to fetch; default value is 10 and maximum value supported is 200",
									"disabled": true
								},
								{
									"key": "chatStatus",
									"value": "<string>\nmax chars : 100",
									"description": "Key that filters departments based on their chat status. Values allowed are `AVAILABLE`, `DISABLED`, `NOT_CREATED`, and `${UNAVAILABLE}`. `${UNAVAILABLE}` refers to departments which are not available for chat.",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of departments, based on the limit specified.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List departments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/departments?isEnabled=true&chatStatus=AVAILABLE",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"departments"
									],
									"query": [
										{
											"key": "isEnabled",
											"value": "true"
										},
										{
											"key": "chatStatus",
											"value": "AVAILABLE"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"isAssignToTeamEnabled\" : true,\n    \"chatStatus\" : \"AVAILABLE\",\n    \"isDefault\" : true,\n    \"hasLogo\" : true,\n    \"isVisibleInCustomerPortal\" : true,\n    \"isEnabled\" : true,\n    \"name\" : \"Zylker\",\n    \"creatorId\" : \"1892000000042001\",\n    \"description\" : \"Zylker Inc. is a multinational technology company that designs, develops, and sells consumer electronics.\",\n    \"createdTime\" : \"2019-07-26T13:11:02.000Z\",\n    \"id\" : \"1892000000082069\",\n    \"nameInCustomerPortal\" : \"ZylCares\"\n  }, {\n    \"isAssignToTeamEnabled\" : true,\n    \"chatStatus\" : \"AVAILABLE\",\n    \"isDefault\" : false,\n    \"hasLogo\" : true,\n    \"isVisibleInCustomerPortal\" : true,\n    \"isEnabled\" : true,\n    \"name\" : \"zPad\",\n    \"creatorId\" : \"1892000000042001\",\n    \"description\" : \"zPad is the most advanced tablet that brings you the never-experienced-before processing power.\",\n    \"createdTime\" : \"2019-08-25T10:12:04.000Z\",\n    \"id\" : \"1892000000082085\",\n    \"nameInCustomerPortal\" : \"zPad\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List agents in department",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/departments/:department_id/agents",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"departments",
								":department_id",
								"agents"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the agents must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 0-200",
									"description": "Number of agents to fetch; default value is 10 and maximum value is 200",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<string>\nmax chars : 100",
									"description": "Key that filters agents, based on their activation status: `ACTIVE` or `DISABLED`",
									"disabled": true
								},
								{
									"key": "isLightAgent",
									"value": "<boolean>\n",
									"description": "Key that denotes if the agents must be light or non light.",
									"disabled": true
								},
								{
									"key": "isConfirmed",
									"value": "<boolean>\n",
									"description": "Key that denotes if the agents must be confirmed or unconfirmed.",
									"disabled": true
								},
								{
									"key": "searchStr",
									"value": "<string>\nmax chars : 100",
									"description": "String to search for agents by first name, last name, or email ID. The string must contain at least one character. Three search methods are supported: 1) string* - Searches for agents whose first name, last name, or email ID start with the string, 2) *string* - Searches for agents whose first name, last name, or email ID contain the string, 3) string - Searches for agents whose first name, last name, or email ID is an exact match for the string",
									"disabled": true
								},
								{
									"key": "fieldName",
									"value": "<string>\nmax chars : 100",
									"description": "Name of the field that must be used for searching and listing agents. Values allowed are: `firstName`, `lastName`, `name`, and `emailId`.",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "<string>\nmax chars : 100",
									"description": "To sort the available list of agents in either ascending or descending order. Values allowed are: `asc` or `desc`",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "department_id"
								}
							]
						},
						"description": "This API lists the agents in a department.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List agents in department",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/departments/1892000000006907/agents",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"departments",
										"1892000000006907",
										"agents"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"lastName\" : \"case\",\n    \"extn\" : \"3298\",\n    \"roleId\" : \"1892000000056099\",\n    \"langCode\" : \"en_US\",\n    \"mobile\" : \"\",\n    \"emailId\" : \"case@zylker.com\",\n    \"associatedChatDepartmentIds\" : [ ],\n    \"zuid\" : \"10687231\",\n    \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\", \"1892000000639717\" ],\n    \"firstName\" : \"\",\n    \"photoURL\" : null,\n    \"phone\" : \"12121\",\n    \"profileId\" : \"1892000000056091\",\n    \"countryCode\" : \"en_US\",\n    \"channelExpert\" : [ \"Facebook\", \"Chat\", \"Phone\", \"Twitter\", \"Web\", \"Email\", \"Forums\" ],\n    \"name\" : \"case\",\n    \"isConfirmed\" : true,\n    \"aboutInfo\" : \"Expert in handling tickets and Automations\",\n    \"id\" : \"1892000000056007\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"lastName\" : \"jade\",\n    \"extn\" : \"3203\",\n    \"roleId\" : \"1892000000056899\",\n    \"langCode\" : \"en_US\",\n    \"mobile\" : \"\",\n    \"emailId\" : \"jade@zylker.com\",\n    \"associatedChatDepartmentIds\" : [ ],\n    \"zuid\" : \"10657727\",\n    \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\", \"1892000000639717\", \"1892000001019041\", \"1892000001106673\", \"1892000001109673\" ],\n    \"firstName\" : \"\",\n    \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=10657727\",\n    \"phone\" : \"\",\n    \"profileId\" : \"1892000000056091\",\n    \"countryCode\" : \"en_US\",\n    \"channelExpert\" : [ \"Facebook\", \"Email\", \"Forums\" ],\n    \"name\" : \"jade\",\n    \"isConfirmed\" : true,\n    \"aboutInfo\" : \"Expert in handling tickets\",\n    \"id\" : \"1892000000042001\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"lastName\" : \"john\",\n    \"extn\" : \"3228\",\n    \"roleId\" : \"1892000000056004\",\n    \"langCode\" : \"en_US\",\n    \"mobile\" : \"\",\n    \"emailId\" : \"john@zylker.com\",\n    \"associatedChatDepartmentIds\" : [ ],\n    \"zuid\" : \"10713988\",\n    \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000001019041\" ],\n    \"firstName\" : \"\",\n    \"photoURL\" : null,\n    \"phone\" : \"68779989\",\n    \"profileId\" : \"18920000000232043\",\n    \"countryCode\" : \"en_US\",\n    \"channelExpert\" : [ \"Facebook\", \"Chat\", \"Phone\", \"Twitter\", \"Web\", \"Email\", \"Forums\" ],\n    \"name\" : \"john\",\n    \"isConfirmed\" : true,\n    \"aboutInfo\" : \"Expert in handling tickets and Automations\",\n    \"id\" : \"1892000000070001\",\n    \"status\" : \"DISABLED\"\n  }, {\n    \"lastName\" : \"Waugh\",\n    \"extn\" : \"4020\",\n    \"roleId\" : \"1892000000056004\",\n    \"langCode\" : \"ja_JP\",\n    \"mobile\" : \"\",\n    \"emailId\" : \"stephen@zylker.com\",\n    \"associatedChatDepartmentIds\" : [ ],\n    \"zuid\" : null,\n    \"associatedDepartmentIds\" : [ \"1892000000006907\", \"1892000000082069\", \"1892000000639717\" ],\n    \"firstName\" : \"Steve\",\n    \"photoURL\" : null,\n    \"phone\" : \"\",\n    \"profileId\" : \"18920000000232043\",\n    \"countryCode\" : \"en_US\",\n    \"channelExpert\" : [ \"Facebook\", \"Chat\" ],\n    \"name\" : \"Steve Waugh\",\n    \"isConfirmed\" : false,\n    \"aboutInfo\" : \"Expert in handling Departments\",\n    \"id\" : \"1892000000888059\",\n    \"status\" : \"ACTIVE\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get department count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/departments/count",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"departments",
								"count"
							],
							"query": [
								{
									"key": "isEnabled",
									"value": "<boolean>\n",
									"description": "Key that filters departments based on their enabled status",
									"disabled": true
								}
							]
						},
						"description": "This API returns the number of departments configured in your help desk portal.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get department count",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/departments/1892000000006907/count?isEnabled=true",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"departments",
										"1892000000006907",
										"count"
									],
									"query": [
										{
											"key": "isEnabled",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"count\" : 5\n}"
						}
					]
				},
				{
					"name": "Get department details by department IDs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/departmentsByIds?departmentIds=:department_ids?departmentIds=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"departmentsByIds"
							],
							"query": [
								{
									"key": "departmentIds",
									"value": "<long>\n",
									"description": "Comma-separated array of department IDs. Maximum number of IDs allowed is 50."
								}
							]
						},
						"description": "This API fetches the details of the departments whose IDs are passed in the API request.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get department details by department IDs",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/departmentsByIds?departmentIds=1892000000082069,1892000000082085",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"departmentsByIds"
									],
									"query": [
										{
											"key": "departmentIds",
											"value": "1892000000082069,1892000000082085"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"isAssignToTeamEnabled\" : true,\n    \"chatStatus\" : \"AVAILABLE\",\n    \"isDefault\" : true,\n    \"hasLogo\" : true,\n    \"isVisibleInCustomerPortal\" : true,\n    \"isEnabled\" : true,\n    \"name\" : \"Zylker\",\n    \"creatorId\" : \"1892000000042001\",\n    \"description\" : \"Zylker Inc. is a multinational technology company that designs, develops, and sells consumer electronics.\",\n    \"createdTime\" : \"2019-07-26T13:11:02.000Z\",\n    \"id\" : \"1892000000082069\",\n    \"nameInCustomerPortal\" : \"ZylCares\"\n  }, {\n    \"isAssignToTeamEnabled\" : true,\n    \"chatStatus\" : \"DISABLED\",\n    \"isDefault\" : false,\n    \"hasLogo\" : true,\n    \"isVisibleInCustomerPortal\" : true,\n    \"isEnabled\" : true,\n    \"name\" : \"zPad\",\n    \"creatorId\" : \"1892000000042001\",\n    \"description\" : \"zPad is the most advanced tablet that brings you the never-experienced-before processing power.\",\n    \"createdTime\" : \"2018-07-06T13:11:12.000Z\",\n    \"id\" : \"1892000000082085\",\n    \"nameInCustomerPortal\" : \"zPad\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Check for duplicate departments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/departments/checkExists?departmentName=<string>\nmax chars : 150",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"departments",
								"checkExists"
							],
							"query": [
								{
									"key": "departmentName",
									"value": "<string>\nmax chars : 150",
									"description": "Name of the department for which you want to check duplicate entries"
								}
							]
						},
						"description": "This API checks if multiple departments have the same name.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Check for duplicate departments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/departments/checkExists?departmentName=zPad",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"departments",
										"checkExists"
									],
									"query": [
										{
											"key": "departmentName",
											"value": "zPad"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"isDepartmentNameExist\" : true\n}"
						}
					]
				},
				{
					"name": "Add department",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/departments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"departments"
							]
						},
						"description": "This API adds a department to your help desk portal.\n#### OAuth Scope\n- `Desk.settings.CREATE`\n- `Desk.basic.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name (required) | &lt;string&gt;<br />max chars : 150 | Name of the department \n| nameInCustomerPortal  | &lt;string&gt;<br />max chars : 150 | Display name of the department in the help center \n| description  | &lt;string&gt;<br />max chars : 500 | A short description of the department \n| isVisibleInCustomerPortal  | &lt;boolean&gt;<br /> | Key that denotes if the department is visible in the help center or not \n| isAssignToTeamEnabled  | &lt;boolean&gt;<br /> | Key that denotes if the assign to team functionality is enabled or not \n| associatedAgentIds (required) | &lt;list&gt;<br /> | IDs of agents associated with the department \n"
					},
					"response": [
						{
							"name": "Add department",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isAssignToTeamEnabled\" : false,\n  \"isVisibleInCustomerPortal\" : true,\n  \"name\" : \"zPhone\",\n  \"description\" : \"With the most advanced technology, the zPhone is the world’s largest selling smartphone.\",\n  \"associatedAgentIds\" : [ \"1892000000042001\", \"1892000000056007\" ],\n  \"nameInCustomerPortal\" : \"zPhone\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/departments",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"departments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"isAssignToTeamEnabled\" : false,\n  \"chatStatus\" : \"NOT_CREATED\",\n  \"hasLogo\" : false,\n  \"isVisibleInCustomerPortal\" : true,\n  \"creatorId\" : \"1892000000042001\",\n  \"description\" : \"With the most advanced technology, the zPhone is the world’s largest selling smartphone.\",\n  \"associatedAgentIds\" : [ \"1892000000042001\", \"1892000000056007\" ],\n  \"isDefault\" : false,\n  \"isEnabled\" : true,\n  \"name\" : \"zPhone\",\n  \"createdTime\" : \"2019-07-26T13:11:02.000Z\",\n  \"id\" : \"1892000000082085\",\n  \"nameInCustomerPortal\" : \"zPhone\"\n}"
						}
					]
				},
				{
					"name": "Update department",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/departments/:department_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"departments",
								":department_id"
							],
							"variable": [
								{
									"key": "department_id"
								}
							]
						},
						"description": "This API updates the details of an existing department.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name  | &lt;string&gt;<br />max chars : 150 | Name of the department \n| nameInCustomerPortal  | &lt;string&gt;<br />max chars : 150 | Display name of the department in the help center \n| description  | &lt;string&gt;<br />max chars : 500 | A short description of the department \n| isVisibleInCustomerPortal  | &lt;boolean&gt;<br /> | Key that denotes if the department is visible in the help center or not \n| isAssignToTeamEnabled  | &lt;boolean&gt;<br /> | Key that denotes if the assign to team functionality is enabled or not \n| associatedAgentIds  | &lt;list&gt;<br /> | IDs of agents associated with the department \n"
					},
					"response": [
						{
							"name": "Update department",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isAssignToTeamEnabled\" : true,\n  \"nameInCustomerPortal\" : \"zPhone Support\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/departments/1892000000082085",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"departments",
										"1892000000082085"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"isAssignToTeamEnabled\" : true,\n  \"chatStatus\" : \"DISABLED\",\n  \"hasLogo\" : false,\n  \"isVisibleInCustomerPortal\" : true,\n  \"creatorId\" : \"1892000000042001\",\n  \"description\" : \"With the most advanced technology, the zPhone is the world’s largest selling smartphone.\",\n  \"associatedAgentIds\" : [ \"1892000000042001\", \"1892000000056007\" ],\n  \"isDefault\" : false,\n  \"isEnabled\" : true,\n  \"name\" : \"zPhone\",\n  \"createdTime\" : \"2019-07-26T13:11:02.000Z\",\n  \"id\" : \"1892000000082085\",\n  \"nameInCustomerPortal\" : \"zPhone Support\"\n}"
						}
					]
				},
				{
					"name": "Disable department",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/departments/:department_id/disable",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"departments",
								":department_id",
								"disable"
							],
							"variable": [
								{
									"key": "department_id"
								}
							]
						},
						"description": "This API disables a department in your help desk portal.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| agentNewDepartment (required) | &lt;Long&gt;<br /> | Agents move to new department ID \n| emailNewDepartment  | &lt;Long&gt;<br /> | Email move to new department ID \n"
					},
					"response": [
						{
							"name": "Disable department",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emailNewDepartment\" : \"1892000000082069\",\n  \"agentNewDepartment\" : \"1892000000082069\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/departments/1892000000082085/disable",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"departments",
										"1892000000082085",
										"disable"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Enable department",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/departments/:department_id/enable",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"departments",
								":department_id",
								"enable"
							],
							"variable": [
								{
									"key": "department_id"
								}
							]
						},
						"description": "This API enables a department in your help desk portal.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Enable department",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/departments/1892000000082085/enable",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"departments",
										"1892000000082085",
										"enable"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Associate agents to department",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/departments/:department_id/associateAgents",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"departments",
								":department_id",
								"associateAgents"
							],
							"variable": [
								{
									"key": "department_id"
								}
							]
						},
						"description": "This API associates agents to a department.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| agentIds (required) | &lt;list&gt;<br /> | Ids of Agents \n"
					},
					"response": [
						{
							"name": "Associate agents to department",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agentIds\" : [ \"1892000000042001\", \"1892000000056007\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/departments/1892000000082085/associateAgents",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"departments",
										"1892000000082085",
										"associateAgents"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Dissociate agents from department",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/departments/:department_id/dissociateAgents",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"departments",
								":department_id",
								"dissociateAgents"
							],
							"variable": [
								{
									"key": "department_id"
								}
							]
						},
						"description": "This API dissociates agents from a department.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| agentIds (required) | &lt;list&gt;<br /> | Ids of Agents \n"
					},
					"response": [
						{
							"name": "Dissociate agents from department",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agentIds\" : [ \"1892000000056007\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/departments/1892000000082085/dissociateAgents",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"departments",
										"1892000000082085",
										"dissociateAgents"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get department logo",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/departments/:department_id/logo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"departments",
								":department_id",
								"logo"
							],
							"query": [
								{
									"key": "fileSize",
									"value": "<string>\nmax chars : 100",
									"description": "Size of the image file to download. Values allowed are `THUMBNAIL` (image with reduced dimensions and size) and `ACTUAL` (image with actual dimensions and size). The default value is `ACTUAL`.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "department_id"
								}
							]
						},
						"description": "This API fetches the logo set for a department.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get department logo",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/departments/1892000000082069/logo",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"departments",
										"1892000000082069",
										"logo"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Upload department logo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/departments/:department_id/logo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"departments",
								":department_id",
								"logo"
							],
							"variable": [
								{
									"key": "department_id"
								}
							]
						},
						"description": "This API updates the logo set for a department.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n"
					},
					"response": [
						{
							"name": "Upload department logo",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/departments/1892000000006908/logo",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"departments",
										"1892000000006908",
										"logo"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete department logo",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/departments/:department_id/logo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"departments",
								":department_id",
								"logo"
							],
							"variable": [
								{
									"key": "department_id"
								}
							]
						},
						"description": "This API removes the logo set for a department.\n#### OAuth Scope\n- `Desk.settings.DELETE`\n- `Desk.basic.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete department logo",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/departments/1892000000006908/logo",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"departments",
										"1892000000006908",
										"logo"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Departments refer to the organizational divisions configured in your help desk, based on the business function performed by each division; for example, marketing, sales, finance, admin, and so on."
		},
		{
			"name": "Channels",
			"item": [
				{
					"name": "Get a Channel",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/channels/:channel_code?orgId={org_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"channels",
								":channel_code"
							],
							"query": [
								{
									"key": "orgId",
									"value": "{org_id}"
								}
							],
							"variable": [
								{
									"key": "channel_code"
								}
							]
						},
						"description": "This API gets fetches details of a given channel.\n#### OAuth Scope\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get a Channel",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/channels/sales_whatsapp_account?orgId=60856948",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"channels",
										"sales_whatsapp_account"
									],
									"query": [
										{
											"key": "orgId",
											"value": "60856948"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"photoURL\" : \"https://desk.zoho.com/api/v1/channels/sales_whatsapp_account/photo?orgId=60856948\",\n  \"code\" : \"SALES_WHATSAPP_ACCOUNT\",\n  \"appName\" : \"Sales Whatsapp Account\",\n  \"departmentId\" : \"76389000000006907\",\n  \"name\" : \"Sales Whatsapp Account\",\n  \"externalId\" : \"109000000002003\",\n  \"replyConfig\" : {\n    \"updateRecords\" : false,\n    \"acceptsAttachments\" : false,\n    \"contentTypes\" : [ \"text/plain\" ],\n    \"includeQuotedMessage\" : false\n  },\n  \"type\" : \"INSTANT_MESSAGE\",\n  \"acceptsReplies\" : true\n}"
						}
					]
				},
				{
					"name": "List configured channels",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/channels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"channels"
							]
						},
						"description": "This API fetches currently installed channels including System, Channel integration and Instant Messaging channels\n#### OAuth Scope\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List configured channels",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/channels",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"channels"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/channels/sales_whatsapp_account/photo?orgId=60856948\",\n    \"code\" : \"SALES_WHATSAPP_ACCOUNT\",\n    \"appName\" : \"Sales Whatsapp Account\",\n    \"departmentId\" : \"76389000000006907\",\n    \"name\" : \"Sales Whatsapp Account\",\n    \"externalId\" : \"109000000002003\",\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : {\n      \"updateRecords\" : false,\n      \"acceptsAttachments\" : false,\n      \"contentTypes\" : [ \"text/plain\" ],\n      \"includeQuotedMessage\" : false\n    },\n    \"type\" : \"INSTANT_MESSAGE\",\n    \"acceptsReplies\" : true\n  }, {\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/channels/youtubecat/photo?orgId=647164567\",\n    \"code\" : \"YOUTUBECAT\",\n    \"appName\" : \"Youtube Cat\",\n    \"departmentId\" : \"188422000009189044\",\n    \"name\" : \"Youtube Cat\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : {\n      \"updateRecords\" : false,\n      \"acceptsAttachments\" : false,\n      \"contentTypes\" : [ \"text/plain\" ],\n      \"includeQuotedMessage\" : false\n    },\n    \"type\" : \"INTEGRATION\",\n    \"acceptsReplies\" : true\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"EMAIL\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Email\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : {\n      \"updateRecords\" : false,\n      \"acceptsAttachments\" : true,\n      \"contentTypes\" : [ \"text/plain\", \"text/html\" ],\n      \"includeQuotedMessage\" : true\n    },\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : true\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"TWITTER\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Twitter\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : {\n      \"updateRecords\" : false,\n      \"acceptsAttachments\" : false,\n      \"contentTypes\" : [ \"text/plain\" ],\n      \"includeQuotedMessage\" : false\n    },\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : true\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"TWITTER_DM\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Twitter\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : {\n      \"updateRecords\" : false,\n      \"acceptsAttachments\" : false,\n      \"contentTypes\" : [ \"text/plain\" ],\n      \"includeQuotedMessage\" : false\n    },\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : true\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"FACEBOOK\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Facebook\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : {\n      \"updateRecords\" : false,\n      \"acceptsAttachments\" : false,\n      \"contentTypes\" : [ \"text/plain\" ],\n      \"includeQuotedMessage\" : false\n    },\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : true\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"FACEBOOK_DM\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Facebook\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : {\n      \"updateRecords\" : false,\n      \"acceptsAttachments\" : false,\n      \"contentTypes\" : [ \"text/plain\" ],\n      \"includeQuotedMessage\" : false\n    },\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : true\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"WEB\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Web\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : null,\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : false\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"ONLINE_CHAT\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Chat\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : null,\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : false\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"OFFLINE_CHAT\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Chat\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : null,\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : false\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"FORUMS\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Forums\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : {\n      \"updateRecords\" : false,\n      \"acceptsAttachments\" : false,\n      \"contentTypes\" : [ \"text/plain\", \"text/html\" ],\n      \"includeQuotedMessage\" : true\n    },\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : true\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"PHONE\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Phone\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : null,\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : false\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"ZTI\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Phone\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : null,\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : false\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"CUSTOMERPORTAL\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Web\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : null,\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : false\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"FEEDBACK\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"FeedBack\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : null,\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : false\n  }, {\n    \"photoURL\" : null,\n    \"code\" : \"FEEDBACK_WIDGET\",\n    \"appName\" : null,\n    \"departmentId\" : null,\n    \"name\" : \"Feedback Widget\",\n    \"externalId\" : null,\n    \"mappedIntegration\" : null,\n    \"replyConfig\" : null,\n    \"type\" : \"SYSTEM\",\n    \"acceptsReplies\" : false\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get Channel logo",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/channels/:channel_code/photo?orgId={org_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"channels",
								":channel_code",
								"photo"
							],
							"query": [
								{
									"key": "height",
									"value": "<integer>\n",
									"description": "Height Percentage of image to be returned",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "channel_code"
								}
							]
						},
						"description": "This API gets the logo for the given channel.\n#### OAuth Scope\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Channel logo",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/channels/sales_whatsapp_account/photo?orgId=60856948",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"channels",
										"sales_whatsapp_account",
										"photo"
									],
									"query": [
										{
											"key": "orgId",
											"value": "60856948"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Channel logo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/channels/:channel_code/photo?orgId={org_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"channels",
								":channel_code",
								"photo"
							],
							"query": [
								{
									"key": "orgId",
									"value": "{org_id}"
								}
							],
							"variable": [
								{
									"key": "channel_code"
								}
							]
						},
						"description": "This API updates the logo for the given channel. Logo of SYSTEM channels cannot be updated.\n#### OAuth Scope\n- `Desk.basic.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n"
					},
					"response": [
						{
							"name": "Update Channel logo",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/channels/sales_whatsapp_account/photo?orgId=60856948",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"channels",
										"sales_whatsapp_account",
										"photo"
									],
									"query": [
										{
											"key": "orgId",
											"value": "60856948"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Channels in Zoho Desk represents the source of the tickets & threads. A channel represents the characteristic of a reply source such as reply configuration."
		},
		{
			"name": "Tickets",
			"item": [
				{
					"name": "Get a ticket",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Key that fetches secondary information related to the ticket. Values allowed are: `contacts`, `products`, `assignee`, `departments`, `contract`, `isRead`, `team`, and `skills` . Multiple values can be passed, with commas for separation.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API fetches a single ticket from your helpdesk.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get a ticket",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000143237?include=contacts,products,assignee,departments,team",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000143237"
									],
									"query": [
										{
											"key": "include",
											"value": "contacts,products,assignee,departments,team"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2016-06-21T13:16:14.000Z\",\n  \"subCategory\" : \"Sub General\",\n  \"statusType\" : \"Open\",\n  \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n  \"dueDate\" : \"2016-06-21T16:16:16.000Z\",\n  \"departmentId\" : \"1892000000006907\",\n  \"channel\" : \"FORUMS\",\n  \"onholdTime\" : null,\n  \"language\" : \"English\",\n  \"source\" : {\n    \"appName\" : null,\n    \"extId\" : null,\n    \"type\" : \"SYSTEM\",\n    \"permalink\" : null,\n    \"appPhotoURL\" : null\n  },\n  \"resolution\" : null,\n  \"sharedDepartments\" : [ {\n    \"name\" : \"Sample Department Name\",\n    \"id\" : \"1892000000006909\",\n    \"type\" : \"READ_WRITE\"\n  }, {\n    \"name\" : \"Sample Department Name\",\n    \"id\" : \"1892000000006911\",\n    \"type\" : \"READ_ONLY\"\n  } ],\n  \"closedTime\" : null,\n  \"sharedCount\" : \"3\",\n  \"approvalCount\" : \"1\",\n  \"isOverDue\" : false,\n  \"isTrashed\" : false,\n  \"contact\" : {\n    \"lastName\" : \"Carol\",\n    \"firstName\" : \"Lucas\",\n    \"phone\" : \"1 888 900 9646\",\n    \"mobile\" : \"8838486174\",\n    \"id\" : \"1892000000042032\",\n    \"isSpam\" : false,\n    \"type\" : null,\n    \"email\" : \"carol@zylker.com\",\n    \"account\" : {\n      \"website\" : \"www.desk.com\",\n      \"accountName\" : \"desk Account\",\n      \"id\" : \"1892000000975382\"\n    }\n  },\n  \"createdTime\" : \"2013-11-04T11:21:07.000Z\",\n  \"id\" : \"1892000000042034\",\n  \"customerResponseTime\" : \"2013-11-04T11:21:07.912Z\",\n  \"productId\" : null,\n  \"contactId\" : \"1892000000042032\",\n  \"threadCount\" : \"121\",\n  \"secondaryContacts\" : [ \"1892000000042038\", \"1892000000042042\", \"1892000000042056\" ],\n  \"priority\" : \"High\",\n  \"classification\" : null,\n  \"commentCount\" : \"1\",\n  \"taskCount\" : \"1\",\n  \"phone\" : \"1 888 900 9646\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n  \"isSpam\" : false,\n  \"assignee\" : {\n    \"firstName\" : \"dasca\",\n    \"lastName\" : \"vins\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo?orgId=298902\",\n    \"id\" : \"1892000000056007\",\n    \"email\" : \"jack@zylker.com\"\n  },\n  \"status\" : \"Open\",\n  \"entitySkills\" : [ \"18921000000379001\", \"18921000000364001\", \"18921000000379055\", \"18921000000379031\" ],\n  \"ticketNumber\" : \"101\",\n  \"isRead\" : false,\n  \"description\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n  \"timeEntryCount\" : \"3\",\n  \"channelRelatedInfo\" : {\n    \"topicId\" : \"1892000000056253\",\n    \"isTopicDeleted\" : false,\n    \"forumStatus\" : \"ANALYSING\",\n    \"sourceLink\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Community/singlepost/problem-topic-forum-ticket-18-5-2018\",\n    \"topicType\" : \"PROBLEM\"\n  },\n  \"isDeleted\" : \"false\",\n  \"department\" : {\n    \"name\" : \"dasdasdasd\",\n    \"id\" : \"1892000000006907\"\n  },\n  \"followerCount\" : \"5\",\n  \"email\" : \"carol@zylker.com\",\n  \"channelCode\" : null,\n  \"product\" : null,\n  \"cf\" : {\n    \"cf_permanentaddress\" : null,\n    \"cf_dateofpurchase\" : null,\n    \"cf_phone\" : null,\n    \"cf_numberofitems\" : null,\n    \"cf_url\" : null,\n    \"cf_secondaryemail\" : null,\n    \"cf_severitypercentage\" : \"0.0\",\n    \"cf_modelname\" : \"F3 2017\"\n  },\n  \"isFollowing\" : \"true\",\n  \"team\" : {\n    \"name\" : \"kjsdfjks\",\n    \"id\" : \"8920000000069071\"\n  },\n  \"assigneeId\" : \"1892000000056007\",\n  \"teamId\" : \"8920000000069071\",\n  \"contractId\" : null,\n  \"tagCount\" : \"2\",\n  \"attachmentCount\" : \"1\",\n  \"isEscalated\" : false,\n  \"category\" : \"general\"\n}"
						}
					]
				},
				{
					"name": "List all tickets",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the tickets must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of tickets to fetch",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the tickets must be fetched (Please note that this key will be deprecated soon and replaced by the <b>departmentIds</b> key.)",
									"disabled": true
								},
								{
									"key": "departmentIds",
									"value": "<long>\n",
									"description": "Departments from which the tickets need to be queried",
									"disabled": true
								},
								{
									"key": "viewId",
									"value": "<long>\n",
									"description": "ID of the view to apply while fetching the resources",
									"disabled": true
								},
								{
									"key": "assignee",
									"value": "<string>\nmax chars : 100",
									"description": "assignee - Key that filters tickets by assignee. Values allowed are `Unassigned` or a valid `assigneeId`. Multiple `assigneeIds` can be passed as comma-separated values.",
									"disabled": true
								},
								{
									"key": "channel",
									"value": "<string>\nmax chars : 100",
									"description": "Filter by channel through which the tickets originated. You can include multiple values by separating them with a comma",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<string>\nmax chars : 100",
									"description": "Filter by resolution status of the ticket. You can include multiple values by separating them with a comma",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort by a specific attribute: `responseDueDate` or `customerResponseTime` or `createdTime` or `ticketNumber`. The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								},
								{
									"key": "receivedInDays",
									"value": "<integer>\n",
									"description": "Fetches recent tickets, based on `customer response time`. Values allowed are `15`, `30` , `90`.",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the tickets. Values allowed are:&nbsp;`contacts`,&nbsp;`products`, `departments`,&nbsp;`team`,&nbsp;`isRead` and `assignee`. You can pass multiple values by separating them with commas in the API request.",
									"disabled": true
								},
								{
									"key": "fields",
									"value": "<string>\nmax chars : 100",
									"description": "Key that returns the values of mentioned fields (both pre-defined and custom) in your portal. All field types except multi-text are supported. Standard, non-editable fields are supported too. These fields include: `statusType`, `webUrl`, `layoutId`. Maximum of 30 fields is supported as comma separated values.",
									"disabled": true
								},
								{
									"key": "priority",
									"value": "<string>\nmax chars : 100",
									"description": "Key that filters tickets by priority. Multiple priority levels can be passed as comma-separated values.",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of tickets, based on the limit specified.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "List all tickets",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets?include=contacts,assignee,departments,team,isRead",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets"
									],
									"query": [
										{
											"key": "include",
											"value": "contacts,assignee,departments,team,isRead"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"101\",\n    \"subCategory\" : null,\n    \"subject\" : \"Real Time analysis Requirement\",\n    \"dueDate\" : \"2016-06-21T16:16:16.000Z\",\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Email\",\n    \"isRead\" : false,\n    \"onholdTime\" : null,\n    \"language\" : \"English\",\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"closedTime\" : null,\n    \"sharedCount\" : \"0\",\n    \"responseDueDate\" : \"2017-09-05T11:21:07.000Z\",\n    \"contact\" : {\n      \"firstName\" : \"Lucas\",\n      \"lastName\" : \"Carol\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : \"9876543210\",\n      \"id\" : \"1892000000042032\",\n      \"type\" : null,\n      \"email\" : \"carol@zylker.com\",\n      \"account\" : {\n        \"website\" : null,\n        \"accountName\" : \"desk Account\",\n        \"id\" : \"1892000000975382\"\n      }\n    },\n    \"createdTime\" : \"2013-11-04T11:21:07.000Z\",\n    \"id\" : \"1892000000042034\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"carol@zylker.com\",\n    \"channelCode\" : null,\n    \"customerResponseTime\" : \"2013-11-04T11:21:07.912Z\",\n    \"productId\" : null,\n    \"contactId\" : \"1892000000042032\",\n    \"threadCount\" : \"121\",\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\"\n    },\n    \"priority\" : \"High\",\n    \"assigneeId\" : \"1892000000056007\",\n    \"commentCount\" : \"1\",\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"teamId\" : \"8920000000069071\",\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo?orgId=298902\",\n      \"id\" : \"1892000000056007\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"isSpam\" : false,\n    \"category\" : null,\n    \"status\" : \"Open\"\n  }, {\n    \"ticketNumber\" : \"176\",\n    \"subCategory\" : null,\n    \"statusType\" : \"Closed\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : \"2016-06-01T14:04:07.000Z\",\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Forums\",\n    \"isRead\" : false,\n    \"onholdTime\" : null,\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"closedTime\" : null,\n    \"sharedCount\" : \"0\",\n    \"responseDueDate\" : null,\n    \"contact\" : {\n      \"firstName\" : \"Jonathan\",\n      \"lastName\" : \"Casie\",\n      \"phone\" : null,\n      \"mobile\" : \"9876543211\",\n      \"id\" : \"1892000000045028\",\n      \"type\" : null,\n      \"email\" : \"casie@zylker.com\",\n      \"account\" : {\n        \"website\" : \"www.zylker.com\",\n        \"accountName\" : \"Zylker sAccount\",\n        \"id\" : \"1892000000980421\"\n      }\n    },\n    \"createdTime\" : \"2014-03-06T09:49:50.000Z\",\n    \"id\" : \"1892000000094004\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"casie@zylker.com\",\n    \"channelCode\" : null,\n    \"customerResponseTime\" : \"2014-03-22T05:05:08.471Z\",\n    \"productId\" : null,\n    \"contactId\" : \"1892000000045028\",\n    \"threadCount\" : \"72\",\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\"\n    },\n    \"priority\" : \"High\",\n    \"assigneeId\" : \"1892000000056007\",\n    \"commentCount\" : \"0\",\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebddaeb9d93ba74750b02214oc203b38\",\n    \"teamId\" : \"8920000000069071\",\n    \"isSpam\" : false,\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo?orgId=298902\",\n      \"id\" : \"1892000000056007\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"category\" : null,\n    \"status\" : \"Closed\"\n  }, {\n    \"ticketNumber\" : \"191\",\n    \"subCategory\" : null,\n    \"statusType\" : \"On Hold\",\n    \"subject\" : \"Real Time analysis Requirement\",\n    \"dueDate\" : null,\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Chat\",\n    \"isRead\" : true,\n    \"onholdTime\" : \"2014-03-28T12:09:10.736Z\",\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"closedTime\" : null,\n    \"sharedCount\" : \"0\",\n    \"responseDueDate\" : \"2017-10-05T11:21:07.000Z\",\n    \"contact\" : {\n      \"firstName\" : \"Jonathan\",\n      \"lastName\" : \"Casie\",\n      \"phone\" : null,\n      \"mobile\" : null,\n      \"id\" : \"1892000000045028\",\n      \"type\" : null,\n      \"email\" : \"casie@zylker.com\",\n      \"account\" : {\n        \"website\" : \"www.zylker.com\",\n        \"accountName\" : \"Zylker Account\",\n        \"id\" : \"1892000000980421\"\n      }\n    },\n    \"createdTime\" : \"2014-03-21T09:16:03.000Z\",\n    \"id\" : \"1892000000137057\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"casie@zylker.com\",\n    \"channelCode\" : null,\n    \"customerResponseTime\" : \"2014-03-21T10:54:21.802Z\",\n    \"productId\" : null,\n    \"contactId\" : \"1892000000045028\",\n    \"threadCount\" : \"19\",\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\"\n    },\n    \"priority\" : \"High\",\n    \"assigneeId\" : \"1892000000042001\",\n    \"commentCount\" : \"0\",\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d11bcdfb061247d9edbacb9d93ba74750b0284bc703b38\",\n    \"teamId\" : \"8920000000069071\",\n    \"isSpam\" : false,\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000042001/photo?orgId=298902\",\n      \"id\" : \"1892000000042001\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"category\" : null,\n    \"status\" : \"Custom On Hold\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get Archived Ticket List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/archivedTickets?departmentId=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								"archivedTickets"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the tickets must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of tickets to fetch",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the tickets must be fetched"
								},
								{
									"key": "viewType",
									"value": "<int>\n",
									"description": "View Type - Supported Values 1 for Compact view , 2 for Classic view ,4 for Table View. If view type is not specified, Classic View will be the default view",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Key that returns additional information related to a ticket. Values allowed are: `contacts`, `products`,`departments`,`team`,`isRead` and `assignee`. All six values can be passed by separating them with a comma in the API request.",
									"disabled": true
								}
							]
						},
						"description": "This API gets the archived tickets list in given department.\n#### OAuth Scope\n- `Desk.search.READ`\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Archived Ticket List",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/archivedTickets?from=1&limit=50&departmentId=5853000000006907&viewType=1",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"archivedTickets"
									],
									"query": [
										{
											"key": "from",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "departmentId",
											"value": "5853000000006907"
										},
										{
											"key": "viewType",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"836\",\n    \"sentiment\" : null,\n    \"subCategory\" : null,\n    \"statusType\" : \"Closed\",\n    \"subject\" : \"Subject updated by bulk update\",\n    \"isArchived\" : true,\n    \"dueDate\" : \"2017-02-16T05:04:01.000Z\",\n    \"departmentId\" : \"5853000000006907\",\n    \"channel\" : \"Email\",\n    \"onholdTime\" : null,\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"permalink\" : null,\n      \"type\" : \"SYSTEM\",\n      \"appPhotoURL\" : null\n    },\n    \"closedTime\" : \"2017-02-20T10:21:02.000Z\",\n    \"responseDueDate\" : null,\n    \"createdTime\" : \"2017-02-15T08:23:11.000Z\",\n    \"id\" : \"5853000001102037\",\n    \"email\" : \"carol@zylker.com\",\n    \"channelCode\" : null,\n    \"customerResponseTime\" : \"2017-02-15T08:23:11.000Z\",\n    \"productId\" : null,\n    \"contactId\" : \"5853000000273060\",\n    \"threadCount\" : \"6\",\n    \"lastThread\" : {\n      \"channel\" : \"EMAIL\",\n      \"isDraft\" : true,\n      \"isForward\" : false,\n      \"direction\" : \"out\"\n    },\n    \"priority\" : null,\n    \"layoutId\" : \"5853000001987014\",\n    \"assigneeId\" : \"5853000000281047\",\n    \"commentCount\" : \"1\",\n    \"phone\" : \"123421412125\",\n    \"webUrl\" : \"https://desk.zoho.com/support/arunasales/ShowHomePage.do#Cases/dv/5853000001102037\",\n    \"teamId\" : null,\n    \"isSpam\" : false,\n    \"category\" : null,\n    \"status\" : \"Closed\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List all associated tickets",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/associatedTickets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"associatedTickets"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the tickets must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of tickets to fetch",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the tickets must be fetched",
									"disabled": true
								},
								{
									"key": "assignee",
									"value": "<string>\nmax chars : 100",
									"description": "assignee - Key that filters tickets by assignee. Values allowed are&nbsp;`Unassigned` or a valid&nbsp;`assigneeId`. Multiple&nbsp;`assigneeIds` can be passed as comma-separated values.",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<string>\nmax chars : 100",
									"description": "Filter by resolution status of the ticket. You can include multiple values by separating them with a comma",
									"disabled": true
								},
								{
									"key": "follower",
									"value": "<string>\nmax chars : 100",
									"description": "Filter by followers of the ticket. Values allowed : a valid&nbsp;`agentId`.",
									"disabled": true
								},
								{
									"key": "commenter",
									"value": "<string>\nmax chars : 100",
									"description": "Filter by commenters of the ticket. Values allowed : a valid&nbsp;`agentId`. As of now, either `follower` or `commenter` is supported. If both params are given, `commenter` will be ignored.",
									"disabled": true
								},
								{
									"key": "sharedDepartmentId",
									"value": "<long>\n",
									"description": "Fetches only the tickets shared from&nbsp;`departmentId` to `sharedDepartmentId`. If `departmentId` is not provided, fetches all the tickets shared to&nbsp;`sharedDepartmentId`. `sharedDepartmentId` is given precedence only when `isShared` is `false`/not given.",
									"disabled": true
								},
								{
									"key": "isShared",
									"value": "<boolean>\n",
									"description": "Filter all shared tickets actually belonging to `departmentId` if `isShared` is true. If `departmentId` is not provided and if `isShared` is true, shared tickets from all permitted departments will be listed. If `departmentId` is provided and `isShared` is `true`, tickets belonging to `departmentId`, but shared to any other department will be fetched. If `departmentId` and `sharedDepartmentId` is provided and `isShared` is `true`, then tickets belonging to `departmentId`, but shared to `sharedDepartmentId` will be fetched(Here permission checks are done on `departmentId`). If `departmentId` and `sharedDepartmentId` is provided and `isShared` is `false`/not given, then tickets shared to `sharedDepartmentId`, but belonging to `departmentId` will be fetched(Here permission checks are done on `sharedDepartmentId`).",
									"disabled": true
								},
								{
									"key": "receivedInDays",
									"value": "<integer>\n",
									"description": "Fetches recent tickets, based on `customer response time`. Values allowed are `15`, `30` , `90`.",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Key that returns additional information related to a ticket. Values allowed are:&nbsp;contacts,&nbsp;products, and&nbsp;assignee. All three values can be passed by separating them with a comma in the API request.",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of tickets that are associated to you from your help desk, based on the limit specified.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "List all associated tickets",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/associatedTickets?include=contacts",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"associatedTickets"
									],
									"query": [
										{
											"key": "include",
											"value": "contacts"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"101\",\n    \"subCategory\" : null,\n    \"subject\" : \"Real Time analysis Requirement\",\n    \"dueDate\" : \"2016-06-21T16:16:16.000Z\",\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Email\",\n    \"onholdTime\" : null,\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"closedTime\" : null,\n    \"sharedCount\" : \"0\",\n    \"responseDueDate\" : \"2017-09-05T11:21:07.000Z\",\n    \"contact\" : {\n      \"firstName\" : \"Lucas\",\n      \"lastName\" : \"Carol\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : \"9876543212\",\n      \"id\" : \"1892000000042032\",\n      \"type\" : null,\n      \"email\" : \"carol@zylker.com\",\n      \"account\" : {\n        \"website\" : null,\n        \"accountName\" : \"desk Account\",\n        \"id\" : \"1892000000975382\"\n      }\n    },\n    \"createdTime\" : \"2013-11-04T11:21:07.000Z\",\n    \"id\" : \"1892000000042034\",\n    \"email\" : \"carol@zylker.com\",\n    \"channelCode\" : null,\n    \"customerResponseTime\" : \"2013-11-04T11:21:07.912Z\",\n    \"productId\" : null,\n    \"contactId\" : \"1892000000042032\",\n    \"threadCount\" : \"121\",\n    \"priority\" : \"High\",\n    \"assigneeId\" : \"1892000000056007\",\n    \"commentCount\" : \"1\",\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"isSpam\" : false,\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo?orgId=298902\",\n      \"id\" : \"1892000000056007\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"category\" : null,\n    \"status\" : \"Open\"\n  }, {\n    \"ticketNumber\" : \"176\",\n    \"subCategory\" : null,\n    \"statusType\" : \"Closed\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : \"2016-06-01T14:04:07.000Z\",\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Forums\",\n    \"onholdTime\" : null,\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"closedTime\" : null,\n    \"sharedCount\" : \"0\",\n    \"responseDueDate\" : null,\n    \"contact\" : {\n      \"firstName\" : \"Jonathan\",\n      \"lastName\" : \"Casie\",\n      \"phone\" : null,\n      \"mobile\" : null,\n      \"id\" : \"1892000000045028\",\n      \"type\" : null,\n      \"email\" : \"casie@zylker.com\",\n      \"account\" : {\n        \"website\" : \"www.zylker.com\",\n        \"accountName\" : \"Zylker sAccount\",\n        \"id\" : \"1892000000980421\"\n      }\n    },\n    \"createdTime\" : \"2014-03-06T09:49:50.000Z\",\n    \"id\" : \"1892000000094004\",\n    \"email\" : \"casie@zylker.com\",\n    \"channelCode\" : null,\n    \"customerResponseTime\" : \"2014-03-22T05:05:08.471Z\",\n    \"productId\" : null,\n    \"contactId\" : \"1892000000045028\",\n    \"threadCount\" : \"72\",\n    \"priority\" : \"High\",\n    \"assigneeId\" : \"1892000000056007\",\n    \"commentCount\" : \"0\",\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebddaeb9d93ba74750b02214oc203b38\",\n    \"isSpam\" : false,\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo?orgId=298902\",\n      \"id\" : \"1892000000056007\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"category\" : null,\n    \"status\" : \"Closed\"\n  }, {\n    \"ticketNumber\" : \"191\",\n    \"subCategory\" : null,\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Real Time analysis Requirement\",\n    \"dueDate\" : null,\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Chat\",\n    \"onholdTime\" : \"2014-03-28T12:09:10.736Z\",\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"closedTime\" : null,\n    \"sharedCount\" : \"0\",\n    \"responseDueDate\" : \"2017-10-05T11:21:07.000Z\",\n    \"contact\" : {\n      \"firstName\" : \"Jonathan\",\n      \"lastName\" : \"Casie\",\n      \"phone\" : null,\n      \"mobile\" : \"9876543212\",\n      \"id\" : \"1892000000045028\",\n      \"type\" : null,\n      \"email\" : \"casie@zylker.com\",\n      \"account\" : {\n        \"website\" : \"www.zylker.com\",\n        \"accountName\" : \"Zylker Account\",\n        \"id\" : \"1892000000980421\"\n      }\n    },\n    \"createdTime\" : \"2014-03-21T09:16:03.000Z\",\n    \"id\" : \"1892000000137057\",\n    \"email\" : \"casie@zylker.com\",\n    \"channelCode\" : null,\n    \"customerResponseTime\" : \"2014-03-21T10:54:21.802Z\",\n    \"productId\" : null,\n    \"contactId\" : \"1892000000045028\",\n    \"threadCount\" : \"19\",\n    \"priority\" : \"High\",\n    \"assigneeId\" : \"1892000000042001\",\n    \"commentCount\" : \"0\",\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d11bcdfb061247d9edbacb9d93ba74750b0284bc703b38\",\n    \"isSpam\" : false,\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000042001/photo?orgId=298902\",\n      \"id\" : \"1892000000042001\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"category\" : null,\n    \"status\" : \"Open\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Create a ticket",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets"
							]
						},
						"description": "This API creates a ticket in your helpdesk.\n#### OAuth Scope\n- `Desk.tickets.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| subject (required) | &lt;string&gt;<br />max chars : 255 | Subject of the ticket \n| departmentId (required) | &lt;long&gt;<br /> | ID of the department to which the ticket belongs \n| contactId  | &lt;referred object&gt;<br /> | ID of the contact who raised the ticket. If a value is not available for this key, make sure to include the <b>contact</b> JSON object. If neither attribute is available, an error message regarding the unavailability of the contactId message is returned. \n| contact  | &lt;Contact&gt;<br /> | Details of the contact who raised the ticket. This object is used for automatically creating a contact when a ticket is received. If the email ID of the contact already exists in your portal, the corresponding contactId is used for creating the ticket. Else, a contact is first created and the contactId of the new contact is mapped to the ticket. The user’s profile and field permissions are considered in the contact creation process. Either the <b>lastName</b> or the <b>email</b> attribute must be present in the object. \n| productId  | &lt;referred object&gt;<br /> | ID of the product to which the ticket is mapped \n| uploads  | &lt;list&gt;<br /> | File attachments in the ticket. For more information, refer to the Uploads section \n| email  | &lt;string&gt;<br />max chars : 150 | Email ID in the ticket \n| phone  | &lt;string&gt;<br />max chars : 120 | Phone number in the ticket \n| description  | &lt;string&gt;<br />max chars : 65535 | Description in the ticket \n| status  | &lt;string&gt;<br />max chars : 120 | Status of the ticket. Includes the custom statuses configured in your help desk portal. \n| assigneeId  | &lt;long&gt;<br /> | ID of agent to whom the ticket is assigned \n| category  | &lt;string&gt;<br />max chars : 300 | Category of the ticket \n| subCategory  | &lt;string&gt;<br />max chars : 300 | Subcategory of the ticket \n| resolution  | &lt;string&gt;<br />max chars : 65535 | Resolution notes recorded in the ticket \n| dueDate  | &lt;timestamp&gt;<br /> | Due date for resolving the ticket \n| priority  | &lt;string&gt;<br />max chars : 120 | Priority of the ticket \n| language  | &lt;string&gt;<br />max chars : 255 | Language preference to set for the ticket \n| responseDueDate  | &lt;string&gt;<br />max chars : 100 | Date on or before which a response must be sent for the ticket \n| channel  | &lt;string&gt;<br />max chars : 120 | Channel through which the ticket originated. \n| classification  | &lt;string&gt;<br />max chars : 100 | Type of ticket. Values supported are `Problem`, `Request`, `Question`, and `Others`. \n| customFields  | &lt;JSONObject&gt;<br /> | Custom fields in the ticket \n| cf  | &lt;JSONObject&gt;<br /> | Custom fields in the ticket \n| webUrl  | &lt;string&gt;<br />max chars : -1 | URL to access the resource \n| teamId  | &lt;long&gt;<br /> | ID of the team assigned to resolve the ticket \n| secondaryContacts  | &lt;list&gt;<br /> | Secondary contacts, such as CC'ed users, associated with the ticket \n| entitySkills  | &lt;list&gt;<br /> | Comma-separated array of skill IDs to be mapped with a ticket. The order of IDs (with the first ID given the highest priority) will determine how assignments are calculated. \n"
					},
					"response": [
						{
							"name": "Create a ticket",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entitySkills\" : [ \"18921000000379001\", \"18921000000364001\", \"18921000000379055\", \"18921000000379031\" ],\n  \"subCategory\" : \"Sub General\",\n  \"cf\" : {\n    \"cf_permanentaddress\" : null,\n    \"cf_dateofpurchase\" : null,\n    \"cf_phone\" : null,\n    \"cf_numberofitems\" : null,\n    \"cf_url\" : null,\n    \"cf_secondaryemail\" : null,\n    \"cf_severitypercentage\" : \"0.0\",\n    \"cf_modelname\" : \"F3 2017\"\n  },\n  \"productId\" : \"\",\n  \"contactId\" : \"1892000000042032\",\n  \"subject\" : \"Real Time analysis Requirement\",\n  \"dueDate\" : \"2016-06-21T16:16:16.000Z\",\n  \"departmentId\" : \"1892000000006907\",\n  \"channel\" : \"Email\",\n  \"description\" : \"Hai This is Description\",\n  \"language\" : \"English\",\n  \"priority\" : \"High\",\n  \"classification\" : \"\",\n  \"assigneeId\" : \"1892000000056007\",\n  \"phone\" : \"1 888 900 9646\",\n  \"category\" : \"general\",\n  \"email\" : \"carol@zylker.com\",\n  \"status\" : \"Open\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"entitySkills\" : [ \"18921000000379001\", \"18921000000364001\", \"18921000000379055\", \"18921000000379031\" ],\n  \"modifiedTime\" : \"2016-06-21T12:50:04.000Z\",\n  \"ticketNumber\" : \"773\",\n  \"subCategory\" : \"Sub General\",\n  \"statusType\" : \"Open\",\n  \"subject\" : \"Real Time analysis Requirement\",\n  \"dueDate\" : \"2016-06-21T18:50:04.573Z\",\n  \"departmentId\" : \"1892000000006907\",\n  \"channel\" : \"Email\",\n  \"onholdTime\" : null,\n  \"description\" : \"Hai This is description\",\n  \"language\" : \"English\",\n  \"source\" : {\n    \"appName\" : null,\n    \"extId\" : null,\n    \"type\" : \"SYSTEM\",\n    \"permalink\" : null,\n    \"appPhotoURL\" : null\n  },\n  \"resolution\" : null,\n  \"sharedDepartments\" : [ ],\n  \"closedTime\" : null,\n  \"sharedCount\" : \"0\",\n  \"approvalCount\" : \"0\",\n  \"timeEntryCount\" : \"0\",\n  \"isOverDue\" : false,\n  \"channelRelatedInfo\" : null,\n  \"isDeleted\" : \"false\",\n  \"isTrashed\" : false,\n  \"createdTime\" : \"2016-06-21T12:50:04.000Z\",\n  \"id\" : \"1892000001054003\",\n  \"email\" : \"carol@zylker.com\",\n  \"channelCode\" : null,\n  \"customerResponseTime\" : \"2013-11-04T11:21:07.912Z\",\n  \"cf\" : {\n    \"cf_permanentaddress\" : null,\n    \"cf_dateofpurchase\" : null,\n    \"cf_phone\" : null,\n    \"cf_numberofitems\" : null,\n    \"cf_url\" : null,\n    \"cf_secondaryemail\" : null,\n    \"cf_severitypercentage\" : \"0.0\",\n    \"cf_modelname\" : \"F3 2017\"\n  },\n  \"productId\" : null,\n  \"contactId\" : \"1892000000042032\",\n  \"threadCount\" : \"1\",\n  \"priority\" : \"High\",\n  \"classification\" : null,\n  \"assigneeId\" : \"1892000000056007\",\n  \"commentCount\" : \"0\",\n  \"taskCount\" : \"0\",\n  \"phone\" : \"1 888 900 9646\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n  \"attachmentCount\" : \"0\",\n  \"isEscalated\" : false,\n  \"isSpam\" : false,\n  \"category\" : \"general\",\n  \"status\" : \"Open\"\n}"
						}
					]
				},
				{
					"name": "Update a ticket",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id"
							],
							"query": [
								{
									"key": "disableClosureNotification",
									"value": "<boolean>\n",
									"description": "Key that enables or disables sending notifications to the corresponding contact when a ticket is closed",
									"disabled": true
								},
								{
									"key": "subject",
									"value": "<string>\nmax chars : 255",
									"description": "Subject of the ticket",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department to which the ticket belongs",
									"disabled": true
								},
								{
									"key": "contactId",
									"value": "<referred object>\n",
									"description": "ID of the contact who raised the ticket. If a value is not available for this key, make sure to include the <b>contact</b> JSON object. If neither attribute is available, an error message regarding the unavailability of the contactId message is returned.",
									"disabled": true
								},
								{
									"key": "contact",
									"value": "<Contact>\n",
									"description": "Details of the contact who raised the ticket. This object is used for automatically creating a contact when a ticket is received. If the email ID of the contact already exists in your portal, the corresponding contactId is used for creating the ticket. Else, a contact is first created and the contactId of the new contact is mapped to the ticket. The user’s profile and field permissions are considered in the contact creation process. Either the <b>lastName</b> or the <b>email</b> attribute must be present in the object.",
									"disabled": true
								},
								{
									"key": "productId",
									"value": "<referred object>\n",
									"description": "ID of the product to which the ticket is mapped",
									"disabled": true
								},
								{
									"key": "uploads",
									"value": "<list>\n",
									"description": "File attachments in the ticket. For more information, refer to the Uploads section",
									"disabled": true
								},
								{
									"key": "email",
									"value": "<string>\nmax chars : 150",
									"description": "Email ID in the ticket",
									"disabled": true
								},
								{
									"key": "phone",
									"value": "<string>\nmax chars : 120",
									"description": "Phone number in the ticket",
									"disabled": true
								},
								{
									"key": "description",
									"value": "<string>\nmax chars : 65535",
									"description": "Description in the ticket",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<string>\nmax chars : 120",
									"description": "Status of the ticket. Includes the custom statuses configured in your help desk portal.",
									"disabled": true
								},
								{
									"key": "assigneeId",
									"value": "<long>\n",
									"description": "ID of agent to whom the ticket is assigned",
									"disabled": true
								},
								{
									"key": "category",
									"value": "<string>\nmax chars : 300",
									"description": "Category of the ticket",
									"disabled": true
								},
								{
									"key": "subCategory",
									"value": "<string>\nmax chars : 300",
									"description": "Subcategory of the ticket",
									"disabled": true
								},
								{
									"key": "resolution",
									"value": "<string>\nmax chars : 65535",
									"description": "Resolution notes recorded in the ticket",
									"disabled": true
								},
								{
									"key": "dueDate",
									"value": "<timestamp>\n",
									"description": "Due date for resolving the ticket",
									"disabled": true
								},
								{
									"key": "priority",
									"value": "<string>\nmax chars : 120",
									"description": "Priority of the ticket",
									"disabled": true
								},
								{
									"key": "language",
									"value": "<string>\nmax chars : 255",
									"description": "Language preference to set for the ticket",
									"disabled": true
								},
								{
									"key": "responseDueDate",
									"value": "<string>\nmax chars : 100",
									"description": "Date on or before which a response must be sent for the ticket",
									"disabled": true
								},
								{
									"key": "channel",
									"value": "<string>\nmax chars : 120",
									"description": "Channel through which the ticket originated.",
									"disabled": true
								},
								{
									"key": "classification",
									"value": "<string>\nmax chars : 100",
									"description": "Type of ticket. Values supported are `Problem`, `Request`, `Question`, and `Others`.",
									"disabled": true
								},
								{
									"key": "customFields",
									"value": "<JSONObject>\n",
									"description": "Custom fields in the ticket",
									"disabled": true
								},
								{
									"key": "cf",
									"value": "<JSONObject>\n",
									"description": "Custom fields in the ticket",
									"disabled": true
								},
								{
									"key": "webUrl",
									"value": "<string>\nmax chars : -1",
									"description": "URL to access the resource",
									"disabled": true
								},
								{
									"key": "teamId",
									"value": "<long>\n",
									"description": "ID of the team assigned to resolve the ticket",
									"disabled": true
								},
								{
									"key": "secondaryContacts",
									"value": "<list>\n",
									"description": "Secondary contacts, such as CC'ed users, associated with the ticket",
									"disabled": true
								},
								{
									"key": "entitySkills",
									"value": "<list>\n",
									"description": "Comma-separated array of skill IDs to be mapped with a ticket. The order of IDs (with the first ID given the highest priority) will determine how assignments are calculated.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API updates an existing ticket.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Update a ticket",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entitySkills\" : [ \"18921000000379001\", \"18921000000364001\", \"18921000000379055\", \"18921000000379031\" ],\n  \"subCategory\" : \"Sub General\",\n  \"cf\" : {\n    \"cf_permanentaddress\" : null,\n    \"cf_dateofpurchase\" : null,\n    \"cf_phone\" : null,\n    \"cf_numberofitems\" : null,\n    \"cf_url\" : null,\n    \"cf_secondaryemail\" : null,\n    \"cf_severitypercentage\" : \"0.0\",\n    \"cf_modelname\" : \"F3 2017\"\n  },\n  \"productId\" : \"\",\n  \"contactId\" : \"1892000000042032\",\n  \"subject\" : \"Real Time analysis Requirement\",\n  \"dueDate\" : \"2016-06-21T16:16:16.000Z\",\n  \"channel\" : \"FORUMS\",\n  \"description\" : \"Sample Ticket\",\n  \"language\" : \"English\",\n  \"priority\" : \"Low\",\n  \"classification\" : \"\",\n  \"assigneeId\" : \"1892000000056007\",\n  \"phone\" : \"1 888 900 9646\",\n  \"category\" : \"general\",\n  \"email\" : \"carol@zylker.com\",\n  \"status\" : \"Open\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/3000000024409",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"3000000024409"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"entitySkills\" : [ \"18921000000379001\", \"18921000000364001\", \"18921000000379055\", \"18921000000379031\" ],\n  \"modifiedTime\" : \"2016-06-21T12:58:09.122Z\",\n  \"ticketNumber\" : \"773\",\n  \"subCategory\" : \"Sub General\",\n  \"statusType\" : \"Open\",\n  \"subject\" : \"Real Time analysis Requirement\",\n  \"dueDate\" : \"2016-06-23T12:58:09.211Z\",\n  \"departmentId\" : \"1892000000006907\",\n  \"channel\" : \"FORUMS\",\n  \"onholdTime\" : null,\n  \"description\" : \"Sample Ticket\",\n  \"language\" : \"English\",\n  \"source\" : {\n    \"appName\" : null,\n    \"extId\" : null,\n    \"type\" : \"SYSTEM\",\n    \"permalink\" : null,\n    \"appPhotoURL\" : null\n  },\n  \"resolution\" : null,\n  \"sharedDepartments\" : [ ],\n  \"closedTime\" : null,\n  \"sharedCount\" : \"0\",\n  \"approvalCount\" : \"0\",\n  \"timeEntryCount\" : \"0\",\n  \"isOverDue\" : false,\n  \"channelRelatedInfo\" : {\n    \"isTopicDeleted\" : false,\n    \"forumStatus\" : \"ANALYSING\",\n    \"sourceLink\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Community/singlepost/problem-topic-forum-ticket-18-5-2018\",\n    \"topicType\" : \"PROBLEM\"\n  },\n  \"isDeleted\" : \"false\",\n  \"isTrashed\" : false,\n  \"createdTime\" : \"2016-06-21T12:50:04.000Z\",\n  \"id\" : \"1892000001054003\",\n  \"email\" : \"carol@zylker.com\",\n  \"channelCode\" : null,\n  \"customerResponseTime\" : \"2013-11-04T11:21:07.912Z\",\n  \"cf\" : {\n    \"cf_permanentaddress\" : null,\n    \"cf_dateofpurchase\" : null,\n    \"cf_phone\" : null,\n    \"cf_numberofitems\" : null,\n    \"cf_url\" : null,\n    \"cf_secondaryemail\" : null,\n    \"cf_severitypercentage\" : \"0.0\",\n    \"cf_modelname\" : \"F3 2017\"\n  },\n  \"productId\" : null,\n  \"contactId\" : \"1892000000042032\",\n  \"threadCount\" : \"1\",\n  \"priority\" : \"Low\",\n  \"classification\" : null,\n  \"assigneeId\" : \"1892000000056007\",\n  \"commentCount\" : \"0\",\n  \"taskCount\" : \"0\",\n  \"phone\" : \"1 888 900 9646\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n  \"attachmentCount\" : \"0\",\n  \"isEscalated\" : false,\n  \"isSpam\" : false,\n  \"category\" : \"general\",\n  \"status\" : \"Open\"\n}"
						}
					]
				},
				{
					"name": "Move Tickets to trash",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/moveToTrash",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								"moveToTrash"
							]
						},
						"description": "This API moves tickets to the Recycle Bin\n#### OAuth Scope\n- `Desk.tickets.DELETE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ticketIds (required) | &lt;list&gt;<br /> | IDs of the tickets to move to the Recycle Bin \n"
					},
					"response": [
						{
							"name": "Move Tickets to trash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ticketIds\" : [ \"2000032002032\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/moveToTrash",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"moveToTrash"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Merge two tickets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/merge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"merge"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API merges two different tickets.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | IDs of the tickets to merge \n| source  | &lt;object&gt;<br /> | JSON object of the tickets to merge \n"
					},
					"response": [
						{
							"name": "Merge two tickets",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\" : [ \"4000000018011\" ],\n  \"source\" : {\n    \"contactId\" : \"4000000018011\",\n    \"subject\" : \"4000000018011\",\n    \"priority\" : \"4000000018011\",\n    \"status\" : \"4000000018011\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000008749/merge",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000008749",
										"merge"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"entitySkills\" : [ \"42000000000364001\", \"42000000000379001\", \"42000000000379031\" ],\n  \"modifiedTime\" : \"2016-06-21T10:16:15.000Z\",\n  \"ticketNumber\" : \"101\",\n  \"subCategory\" : \"Sub General\",\n  \"statusType\" : \"Open\",\n  \"subject\" : \"Real Time analysis Requirement\",\n  \"dueDate\" : \"2016-06-21T16:16:16.000Z\",\n  \"departmentId\" : \"42000000006907\",\n  \"channel\" : \"Email\",\n  \"onholdTime\" : null,\n  \"description\" : \"Real Time analysis Requirement\",\n  \"language\" : \"English\",\n  \"source\" : {\n    \"appName\" : null,\n    \"extId\" : null,\n    \"type\" : \"SYSTEM\",\n    \"permalink\" : null,\n    \"appPhotoURL\" : null\n  },\n  \"resolution\" : null,\n  \"sharedDepartments\" : [ ],\n  \"closedTime\" : null,\n  \"sharedCount\" : \"0\",\n  \"approvalCount\" : \"0\",\n  \"timeEntryCount\" : \"3\",\n  \"isOverDue\" : false,\n  \"channelRelatedInfo\" : null,\n  \"createdTime\" : \"2013-11-04T11:21:07.000Z\",\n  \"id\" : \"4000000008749\",\n  \"email\" : \"carol@zylker.com\",\n  \"channelCode\" : null,\n  \"customerResponseTime\" : \"2013-11-04T11:21:07.912Z\",\n  \"cf\" : {\n    \"cf_permanentaddress\" : null,\n    \"cf_dateofpurchase\" : null,\n    \"cf_phone\" : null,\n    \"cf_numberofitems\" : null,\n    \"cf_url\" : null,\n    \"cf_secondaryemail\" : null,\n    \"cf_severitypercentage\" : \"0.0\",\n    \"cf_modelname\" : \"F3 2017\"\n  },\n  \"productId\" : null,\n  \"contactId\" : \"42000000042032\",\n  \"threadCount\" : \"121\",\n  \"priority\" : \"High\",\n  \"classification\" : null,\n  \"assigneeId\" : \"42000000056007\",\n  \"commentCount\" : \"1\",\n  \"taskCount\" : \"1\",\n  \"phone\" : \"1 888 900 9646\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n  \"isEscalated\" : false,\n  \"attachmentCount\" : \"1\",\n  \"isSpam\" : false,\n  \"category\" : \"general\",\n  \"status\" : \"Open\"\n}"
						}
					]
				},
				{
					"name": "Move ticket",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/move",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"move"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department to which you want to move the ticket",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department in which the ticket exists",
									"disabled": true
								},
								{
									"key": "forumId",
									"value": "<long>\n",
									"description": "ID of the community sub-category to which the forum ticket (forum topic converted into a ticket) must be moved",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API helps move a ticket from one department to another. Note: The departmentId query parameter will be deprecated soon. Therefore, going forward, the departmentId attribute must be passed in the body of the API request.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Move ticket",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"departmentId\" : \"1892000000082069\",\n  \"forumId\" : \"1892000000052355\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000093303/move",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000093303",
										"move"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Split tickets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/threads/{thread_id}/split",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"threads",
								"{thread_id}",
								"split"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API splits an incoming ticket thread into a new ticket.\n#### OAuth Scope\n- `Desk.tickets.CREATE`\n\n"
					},
					"response": [
						{
							"name": "Split tickets",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000047005/threads/1892000000133023/split",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000047005",
										"threads",
										"1892000000133023",
										"split"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2016-06-21T10:16:15.000Z\",\n  \"ticketNumber\" : \"101\",\n  \"subCategory\" : \"Sub General\",\n  \"statusType\" : \"Open\",\n  \"subject\" : \"Real Time analysis Requirement\",\n  \"dueDate\" : \"2016-06-21T16:16:16.000Z\",\n  \"departmentId\" : \"1892000000006907\",\n  \"channel\" : \"Email\",\n  \"onholdTime\" : null,\n  \"description\" : \"Real Time analysis Requirement\",\n  \"language\" : \"English\",\n  \"source\" : {\n    \"appName\" : null,\n    \"extId\" : null,\n    \"type\" : \"SYSTEM\",\n    \"permalink\" : null,\n    \"appPhotoURL\" : null\n  },\n  \"resolution\" : null,\n  \"sharedDepartments\" : [ ],\n  \"closedTime\" : null,\n  \"sharedCount\" : \"0\",\n  \"approvalCount\" : \"0\",\n  \"timeEntryCount\" : \"3\",\n  \"isOverDue\" : false,\n  \"channelRelatedInfo\" : null,\n  \"createdTime\" : \"2013-11-04T11:21:07.000Z\",\n  \"id\" : \"1892000000042034\",\n  \"email\" : \"carol@zylker.com\",\n  \"channelCode\" : null,\n  \"customerResponseTime\" : \"2013-11-04T11:21:07.912Z\",\n  \"cf\" : {\n    \"cf_permanentaddress\" : null,\n    \"cf_dateofpurchase\" : null,\n    \"cf_phone\" : null,\n    \"cf_numberofitems\" : null,\n    \"cf_url\" : null,\n    \"cf_secondaryemail\" : null,\n    \"cf_severitypercentage\" : \"0.0\",\n    \"cf_modelname\" : \"F3 2017\"\n  },\n  \"productId\" : null,\n  \"contactId\" : \"1892000000042032\",\n  \"threadCount\" : \"121\",\n  \"priority\" : \"High\",\n  \"classification\" : null,\n  \"assigneeId\" : \"1892000000056007\",\n  \"commentCount\" : \"1\",\n  \"taskCount\" : \"1\",\n  \"phone\" : \"1 888 900 9646\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n  \"attachmentCount\" : \"1\",\n  \"isEscalated\" : false,\n  \"isSpam\" : false,\n  \"category\" : \"general\",\n  \"status\" : \"Open\"\n}"
						}
					]
				},
				{
					"name": "Bulk update tickets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/updateMany",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								"updateMany"
							]
						},
						"description": "This API updates multiple tickets at once.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | Array containing the IDs of the entities to update. The maximum number of IDs allowed is 50. \n| fieldName (required) | &lt;string&gt;<br />max chars : 320 |  Name of the field&nbsp;to update \n| fieldValue  | &lt;string&gt;<br />max chars : 320 | Value in the field \n| isCustomField  | &lt;boolean&gt;<br /> | Key that denotes if the field is a user-defined field or not \n"
					},
					"response": [
						{
							"name": "Bulk update tickets",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fieldName\" : \"subject\",\n  \"isCustomField\" : false,\n  \"ids\" : [ \"1892000000093303\", \"1892000000085009\", \"1892000000050003\" ],\n  \"fieldValue\" : \"Ticket for support\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/updateMany",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"updateMany"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Closed many tickets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/closeTickets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"closeTickets"
							]
						},
						"description": "This API closes multiple tickets at once.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | IDs of tickets to close \n"
					},
					"response": [
						{
							"name": "Closed many tickets",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\" : [ \"1892000000093303\", \"1892000000085009\", \"1892000000050003\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/closeTickets",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"closeTickets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Mark as read",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tickets/:ticket_id/markAsRead",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tickets",
								":ticket_id",
								"markAsRead"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API marks a ticket as read by the user.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Mark as read",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000988091/markAsRead",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000988091",
										"markAsRead"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Mark as unread",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tickets/:ticket_id/markAsUnRead",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tickets",
								":ticket_id",
								"markAsUnRead"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API marks a ticket as unread by the user.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Mark as unread",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000988091/markAsUnRead",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000988091",
										"markAsUnRead"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Mark ticket as spam",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/markSpam",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								"markSpam"
							]
						},
						"description": "This API marks tickets as spam.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| isSpam (required) | &lt;boolean&gt;<br /> | Key that marks or unmarks a single ticket or multiple tickets as spam \n| ids (required) | &lt;list&gt;<br /> | ID(s) of the ticket(s) that must be marked or unmarked as spam \n| contactSpam  | &lt;boolean&gt;<br /> | Key that marks or unmarks the associated contact as spam \n| handleExistingTickets  | &lt;boolean&gt;<br /> | Key that marks or unmarks the other tickets from the contact(s) as spam \n"
					},
					"response": [
						{
							"name": "Mark ticket as spam",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contactSpam\" : \"true\",\n  \"handleExistingTickets\" : \"true\",\n  \"ids\" : [ \"1000000121176\", \"1000000016435\", \"1000000016435\" ],\n  \"isSpam\" : \"true\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/markSpam",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"markSpam"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all ticketQueueView count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/ticketQueueView/count?viewId=<long>\n&departmentId=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"ticketQueueView",
								"count"
							],
							"query": [
								{
									"key": "viewId",
									"value": "<long>\n",
									"description": "ID of the view whose ticket count must be fetched"
								},
								{
									"key": "departmentId",
									"value": "<String>\n",
									"description": "ID of the department from which the ticket count must be fetched"
								},
								{
									"key": "agentId",
									"value": "<long>\n",
									"description": " ID of the agent assigned to resolve the tickets",
									"disabled": true
								}
							]
						},
						"description": "This API returns the number of tickets in a particular view.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "List all ticketQueueView count",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/ticketQueueView/count?viewId=40000000004567&departmentId=allDepartment",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"ticketQueueView",
										"count"
									],
									"query": [
										{
											"key": "viewId",
											"value": "40000000004567"
										},
										{
											"key": "departmentId",
											"value": "allDepartment"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"count\" : \"10\"\n}"
						}
					]
				},
				{
					"name": "List all agentsTicketsCount",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/agentsTicketsCount",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"agentsTicketsCount"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<String>\n",
									"description": "ID of the department from which the ticket count must be fetched. To fetch ticket count of agents from all departments, pass the value allDepartments.",
									"disabled": true
								},
								{
									"key": "agentIds",
									"value": "<long>\n",
									"description": "IDs of the agents whose ticket count must be fetched",
									"disabled": true
								}
							]
						},
						"description": "This API returns the number of tickets assigned to multiple agents.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "List all agentsTicketsCount",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/agentsTicketsCount?agentIds=4000000008734,4000000056010",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agentsTicketsCount"
									],
									"query": [
										{
											"key": "agentIds",
											"value": "4000000008734,4000000056010"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"onholdCount\" : 1,\n    \"agentId\" : \"4000000008734\",\n    \"dueIn1HrCount\" : 0,\n    \"overDueCount\" : 2,\n    \"channel\" : [ \"Mail\", \"Phone\" ],\n    \"isOnline\" : true,\n    \"openCount\" : 18\n  }, {\n    \"onholdCount\" : 1,\n    \"agentId\" : \"4000000056010\",\n    \"dueIn1HrCount\" : 0,\n    \"overDueCount\" : 0,\n    \"isOnline\" : false,\n    \"openCount\" : 0\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get ticket history",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tickets/:ticket_id/History",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tickets",
								":ticket_id",
								"History"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 0",
									"description": "Index number, starting from which the events must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\nrange : 1-50",
									"description": "Number of events to list",
									"disabled": true
								},
								{
									"key": "eventFilter",
									"value": "<string>\nmax chars : 100",
									"description": " Key that filters events, based on their type. Values allowed are: `CommentHistory`, `TimeEntryHistory`, `TaskHistory`, `CallHistory`, `EventHistory`, `AttachmentHistory`, `ApprovalHistory`, `SuperviseHistory`, `WorkflowHistory`, `MacroHistory`, `AssignmentRuleHistory`, `NotificationRuleHistory`, `SLAHistory`, `BlueprintHistory` and `SkillRelatedHistory`",
									"disabled": true
								},
								{
									"key": "agentId",
									"value": "<long>\n",
									"description": "Key that filters details of actions performed by a particular agent. Value allowed is the agent's ID in Zoho Desk.",
									"disabled": true
								},
								{
									"key": "fieldName",
									"value": "<string>\nmax chars : 100",
									"description": "Key that filters the history of a particular field. The value for this key must be the apiName of the field.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API fetches details of all actions — called events — performed on a ticket and in the sub-tabs on the ticket detail page. To view a detailed documentation for this API, visit this page.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get ticket history",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/7000000025045/History?eventFilter=CommentHistory",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"7000000025045",
										"History"
									],
									"query": [
										{
											"key": "eventFilter",
											"value": "CommentHistory"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"actor\" : {\n      \"name\" : \"Aadavan\",\n      \"id\" : \"7000000025001\",\n      \"type\" : \"Contact\"\n    },\n    \"eventInfo\" : [ {\n      \"propertyName\" : \"Department\",\n      \"propertyType\" : \"Entity\",\n      \"systemProperty\" : true,\n      \"propertyValue\" : {\n        \"name\" : \"Zylker Primary\",\n        \"id\" : \"7000000013224\",\n        \"type\" : \"Department\"\n      }\n    }, {\n      \"propertyName\" : \"Account Name\",\n      \"propertyType\" : \"Text\",\n      \"systemProperty\" : true,\n      \"propertyValue\" : \"Primary Account\"\n    }, {\n      \"propertyName\" : \"Contact Name\",\n      \"propertyType\" : \"Text\",\n      \"systemProperty\" : true,\n      \"propertyValue\" : \"Aadavan\"\n    }, {\n      \"propertyName\" : \"Email\",\n      \"propertyType\" : \"Text\",\n      \"systemProperty\" : true,\n      \"propertyValue\" : \"aathavan@zylker.com\"\n    }, {\n      \"propertyName\" : \"Subject\",\n      \"propertyType\" : \"Text\",\n      \"systemProperty\" : true,\n      \"propertyValue\" : \"Ticket Subject\"\n    }, {\n      \"propertyName\" : \"Description\",\n      \"propertyType\" : \"Text\",\n      \"systemProperty\" : true,\n      \"propertyValue\" : \"<div>Description.<br /></div>\"\n    }, {\n      \"propertyName\" : \"Status\",\n      \"propertyType\" : \"Text\",\n      \"systemProperty\" : true,\n      \"propertyValue\" : \"Open\"\n    }, {\n      \"propertyName\" : \"Case Owner\",\n      \"propertyType\" : \"Entity\",\n      \"systemProperty\" : true,\n      \"propertyValue\" : {\n        \"name\" : \"Imman\",\n        \"id\" : \"7000000000059\",\n        \"type\" : \"Agent\"\n      }\n    }, {\n      \"propertyName\" : \"Channel\",\n      \"propertyType\" : \"Text\",\n      \"systemProperty\" : true,\n      \"propertyValue\" : \"Email\"\n    }, {\n      \"propertyName\" : \"Is Escalated\",\n      \"propertyType\" : \"Boolean\",\n      \"systemProperty\" : true,\n      \"propertyValue\" : false\n    } ],\n    \"eventTime\" : \"2020-06-03T11:14:52.000Z\",\n    \"eventName\" : \"TicketCreated\",\n    \"source\" : \"Email\",\n    \"actorInfo\" : [ ]\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get ticket resolution",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tickets/:ticket_id/resolution",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tickets",
								":ticket_id",
								"resolution"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API fetches details related to the resolution of a ticket.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get ticket resolution",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000190069/resolution",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000190069",
										"resolution"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2015-12-12T00:00:00Z\",\n  \"author\" : {\n    \"firstName\" : \"saran\",\n    \"lastName\" : \"raj\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/160200000000068005/photo\",\n    \"id\" : 160200000000068000,\n    \"email\" : \"carol@zylker.com\"\n  },\n  \"content\" : \"test resolution API\"\n}"
						}
					]
				},
				{
					"name": "Get resolution history",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tickets/:ticket_id/resolutionHistory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tickets",
								":ticket_id",
								"resolutionHistory"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\n",
									"description": "Index number starting from which records must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\nrange : 1-100",
									"description": "Number of records to fetch",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API fetches the resolution history of a ticket\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get resolution history",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000190069/resolutionHistory",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000190069",
										"resolutionHistory"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2015-12-12T00:00:00Z\",\n    \"author\" : {\n      \"firstName\" : \"saran\",\n      \"lastName\" : \"raj\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/160200000000068005/photo\",\n      \"id\" : 160200000000068000,\n      \"email\" : \"carol@zylker.com\"\n    },\n    \"content\" : \"update ticket resolution\"\n  }, {\n    \"modifiedTime\" : \"2015-11-12T00:00:00Z\",\n    \"author\" : {\n      \"firstName\" : \"saran\",\n      \"lastName\" : \"raj\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/160200000000068005/photo\",\n      \"id\" : 160200000000068000,\n      \"email\" : \"carol@zylker.com\"\n    },\n    \"content\" : \"add ticket resolution\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Update ticket resolution",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tickets/:ticket_id/resolution",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tickets",
								":ticket_id",
								"resolution"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API updates the resolution field of a ticket.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| content  | &lt;string&gt;<br />max chars : 32000 | Content to add in the field \n| isNotifyContact  | &lt;boolean&gt;<br /> | Key that specifies if the contact associated must be notified about the resolution \n"
					},
					"response": [
						{
							"name": "Update ticket resolution",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isNotifyContact\" : false,\n  \"content\" : \"test resolution API\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000190069/resolution",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000190069",
										"resolution"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2015-12-12T00:00:00Z\",\n  \"author\" : {\n    \"firstName\" : \"pandi\",\n    \"lastName\" : \"raj\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/160200000000068005/photo\",\n    \"id\" : 160200000000068000,\n    \"email\" : \"pandeeswaran@zylker.com\"\n  },\n  \"content\" : \"test resolution API\"\n}"
						}
					]
				},
				{
					"name": "Delete ticket resolution",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tickets/:ticket_id/resolution",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tickets",
								":ticket_id",
								"resolution"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API deletes a resolution added to a ticket.\n#### OAuth Scope\n- `Desk.tickets.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete ticket resolution",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000190069/resolution",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000190069",
										"resolution"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get ticket metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/([0-9]+)/metrics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								"([0-9]+)",
								"metrics"
							]
						},
						"description": "This API fetches details related to the response and resolution times of a ticket.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get ticket metrics",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000085990/metrics",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000085990",
										"metrics"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"firstResponseTime\" : \"01:50 hrs\",\n  \"reassignCount\" : 1,\n  \"outgoingCount\" : 2,\n  \"threadCount\" : 2,\n  \"totalResponseTime\" : \"02:50 hrs\",\n  \"responseCount\" : 1,\n  \"agentsHandled\" : [ {\n    \"agentId\" : 4000000012629,\n    \"avgHandlingTime\" : \"00:50 hrs\",\n    \"agentName\" : \"XXX\"\n  }, {\n    \"agentId\" : 4000000080003,\n    \"avgHandlingTime\" : \"01:50 hrs\",\n    \"agentName\" : \"YYY\"\n  } ],\n  \"resolutionTime\" : \"02:50 hrs\",\n  \"stagingData\" : [ {\n    \"handledTime\" : \"01:50 hrs\",\n    \"status\" : \"Open\"\n  }, {\n    \"handledTime\" : \"00:50 hrs\",\n    \"status\" : \"onhold\"\n  } ],\n  \"reopenCount\" : 0\n}"
						}
					]
				},
				{
					"name": "Delete spam tickets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/emptySpam",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								"emptySpam"
							]
						},
						"description": "This API deletes all spam tickets.\n#### OAuth Scope\n- `Desk.tickets.DELETE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| departmentId (required) | &lt;long&gt;<br /> | ID of the department to which the tickets belong \n"
					},
					"response": [
						{
							"name": "Delete spam tickets",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"departmentId\" : \"1892000000006907\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/emptySpam",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"emptySpam"
									]
								}
							},
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Execute Skill Based Assignment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/executeSkillbasedAssignment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"executeSkillbasedAssignment"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API assigns tickets to agents according to their designated skills and routing preferences.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Execute Skill Based Assignment",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1000000159323/executeSkillbasedAssignment?orgId=15157826",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1000000159323",
										"executeSkillbasedAssignment"
									],
									"query": [
										{
											"key": "orgId",
											"value": "15157826"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"isAssigned\" : true,\n  \"newAssignee\" : {\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1000000000059/photo?orgId=111111\",\n    \"firstName\" : \"Alex\",\n    \"lastName\" : \"John\",\n    \"name\" : \"Alex\",\n    \"roleName\" : null,\n    \"externalId\" : null,\n    \"emailId\" : \"alex@zylker.com\",\n    \"id\" : \"1000000000059\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"alex@zylker.com\",\n    \"zuid\" : \"1231232\"\n  },\n  \"team\" : {\n    \"name\" : \"Automation Team\",\n    \"id\" : \"1000000000089\"\n  }\n}"
						}
					]
				},
				{
					"name": "Recalculate Skills",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/recalculateSkills",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"recalculateSkills"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API removes existing skills and reapplies the required ones based on the ticket's current circumstances.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Recalculate Skills",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1000000159323/recalculateSkills",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1000000159323",
										"recalculateSkills"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2020-07-24T07:36:33.000Z\",\n  \"skillsInfo\" : [ {\n    \"weightage\" : \"10\",\n    \"skillName\" : \"Middle East\",\n    \"skillId\" : \"1000000174138\",\n    \"skillTypeId\" : \"1000000173007\",\n    \"mappingType\" : \"SYSTEM\",\n    \"skillTypeName\" : \"Region\"\n  }, {\n    \"weightage\" : \"9\",\n    \"skillName\" : \"Asia\",\n    \"skillId\" : \"1000000174140\",\n    \"skillTypeId\" : \"1000000173007\",\n    \"mappingType\" : \"SYSTEM\",\n    \"skillTypeName\" : \"Region\"\n  } ],\n  \"modifiedBy\" : \"1000000032001\",\n  \"id\" : \"1000000170017\"\n}"
						}
					]
				},
				{
					"name": "Suggest relevant articles for ticket",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/articleSuggestion",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"articleSuggestion"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\nrange : >=0",
									"description": "Index number, starting from which the articles must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\nrange : 1-50",
									"description": "Number of articles to list",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department to which the help article belongs. If you want to include help articles from all departments, pass 0 as the value of this key",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API suggests help articles that could be relevant to resolving a ticket.\n#### OAuth Scope\n- `Desk.articles.READ`\n\n"
					},
					"response": [
						{
							"name": "Suggest relevant articles for ticket",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/22372000000103001/articleSuggestion?departmentId=40000000012359orgId&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"22372000000103001",
										"articleSuggestion"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "40000000012359orgId"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2020-06-24T11:46:43.000Z\",\n    \"creatorId\" : \"4000000000059\",\n    \"dislikeCount\" : \"0\",\n    \"modifierId\" : \"4000000000059\",\n    \"likeCount\" : \"0\",\n    \"locale\" : \"en\",\n    \"ownerId\" : \"4000000000059\",\n    \"title\" : \"Answering your first ticket.\",\n    \"isTrashed\" : false,\n    \"createdTime\" : \"2020-06-24T11:46:43.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Hill\",\n      \"id\" : \"4000000000059\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"id\" : \"4000000019059\",\n    \"viewCount\" : \"0\",\n    \"owner\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Hill\",\n      \"id\" : \"4000000000059\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"summary\" : \"Zoho Desk packs a bunch of features that are expressly there to help you respond to tickets smartly. The first of these, you've already discovered: Auto-Suggest Articles. Zoho Desk pulls up relevant articles on the ticket's content—so you can save ...\",\n    \"latestVersionStatus\" : \"Published\",\n    \"author\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Hill\",\n      \"id\" : \"4000000000059\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"permission\" : \"AGENTS\",\n    \"authorId\" : \"4000000000059\",\n    \"usageCount\" : \"0\",\n    \"commentCount\" : \"0\",\n    \"rootCategoryId\" : \"4000000017276\",\n    \"translationId\" : \"4000000017294\",\n    \"createdBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Hill\",\n      \"id\" : \"4000000000059\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"latestVersion\" : \"1.0\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/4000000019059/en\",\n    \"feedbackCount\" : \"0\",\n    \"portalUrl\" : \"https://desk.zoho.com/portal/zylker/en/kb/articles/answering-your-first-ticket\",\n    \"attachmentCount\" : \"0\",\n    \"latestPublishedVersion\" : \"1.0\",\n    \"category\" : {\n      \"name\" : \"General\",\n      \"id\" : \"4000000017287\",\n      \"locale\" : \"en\"\n    },\n    \"permalink\" : \"answering-your-first-ticket\",\n    \"categoryId\" : \"4000000017287\",\n    \"status\" : \"Published\"\n  } ]\n}"
						}
					]
				}
			],
			"description": "Tickets are organizing units using which service agents handle customer enquiries, requests, complaints, and other such interactions in Zoho Desk."
		},
		{
			"name": "Queue APIs",
			"item": [
				{
					"name": "List tickets by CRMType",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/ticketsByCrmContactType?crmContactType=<string>\nmax chars : 100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"ticketsByCrmContactType"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\n",
									"description": "Index number, starting from which the tickets must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\nrange : 1-50",
									"description": "Number of tickets to fetch",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the tickets must be fetched",
									"disabled": true
								},
								{
									"key": "crmContactType",
									"value": "<string>\nmax chars : 100",
									"description": "Contact type as set in Zoho CRM. Values allowed are `unmapped`, `contacts_leads`, `potentials`, and `customers`"
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the tickets. Values allowed are:&nbsp;`contacts`,&nbsp;`products`, `departments`,&nbsp;`team`,&nbsp;`isRead` and `assignee`. You can pass multiple values by separating them with commas in the API request.",
									"disabled": true
								}
							]
						},
						"description": "This API lists tickets in OPEN and ON HOLD state by contact types as categorized in Zoho CRM.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "List tickets by CRMType",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/ticketsByCrmContactType?departmentId=1892000000006907&crmContactType=unmapped&include=contacts,assignee,departments,team,isRead",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"ticketsByCrmContactType"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "1892000000006907"
										},
										{
											"key": "crmContactType",
											"value": "unmapped"
										},
										{
											"key": "include",
											"value": "contacts,assignee,departments,team,isRead"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"101\",\n    \"subCategory\" : null,\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : \"2016-06-21T16:16:16.000Z\",\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Email\",\n    \"isRead\" : true,\n    \"onholdTime\" : null,\n    \"language\" : \"English\",\n    \"closedTime\" : null,\n    \"sharedCount\" : \"0\",\n    \"contact\" : {\n      \"lastName\" : \"Carol\",\n      \"firstName\" : \"Lucas\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : \"8834567908\",\n      \"id\" : \"1892000000042032\",\n      \"type\" : null,\n      \"email\" : \"carol@zylker.com\",\n      \"account\" : {\n        \"website\" : \"www.desk.com\",\n        \"accountName\" : \"desk Account\",\n        \"id\" : \"1892000000975382\"\n      }\n    },\n    \"createdTime\" : \"2013-11-04T11:21:07.000Z\",\n    \"id\" : \"1892000000042034\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"carol@zylker.com\",\n    \"customerResponseTime\" : \"2013-11-04T11:21:07.912Z\",\n    \"productId\" : null,\n    \"contactId\" : \"1892000000042032\",\n    \"threadCount\" : \"121\",\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\"\n    },\n    \"priority\" : \"High\",\n    \"assigneeId\" : \"1892000000056007\",\n    \"commentCount\" : \"1\",\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"teamId\" : \"8920000000069071\",\n    \"isSpam\" : false,\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo?orgId=298902\",\n      \"id\" : \"1892000000056007\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"category\" : null,\n    \"status\" : \"Open\"\n  }, {\n    \"ticketNumber\" : \"169\",\n    \"subCategory\" : null,\n    \"statusType\" : \"On Hold\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : null,\n    \"departmentId\" : \"1892000000006907\",\n    \"isRead\" : true,\n    \"channel\" : \"Facebook\",\n    \"onholdTime\" : \"2014-03-06T11:34:53.000Z\",\n    \"closedTime\" : null,\n    \"sharedCount\" : \"0\",\n    \"contact\" : {\n      \"lastName\" : \"Lawrence\",\n      \"firstName\" : \"Jonathan\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : \"8812345608\",\n      \"id\" : \"1892000000042032\",\n      \"type\" : null,\n      \"email\" : \"lawrence@zylker.com\",\n      \"account\" : {\n        \"website\" : null,\n        \"accountName\" : \"desk Account\",\n        \"id\" : \"1892000000975382\"\n      }\n    },\n    \"createdTime\" : \"2014-03-06T09:34:53.000Z\",\n    \"id\" : \"1892000000093205\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"lawrence@zylker.com\",\n    \"customerResponseTime\" : \"2014-03-11T07:51:29.618Z\",\n    \"productId\" : null,\n    \"contactId\" : \"1892000000093203\",\n    \"threadCount\" : \"43\",\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\"\n    },\n    \"priority\" : null,\n    \"assigneeId\" : \"1892000000042001\",\n    \"commentCount\" : \"0\",\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebbcaefeb9d93ba74750b02843cad3b38\",\n    \"teamId\" : \"8920000000069071\",\n    \"isSpam\" : false,\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000042001/photo?orgId=298902\",\n      \"id\" : \"1892000000042001\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"category\" : null,\n    \"status\" : \"On Hold\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List tickets by due minutes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/ticketsByDueInMinutes?dueInMinutes=<integer>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"ticketsByDueInMinutes"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\n",
									"description": "Index number, starting from which the tickets must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\nrange : 1-50",
									"description": "Number of tickets to fetch",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the tickets must be fetched",
									"disabled": true
								},
								{
									"key": "dueInMinutes",
									"value": "<integer>\n",
									"description": "Number of minutes left for resolving the ticket. Currently, the minimum number of minutes is 15 and the maximum is 2,880. This query param can return overdue and no-due tickets too. Values allowed are `overDue`, `15`, `30`, `45`, `60`, `90`, `120`, `180`, `360`, `540`, `720`, `1080`, `1440`, `2880`, `noDue`, and `onhold`."
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the tickets. Values allowed are:&nbsp;`contacts`,&nbsp;`products`, `departments`,&nbsp;`team`,&nbsp;`isRead` and `assignee`. You can pass multiple values by separating them with commas in the API request.",
									"disabled": true
								}
							]
						},
						"description": "This API lists tickets by the due time for resolution.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "List tickets by due minutes",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/ticketsByDueInMinutes?departmentId=1892000000006907&dueInMinutes=overDue&include=contacts,assignee,departments,team,isRead",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"ticketsByDueInMinutes"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "1892000000006907"
										},
										{
											"key": "dueInMinutes",
											"value": "overDue"
										},
										{
											"key": "include",
											"value": "contacts,assignee,departments,team,isRead"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"101\",\n    \"subCategory\" : null,\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Real Time analysis Requirement\",\n    \"dueDate\" : \"2016-06-21T16:16:16.000Z\",\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Email\",\n    \"isRead\" : true,\n    \"onholdTime\" : null,\n    \"language\" : \"English\",\n    \"closedTime\" : null,\n    \"sharedCount\" : \"0\",\n    \"contact\" : {\n      \"lastName\" : \"Lawrence\",\n      \"firstName\" : \"Jonathan\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : \"8834567907\",\n      \"id\" : \"1892000000042032\",\n      \"type\" : null,\n      \"email\" : \"lawrence@zylker.com\",\n      \"account\" : {\n        \"website\" : null,\n        \"accountName\" : \"desk Account\",\n        \"id\" : \"1892000000975382\"\n      }\n    },\n    \"createdTime\" : \"2013-11-04T11:21:07.000Z\",\n    \"id\" : \"1892000000042034\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"lawrence@zylker.com\",\n    \"customerResponseTime\" : \"2013-11-04T11:21:07.912Z\",\n    \"productId\" : null,\n    \"contactId\" : \"1892000000042032\",\n    \"threadCount\" : \"121\",\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\"\n    },\n    \"priority\" : \"High\",\n    \"assigneeId\" : \"1892000000056007\",\n    \"commentCount\" : \"1\",\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"teamId\" : \"8920000000069071\",\n    \"isSpam\" : false,\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo?orgId=298902\",\n      \"id\" : \"1892000000056007\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"category\" : null,\n    \"status\" : \"Open\"\n  }, {\n    \"ticketNumber\" : \"169\",\n    \"subCategory\" : null,\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : null,\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Facebook\",\n    \"isRead\" : true,\n    \"onholdTime\" : null,\n    \"closedTime\" : null,\n    \"sharedCount\" : \"0\",\n    \"contact\" : {\n      \"lastName\" : \"Lawrence\",\n      \"firstName\" : \"Jonathan\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : \"8834534901\",\n      \"id\" : \"1892000000042032\",\n      \"type\" : null,\n      \"email\" : \"lawrence@zylker.com\",\n      \"account\" : {\n        \"website\" : null,\n        \"accountName\" : \"desk Account\",\n        \"id\" : \"1892000000975382\"\n      }\n    },\n    \"createdTime\" : \"2014-03-06T09:34:53.000Z\",\n    \"id\" : \"1892000000093205\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"lawrence@zylker.com\",\n    \"customerResponseTime\" : \"2014-03-11T07:51:29.618Z\",\n    \"productId\" : null,\n    \"contactId\" : \"1892000000093203\",\n    \"threadCount\" : \"43\",\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\"\n    },\n    \"priority\" : null,\n    \"assigneeId\" : \"1892000000042001\",\n    \"commentCount\" : \"0\",\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebc54aeb9d93ba74750b0284bc703b38\",\n    \"teamId\" : \"8920000000069071\",\n    \"isSpam\" : false,\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000042001/photo?orgId=298902\",\n      \"id\" : \"1892000000042001\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"category\" : null,\n    \"status\" : \"Open\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List tickets by status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/ticketsByStatus?status=<string>\nmax chars : 100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"ticketsByStatus"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\n",
									"description": "Index number, starting from which the tickets must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\nrange : 1-50",
									"description": "Number of tickets to fetch",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the tickets must be fetched",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<string>\nmax chars : 100",
									"description": "Status of the ticket. Includes the custom statuses configured in your help desk"
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the tickets. Values allowed are:&nbsp;`contacts`,&nbsp;`products`, `departments`,&nbsp;`team`,&nbsp;`isRead` and `assignee`. You can pass multiple values by separating them with commas in the API request.",
									"disabled": true
								}
							]
						},
						"description": "This API fetches tickets by resolution status which is mapped to either OPEN or ON HOLD\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "List tickets by status",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/ticketsByStatus?departmentId=1892000000006907&status=ON%20Hold&include=contacts,assignee,departments,team,isRead",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"ticketsByStatus"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "1892000000006907"
										},
										{
											"key": "status",
											"value": "ON%20Hold"
										},
										{
											"key": "include",
											"value": "contacts,assignee,departments,team,isRead"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"101\",\n    \"subCategory\" : null,\n    \"statusType\" : \"On Hold\",\n    \"subject\" : \"Real Time analysis Requirement\",\n    \"dueDate\" : null,\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Email\",\n    \"isRead\" : false,\n    \"onholdTime\" : \"2016-06-21T16:16:16.000Z\",\n    \"language\" : \"English\",\n    \"closedTime\" : null,\n    \"sharedCount\" : \"0\",\n    \"contact\" : {\n      \"lastName\" : \"Lawrence\",\n      \"firstName\" : \"Jonathan\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : \"8834562344\",\n      \"id\" : \"1892000000042032\",\n      \"type\" : null,\n      \"email\" : \"lawrence@zylker.com\",\n      \"account\" : {\n        \"website\" : null,\n        \"accountName\" : \"desk Account\",\n        \"id\" : \"1892000000975382\"\n      }\n    },\n    \"createdTime\" : \"2013-11-04T11:21:07.000Z\",\n    \"id\" : \"1892000000042034\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"lawrence@zylker.com\",\n    \"customerResponseTime\" : \"2013-11-04T11:21:07.912Z\",\n    \"productId\" : null,\n    \"contactId\" : \"1892000000042032\",\n    \"threadCount\" : \"121\",\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\"\n    },\n    \"priority\" : \"High\",\n    \"assigneeId\" : \"1892000000056007\",\n    \"commentCount\" : \"1\",\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247ca87daeb9d93ba74750b0284bc703b38\",\n    \"teamId\" : \"8920000000069071\",\n    \"isSpam\" : false,\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo?orgId=298902\",\n      \"id\" : \"1892000000056007\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"category\" : null,\n    \"status\" : \"On Hold\"\n  }, {\n    \"ticketNumber\" : \"169\",\n    \"subCategory\" : null,\n    \"statusType\" : \"On Hold\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : null,\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Facebook\",\n    \"isRead\" : true,\n    \"onholdTime\" : \"2014-03-06T11:34:53.000Z\",\n    \"closedTime\" : null,\n    \"sharedCount\" : \"0\",\n    \"contact\" : {\n      \"lastName\" : \"Lawrence\",\n      \"firstName\" : \"Jonathan\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : \"8832345108\",\n      \"id\" : \"1892000000042032\",\n      \"type\" : null,\n      \"email\" : \"lawrence@zylker.com\",\n      \"account\" : {\n        \"website\" : null,\n        \"accountName\" : \"desk Account\",\n        \"id\" : \"1892000000975382\"\n      }\n    },\n    \"createdTime\" : \"2014-03-06T09:34:53.000Z\",\n    \"id\" : \"1892000000093205\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"carol@zylker.com\",\n    \"customerResponseTime\" : \"2014-03-11T07:51:29.618Z\",\n    \"productId\" : null,\n    \"contactId\" : \"1892000000093203\",\n    \"threadCount\" : \"43\",\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\"\n    },\n    \"priority\" : null,\n    \"assigneeId\" : \"1892000000042001\",\n    \"commentCount\" : \"0\",\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9eb9bb9d93ba74750b0284bc703b38\",\n    \"teamId\" : \"8920000000069071\",\n    \"isSpam\" : false,\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000042001/photo?orgId=298902\",\n      \"id\" : \"1892000000042001\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"category\" : null,\n    \"status\" : \"On Hold\"\n  } ]\n}"
						}
					]
				}
			],
			"description": "Ticket queues refer to the views in which tickets are grouped and listed according to their due time left for resolution, status, priority, or contact type in Zoho CRM. These queues appear as Countdown Mode, Status Mode, Priority Mode, and Handshake Mode respectively, on Zoho Desk."
		},
		{
			"name": "Threads",
			"item": [
				{
					"name": "Get a thread",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/threads/{thread_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"threads",
								"{thread_id}"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Content of the thread in plain text format. Value allowed is `plainText`.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API fetches a single thread from your help desk portal.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get a thread",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000094004/threads/1892000000135387?include=plainText",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000094004",
										"threads",
										"1892000000135387"
									],
									"query": [
										{
											"key": "include",
											"value": "plainText"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"isDescriptionThread\" : true,\n  \"attachments\" : [ {\n    \"size\" : \"1913\",\n    \"name\" : \"ScreenShot\",\n    \"id\" : \"1892000001083005\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000000093205/threads/1892000001083008/attachments/1892000001083005/content\"\n  } ],\n  \"bcc\" : \"\",\n  \"isContentTruncated\" : true,\n  \"canReply\" : true,\n  \"channel\" : \"EMAIL\",\n  \"source\" : {\n    \"appName\" : null,\n    \"extId\" : null,\n    \"type\" : \"SYSTEM\",\n    \"permalink\" : null,\n    \"appPhotoURL\" : null\n  },\n  \"content\" : \"<div>Please provide us with a valid solution within the suggested time frame so that we can proceed with the implementation</div>\",\n  \"channelRelatedInfo\" : null,\n  \"createdTime\" : \"2016-06-02T18:17:55.000Z\",\n  \"plainText\" : \"Please provide us with a valid solution within the suggested time frame so that we can proceed with the implementation\",\n  \"id\" : \"1892000000135387\",\n  \"contentType\" : \"text/html\",\n  \"direction\" : \"in\",\n  \"cc\" : \"\",\n  \"summary\" : \"Please provide us with a valid solution within the suggested time frame so that we can proceed with the implementation\",\n  \"visibility\" : \"public\",\n  \"author\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : null,\n    \"name\" : \"Jade Tywin\",\n    \"type\" : \"END_USER\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  },\n  \"fullContentURL\" : \"https://desk.zoho.com/api/v1/tickets/1892000000093205/threads/1892000001083008/fullContent\",\n  \"isForward\" : false,\n  \"hasAttach\" : true,\n  \"replyTo\" : \"jhonwin@zylker.com\",\n  \"attachmentCount\" : \"1\",\n  \"to\" : \"techsupport@zylker.com\",\n  \"fromEmailAddress\" : \"jade12tywin@zylker.com\",\n  \"actions\" : [ ],\n  \"status\" : \"SUCCESS\"\n}"
						}
					]
				},
				{
					"name": "Get Original Mail Content",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/threads/{thread_id}/originalContent",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"threads",
								"{thread_id}",
								"originalContent"
							],
							"query": [
								{
									"key": "inline",
									"value": "<boolean>\n",
									"description": "set this param as true if attachment is to be rendered",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API get the orginal mail content including mail headers\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Original Mail Content",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000094004/threads/1892000011194123/originalContent",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000094004",
										"threads",
										"1892000011194123",
										"originalContent"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"date\" : \"Tue, 30 Mar 2021 16:53:12 +0530\",\n  \"returnPath\" : \"<abc@zylker.com>\",\n  \"subject\" : \"Testing Mail Service\",\n  \"messageId\" : \"<17882df63bf.b181c6c3583.8110594270247400030@zylker.com>\",\n  \"from\" : \"ReplyTo <abc@zylker.com>\",\n  \"to\" : \"\\\"support\\\" <support@zylker.com>\",\n  \"content\" : \"Delivered-To: support@zylker.com\\nReturn-Path: <abc@zylker.com>\\nDomainKey-Signature: a=rsa-sha1; q=dns; c=nofws; \\n  s=zoho; d=zoho.com; \\n  h=date:from:reply-to:to:message-id:subject:mime-version:content-type:user-agent; \\n  b=E6QQb4TtZN7WU1zmeUJx3hjj9BL0l/m6NhQU/3Oi+YlvXXhxSL6BFK0+CsAqJ/BJY/Y9hmdGNOM2\\n    I62RiQ5y8r9bUrVnGZH+Z9HvO3lPXZ4wM9kXypm9xmOo+gf0Dc2DxJKfPCvGrLT1QDzxeO+3tlPZ\\n    Xeqt6AsiCjXsXLcNUwc=  \\nReceived: from mail.zoho.com by zohomail.com.in\\n\\twith SMTP id 1617103392140118.88266397173629; Tue, 30 Mar 2021 16:53:12 +0530 (IST)\\nDate: Tue, 30 Mar 2021 16:53:12 +0530\\nFrom: ReplyTo <abc@zylker.com>\\nReply-To: abc@zylker.com\\nTo: \\\"support\\\" <support@zylker.com>\\nMessage-Id: <17882df63bf.b181c6c3583.8110594270247400030@zylker.com>\\nSubject: Testing Mail Service\\nMIME-Version: 1.0\\nContent-Type: multipart/alternative; \\n\\tboundary=\\\"----=_Part_1259_1074835283.1617103381439\\\"\\nImportance: Medium\\nUser-Agent: Zoho Mail\\nX-Mailer: Zoho Mail\\nX-ZohoMail-Owner: <17882df63bf.b181c6c3583.8110594270247400030@zylker.com>+zmo_0_abc@zylker.com\\n\\n------=_Part_1259_1074835283.1617103381439\\nContent-Type: text/plain; charset=\\\"UTF-8\\\"\\nContent-Transfer-Encoding: 7bit\\n\\nAldjfh Giri\\n\\n\\n\\n\\n\\nReplyTo\\n------=_Part_1259_1074835283.1617103381439\\nContent-Type: text/html; charset=\\\"UTF-8\\\"\\nContent-Transfer-Encoding: 7bit\\n\\n<!DOCTYPE html PUBLIC \\\"-//W3C//DTD HTML 4.01 Transitional//EN\\\"><html><head><meta content=\\\"text/html;charset=UTF-8\\\" http-equiv=\\\"Content-Type\\\" /></head><body><div style=\\\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10pt;\\\"><div><br /></div><div><br />Aldjfh Giri<br /></div><div id=\\\"\\\"><div><br /></div><div><br /></div><div>ReplyTo<br /></div><div><br /></div></div></div><br /></body></html>\\n------=_Part_1259_1074835283.1617103381439--\\n\\n\"\n}"
						}
					]
				},
				{
					"name": "Get Latest thread",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/latestThread",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"latestThread"
							],
							"query": [
								{
									"key": "needPublic",
									"value": "<boolean>\ndefault : false",
									"description": "Key that denotes if the thread must be a public thread",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Content of the thread in plain text format. Value allowed is `plainText`.",
									"disabled": true
								},
								{
									"key": "threadStatus",
									"value": "<string>\nmax chars : 100",
									"description": "Receipt status of the thread. Value allowed is `success`",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API fetches the most recent thread recorded in a ticket.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Latest thread",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000094004/latestThread",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000094004",
										"latestThread"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"cc\" : \"\",\n  \"summary\" : \"Please provide us with a valid solution within the suggested time frame so that we can proceed with the implementation\",\n  \"attachments\" : [ {\n    \"size\" : \"1913\",\n    \"name\" : \"ScreenShot\",\n    \"id\" : \"1892000001083005\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000000094004/threads/1892000001083008/attachments/1892000001083005/content\"\n  } ],\n  \"bcc\" : \"\",\n  \"canReply\" : true,\n  \"visibility\" : \"public\",\n  \"author\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : null,\n    \"name\" : \"Jade Tywin\",\n    \"type\" : \"END_USER\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  },\n  \"channel\" : \"EMAIL\",\n  \"source\" : {\n    \"appName\" : null,\n    \"extId\" : null,\n    \"type\" : \"SYSTEM\",\n    \"permalink\" : null,\n    \"appPhotoURL\" : null\n  },\n  \"content\" : \"Please provide us with a valid solution within the suggested time frame so that we can proceed with the implementation\",\n  \"isForward\" : false,\n  \"hasAttach\" : true,\n  \"replyTo\" : \"jhonwin@zylker.com\",\n  \"createdTime\" : \"2016-06-02T18:17:55.000Z\",\n  \"to\" : \"techsupport@zylker.com\",\n  \"id\" : \"1892000001083008\",\n  \"fromEmailAddress\" : \"jade12tywin@zylker.com\",\n  \"actions\" : [ ],\n  \"contentType\" : \"text/html\",\n  \"status\" : \"SUCCESS\",\n  \"direction\" : \"in\"\n}"
						}
					]
				},
				{
					"name": "Send For Review",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/threads/{thread_id}/sendForReview",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"threads",
								"{thread_id}",
								"sendForReview"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API saves drafts of agent's responses to customers and sends them to a manager/senior agent for review.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Send For Review",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000094004/threads/1892000000012313/sendForReview",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000094004",
										"threads",
										"1892000000012313",
										"sendForReview"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all threads",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/threads",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"threads"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\nrange : >=0",
									"description": "Index number, starting from which the threads must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\ndefault : 100,",
									"description": "Number of threads to fetch",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API lists all threads in your helpdesk.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "List all threads",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000042034/threads",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000042034",
										"threads"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"isDescriptionThread\" : true,\n    \"canReply\" : true,\n    \"visibility\" : \"public\",\n    \"author\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/user/176276372673/photo\",\n      \"name\" : \"Jade Tywin\",\n      \"type\" : \"END_USER\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    },\n    \"channel\" : \"FORUMS\",\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"lastRatingIconURL\" : null,\n    \"hasAttach\" : false,\n    \"channelRelatedInfo\" : {\n      \"isDeleted\" : \"false\",\n      \"isBestSolution\" : \"true\",\n      \"externalLink\" : null\n    },\n    \"respondedIn\" : null,\n    \"createdTime\" : \"2015-03-25T13:40:23.031Z\",\n    \"attachmentCount\" : \"7\",\n    \"id\" : \"1892000000413186\",\n    \"fromEmailAddress\" : \"jade12tywin@zylker.com\",\n    \"actions\" : [ ],\n    \"contentType\" : \"text/html\",\n    \"status\" : \"SUCCESS\",\n    \"direction\" : \"in\"\n  }, {\n    \"summary\" : \"Customer Rating\",\n    \"cc\" : \"\",\n    \"isDescriptionThread\" : false,\n    \"bcc\" : \"\",\n    \"canReply\" : true,\n    \"visibility\" : \"public\",\n    \"author\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000042001/photo?orgId=3983939\",\n      \"name\" : \"Jade Tywin\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    },\n    \"channel\" : \"EMAIL\",\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"isForward\" : false,\n    \"hasAttach\" : true,\n    \"responderId\" : \"1892000000042001\",\n    \"channelRelatedInfo\" : null,\n    \"respondedIn\" : \"00:05:14\",\n    \"createdTime\" : \"2016-05-25T10:06:09.686Z\",\n    \"attachmentCount\" : \"4\",\n    \"id\" : \"1892000001004072\",\n    \"to\" : \"carol@zylker.com\",\n    \"fromEmailAddress\" : \"techsupport@zylker.com\",\n    \"actions\" : [ {\n      \"method\" : \"POST\",\n      \"rel\" : \"send\",\n      \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000000093205/resendFailedThread?threadId=1892000001083008\"\n    } ],\n    \"contentType\" : \"text/html\",\n    \"status\" : \"FAILED\",\n    \"direction\" : \"out\"\n  }, {\n    \"summary\" : \"Please fix this problem, since it is urgent posted the issue on Facebook \",\n    \"isDescriptionThread\" : false,\n    \"canReply\" : true,\n    \"visibility\" : \"public\",\n    \"author\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/2150000000043591/photo?orgId=3983939\",\n      \"name\" : \"Jade Tywin\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    },\n    \"channel\" : \"FACEBOOK\",\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"lastRatingIconURL\" : \"https://desk.zoho.com/api/v1/ratingOptions/31138000005998227/logo?orgId=54983163\",\n    \"hasAttach\" : false,\n    \"responderId\" : \"2150000000043591\",\n    \"channelRelatedInfo\" : null,\n    \"respondedIn\" : \"00:04:09\",\n    \"createdTime\" : \"2016-07-25T10:04:43.739Z\",\n    \"attachmentCount\" : \"6\",\n    \"id\" : \"2150000002498038\",\n    \"actions\" : [ {\n      \"method\" : \"POST\",\n      \"rel\" : \"send\",\n      \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000000094004/sendDraft?draftThreadId=1892000001004072\"\n    }, {\n      \"method\" : \"DELETE\",\n      \"rel\" : \"delete\",\n      \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000000094004/draftReply/1892000001004072\"\n    } ],\n    \"contentType\" : \"text/html\",\n    \"status\" : \"DRAFT\",\n    \"direction\" : \"out\"\n  }, {\n    \"isDescriptionThread\" : false,\n    \"canReply\" : true,\n    \"visibility\" : \"public\",\n    \"author\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/user/176276372673/photo\",\n      \"name\" : \"Jade Tywin\",\n      \"type\" : \"END_USER\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    },\n    \"channel\" : \"FEEDBACK\",\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"lastRatingIconURL\" : null,\n    \"hasAttach\" : false,\n    \"channelRelatedInfo\" : null,\n    \"respondedIn\" : null,\n    \"createdTime\" : \"2015-03-25T13:40:23.031Z\",\n    \"attachmentCount\" : \"5\",\n    \"id\" : \"1892000000413189\",\n    \"fromEmailAddress\" : \"jade12tywin@zylker.com\",\n    \"actions\" : [ ],\n    \"contentType\" : \"text/html\",\n    \"status\" : \"SUCCESS\",\n    \"direction\" : \"in\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List conversations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/conversations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"conversations"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\nrange : >=0",
									"description": "Index number, starting from which the conversations must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\ndefault : 100,",
									"description": "Number of conversations to fetch",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API lists a particular number of threads and comments recorded on a ticket, based on the limit specified.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "List conversations",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000321001/conversations",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000321001",
										"conversations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"summary\" : \"We have found the root cause for the issue and fixed it. How would you rate our customer service? Good Okey Bad\",\n    \"isDescriptionThread\" : true,\n    \"canReply\" : true,\n    \"visibility\" : \"public\",\n    \"author\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000042001/photo?orgId=3983939\",\n      \"name\" : \"Jade Tywin\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    },\n    \"channel\" : \"FORUMS\",\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"type\" : \"thread\",\n    \"lastRatingIconURL\" : \"https://desk.zoho.com/api/v1/ratingOptions/31138000005998227/logo?orgId=54983163\",\n    \"isForward\" : false,\n    \"hasAttach\" : false,\n    \"responderId\" : \"1892000000042001\",\n    \"channelRelatedInfo\" : {\n      \"isDeleted\" : \"false\",\n      \"isBestSolution\" : \"true\",\n      \"externalLink\" : null\n    },\n    \"respondedIn\" : \"00:05:14\",\n    \"createdTime\" : \"2016-07-07T10:12:04.177Z\",\n    \"attachmentCount\" : \"7\",\n    \"id\" : \"1892000001080014\",\n    \"fromEmailAddress\" : \"techsupport@zylker.com\",\n    \"actions\" : [ ],\n    \"contentType\" : \"text/html\",\n    \"status\" : \"SUCCESS\",\n    \"direction\" : \"out\"\n  }, {\n    \"summary\" : \"Any update regarding the issue\",\n    \"cc\" : \"productmanagement@zylker.com\",\n    \"isDescriptionThread\" : false,\n    \"bcc\" : \"\",\n    \"canReply\" : true,\n    \"visibility\" : \"public\",\n    \"author\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : null,\n      \"name\" : \"Jade Tywin\",\n      \"type\" : \"END_USER\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    },\n    \"channel\" : \"EMAIL\",\n    \"source\" : {\n      \"appName\" : null,\n      \"extId\" : null,\n      \"type\" : \"SYSTEM\",\n      \"permalink\" : null,\n      \"appPhotoURL\" : null\n    },\n    \"type\" : \"thread\",\n    \"lastRatingIconURL\" : null,\n    \"isForward\" : false,\n    \"hasAttach\" : false,\n    \"channelRelatedInfo\" : null,\n    \"respondedIn\" : null,\n    \"createdTime\" : \"2016-07-07T10:02:04.663Z\",\n    \"attachmentCount\" : \"6\",\n    \"id\" : \"1892000001080004\",\n    \"to\" : \"techsupport@zylker.com\",\n    \"fromEmailAddress\" : \"jade12tywin@zylker.com\",\n    \"actions\" : [ ],\n    \"contentType\" : \"text/html\",\n    \"status\" : \"SUCCESS\",\n    \"direction\" : \"in\"\n  }, {\n    \"modifiedTime\" : \"2016-02-16T14:12:20.000Z\",\n    \"commentedTime\" : \"2016-02-16T09:21:58.000Z\",\n    \"isPublic\" : true,\n    \"id\" : \"1892000000886025\",\n    \"type\" : \"comment\",\n    \"content\" : \"There is a major issue with the real time dashboard feature . Kindly look into it\",\n    \"commenterId\" : \"1892000000042001\",\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=3983939\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"LightAgent\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Send Reply via Integrated Custom Channels",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/sendReply",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"sendReply"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API sends a reply to any of the configured non-system channels. The channel must be able to handle the reply otherwise the reply will fail. Available channels to be used in this API can be fetched using Get Channels API.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Send Reply via Integrated Custom Channels",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\" : \"YOUTUBE\",\n  \"content\" : \"Thank you for your valueable comment.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000094004/sendReply",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000094004",
										"sendReply"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Thank you for your valueable comment.\",\n  \"isDescriptionThread\" : false,\n  \"canReply\" : true,\n  \"visibility\" : \"public\",\n  \"author\" : {\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/176276372673/photo?orgId=3983939\",\n    \"name\" : \"Jade Tywin\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  },\n  \"channel\" : \"YOUTUBE\",\n  \"source\" : {\n    \"appName\" : null,\n    \"extId\" : null,\n    \"type\" : \"SYSTEM\",\n    \"permalink\" : null,\n    \"appPhotoURL\" : null\n  },\n  \"content\" : \"Thank you for your valueable comment.\",\n  \"isForward\" : false,\n  \"hasAttach\" : false,\n  \"responderId\" : \"1892000000042001\",\n  \"channelRelatedInfo\" : null,\n  \"respondedIn\" : \"00:05:14\",\n  \"createdTime\" : \"2016-05-25T10:06:09.686Z\",\n  \"id\" : \"1892000001004072\",\n  \"to\" : \"Zylker Vlogs\",\n  \"actions\" : [ ],\n  \"contentType\" : \"text/html\",\n  \"status\" : \"PENDING\",\n  \"direction\" : \"out\"\n}"
						}
					]
				},
				{
					"name": "Send Email Reply",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/sendReply",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"sendReply"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API sends an email reply. The from address in the email must be a from address configured in your help desk portal.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Send Email Reply",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ticketStatus\" : \"Closed\",\n  \"channel\" : \"EMAIL\",\n  \"attachmentIds\" : [ \"1312123141313\" ],\n  \"to\" : \"carol@zylker.com\",\n  \"fromEmailAddress\" : \"techsupport@zylker.com\",\n  \"contentType\" : \"plainText\",\n  \"content\" : \"We have identified the root cause and fixed it.\",\n  \"isForward\" : \"true\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000094004/sendReply",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000094004",
										"sendReply"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"summary\" : \"We have identified the root cause and fixed it.\",\n  \"cc\" : \"\",\n  \"isDescriptionThread\" : true,\n  \"bcc\" : \"\",\n  \"attachments\" : [ {\n    \"size\" : \"818\",\n    \"name\" : \"atach.png\",\n    \"id\" : \"1892000000042043\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000000093205/threads/1892000001083008/attachments/1892000001083005/content\"\n  } ],\n  \"canReply\" : true,\n  \"visibility\" : \"public\",\n  \"author\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/176276372673/photo?orgId=3983939\",\n    \"name\" : \"Jade Tywin\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  },\n  \"channel\" : \"EMAIL\",\n  \"source\" : {\n    \"appName\" : null,\n    \"extId\" : null,\n    \"type\" : \"SYSTEM\",\n    \"permalink\" : null,\n    \"appPhotoURL\" : null\n  },\n  \"content\" : \"We have identified the root cause and fixed it.\",\n  \"isForward\" : true,\n  \"hasAttach\" : true,\n  \"responderId\" : \"1892000000042001\",\n  \"channelRelatedInfo\" : null,\n  \"respondedIn\" : \"00:03:10\",\n  \"createdTime\" : \"2016-05-25T10:06:09.686Z\",\n  \"id\" : \"1892000001004072\",\n  \"to\" : \"carol@zylker.com\",\n  \"fromEmailAddress\" : \"techsupport@zylker.com\",\n  \"actions\" : [ ],\n  \"contentType\" : \"text/html\",\n  \"status\" : \"PENDING\",\n  \"direction\" : \"out\"\n}"
						}
					]
				},
				{
					"name": "Send Facebook Reply",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/sendReply",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"sendReply"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API adds a reply to a Facebook post\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Send Facebook Reply",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\" : \"FACEBOOK\",\n  \"content\" : \"We are looking into the issue.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000094004/sendReply",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000094004",
										"sendReply"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"summary\" : \"We are looking into the issue.\",\n  \"isDescriptionThread\" : false,\n  \"canReply\" : true,\n  \"visibility\" : \"public\",\n  \"author\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/2150000000043591/photo?orgId=3983939\",\n    \"name\" : \"Jade Tywin\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  },\n  \"channel\" : \"FACEBOOK\",\n  \"source\" : {\n    \"appName\" : null,\n    \"extId\" : null,\n    \"type\" : \"SYSTEM\",\n    \"permalink\" : null,\n    \"appPhotoURL\" : null\n  },\n  \"content\" : \"We are looking into the issue.\",\n  \"hasAttach\" : false,\n  \"responderId\" : \"2150000000043591\",\n  \"channelRelatedInfo\" : null,\n  \"respondedIn\" : \"00:07:07\",\n  \"createdTime\" : \"2016-07-25T10:04:43.739Z\",\n  \"id\" : \"2150000002498038\",\n  \"actions\" : [ ],\n  \"contentType\" : \"text/html\",\n  \"status\" : \"SUCCESS\",\n  \"direction\" : \"out\"\n}"
						}
					]
				},
				{
					"name": "Send Twitter Reply",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/sendReply",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"sendReply"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API sends a reply to a tweet.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Send Twitter Reply",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\" : \"TWITTER\",\n  \"content\" : \"The problem has been fixed. Sorry for the inconvenience caused.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000094004/sendReply",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000094004",
										"sendReply"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"summary\" : \"The problem has been fixed. Sorry for the inconvenience caused.\",\n  \"isDescriptionThread\" : false,\n  \"canReply\" : true,\n  \"visibility\" : \"public\",\n  \"author\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000042001/photo?orgId=3983939\",\n    \"name\" : \"Jade Tywin\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  },\n  \"channel\" : \"TWITTER\",\n  \"source\" : {\n    \"appName\" : null,\n    \"extId\" : null,\n    \"type\" : \"SYSTEM\",\n    \"permalink\" : null,\n    \"appPhotoURL\" : null\n  },\n  \"hasAttach\" : false,\n  \"responderId\" : \"1892000000042001\",\n  \"channelRelatedInfo\" : null,\n  \"respondedIn\" : \"00:10:24\",\n  \"createdTime\" : \"2016-07-25T10:01:14.536Z\",\n  \"id\" : \"2150000002498018\",\n  \"actions\" : [ ],\n  \"contentType\" : \"text/html\",\n  \"status\" : \"SUCCESS\",\n  \"direction\" : \"out\"\n}"
						}
					]
				},
				{
					"name": "Send Forum Reply",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/sendReply",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"sendReply"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API sends a reply to a comment on a forum post. While using this API, make sure to add the _ZohoDiscussions.basic.ALL_ scope in the request.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Send Forum Reply",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\" : \"FORUMS\",\n  \"content\" : \"Thanks for your feedback\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000094004/sendReply",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000094004",
										"sendReply"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Thanks for your feedback\",\n  \"isDescriptionThread\" : false,\n  \"canReply\" : true,\n  \"visibility\" : \"public\",\n  \"author\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000042001/photo?orgId=3983939\",\n    \"name\" : \"Jade Tywin\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  },\n  \"channel\" : \"FORUMS\",\n  \"source\" : {\n    \"appName\" : null,\n    \"extId\" : null,\n    \"type\" : \"SYSTEM\",\n    \"permalink\" : null,\n    \"appPhotoURL\" : null\n  },\n  \"content\" : \"Thanks for your feedback\",\n  \"hasAttach\" : false,\n  \"responderId\" : \"1892000000042001\",\n  \"channelRelatedInfo\" : {\n    \"isDeleted\" : \"false\",\n    \"isBestSolution\" : \"true\",\n    \"externalLink\" : null\n  },\n  \"respondedIn\" : \"00:06:54\",\n  \"createdTime\" : \"2016-07-25T09:50:03.578Z\",\n  \"id\" : \"1892000001121138\",\n  \"actions\" : [ ],\n  \"contentType\" : \"text/html\",\n  \"status\" : \"SUCCESS\",\n  \"direction\" : \"out\"\n}"
						}
					]
				},
				{
					"name": "Draft Email Reply",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/draftReply",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"draftReply"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API drafts an email reply. The from address in the email must be a from address configured in your help desk portal.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Draft Email Reply",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\" : \"EMAIL\",\n  \"attachmentIds\" : [ \"1312123141313\" ],\n  \"to\" : \"carol@zylker.com\",\n  \"fromEmailAddress\" : \"techsupport@zylker.com\",\n  \"contentType\" : \"plainText\",\n  \"content\" : \"We have escaled the issue. Will update you regarding the progress.\",\n  \"isForward\" : \"true\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000094004/draftReply",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000094004",
										"draftReply"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"summary\" : \"We have escaled the issue. Will update you regarding the progress.\",\n  \"cc\" : \"\",\n  \"isDescriptionThread\" : false,\n  \"bcc\" : \"\",\n  \"attachments\" : [ {\n    \"size\" : \"324\",\n    \"name\" : \"atach.png\",\n    \"id\" : \"1892000000042043\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000000093205/threads/1892000001083008/attachments/1892000001083005/content\"\n  } ],\n  \"canReply\" : true,\n  \"visibility\" : \"public\",\n  \"author\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000042001/photo?orgId=3983939\",\n    \"name\" : \"Jade Tywin\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  },\n  \"channel\" : \"EMAIL\",\n  \"source\" : {\n    \"appName\" : null,\n    \"extId\" : null,\n    \"type\" : \"SYSTEM\",\n    \"permalink\" : null,\n    \"appPhotoURL\" : null\n  },\n  \"content\" : \"We have escaled the issue. Will update you regarding the progress.\",\n  \"isForward\" : false,\n  \"hasAttach\" : true,\n  \"responderId\" : \"1892000000042001\",\n  \"channelRelatedInfo\" : null,\n  \"createdTime\" : \"2016-05-25T10:06:09.686Z\",\n  \"id\" : \"1892000001004072\",\n  \"to\" : \"carol@zylker.com\",\n  \"fromEmailAddress\" : \"techsupport@zylker.com\",\n  \"actions\" : [ {\n    \"method\" : \"POST\",\n    \"rel\" : \"send\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000000094004/sendDraft?draftThreadId=1892000001004072\"\n  }, {\n    \"method\" : \"DELETE\",\n    \"rel\" : \"delete\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000000094004/draftReply/1892000001004072\"\n  } ],\n  \"contentType\" : \"text/html\",\n  \"status\" : \"DRAFT\",\n  \"direction\" : \"out\"\n}"
						}
					]
				},
				{
					"name": "Draft Facebook Reply",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/draftReply",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"draftReply"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API drafts a reply to a Facebook post.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Draft Facebook Reply",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\" : \"FACEBOOK\",\n  \"content\" : \"The issue has been fixed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000094004/draftReply",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000094004",
										"draftReply"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"summary\" : \"The issue has been fixed\",\n  \"isDescriptionThread\" : false,\n  \"canReply\" : true,\n  \"visibility\" : \"public\",\n  \"author\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/2150000000043591/photo?orgId=3983939\",\n    \"name\" : \"Jade Tywin\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  },\n  \"channel\" : \"FACEBOOK\",\n  \"source\" : {\n    \"appName\" : null,\n    \"extId\" : null,\n    \"type\" : \"SYSTEM\",\n    \"permalink\" : null,\n    \"appPhotoURL\" : null\n  },\n  \"content\" : \"The issue has been fixed\",\n  \"hasAttach\" : false,\n  \"responderId\" : \"2150000000043591\",\n  \"channelRelatedInfo\" : null,\n  \"createdTime\" : \"2016-07-25T10:04:43.739Z\",\n  \"id\" : \"2150000002498038\",\n  \"actions\" : [ {\n    \"method\" : \"POST\",\n    \"rel\" : \"send\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000000094004/sendDraft?draftThreadId=1892000001004072\"\n  }, {\n    \"method\" : \"DELETE\",\n    \"rel\" : \"delete\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000000094004/draftReply/1892000001004072\"\n  } ],\n  \"contentType\" : \"text/html\",\n  \"status\" : \"DRAFT\",\n  \"direction\" : \"out\"\n}"
						}
					]
				},
				{
					"name": "Draft Forum Reply",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/draftReply",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"draftReply"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API drafts a reply to a forum post.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Draft Forum Reply",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\" : \"FORUMS\",\n  \"content\" : \"Thanks for your feedback\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000094004/draftReply",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000094004",
										"draftReply"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Thanks for your feedback\",\n  \"isDescriptionThread\" : false,\n  \"canReply\" : true,\n  \"visibility\" : \"public\",\n  \"author\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000042001/photo?orgId=3983939\",\n    \"name\" : \"Jade Tywin\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  },\n  \"channel\" : \"FORUMS\",\n  \"source\" : {\n    \"appName\" : null,\n    \"extId\" : null,\n    \"type\" : \"SYSTEM\",\n    \"permalink\" : null,\n    \"appPhotoURL\" : null\n  },\n  \"content\" : \"Thanks for your feedback\",\n  \"hasAttach\" : false,\n  \"responderId\" : \"1892000000042001\",\n  \"channelRelatedInfo\" : {\n    \"isDeleted\" : \"false\",\n    \"isBestSolution\" : \"true\",\n    \"externalLink\" : null\n  },\n  \"createdTime\" : \"2016-07-25T09:50:03.578Z\",\n  \"id\" : \"1892000001121138\",\n  \"actions\" : [ {\n    \"method\" : \"POST\",\n    \"rel\" : \"send\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000000094004/sendDraft?draftThreadId=1892000001004072\"\n  }, {\n    \"method\" : \"DELETE\",\n    \"rel\" : \"delete\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000000094004/draftReply/1892000001004072\"\n  } ],\n  \"contentType\" : \"text/html\",\n  \"status\" : \"DRAFT\",\n  \"direction\" : \"out\"\n}"
						}
					]
				},
				{
					"name": "Update Draft",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/draftReply/{thread_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"draftReply",
								"{thread_id}"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API updates a draft thread created via the EMAIL, FACEBOOK, or FORUM channel.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| channel  | &lt;string&gt;<br />max chars : 100 | Channel through which the thread originated. Values supported are `FACEBOOK`, `TWITTER`, `EMAIL` and `FORUMS` . \n| content  | &lt;string&gt;<br />max chars : 16000000 | Content of the thread \n| contentType  | &lt;string&gt;<br />max chars : 100 | Formatting type of the content. Applicable only for the `EMAIL` channel. Values supported are `html` and `plainText` (default). \n| isForward  | &lt;boolean&gt;<br /> | Key that returns if the thread was sent as a forward. Applicable only for the `EMAIL` channel. \n| isPrivate  | &lt;boolean&gt;<br /> | Specifies whether the thread is Private or Public. Forwarded threads are always private. \n| inReplyToThreadId  | &lt;long&gt;<br /> | ID of the thread to which current thread is a reply, applicable only for `EMAIL` channel \n| attachmentIds  | &lt;list&gt;<br /> | List of attachment IDs, applicable only for `EMAIL` channel. For information on how to retrieve attachment IDs, refer to the `Uploads` section.  \n| direction  | &lt;string&gt;<br />max chars : 100 | Key that returns whether the thread is incoming or outgoing \n| fromEmailAddress  | &lt;string&gt;<br />max chars : 300 | Mandatory parameter for creating an email thread. Applicable for `EMAIL`, `ONLINE_CHAT`, `OFFLINE_CHAT`, `CUSTOMERPORTAL`, and `FORUMS` channels. \n| to  | &lt;string&gt;<br />max chars : 13000 | To email ID in the thread, applicable only for `EMAIL` channel \n| cc  | &lt;string&gt;<br />max chars : 13000 | Email ID to be CC-ed. Applicable only for `EMAIL` channel \n| bcc  | &lt;string&gt;<br />max chars : 13000 | Email ID to be BCC-ed., if any exist. Applicable only for `EMAIL` channel \n| hasAttach  | &lt;boolean&gt;<br /> | States whether the thread has attachments \n| ticketStatus  | &lt;string&gt;<br />max chars : 120 | Status of the ticket. Includes the custom statuses configured in your help desk portal. \n"
					},
					"response": [
						{
							"name": "Update Draft",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channel\" : \"EMAIL\",\n  \"to\" : \"carol@zylker.com\",\n  \"fromEmailAddress\" : \"techsupport@zylker.com\",\n  \"contentType\" : \"plainText\",\n  \"content\" : \"We are analysing the issue currently , will update you with a solution as early as possible\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000094004/draftReply/1892000001004072",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000094004",
										"draftReply",
										"1892000001004072"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"summary\" : \"We are analysing the issue currently , will update you with a solution as early as possible\",\n  \"cc\" : \"\",\n  \"isDescriptionThread\" : false,\n  \"bcc\" : \"\",\n  \"canReply\" : true,\n  \"visibility\" : \"public\",\n  \"author\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000042001/photo?orgId=3983939\",\n    \"name\" : \"Jade Tywin\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  },\n  \"channel\" : \"EMAIL\",\n  \"source\" : {\n    \"appName\" : null,\n    \"extId\" : null,\n    \"type\" : \"SYSTEM\",\n    \"permalink\" : null,\n    \"appPhotoURL\" : null\n  },\n  \"content\" : \"We are analysing the issue currently , will update you with a solution as early as possible\",\n  \"isForward\" : false,\n  \"hasAttach\" : false,\n  \"responderId\" : \"1892000000042001\",\n  \"channelRelatedInfo\" : null,\n  \"createdTime\" : \"2016-05-25T10:06:09.686Z\",\n  \"id\" : \"1892000001004072\",\n  \"to\" : \"carol@zylker.com\",\n  \"fromEmailAddress\" : \"techsupport@zylker.com\",\n  \"actions\" : [ {\n    \"method\" : \"POST\",\n    \"rel\" : \"send\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000000094004/sendDraft?draftThreadId=1892000001004072\"\n  }, {\n    \"method\" : \"DELETE\",\n    \"rel\" : \"delete\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000000094004/draftReply/1892000001004072\"\n  } ],\n  \"contentType\" : \"text/html\",\n  \"status\" : \"DRAFT\",\n  \"direction\" : \"out\"\n}"
						}
					]
				},
				{
					"name": "Delete attachment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/threads/{thread_id}/attachments/{attachment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"threads",
								"{thread_id}",
								"attachments",
								"{attachment_id}"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API deletes an attachment from a draft thread.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Delete attachment",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000093205/threads/1892000001083008/attachments/1892000001083005",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000093205",
										"threads",
										"1892000001083008",
										"attachments",
										"1892000001083005"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Threads are conversations that occur between agents and customers. A thread can originate from multiple channels, such as FACEBOOK, TWITTER, EMAIL, TWITTER_DM, WEB, ONLINE_CHAT, OFFLINE_CHAT, FORUMS, TWILIO, ZTI, CUSTOMERPORTAL, FEEDBACK, FEEDBACK_WIDGET."
		},
		{
			"name": "Contacts",
			"item": [
				{
					"name": "Get Contact",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contacts/:contact_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contacts",
								":contact_id"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Allowed values are :  `accounts` , `owner`",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API fetches a single contact from your help desk portal.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Contact",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/1892000000042032?include=owner",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"1892000000042032"
									],
									"query": [
										{
											"key": "include",
											"value": "owner"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"lastName\" : \"Lawrence\",\n  \"modifiedTime\" : \"2016-05-04T09:57:17.000Z\",\n  \"country\" : null,\n  \"secondaryEmail\" : null,\n  \"city\" : null,\n  \"description\" : null,\n  \"ownerId\" : \"1892000000042001\",\n  \"type\" : null,\n  \"title\" : null,\n  \"photoURL\" : \"https://desk.zoho.com/api/v1/contacts/1892000000042032/photo\",\n  \"twitter\" : null,\n  \"isDeleted\" : false,\n  \"isTrashed\" : false,\n  \"street\" : null,\n  \"createdTime\" : \"2013-11-04T11:21:07.000Z\",\n  \"zohoCRMContact\" : {\n    \"id\" : \"5000000014010\",\n    \"type\" : \"contacts_leads\"\n  },\n  \"customerHappiness\" : {\n    \"badPercentage\" : \"22\",\n    \"okPercentage\" : \"31\",\n    \"goodPercentage\" : \"47\"\n  },\n  \"state\" : null,\n  \"id\" : \"1892000000042032\",\n  \"email\" : \"lawrence@zylker.com\",\n  \"zip\" : null,\n  \"owner\" : {\n    \"firstName\" : \"Twin\",\n    \"lastName\" : \"john\",\n    \"id\" : \"1892000000042001\"\n  },\n  \"cf\" : {\n    \"cf_permanentaddress\" : null,\n    \"cf_lastcontactedon\" : null\n  },\n  \"isFollowing\" : \"true\",\n  \"facebook\" : null,\n  \"mobile\" : null,\n  \"accountId\" : \"1892000000975382\",\n  \"firstName\" : \"Jennifer\",\n  \"isAnonymous\" : false,\n  \"phone\" : \"1 888 900 9646\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n  \"isSpam\" : false\n}"
						}
					]
				},
				{
					"name": "List contacts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contacts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contacts"
							],
							"query": [
								{
									"key": "include",
									"value": "<list>\n",
									"description": "Secondary information related to the contact.Value supported is `accounts`.",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the contacts must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<string>\nmax chars : 100,",
									"description": "Number of contacts to fetch",
									"disabled": true
								},
								{
									"key": "viewId",
									"value": "<integer>\n",
									"description": "ID of the view to apply while fetching the resources",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort by a specific attribute: `firstName`, `lastName`, or `createdTime`.The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								},
								{
									"key": "fields",
									"value": "<string>\nmax chars : 100",
									"description": "Key that returns the values of mentioned fields (both pre-defined and custom) in your portal. All field types except multi-text are supported. Standard, non-editable fields are supported too. These fields include:  `photoURL`, `webUrl`. Maximum of 30 fields is supported as comma separated values.",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of contacts, based on the limit specified.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "List contacts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"lastName\" : \"Case\",\n    \"secondaryEmail\" : null,\n    \"mobile\" : \"+91 8508569683\",\n    \"ownerId\" : null,\n    \"type\" : null,\n    \"accountId\" : \"1892000000091433\",\n    \"firstName\" : \"Jonathan\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/contacts/1892000000772003/photo\",\n    \"isAnonymous\" : false,\n    \"phone\" : \"1 888 900 9646\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2015-02-16T14:46:24.000Z\",\n    \"isEndUser\" : false,\n    \"zohoCRMContact\" : null,\n    \"id\" : \"1892000000772003\",\n    \"isSpam\" : false,\n    \"customerHappiness\" : {\n      \"badPercentage\" : \"0\",\n      \"okPercentage\" : \"0\",\n      \"goodPercentage\" : \"0\"\n    },\n    \"email\" : \"case@zylker.com\"\n  }, {\n    \"lastName\" : \"Jade\",\n    \"secondaryEmail\" : null,\n    \"mobile\" : null,\n    \"ownerId\" : null,\n    \"type\" : null,\n    \"accountId\" : \"1892000000052077\",\n    \"firstName\" : \"Christ\",\n    \"photoURL\" : null,\n    \"isAnonymous\" : false,\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2015-02-16T14:46:24.000Z\",\n    \"isEndUser\" : false,\n    \"zohoCRMContact\" : {\n      \"id\" : \"1892000000772030\",\n      \"type\" : \"contacts_leads\"\n    },\n    \"id\" : \"1892000000772001\",\n    \"isSpam\" : false,\n    \"customerHappiness\" : {\n      \"badPercentage\" : \"22\",\n      \"okPercentage\" : \"31\",\n      \"goodPercentage\" : \"47\"\n    },\n    \"email\" : \"jade@zylker.com\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Create Contact",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contacts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contacts"
							]
						},
						"description": "This API creates a contact in your help desk portal.\n#### OAuth Scope\n- `Desk.contacts.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| customFields  | &lt;object&gt;<br /> | User-defined fields related to the contact \n| cf  | &lt;JSONObject&gt;<br /> | User-defined fields related to the contact \n| lastName (required) | &lt;string&gt;<br />max chars : 200 | Last name of the contact \n| firstName  | &lt;string&gt;<br />max chars : 100 | First name of the contact \n| facebook  | &lt;string&gt;<br />max chars : 300 | Facebook ID of the contact \n| twitter  | &lt;string&gt;<br />max chars : 300 | Twitter ID of the contact \n| secondaryEmail  | &lt;string&gt;<br />max chars : 100 | Secondary email ID of the contact \n| email  | &lt;string&gt;<br />max chars : 255 | Email ID of the contact \n| phone  | &lt;string&gt;<br />max chars : 100 | Phone number of the contact \n| mobile  | &lt;string&gt;<br />max chars : 100 | Mobile number of the contact \n| city  | &lt;string&gt;<br />max chars : 100 | Contact's city of residence \n| country  | &lt;string&gt;<br />max chars : 100 | Contact's country of residence \n| state  | &lt;string&gt;<br />max chars : 100 | Contact's state of residence \n| street  | &lt;string&gt;<br />max chars : 250 | Contact's address \n| zip  | &lt;string&gt;<br />max chars : 100 | Zip code \n| description  | &lt;string&gt;<br />max chars : 65535 | Contact description \n| title  | &lt;string&gt;<br />max chars : 120 | Contact title \n| type  | &lt;string&gt;<br />max chars : 120 | Contact type \n| ownerId  | &lt;long&gt;<br /> | ID of the user who creates the contact \n| accountId  | &lt;long&gt;<br /> | Account to which the contact is mapped \n"
					},
					"response": [
						{
							"name": "Create Contact",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"zip\" : \"123902\",\n  \"lastName\" : \"Jack\",\n  \"country\" : \"USA\",\n  \"secondaryEmail\" : \"hughjack@zylker.com\",\n  \"city\" : \"Texas\",\n  \"facebook\" : \"hugh jacks\",\n  \"mobile\" : \"+10 2328829010\",\n  \"description\" : \"first priority contact\",\n  \"ownerId\" : \"1892000000056007\",\n  \"type\" : \"paidUser\",\n  \"title\" : \"The contact\",\n  \"accountId\" : \"1892000000052077\",\n  \"firstName\" : \"hugh\",\n  \"twitter\" : \"Hugh jack\",\n  \"phone\" : \"91020080878\",\n  \"street\" : \"North street\",\n  \"state\" : \"Austin\",\n  \"email\" : \"jack@zylker.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"lastName\" : \"Jack\",\n  \"modifiedTime\" : \"2016-07-26T13:11:02.000Z\",\n  \"country\" : \"USA\",\n  \"secondaryEmail\" : \"hughjack@zylker.com\",\n  \"city\" : \"Texas\",\n  \"description\" : \"first priority contact\",\n  \"ownerId\" : \"1892000000056007\",\n  \"type\" : \"paidUser\",\n  \"title\" : \"The contact\",\n  \"photoURL\" : null,\n  \"twitter\" : \"Hugh jack\",\n  \"isDeleted\" : false,\n  \"isTrashed\" : false,\n  \"street\" : \"North street\",\n  \"createdTime\" : \"2016-07-26T13:11:02.000Z\",\n  \"zohoCRMContact\" : null,\n  \"state\" : \"Austin\",\n  \"id\" : \"1892000001128052\",\n  \"customerHappiness\" : {\n    \"badPercentage\" : \"0\",\n    \"okPercentage\" : \"0\",\n    \"goodPercentage\" : \"0\"\n  },\n  \"email\" : \"jack@zylker.com\",\n  \"zip\" : \"123902\",\n  \"cf\" : {\n    \"cf_permanentaddress\" : null,\n    \"cf_lastcontactedon\" : null\n  },\n  \"isFollowing\" : \"true\",\n  \"facebook\" : \"hugh jack\",\n  \"mobile\" : \"+10 2328829010\",\n  \"accountId\" : \"1892000000052077\",\n  \"firstName\" : \"hugh\",\n  \"isAnonymous\" : false,\n  \"phone\" : \"91020080878\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n  \"isSpam\" : false\n}"
						}
					]
				},
				{
					"name": "Update a contact",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contacts/:contact_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contacts",
								":contact_id"
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API updates details of an existing contact.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| customFields  | &lt;object&gt;<br /> | User-defined fields related to the contact \n| cf  | &lt;JSONObject&gt;<br /> | User-defined fields related to the contact \n| lastName  | &lt;string&gt;<br />max chars : 200 | Last name of the contact \n| firstName  | &lt;string&gt;<br />max chars : 100 | First name of the contact \n| facebook  | &lt;string&gt;<br />max chars : 300 | Facebook ID of the contact \n| twitter  | &lt;string&gt;<br />max chars : 300 | Twitter ID of the contact \n| secondaryEmail  | &lt;string&gt;<br />max chars : 100 | Secondary email ID of the contact \n| email  | &lt;string&gt;<br />max chars : 255 | Email ID of the contact \n| phone  | &lt;string&gt;<br />max chars : 100 | Phone number of the contact \n| mobile  | &lt;string&gt;<br />max chars : 100 | Mobile number of the contact \n| city  | &lt;string&gt;<br />max chars : 100 | Contact's city of residence \n| country  | &lt;string&gt;<br />max chars : 100 | Contact's country of residence \n| state  | &lt;string&gt;<br />max chars : 100 | Contact's state of residence \n| street  | &lt;string&gt;<br />max chars : 250 | Contact's address \n| zip  | &lt;string&gt;<br />max chars : 100 | Zip code \n| description  | &lt;string&gt;<br />max chars : 65535 | Contact description \n| title  | &lt;string&gt;<br />max chars : 120 | Contact title \n| type  | &lt;string&gt;<br />max chars : 120 | Contact type \n| ownerId  | &lt;long&gt;<br /> | ID of the user who creates the contact \n| accountId  | &lt;long&gt;<br /> | Account to which the contact is mapped \n"
					},
					"response": [
						{
							"name": "Update a contact",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"zip\" : \"123902\",\n  \"lastName\" : \"john\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/1892000001128052",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"1892000001128052"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"lastName\" : \"john\",\n  \"modifiedTime\" : \"2016-07-26T13:11:02.000Z\",\n  \"country\" : \"USA\",\n  \"secondaryEmail\" : \"stephen@zylker.com\",\n  \"city\" : \"Texas\",\n  \"description\" : \"first priority contact\",\n  \"ownerId\" : \"1892000000056007\",\n  \"type\" : \"paidUser\",\n  \"title\" : \"The contact\",\n  \"photoURL\" : null,\n  \"twitter\" : \"stephen john\",\n  \"isDeleted\" : false,\n  \"isTrashed\" : false,\n  \"street\" : \"East street\",\n  \"createdTime\" : \"2016-07-26T13:11:02.000Z\",\n  \"zohoCRMContact\" : null,\n  \"state\" : \"Austin\",\n  \"id\" : \"1892000001128052\",\n  \"customerHappiness\" : {\n    \"badPercentage\" : \"0\",\n    \"okPercentage\" : \"0\",\n    \"goodPercentage\" : \"0\"\n  },\n  \"email\" : \"stephent@zylker.com\",\n  \"zip\" : \"123902\",\n  \"cf\" : {\n    \"cf_permanentaddress\" : null,\n    \"cf_lastcontactedon\" : null\n  },\n  \"isFollowing\" : \"true\",\n  \"facebook\" : \"Steve john\",\n  \"mobile\" : \"+129737289298\",\n  \"accountId\" : \"1892000000052077\",\n  \"firstName\" : \"Stephen\",\n  \"isAnonymous\" : \"false\",\n  \"phone\" : \"8981901921\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n  \"isSpam\" : false\n}"
						}
					]
				},
				{
					"name": "Delete Contacts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contacts/moveToTrash",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contacts",
								"moveToTrash"
							]
						},
						"description": "This API moves the contacts specified to the Recycle Bin.\n#### OAuth Scope\n- `Desk.contacts.DELETE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| contactIds (required) | &lt;list&gt;<br /> | IDs of the contacts to move to the Recycle Bin \n"
					},
					"response": [
						{
							"name": "Delete Contacts",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contactIds\" : [ \"2000032002145\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/moveToTrash",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"moveToTrash"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Contact Profiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contacts/:contact_id/profiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contacts",
								":contact_id",
								"profiles"
							],
							"query": [
								{
									"key": "include",
									"value": "<list>\n",
									"description": "Additional information related to the profile's channel. Values allowed are: `source`",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This api fetches the list of profiles of this contact from various channels.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Contact Profiles",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/18289300000002/profiles",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"18289300000002",
										"profiles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"photoURL\" : \"https://www.youtube.com/user/iwe3in2/photo\",\n    \"displayName\" : \"Jade Vlogs\",\n    \"name\" : \"Jade Zylker\",\n    \"channel\" : \"YOUTUBE\",\n    \"id\" : \"3923923923\",\n    \"source\" : {\n      \"appName\" : \"Youtube Sync App\",\n      \"permalink\" : \"https://www.examplechannel.com/apps/redirect.php?entity=profile&id=3290dweiod\",\n      \"appPhotoURL\" : \"https://desk.zoho.com/api/v1/channels/youtube/photo?orgId=666236571\"\n    }\n  }, {\n    \"photoURL\" : \"https://www.intagram.com/johninsta/photo\",\n    \"displayName\" : \"John Insta\",\n    \"name\" : \"John Zylker\",\n    \"channel\" : \"INSTAGRAM\",\n    \"id\" : \"3923923924\",\n    \"source\" : {\n      \"appName\" : \"Instagram Syncing App\",\n      \"permalink\" : \"https://www.examplechannel.com/apps/redirect.php?entity=profile&id=3290dweiod\",\n      \"appPhotoURL\" : \"https://desk.zoho.com/api/v1/channels/instagram/photo?orgId=666236571\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Update many contacts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contacts/updateMany",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contacts",
								"updateMany"
							]
						},
						"description": "This API updates multiple contacts at once.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | Array containing the IDs of the entities to update. The maximum number of IDs allowed is 50. \n| fieldName (required) | &lt;string&gt;<br />max chars : 320 |  Name of the field&nbsp;to update \n| fieldValue  | &lt;string&gt;<br />max chars : 320 | Value in the field \n| isCustomField  | &lt;boolean&gt;<br /> | Key that denotes if the field is a user-defined field or not \n"
					},
					"response": [
						{
							"name": "Update many contacts",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fieldName\" : \"mobile\",\n  \"isCustomField\" : false,\n  \"ids\" : [ \"1892000000093303\", \"1892000000085009\", \"1892000000050003\" ],\n  \"fieldValue\" : \"8508569875\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/updateMany",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"updateMany"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : true,\n    \"id\" : \"1892000000093303\",\n    \"errors\" : null\n  }, {\n    \"success\" : true,\n    \"id\" : \"1892000000085009\",\n    \"errors\" : null\n  }, {\n    \"success\" : false,\n    \"id\" : \"1892000000050003\",\n    \"errors\" : {\n      \"errorCode\" : \"UNPROCESSABLE_ENTITY\",\n      \"httpCode\" : \"422\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "List Contacts By Ids",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contacts/contactsByIds?ids=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contacts",
								"contactsByIds"
							],
							"query": [
								{
									"key": "ids",
									"value": "<long>\n",
									"description": "List of Contact Ids (separated by comma) which must be fetched. The maximum number of IDs allowed is 20."
								}
							]
						},
						"description": "This API lists details of specific contacts, based on the IDs passed in the request.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "List Contacts By Ids",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/contactsByIds?ids=1892000000772001,1892000000772003",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"contactsByIds"
									],
									"query": [
										{
											"key": "ids",
											"value": "1892000000772001,1892000000772003"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"lastName\" : \"Case\",\n    \"secondaryEmail\" : null,\n    \"mobile\" : \"+91 8508569683\",\n    \"ownerId\" : null,\n    \"type\" : null,\n    \"accountId\" : \"1892000000091433\",\n    \"firstName\" : \"Jonathan\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/contacts/1892000000772003/photo\",\n    \"isAnonymous\" : false,\n    \"phone\" : \"1 888 900 9646\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n    \"isEndUser\" : false,\n    \"zohoCRMContact\" : null,\n    \"id\" : \"1892000000772003\",\n    \"isSpam\" : false,\n    \"customerHappiness\" : {\n      \"badPercentage\" : \"0\",\n      \"okPercentage\" : \"0\",\n      \"goodPercentage\" : \"0\"\n    },\n    \"email\" : \"case@zylker.com\"\n  }, {\n    \"lastName\" : \"Jade\",\n    \"secondaryEmail\" : null,\n    \"mobile\" : null,\n    \"ownerId\" : null,\n    \"type\" : null,\n    \"accountId\" : \"1892000000052077\",\n    \"firstName\" : \"Christ\",\n    \"photoURL\" : null,\n    \"isAnonymous\" : false,\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n    \"isEndUser\" : false,\n    \"zohoCRMContact\" : {\n      \"id\" : \"1892000000772030\",\n      \"type\" : \"contacts_leads\"\n    },\n    \"id\" : \"1892000000772001\",\n    \"customerHappiness\" : {\n      \"badPercentage\" : \"22\",\n      \"okPercentage\" : \"31\",\n      \"goodPercentage\" : \"47\"\n    },\n    \"isSpam\" : false,\n    \"email\" : \"jade@zylker.com\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List tickets by contact",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contacts/:contact_id/tickets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contacts",
								":contact_id",
								"tickets"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the tickets must be fetched",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<Integer>\n",
									"description": "Index number, starting from which the tickets must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<Integer>\nrange : 1-100",
									"description": "Number of tickets to fetch",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort by a specific attribute: `createdTime` or `modifiedTime`. The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								},
								{
									"key": "dueDate",
									"value": "<string>\nmax chars : 100",
									"description": "Filter by ticket duedate. Values allowed are `overdue`, `tomorrow`, `currentWeek`, `currentMonth` and `today`. You can include both values by separating them with a comma",
									"disabled": true
								},
								{
									"key": "isSpam",
									"value": "<boolean>\ndefault : false",
									"description": "Filters Spam tickets",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the tickets.&nbsp;Values allowed are:&nbsp;`products`,&nbsp;`departments`,&nbsp;`team`,&nbsp;`isRead` and&nbsp;`assignee`. You can pass multiple values by separating them with a comma in the API request.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API lists tickets received from a specific contact.\n#### OAuth Scope\n- `Desk.search.READ`\n- `Desk.tickets.READ`\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "List tickets by contact",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/18944000000421011/tickets?include=departments,team,assignee",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"18944000000421011",
										"tickets"
									],
									"query": [
										{
											"key": "include",
											"value": "departments,team,assignee"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"149\",\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : \"2017-11-04T07:03:09.000Z\",\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Email\",\n    \"onholdTime\" : null,\n    \"language\" : \"English\",\n    \"closedTime\" : null,\n    \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n    \"id\" : \"18944000000336005\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"support@zylker.com\",\n    \"customerResponseTime\" : \"2017-11-03T07:03:09.203Z\",\n    \"productId\" : \"18944000000424033\",\n    \"contactId\" : \"18944000000421011\",\n    \"threadCount\" : \"7\",\n    \"lastThread\" : null,\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\"\n    },\n    \"priority\" : \"Medium\",\n    \"assigneeId\" : \"1892000000042001\",\n    \"commentCount\" : \"0\",\n    \"phone\" : \"9876543321\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/20d7881a46edfcffefe308ab38676ec3e612657a51fd5fbe\",\n    \"teamId\" : \"8920000000069071\",\n    \"isSpam\" : false,\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/1892000000042001/photo\",\n      \"id\" : \"1892000000042001\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"status\" : \"Open\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List products by contact",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contacts/:contact_id/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contacts",
								":contact_id",
								"products"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "From index",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of products to fetch",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "Department from which the products need to be queried",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API lists products associated for a specific contact.\n#### OAuth Scope\n- `Desk.products.READ`\n- `Desk.settings.READ`\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "List products by contact",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/4000000009277/products",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"4000000009277",
										"products"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"unitPrice\" : \"0.0\",\n    \"productCode\" : null,\n    \"id\" : \"4000000012009\",\n    \"productName\" : \"Dell\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get contacts count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contacts/count?viewId=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contacts",
								"count"
							],
							"query": [
								{
									"key": "viewId",
									"value": "<long>\n",
									"description": "Custom view ID"
								},
								{
									"key": "startsWith",
									"value": "<String>\n",
									"description": "Displays the number of contacts whose first name or last name begins with the letter you specify. Displays the total number of contacts if you do not specify a letter.",
									"disabled": true
								}
							]
						},
						"description": "This API displays the count for the number of contacts in a custom view\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "Get contacts count",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/count?viewId=4000227563021&startsWith=A",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"count"
									],
									"query": [
										{
											"key": "viewId",
											"value": "4000227563021"
										},
										{
											"key": "startsWith",
											"value": "A"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"count\" : \"10\"\n}"
						}
					]
				},
				{
					"name": "Get contact statistics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contacts/:contact_id/statistics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contacts",
								":contact_id",
								"statistics"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the statistics must be fetched. If you do not pass this parameter in the API request, statistics from all permitted departments will be fetched.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API fetches the overall statistics of an contact.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "Get contact statistics",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/4000227563022/statistics",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"4000227563022",
										"statistics"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"firstResponseTime\" : \"120000\",\n  \"openTickets\" : \"11\",\n  \"responseTime\" : \"13150000\",\n  \"spamTickets\" : \"0\",\n  \"totalTickets\" : \"36\",\n  \"customerHappiness\" : {\n    \"badCount\" : \"50\",\n    \"goodCount\" : \"0\",\n    \"okCount\" : \"50\"\n  },\n  \"closedTickets\" : \"23\",\n  \"resolutionTime\" : \"0\",\n  \"channelWiseCount\" : {\n    \"Web\" : \"12\",\n    \"Forums\" : \"14\",\n    \"Chat\" : \"10\"\n  },\n  \"onholdTickets\" : \"2\",\n  \"escalatedTickets\" : \"0\",\n  \"overdueTickets\" : \"0\"\n}"
						}
					]
				},
				{
					"name": "Merge Contacts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contacts/:contact_id/merge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contacts",
								":contact_id",
								"merge"
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API merges two or more contacts<br/><br/>Note:<br/>Though portal users (users who signed up via the help center) are saved as contacts in the help desk, their records cannot be merged with other records/contacts.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | Array containing the IDs of the contacts to merge \n| source  | &lt;object&gt;<br /> | JSON object containing details of the contact \n"
					},
					"response": [
						{
							"name": "Merge Contacts",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\" : [ \"4000000018011\", \"4000000018021\" ],\n  \"source\" : {\n    \"zip\" : \"4000000018011\",\n    \"lastName\" : \"4000000018011\",\n    \"country\" : \"4000000018011\",\n    \"secondaryEmail\" : \"4000000018011\",\n    \"cf\" : {\n      \"cf_permanentaddress\" : 1892220000042001\n    },\n    \"city\" : \"4000000018011\",\n    \"facebook\" : \"4000000018011\",\n    \"mobile\" : \"4000000018011\",\n    \"description\" : \"4000000018011\",\n    \"type\" : \"4000000018011\",\n    \"title\" : \"4000000018011\",\n    \"firstName\" : \"4000000018011\",\n    \"accountId\" : \"4000000018011\",\n    \"twitter\" : \"4000000018011\",\n    \"phone\" : \"4000000018011\",\n    \"street\" : \"4000000018011\",\n    \"email\" : \"4000000018011\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/1892000000042032/merge",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"1892000000042032",
										"merge"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"lastName\" : \"Lawrence\",\n  \"modifiedTime\" : \"2016-05-04T09:57:17.000Z\",\n  \"country\" : null,\n  \"secondaryEmail\" : null,\n  \"city\" : null,\n  \"description\" : null,\n  \"ownerId\" : \"1892000000042001\",\n  \"type\" : null,\n  \"title\" : null,\n  \"photoURL\" : \"https://desk.zoho.com/api/v1/contacts/1892000000042032/photo\",\n  \"twitter\" : null,\n  \"isDeleted\" : false,\n  \"street\" : null,\n  \"createdTime\" : \"2013-11-04T11:21:07.000Z\",\n  \"zohoCRMContact\" : {\n    \"id\" : \"5000000014010\",\n    \"type\" : \"contacts_leads\"\n  },\n  \"customerHappiness\" : {\n    \"badPercentage\" : \"22\",\n    \"okPercentage\" : \"31\",\n    \"goodPercentage\" : \"47\"\n  },\n  \"state\" : null,\n  \"id\" : \"1892000000042032\",\n  \"email\" : \"lawrence@zylker.com\",\n  \"zip\" : null,\n  \"cf\" : {\n    \"cf_permanentaddress\" : null,\n    \"cf_lastcontactedon\" : null\n  },\n  \"isFollowing\" : \"true\",\n  \"facebook\" : null,\n  \"mobile\" : null,\n  \"accountId\" : \"1892000000975382\",\n  \"firstName\" : \"Jennifer\",\n  \"isAnonymous\" : false,\n  \"phone\" : \"1 888 900 9646\",\n  \"isSpam\" : false\n}"
						}
					]
				},
				{
					"name": "Mark contact as spam",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contacts/markSpam",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contacts",
								"markSpam"
							]
						},
						"description": "This API marks contacts as spam.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | ID(s) of the contact(s) that must be marked or unmarked as spam \n| isSpam (required) | &lt;boolean&gt;<br /> | Key that marks or unmarks a single contact or multiple contacts as spam \n| handleExistingTickets  | &lt;boolean&gt;<br /> | Key that marks or unmarks tickets from the contact(s) as spam \n"
					},
					"response": [
						{
							"name": "Mark contact as spam",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"handleExistingTickets\" : \"true\",\n  \"ids\" : [ \"1000000030065\", \"1000000030068\" ],\n  \"isSpam\" : \"true\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/markSpam",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"markSpam"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : false,\n    \"id\" : \"1000000030068\",\n    \"errors\" : {\n      \"errorCode\" : \"UNPROCESSABLE_ENTITY\",\n      \"httpCode\" : \"422\"\n    }\n  }, {\n    \"success\" : true,\n    \"id\" : \"1000000030063\",\n    \"errors\" : null\n  } ]\n}"
						}
					]
				},
				{
					"name": "Associate products with a contact",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contacts/:contact_id/associateProducts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contacts",
								":contact_id",
								"associateProducts"
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API associates products with a contact. Only a maximum of 10 products can be associated with a contact through a single API request.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | IDs of the resources to associate \n| departmentId  | &lt;long&gt;<br /> | ID of the department containing the products \n| associate (required) | &lt;boolean&gt;<br /> | `true` for associating the resource and `false` for dissociating the resource \n"
					},
					"response": [
						{
							"name": "Associate products with a contact",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"departmentId\" : \"7000000062800\",\n  \"ids\" : [ \"7000000027223\", \"7000000043968\" ],\n  \"associate\" : true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/7000000027081/associateProducts",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"7000000027081",
										"associateProducts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : true,\n    \"id\" : \"7000000027223\",\n    \"errors\" : null\n  }, {\n    \"success\" : false,\n    \"id\" : \"7000000043968\",\n    \"errors\" : {\n      \"errorCode\" : \"UNPROCESSABLE_ENTITY\",\n      \"httpCode\" : \"422\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get contact history",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contacts/:contact_id/history",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contacts",
								":contact_id",
								"history"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": " ID of the department from which the history details must be fetched",
									"disabled": true
								},
								{
									"key": "agentId",
									"value": "<long>\n",
									"description": " Key that filters ticket activities performed by a particular agent",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<Integer>\n",
									"description": " Index number, starting from which the history details must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<Integer>\nrange : 1-100",
									"description": " Number of history details to fetch",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API fetches the ticket history of a contact.\n#### OAuth Scope\n- `Desk.tickets.READ`\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "Get contact history",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/4000000012934/history",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"4000000012934",
										"history"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"156648\",\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Real Time analysis Requirement\",\n    \"author\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000012902/photo\",\n      \"firstName\" : \"Admin\",\n      \"lastName\" : \"Admin\",\n      \"id\" : \"4000000012902\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"saranraj@zylker.com\"\n    },\n    \"dueDate\" : null,\n    \"departmentId\" : \"4000000013957\",\n    \"priority\" : null,\n    \"recipients\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/4000000012999\",\n    \"eventTime\" : \"2019-09-19T09:37:11.000Z\",\n    \"operation\" : \"Comment_Updated\",\n    \"ticketId\" : \"4000000012999\",\n    \"status\" : \"Open\"\n  }, {\n    \"ticketNumber\" : \"125289\",\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Ticket subject here.\",\n    \"author\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000012902/photo\",\n      \"firstName\" : \"Admin\",\n      \"lastName\" : \"Admin\",\n      \"id\" : \"4000000012902\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"saranraj@zylker.com\"\n    },\n    \"dueDate\" : null,\n    \"departmentId\" : \"4000000013701\",\n    \"priority\" : null,\n    \"recipients\" : [ \"ragavan@zylker.com\", \"kannan@zylker.com\", \"thamizharasi@zylker.com\" ],\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/4000000012807\",\n    \"eventTime\" : \"2019-07-22T16:27:20.000Z\",\n    \"operation\" : \"Mail_Response_Forward\",\n    \"ticketId\" : \"4000000012807\",\n    \"status\" : \"Open\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Invite multiple contacts to help center",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contacts/inviteAsEndUser",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contacts",
								"inviteAsEndUser"
							]
						},
						"description": "This API helps invite multiple contacts as end-users to your help center.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| contactIds (required) | &lt;list&gt;<br /> | IDs of the contacts to invite \n| helpCenterId (required) | &lt;long&gt;<br /> | ID of the help center to which you want to add the contacts \n"
					},
					"response": [
						{
							"name": "Invite multiple contacts to help center",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"helpCenterId\" : \"4000000021302\",\n  \"contactIds\" : [ \"4000000012902\", \"40000000212902\", \"40000002129122\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/inviteAsEndUser",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"inviteAsEndUser"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : true,\n    \"id\" : \"1892000000093303\",\n    \"errors\" : null\n  }, {\n    \"success\" : true,\n    \"id\" : \"1892000000085009\",\n    \"errors\" : null\n  }, {\n    \"success\" : false,\n    \"id\" : \"1892000000050003\",\n    \"errors\" : {\n      \"errorCode\" : \"UNPROCESSABLE_ENTITY\",\n      \"httpCode\" : \"422\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Invite contact to help center",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contacts/:contact_id/inviteAsEndUser",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contacts",
								":contact_id",
								"inviteAsEndUser"
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API helps invite a particular contact as an end-user to your help center.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| helpCenterId (required) | &lt;long&gt;<br /> | ID of the help center to which you want to add the contact \n"
					},
					"response": [
						{
							"name": "Invite contact to help center",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"helpCenterId\" : \"4000000021302\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/40000000212902/inviteAsEndUser",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"40000000212902",
										"inviteAsEndUser"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete contact photo",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contacts/:contact_id/photo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contacts",
								":contact_id",
								"photo"
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API deletes the display picture of a contact.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Delete contact photo",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/40000000212902/photo",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"40000000212902",
										"photo"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get status of contact in help centers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contacts/:contact_id/helpCenters",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contacts",
								":contact_id",
								"helpCenters"
							],
							"query": [
								{
									"key": "helpCenterId",
									"value": "<Long>\n",
									"description": "To get specific helpcenter info",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API fetches a particular contact's activation status in all the help centers they are part of.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "Get status of contact in help centers",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/40000000212902/helpcenters",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"40000000212902",
										"helpcenters"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"helpCenter\" : {\n      \"name\" : \"Zoho\",\n      \"id\" : \"4000000016038\",\n      \"url\" : \"https://help.zoho.com/portal/zoho\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"userStatus\" : \"ACTIVE\",\n    \"userId\" : \"4000000023791\"\n  }, {\n    \"helpCenter\" : {\n      \"name\" : \"CRM\",\n      \"id\" : \"4000010498403\",\n      \"url\" : \"https://help.zoho.com/portal/crm\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"userStatus\" : \"ACTIVE\",\n    \"userId\" : \"4000000023791\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List accounts of contact",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contacts/:contact_id/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contacts",
								":contact_id",
								"accounts"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\n",
									"description": "Index number, starting from which the accounts must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of accounts to list",
									"disabled": true
								},
								{
									"key": "startsWith",
									"value": "<String>\n",
									"description": "Letter with which the names of the accounts must start",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort by a specific attribute: `accountName` or `createdTime` or `mappingType` . The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API lists the accounts associated with a particular contact.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "List accounts of contact",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/4000000009277/accounts",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"4000000009277",
										"accounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"website\" : \"www.zoho.com\",\n    \"accountName\" : \"ZOHO\",\n    \"phone\" : \"8822120911\",\n    \"mappingInfo\" : {\n      \"mappingId\" : 1892000000052072,\n      \"mappingType\" : \"PRIMARY\",\n      \"isAccountTicketsViewable\" : true\n    },\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n    \"zohoCRMAccount\" : {\n      \"id\" : \"32754000000537001\"\n    },\n    \"customerHappiness\" : {\n      \"badPercentage\" : \"30\",\n      \"okPercentage\" : \"30\",\n      \"goodPercentage\" : \"40\"\n    },\n    \"id\" : \"1892000000052077\",\n    \"email\" : \"admin@zylker.com\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Associate accounts with contact",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contacts/:contact_id/associateAccounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contacts",
								":contact_id",
								"associateAccounts"
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API associates multiple accounts with a particular contact.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| data  | &lt;list&gt;<br /> | Details of the accounts to associate with the contact \n"
					},
					"response": [
						{
							"name": "Associate accounts with contact",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\" : [ {\n    \"id\" : 7000000027223,\n    \"isAccountTicketsViewable\" : true\n  }, {\n    \"id\" : 7000000043968,\n    \"isAccountTicketsViewable\" : false\n  } ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/7000000027081/associateAccounts",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"7000000027081",
										"associateAccounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : true,\n    \"id\" : \"7000000027223\",\n    \"errors\" : null\n  }, {\n    \"success\" : null,\n    \"id\" : \"7000000043968\",\n    \"errors\" : {\n      \"errorMessage\" : \"This is a deleted account. You can restore the entry from the Recycle Bin of your Zoho Desk portal.\",\n      \"errorCode\" : \"UNPROCESSABLE_ENTITY\",\n      \"httpCode\" : \"422\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Dissociate accounts from contact",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contacts/:contact_id/dissociateAccounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contacts",
								":contact_id",
								"dissociateAccounts"
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API dissociates multiple accounts from a particular contact.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | IDs of the accounts to dissociate from the contact \n"
					},
					"response": [
						{
							"name": "Dissociate accounts from contact",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\" : [ \"7000000027223\", \"7000000043968\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/7000000027081/dissociateAccounts",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"7000000027081",
										"dissociateAccounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : true,\n    \"id\" : \"7000000027223\",\n    \"errors\" : null\n  } ]\n}"
						}
					]
				},
				{
					"name": "Dissociate account from contact",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contacts/:contact_id/accounts/{account_id}/dissociate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contacts",
								":contact_id",
								"accounts",
								"{account_id}",
								"dissociate"
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API dissociates a particular account from a contact.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| option  | &lt;String&gt;<br /> | Processing option to apply to the tickets after dissociating the account from the contact. Values allowed are: `Move Tickets to Contact`, `Move Tickets To Account`, `Delete Tickets`, and `Maintain Same Relationship` (default value). \n| optionValue  | &lt;long&gt;<br /> | ID of the account or contact to which the tickets must be moved \n"
					},
					"response": [
						{
							"name": "Dissociate account from contact",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"optionValue\" : 7000000027226,\n  \"option\" : \"Move Tickets To Contact\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/7000000027081/accounts/7000000027223/dissociate",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"7000000027081",
										"accounts",
										"7000000027223",
										"dissociate"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Contacts are the end-customers who raise requests or make enquiries/complaints with your customer service team. Each contact is mapped to an account."
		},
		{
			"name": "Accounts",
			"item": [
				{
					"name": "Get Account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/accounts/:account_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"accounts",
								":account_id"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Allowed values are :  `owner`",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "account_id"
								}
							]
						},
						"description": "This API fetches an account from your help desk portal.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Account",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/3263000000074571?include=owner",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"3263000000074571"
									],
									"query": [
										{
											"key": "include",
											"value": "owner"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"country\" : \"USA\",\n  \"modifiedTime\" : \"2015-03-02T14:49:18.000Z\",\n  \"code\" : \"3211\",\n  \"accountName\" : \"Zylker\",\n  \"city\" : null,\n  \"associatedSLAIds\" : [ 3263000000057, 3000000057001 ],\n  \"description\" : null,\n  \"industry\" : \"Automation\",\n  \"zohoCRMAccount\" : {\n    \"id\" : \"32754000000537001\"\n  },\n  \"ownerId\" : \"3263000000057001\",\n  \"isDeleted\" : false,\n  \"isTrashed\" : false,\n  \"street\" : null,\n  \"annualrevenue\" : null,\n  \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n  \"state\" : null,\n  \"id\" : \"3263000000074571\",\n  \"fax\" : \"+1 444 8656 8732\",\n  \"email\" : \"support@zylker.com\",\n  \"owner\" : {\n    \"firstName\" : \"Twin\",\n    \"lastName\" : \"john\",\n    \"id\" : \"3263000000057001\"\n  },\n  \"website\" : \"www.zylker.com\",\n  \"cf\" : {\n    \"cf_contactcount\" : \"1\"\n  },\n  \"isFollowing\" : \"true\",\n  \"phone\" : \"6218129190\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\"\n}"
						}
					]
				},
				{
					"name": "List accounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"accounts"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the accounts must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of accounts to fetch",
									"disabled": true
								},
								{
									"key": "viewId",
									"value": "<long>\n",
									"description": "ID of the view to apply while fetching the resources",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort by a specific attribute: `accountName` or `createdTime`. The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								},
								{
									"key": "fields",
									"value": "<string>\nmax chars : 100",
									"description": "Key that returns the values of mentioned fields (both pre-defined and custom) in your portal. All field types except multi-text are supported. Standard, non-editable fields are supported too. These fields include: `photoURL`, `webUrl`. Maximum of 30 fields is supported as comma separated values.",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of accounts, based on the limit specified.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "List accounts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"website\" : \"112121\",\n    \"accountName\" : \"Admin Account\",\n    \"phone\" : \"121212\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n    \"zohoCRMAccount\" : {\n      \"id\" : \"32754000000537001\"\n    },\n    \"customerHappiness\" : {\n      \"badPercentage\" : \"30\",\n      \"okPercentage\" : \"30\",\n      \"goodPercentage\" : \"40\"\n    },\n    \"id\" : \"1892000000052077\",\n    \"email\" : \"admin@zylker.com\"\n  }, {\n    \"website\" : \"1211212\",\n    \"accountName\" : \"Agent Account\",\n    \"phone\" : \"11211\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n    \"zohoCRMAccount\" : {\n      \"id\" : \"32754000000537001\"\n    },\n    \"customerHappiness\" : {\n      \"badPercentage\" : \"20\",\n      \"okPercentage\" : \"40\",\n      \"goodPercentage\" : \"40\"\n    },\n    \"id\" : \"1892000000052090\",\n    \"email\" : \"agent@zylker.com\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Create Account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"accounts"
							]
						},
						"description": "This API creates an account in your help desk portal.\n#### OAuth Scope\n- `Desk.contacts.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| customFields  | &lt;list&gt;<br /> | User-defined fields associated with the account \n| cf  | &lt;JSONObject&gt;<br /> | User-defined fields associated with the account \n| accountName (required) | &lt;string&gt;<br />max chars : 200 | Name of the account \n| email  | &lt;string&gt;<br />max chars : 150 | Email ID of the account \n| website  | &lt;string&gt;<br />max chars : 120 | Website of the account \n| fax  | &lt;string&gt;<br />max chars : 100 | Fax number of the account \n| ownerId  | &lt;long&gt;<br /> | ID of account owner \n| associatedSLAIds  | &lt;list&gt;<br /> | IDs of the SLAs associated with the account. An account can have multiple SLAs, but only one SLA per department can be mapped to it. \n| industry  | &lt;string&gt;<br />max chars : 120 | Industry in which the account operates \n| city  | &lt;string&gt;<br />max chars : 100 | City in which the account is based \n| country  | &lt;string&gt;<br />max chars : 100 | Country in which the account is based \n| state  | &lt;string&gt;<br />max chars : 100 | State in which the account is based \n| street  | &lt;string&gt;<br />max chars : 250 | Address of the account \n| code  | &lt;string&gt;<br />max chars : 100 | Zip code \n| description  | &lt;string&gt;<br />max chars : 65535 | A short description of the account \n| phone  | &lt;string&gt;<br />max chars : 100 | Phone number of the account \n| annualrevenue  | &lt;double&gt;<br /> | Annual revenue of the account \n"
					},
					"response": [
						{
							"name": "Create Account",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountName\" : \"Zylker\",\n  \"phone\" : \"98348229382\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"country\" : null,\n  \"modifiedTime\" : \"2015-03-02T14:49:18.000Z\",\n  \"website\" : null,\n  \"code\" : null,\n  \"cf\" : {\n    \"cf_contactcount\" : null\n  },\n  \"isFollowing\" : \"true\",\n  \"accountName\" : \"Zylker\",\n  \"city\" : null,\n  \"associatedSLAIds\" : [ 3263000000057, 3000000057001 ],\n  \"description\" : null,\n  \"industry\" : null,\n  \"zohoCRMAccount\" : {\n    \"id\" : \"32754000000537001\"\n  },\n  \"ownerId\" : \"3263000000057001\",\n  \"isDeleted\" : false,\n  \"isTrashed\" : false,\n  \"phone\" : \"98348229382\",\n  \"street\" : null,\n  \"annualrevenue\" : null,\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n  \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n  \"state\" : null,\n  \"id\" : \"3263000000074571\",\n  \"fax\" : null,\n  \"email\" : null\n}"
						}
					]
				},
				{
					"name": "Update Account",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/accounts/:account_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"accounts",
								":account_id"
							],
							"variable": [
								{
									"key": "account_id"
								}
							]
						},
						"description": "This API updates details of an existing account.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| customFields  | &lt;list&gt;<br /> | User-defined fields associated with the account \n| cf  | &lt;JSONObject&gt;<br /> | User-defined fields associated with the account \n| accountName  | &lt;string&gt;<br />max chars : 200 | Name of the account \n| email  | &lt;string&gt;<br />max chars : 150 | Email ID of the account \n| website  | &lt;string&gt;<br />max chars : 120 | Website of the account \n| fax  | &lt;string&gt;<br />max chars : 100 | Fax number of the account \n| ownerId  | &lt;long&gt;<br /> | ID of account owner \n| associatedSLAIds  | &lt;list&gt;<br /> | IDs of the SLAs associated with the account. An account can have multiple SLAs, but only one SLA per department can be mapped to it. \n| industry  | &lt;string&gt;<br />max chars : 120 | Industry in which the account operates \n| city  | &lt;string&gt;<br />max chars : 100 | City in which the account is based \n| country  | &lt;string&gt;<br />max chars : 100 | Country in which the account is based \n| state  | &lt;string&gt;<br />max chars : 100 | State in which the account is based \n| street  | &lt;string&gt;<br />max chars : 250 | Address of the account \n| code  | &lt;string&gt;<br />max chars : 100 | Zip code \n| description  | &lt;string&gt;<br />max chars : 65535 | A short description of the account \n| phone  | &lt;string&gt;<br />max chars : 100 | Phone number of the account \n| annualrevenue  | &lt;double&gt;<br /> | Annual revenue of the account \n"
					},
					"response": [
						{
							"name": "Update Account",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountName\" : \"Zylker Agents\",\n  \"phone\" : \"82301023900123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/3263000000074571",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"3263000000074571"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"country\" : null,\n  \"modifiedTime\" : \"2015-03-02T14:49:18.000Z\",\n  \"website\" : null,\n  \"code\" : null,\n  \"cf\" : {\n    \"cf_contactcount\" : \"1\"\n  },\n  \"isFollowing\" : \"true\",\n  \"accountName\" : \"Zylker Agents\",\n  \"city\" : null,\n  \"associatedSLAIds\" : [ 3263000000057, 3000000057001 ],\n  \"description\" : null,\n  \"industry\" : null,\n  \"zohoCRMAccount\" : {\n    \"id\" : \"32754000000537001\"\n  },\n  \"ownerId\" : \"3263000000057001\",\n  \"isDeleted\" : false,\n  \"isTrashed\" : false,\n  \"phone\" : \"82301023900123\",\n  \"street\" : null,\n  \"annualrevenue\" : null,\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n  \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n  \"state\" : null,\n  \"id\" : \"3263000000074571\",\n  \"fax\" : null,\n  \"email\" : null\n}"
						}
					]
				},
				{
					"name": "Delete Accounts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/accounts/moveToTrash",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"accounts",
								"moveToTrash"
							]
						},
						"description": "This API moves the accounts specified to the Recycle Bin.\n#### OAuth Scope\n- `Desk.contacts.DELETE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| accountIds (required) | &lt;list&gt;<br /> | IDs of the accounts to move to the Recycle Bin \n"
					},
					"response": [
						{
							"name": "Delete Accounts",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"accountIds\" : [ \"2000032003232\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/moveToTrash",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"moveToTrash"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get contract",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/accounts/:account_id/contracts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"accounts",
								":account_id",
								"contracts"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "From index,`DEFAULT 1`",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-50",
									"description": "Number of contracts to fetch, Ranges from 1-50, `DEFAULT 50`",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the contracts must be fetched",
									"disabled": true
								},
								{
									"key": "contractStatus",
									"value": "<string>\nmax chars : 100",
									"description": "Contract Status,Indicates the Current Status of the Contract, Values are `ACTIVE`, `EXPIRED`, `FUTURE`",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "account_id"
								}
							]
						},
						"description": "Getting contracts of an Account\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get contract",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/3263000000074571/contracts",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"3263000000074571",
										"contracts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"slaName\" : \"Priority-based SLAs\",\n    \"endDate\" : \"2016-07-16\",\n    \"slaGroupId\" : \"4000000007069\",\n    \"departmentId\" : \"4000000007043\",\n    \"contractId\" : \"4000000032003\",\n    \"contractNumber\" : \"1212\",\n    \"description\" : \"contract for all desk account\",\n    \"contractName\" : \"Contract for desk account\",\n    \"ownerId\" : \"4000000008692\",\n    \"startDate\" : \"2016-06-16\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List all contracts count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contracts/count?viewId=<long>\n&departmentId=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contracts",
								"count"
							],
							"query": [
								{
									"key": "viewId",
									"value": "<long>\n",
									"description": "Custom view Id"
								},
								{
									"key": "departmentId",
									"value": "<String>\n",
									"description": "Mandatory param to fetch the count of the contracts for a given ID of a department. You can also provide department as `allDepartment` to fetch the count of the contracts from all the departments"
								},
								{
									"key": "ownerId",
									"value": "<long>\n",
									"description": "Displays the number of contracts of only a particular owner",
									"disabled": true
								}
							]
						},
						"description": "This API lists the number of contracts made with the account.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List all contracts count",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contracts/count?viewId=4000227563021&departmentId=4000000007096&ownerId=4000227563909",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contracts",
										"count"
									],
									"query": [
										{
											"key": "viewId",
											"value": "4000227563021"
										},
										{
											"key": "departmentId",
											"value": "4000000007096"
										},
										{
											"key": "ownerId",
											"value": "4000227563909"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"count\" : \"10\"\n}"
						}
					]
				},
				{
					"name": "List all accounts count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/accounts/count?viewId=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"accounts",
								"count"
							],
							"query": [
								{
									"key": "viewId",
									"value": "<long>\n",
									"description": "Custom view ID"
								},
								{
									"key": "startsWith",
									"value": "<String>\n",
									"description": "Displays the number of accounts whose first name or last name begins with the letter you specify. Displays the total number of accounts if you do not specify a letter.",
									"disabled": true
								}
							]
						},
						"description": "Get accounts count\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "List all accounts count",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/count?viewId=4000227563021&startsWith=A",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"count"
									],
									"query": [
										{
											"key": "viewId",
											"value": "4000227563021"
										},
										{
											"key": "startsWith",
											"value": "A"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"count\" : \"10\"\n}"
						}
					]
				},
				{
					"name": "List Associated contacts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/accounts/:accounts_id/contacts?from={from}&limit={limit}&sortBy={sortingField}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"accounts",
								":accounts_id",
								"contacts"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\n",
									"description": "From index",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "No. of contacts to fetch",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Parameter that sorts contacts by one of these attributes: <br>`firstName,`<br> <br>`lastName,`<br> <br>`fullName,`<br> <br>`phone,`<br> <br>`email,`<br> <br>`createdTime,`<br> <br>`modifiedTime`<br>",
									"disabled": true
								},
								{
									"key": "isSpam",
									"value": "<boolean>\ndefault : false",
									"description": "Filters Spam contacts",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "accounts_id"
								}
							]
						},
						"description": "This API lists the contacts associated with an account\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "List Associated contacts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/4000000008784/contacts?from=0&limit=20&sortBy=-fullName",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"4000000008784",
										"contacts"
									],
									"query": [
										{
											"key": "from",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "sortBy",
											"value": "-fullName"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"lastName\" : \"Lawrence\",\n    \"secondaryEmail\" : null,\n    \"mappingInfo\" : {\n      \"mappingId\" : \"18026000003237019\",\n      \"mappingType\" : \"PRIMARY\",\n      \"isAccountTicketsViewable\" : true\n    },\n    \"mobile\" : \"+91 8508569683\",\n    \"type\" : null,\n    \"ownerId\" : \"4000000008734\",\n    \"firstName\" : null,\n    \"accountId\" : \"4000000008784\",\n    \"photoURL\" : null,\n    \"isAnonymous\" : true,\n    \"phone\" : \"1 888 900 9646\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n    \"isEndUser\" : \"false\",\n    \"zohoCRMContact\" : {\n      \"id\" : \"5000000014010\",\n      \"type\" : \"contacts_leads\"\n    },\n    \"customerHappiness\" : {\n      \"badPercentage\" : \"0\",\n      \"okPercentage\" : \"0\",\n      \"goodPercentage\" : \"0\"\n    },\n    \"id\" : \"4000000008786\",\n    \"isSpam\" : false,\n    \"email\" : \"support@zylker.com\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List tickets by account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/accounts/:account_id/tickets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"accounts",
								":account_id",
								"tickets"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the tickets must be fetched",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<Integer>\n",
									"description": "Index number, starting from which the tickets must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<Integer>\nrange : 1-100",
									"description": "Number of tickets to fetch",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort by a specific attribute: `createdTime` or `modifiedTime`. The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								},
								{
									"key": "dueDate",
									"value": "<string>\nmax chars : 100",
									"description": "Filter by ticket duedate. Values allowed are `overdue`, `tomorrow`, `currentWeek`, `currentMonth` and `today`. You can include both values by separating them with a comma",
									"disabled": true
								},
								{
									"key": "isSpam",
									"value": "<boolean>\ndefault : false",
									"description": "Filters Spam tickets",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the tickets.&nbsp;Values allowed are: `contacts`,&nbsp;`products`,&nbsp;`departments`,&nbsp;`team`,&nbsp;`isRead` and&nbsp;`assignee`. You can pass multiple values by separating them with a comma in the API request.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "account_id"
								}
							]
						},
						"description": "This API lists tickets received from a specific account.\n#### OAuth Scope\n- `Desk.tickets.READ`\n- `Desk.search.READ`\n\n"
					},
					"response": [
						{
							"name": "List tickets by account",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/18944000000421015/tickets?include=assignee,departments,team,isRead",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"18944000000421015",
										"tickets"
									],
									"query": [
										{
											"key": "include",
											"value": "assignee,departments,team,isRead"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"149\",\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : \"2017-11-04T07:03:09.000Z\",\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Email\",\n    \"isRead\" : false,\n    \"onholdTime\" : null,\n    \"language\" : \"English\",\n    \"closedTime\" : null,\n    \"contact\" : {\n      \"lastName\" : \"Carol\",\n      \"firstName\" : \"Lucas\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : \"8845678909\",\n      \"id\" : \"18944000000421011\",\n      \"type\" : null,\n      \"email\" : \"carol@zylker.com\",\n      \"account\" : {\n        \"website\" : \"www.desk.com\",\n        \"accountName\" : \"desk Account\",\n        \"id\" : \"1892000000975382\"\n      }\n    },\n    \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n    \"id\" : \"18944000000336005\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"support@zylker.com\",\n    \"customerResponseTime\" : \"2017-11-03T07:03:09.203Z\",\n    \"productId\" : \"18944000000424033\",\n    \"contactId\" : \"18944000000421011\",\n    \"threadCount\" : \"7\",\n    \"lastThread\" : null,\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\"\n    },\n    \"priority\" : \"Medium\",\n    \"assigneeId\" : \"1892000000042001\",\n    \"commentCount\" : \"0\",\n    \"phone\" : \"9876543321\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/20d7881a46edfcffefe308ab38676ec3e612657a51fd5fbe\",\n    \"teamId\" : \"8920000000069071\",\n    \"isSpam\" : false,\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/1892000000042001/photo\",\n      \"id\" : \"1892000000042001\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"status\" : \"Open\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List products by account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/accounts/:account_id/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"accounts",
								":account_id",
								"products"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "From index",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of products to fetch",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "Department from which the products need to be queried",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "account_id"
								}
							]
						},
						"description": "This API lists products associated for a specific account.\n#### OAuth Scope\n- `Desk.products.READ`\n- `Desk.settings.READ`\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "List products by account",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/4000000026005/products",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"4000000026005",
										"products"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"unitPrice\" : \"0.0\",\n    \"productCode\" : null,\n    \"id\" : \"4000000012009\",\n    \"productName\" : \"Dell\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Merge Accounts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/accounts/:account_id/merge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"accounts",
								":account_id",
								"merge"
							],
							"variable": [
								{
									"key": "account_id"
								}
							]
						},
						"description": "This API merges two or more accounts.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | Array containing the IDs of the accounts to merge \n| source  | &lt;object&gt;<br /> | JSON object containing details of the account \n"
					},
					"response": [
						{
							"name": "Merge Accounts",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\" : [ \"4000000018011\", \"4000000018033\" ],\n  \"source\" : {\n    \"country\" : \"4000000018011\",\n    \"website\" : \"4000000018011\",\n    \"code\" : \"4000000018011\",\n    \"cf\" : {\n      \"cf_contactcount\" : 1892220000042001\n    },\n    \"city\" : \"4000000018011\",\n    \"description\" : \"4000000018011\",\n    \"industry\" : \"4000000018011\",\n    \"phone\" : \"4000000018011\",\n    \"annualrevenue\" : \"4000000018011\",\n    \"street\" : \"4000000018011\",\n    \"state\" : \"4000000018011\",\n    \"fax\" : \"4000000018011\",\n    \"email\" : \"4000000018011\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/4000000008749/merge",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"4000000008749",
										"merge"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"country\" : \"USA\",\n  \"modifiedTime\" : \"2015-03-02T14:49:18.000Z\",\n  \"website\" : \"www.zylker.com\",\n  \"code\" : \"3211\",\n  \"cf\" : {\n    \"cf_contactcount\" : \"1\"\n  },\n  \"isFollowing\" : \"true\",\n  \"accountName\" : \"Zylker\",\n  \"city\" : null,\n  \"associatedSLAIds\" : [ 3263000000057, 3000000057001 ],\n  \"description\" : null,\n  \"industry\" : \"Automation\",\n  \"zohoCRMAccount\" : {\n    \"id\" : \"32754000000537001\"\n  },\n  \"ownerId\" : \"3263000000057001\",\n  \"phone\" : \"6218129190\",\n  \"street\" : null,\n  \"annualrevenue\" : null,\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n  \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n  \"state\" : null,\n  \"id\" : \"3263000000074571\",\n  \"fax\" : \"+1 444 8656 8732\",\n  \"email\" : \"support@zylker.com\"\n}"
						}
					]
				},
				{
					"name": "Associate products with an account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/accounts/:account_id/associateProducts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"accounts",
								":account_id",
								"associateProducts"
							],
							"variable": [
								{
									"key": "account_id"
								}
							]
						},
						"description": "This API associates products with an account. Only a maximum of 10 products can be associated with an account through a single API request.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | IDs of the resources to associate \n| departmentId  | &lt;long&gt;<br /> | ID of the department containing the products \n| associate (required) | &lt;boolean&gt;<br /> | `true` for associating the resource and `false` for dissociating the resource \n"
					},
					"response": [
						{
							"name": "Associate products with an account",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"departmentId\" : \"7000000062800\",\n  \"ids\" : [ \"7000000027223\", \"7000000043968\" ],\n  \"associate\" : true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/7000000043860/associateProducts",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"7000000043860",
										"associateProducts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : true,\n    \"id\" : \"7000000027223\",\n    \"errors\" : null\n  }, {\n    \"success\" : false,\n    \"id\" : \"7000000043968\",\n    \"errors\" : {\n      \"errorCode\" : \"UNPROCESSABLE_ENTITY\",\n      \"httpCode\" : \"422\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Update many accounts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/accounts/updateMany",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"accounts",
								"updateMany"
							]
						},
						"description": "This API updates multiple accounts at once.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | Array containing the IDs of the entities to update. The maximum number of IDs allowed is 50. \n| fieldName (required) | &lt;string&gt;<br />max chars : 320 |  Name of the field&nbsp;to update \n| fieldValue  | &lt;string&gt;<br />max chars : 320 | Value in the field \n| isCustomField  | &lt;boolean&gt;<br /> | Key that denotes if the field is a user-defined field or not \n"
					},
					"response": [
						{
							"name": "Update many accounts",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fieldName\" : \"phone\",\n  \"isCustomField\" : false,\n  \"ids\" : [ \"1892000000093303\", \"1892000000085009\", \"1892000000050003\" ],\n  \"fieldValue\" : \"8508569875\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/updateMany",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"updateMany"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : true,\n    \"id\" : \"1892000000093303\",\n    \"errors\" : null\n  }, {\n    \"success\" : true,\n    \"id\" : \"1892000000085009\",\n    \"errors\" : null\n  }, {\n    \"success\" : false,\n    \"id\" : \"1892000000050003\",\n    \"errors\" : {\n      \"errorCode\" : \"UNPROCESSABLE_ENTITY\",\n      \"httpCode\" : \"422\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get account history",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/accounts/:account_id/history",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"accounts",
								":account_id",
								"history"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": " ID of the department from which the history details must be fetched",
									"disabled": true
								},
								{
									"key": "agentId",
									"value": "<long>\n",
									"description": " Key that filters ticket activities performed by a particular agent",
									"disabled": true
								},
								{
									"key": "contactId",
									"value": "<long>\n",
									"description": "Key that filters ticket activities related to a particular contact",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<Integer>\n",
									"description": "Index number, starting from which the history details must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<Integer>\nrange : 1-100",
									"description": "Number of history details to fetch",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "account_id"
								}
							]
						},
						"description": "This API fetches the ticket history of an account.\n#### OAuth Scope\n- `Desk.tickets.READ`\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "Get account history",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/4000000012234/history",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"4000000012234",
										"history"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"156648\",\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Real Time analysis Requirement\",\n    \"author\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000012902/photo\",\n      \"firstName\" : \"Admin\",\n      \"lastName\" : \"Admin\",\n      \"id\" : \"4000000012902\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"saranraj@zylker.com\"\n    },\n    \"dueDate\" : null,\n    \"departmentId\" : \"4000000013957\",\n    \"priority\" : null,\n    \"recipients\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/4000000012999\",\n    \"eventTime\" : \"2019-09-19T09:37:11.000Z\",\n    \"operation\" : \"Comment_Updated\",\n    \"ticketId\" : \"4000000012999\",\n    \"status\" : \"Open\"\n  }, {\n    \"ticketNumber\" : \"125289\",\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Ticket subject here.\",\n    \"author\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000012902/photo\",\n      \"firstName\" : \"Admin\",\n      \"lastName\" : \"Admin\",\n      \"id\" : \"4000000012902\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"saranraj@zylker.com\"\n    },\n    \"dueDate\" : null,\n    \"departmentId\" : \"4000000013758\",\n    \"priority\" : null,\n    \"recipients\" : [ \"ragavan@zylker.com\", \"kannan@zylker.com\", \"thamizharasi@zylker.com\" ],\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/4000000012807\",\n    \"eventTime\" : \"2019-07-22T16:27:20.000Z\",\n    \"operation\" : \"Mail_Response_Forward\",\n    \"ticketId\" : \"4000000012807\",\n    \"status\" : \"Open\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get account statistics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/accounts/([0-9]+)/statistics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"accounts",
								"([0-9]+)",
								"statistics"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the statistics must be fetched. If you do not pass this parameter in the API request, statistics from all permitted departments will be fetched.",
									"disabled": true
								}
							]
						},
						"description": "This API fetches the overall statistics of an account.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "Get account statistics",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/([0-9]+)/statistics",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"([0-9]+)",
										"statistics"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"firstResponseTime\" : \"120000\",\n  \"openTickets\" : \"11\",\n  \"responseTime\" : \"13150000\",\n  \"spamTickets\" : \"0\",\n  \"totalTickets\" : \"31\",\n  \"customerHappiness\" : {\n    \"badCount\" : \"50\",\n    \"goodCount\" : \"0\",\n    \"okCount\" : \"50\"\n  },\n  \"closedTickets\" : \"20\",\n  \"resolutionTime\" : \"0\",\n  \"channelWiseCount\" : {\n    \"Web\" : \"15\",\n    \"Forums\" : \"15\",\n    \"Chat\" : \"1\"\n  },\n  \"onholdTickets\" : \"0\",\n  \"escalatedTickets\" : \"0\",\n  \"overdueTickets\" : \"0\"\n}"
						}
					]
				},
				{
					"name": "List account SLAs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/accounts/:account_id/sla",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"accounts",
								":account_id",
								"sla"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\nrange : >=0",
									"description": "Index number, starting from which the SLAs must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of SLAs to list",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the SLAs must be fetched. If you do not pass this parameter in the API request, SLAs from all permitted departments will be listed.",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<String>\n",
									"description": "Activation status of the SLAs. Values allowed are: `ACTIVE` and `INACTIVE`",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "account_id"
								}
							]
						},
						"description": "This API lists a particular number of SLAs associated with an account, based on the limit defined.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List account SLAs",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/3263000000074571/sla",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"3263000000074571",
										"sla"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"slaName\" : \"Priority-based SLAs\",\n    \"id\" : \"45794000000419372\",\n    \"isActive\" : true,\n    \"department\" : {\n      \"name\" : \"Tesla\",\n      \"id\" : \"45794000000418059\"\n    }\n  }, {\n    \"slaName\" : \"SLA\",\n    \"id\" : \"45794000000570017\",\n    \"isActive\" : true,\n    \"department\" : {\n      \"name\" : \"BMW\",\n      \"id\" : \"45794000000006907\"\n    }\n  }, {\n    \"slaName\" : \"Silver SLAs\",\n    \"id\" : \"45794000000587464\",\n    \"isActive\" : true,\n    \"department\" : {\n      \"name\" : \"Jaguar\",\n      \"id\" : \"45794000000586067\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Associate or dissociate SLA from account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/accounts/:account_id/sla/{sla_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"accounts",
								":account_id",
								"sla",
								"{sla_id}"
							],
							"variable": [
								{
									"key": "account_id"
								}
							]
						},
						"description": "This API associates or dissociates an SLA from an account.\n#### OAuth Scope\n- `Desk.contacts.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| associate (required) | &lt;boolean&gt;<br /> | Key that specifies if the SLA must be associated with the account or not. `true` is for associating and `false` is for dissociating. \n"
					},
					"response": [
						{
							"name": "Associate or dissociate SLA from account",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"associate\" : true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/3263000000074571/sla/32630000000570017",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"3263000000074571",
										"sla",
										"32630000000570017"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Account refers to customer organizations that use your products or services. An account can have multiple contacts."
		},
		{
			"name": "Account Contact Mapping",
			"item": [
				{
					"name": "Update association info",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/accountContactMapping/:mapping_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"accountContactMapping",
								":mapping_id"
							],
							"variable": [
								{
									"key": "mapping_id"
								}
							]
						},
						"description": "This API updates the details of an account-contact mapping.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| isAccountTicketsViewable  | &lt;Boolean&gt;<br /> | Key that specifies whether the contact can access all tickets related to the account \n| mappingType  | &lt;String&gt;<br /> | Type of mapping connection between the contact and the account. Value allowed is `PRIMARY`, which sets the account as the primary account of the contact. \n"
					},
					"response": [
						{
							"name": "Update association info",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"mappingType\" : \"PRIMARY\",\n  \"isAccountTicketsViewable\" : true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/accountContactMapping/4000000023057",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accountContactMapping",
										"4000000023057"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"mappingId\" : \"4000000023057\",\n  \"accountId\" : \"4000000022101\",\n  \"contactId\" : \"4000000020714\",\n  \"mappingType\" : \"PRIMARY\",\n  \"isAccountTicketsViewable\" : false\n}"
						}
					]
				}
			],
			"description": "Account-Contact mapping refers to the connection between a contact and the different accounts they are associated with."
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Get task",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tasks/:task_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								":task_id"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the task. Values allowed are: `contacts`, `assignee`,`tickets`,`teams`.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "task_id"
								}
							]
						},
						"description": "This API fetches a task from your help desk portal.\n#### OAuth Scope\n- `Desk.activities.READ`\n- `Desk.activities.tasks.READ`\n- `Desk.tasks.READ`\n\n"
					},
					"response": [
						{
							"name": "Get task",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tasks/5000000074002?include=assignee,tickets,contacts,teams",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tasks",
										"5000000074002"
									],
									"query": [
										{
											"key": "include",
											"value": "assignee,tickets,contacts,teams"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2019-04-08T07:26:26.000Z\",\n  \"cf\" : {\n  },\n  \"ticket\" : {\n    \"ticketNumber\" : \"101\",\n    \"phone\" : \"1 888 900 9646\",\n    \"subject\" : \"Here's your first ticket.\",\n    \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n    \"teamId\" : null,\n    \"id\" : \"5000000016294\",\n    \"assignee\" : {\n      \"photoURL\" : null,\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"status\" : \"Open\"\n  },\n  \"reminder\" : [ {\n    \"alertType\" : [ \"EMAIL\", \"SMS\", \"POPUP\" ],\n    \"reminderType\" : \"ABSOLUTE\",\n    \"reminderTime\" : \"2019-04-24T04:52:13.000Z\"\n  } ],\n  \"contactId\" : \"5000000016252\",\n  \"subject\" : \"New gadget replacement with latest OS\",\n  \"completedTime\" : null,\n  \"departmentId\" : \"5000000012710\",\n  \"dueDate\" : \"2019-04-25T16:52:11.000Z\",\n  \"creatorId\" : \"5000000015911\",\n  \"description\" : \"Latest OS Version 32.9.4 \",\n  \"team\" : null,\n  \"ownerId\" : \"5000000015911\",\n  \"priority\" : \"High\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Tasks/dv/9d4883f2d94d59e4d4dad33a9adf3649\",\n  \"contact\" : {\n    \"firstName\" : null,\n    \"lastName\" : \"Lawrence\",\n    \"phone\" : \"1 888 900 9646\",\n    \"mobile\" : null,\n    \"id\" : \"5000000016252\",\n    \"isSpam\" : false\n  },\n  \"createdTime\" : \"2019-04-08T07:26:26.000Z\",\n  \"modifiedBy\" : {\n    \"firstName\" : \"George\",\n    \"lastName\" : \"McKinson\",\n    \"photoURL\" : null,\n    \"id\" : \"5000000015911\"\n  },\n  \"id\" : \"5000000074002\",\n  \"assignee\" : {\n    \"firstName\" : \"George\",\n    \"lastName\" : \"McKinson\",\n    \"photoURL\" : null,\n    \"id\" : \"5000000015911\"\n  },\n  \"isSpam\" : false,\n  \"category\" : null,\n  \"ticketId\" : \"5000000016294\",\n  \"status\" : \"Deferred\"\n}"
						}
					]
				},
				{
					"name": "List tasks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tasks"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the task. Values allowed are: `contacts`, `assignee`,`tickets`,`teams`,`projects`.",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the tasks must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of tasks to list",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the tasks must be fetched",
									"disabled": true
								},
								{
									"key": "departmentIds",
									"value": "<long>\n",
									"description": "Departments from which the tasks need to be queried",
									"disabled": true
								},
								{
									"key": "viewId",
									"value": "<long>\n",
									"description": "ID of the view to apply while fetching the resources",
									"disabled": true
								},
								{
									"key": "assignee",
									"value": "<long>\n",
									"description": " Key that filters tickets by assignee. Values allowed are any valid assignee ID or multiple assignee IDs separated by commas.",
									"disabled": true
								},
								{
									"key": "dueDate",
									"value": "<string>\nmax chars : 100",
									"description": "Due date for completing the task. Values allowed are `Overdue`, `Tomorrow`, `CurrentWeek`, `CurrentMonth` and `Today`.You can pass multiple values by separating them with commas.",
									"disabled": true
								},
								{
									"key": "isCompleted",
									"value": "<boolean>\n",
									"description": "Key that denotes whether the task is completed or not",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Key that sorts the tasks by a specific attribute: `dueDate` or `createdTime`.The default sorting order is ascending. A `-` prefix denotes a descending order of sorting.",
									"disabled": true
								}
							]
						},
						"description": "This API fetches a particular number of tasks, based on the limit specified.\n#### OAuth Scope\n- `Desk.activities.READ`\n- `Desk.activities.tasks.READ`\n- `Desk.tasks.READ`\n\n"
					},
					"response": [
						{
							"name": "List tasks",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tasks?departmentId=5000000012710&include=teams,tickets,contacts,assignee",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tasks"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "5000000012710"
										},
										{
											"key": "include",
											"value": "teams,tickets,contacts,assignee"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ticket\" : null,\n    \"contactId\" : null,\n    \"subject\" : \"Iphone charger replacement\",\n    \"completedTime\" : null,\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"team\" : null,\n    \"ownerId\" : \"5000000067003\",\n    \"priority\" : \"Normal\",\n    \"isCommented\" : false,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Tasks/dv/d4c0a5dce55dcf20279262cd8594cd0d\",\n    \"contact\" : null,\n    \"createdTime\" : \"2019-04-30T14:21:50.000Z\",\n    \"startTime\" : \"1970-01-01T00:00:00.000Z\",\n    \"id\" : \"5000000209940\",\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"36\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000067003\"\n    },\n    \"isSpam\" : false,\n    \"category\" : null,\n    \"activityType\" : \"Tasks\",\n    \"ticketId\" : null,\n    \"status\" : \"Not Started\",\n    \"direction\" : \"inbound\"\n  }, {\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : null,\n      \"id\" : \"5000000016294\",\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"George\",\n        \"lastName\" : \"McKinson\",\n        \"id\" : \"5000000015911\"\n      },\n      \"isSpam\" : false,\n      \"status\" : \"Open\"\n    },\n    \"contactId\" : null,\n    \"subject\" : \"Tempered glass replacement\",\n    \"completedTime\" : null,\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : \"2019-04-25T16:52:11.000Z\",\n    \"creatorId\" : \"5000000015911\",\n    \"team\" : null,\n    \"ownerId\" : \"5000000015911\",\n    \"priority\" : \"High\",\n    \"isCommented\" : false,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Tasks/dv/9d4883f2d94d59e46474bbeb6432292e\",\n    \"contact\" : null,\n    \"createdTime\" : \"2019-04-09T04:37:26.000Z\",\n    \"startTime\" : \"2019-04-25T16:52:11.000Z\",\n    \"id\" : \"5000000075033\",\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : null,\n    \"activityType\" : \"Tasks\",\n    \"ticketId\" : \"5000000016294\",\n    \"status\" : \"Deferred12546\",\n    \"direction\" : \"inbound\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Create task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tasks"
							]
						},
						"description": "This API creates a task in your help desk portal.\n#### OAuth Scope\n- `Desk.activities.CREATE`\n- `Desk.activities.tasks.CREATE`\n- `Desk.tasks.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| customFields  | &lt;list&gt;<br /> | User-defined fields related to the task \n| cf  | &lt;list&gt;<br /> | User-defined fields related to the task \n| departmentId (required) | &lt;long&gt;<br /> | ID of the department in which the task must be created \n| subject (required) | &lt;string&gt;<br />max chars : 300 | Subject of the task \n| ticketId  | &lt;long&gt;<br /> | ID of the ticket with which the task must be associated \n| dueDate  | &lt;timestamp&gt;<br /> | Due date for completing the task \n| ownerId  | &lt;long&gt;<br /> | ID of the user to whom the task is assigned \n| category  | &lt;string&gt;<br />max chars : 120 | Category of the task \n| status  | &lt;string&gt;<br />max chars : 120 | Status of task completion \n| priority  | &lt;string&gt;<br />max chars : 120 | Priority of the task \n| description  | &lt;string&gt;<br />max chars : 65535 | Description of the task \n| contactId  | &lt;long&gt;<br /> | ID of the contact associated with the task \n| reminder  | &lt;JSONArray&gt;<br /> | Details of the reminder set for the task \n"
					},
					"response": [
						{
							"name": "Create task",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subject\" : \"Bug Fix #120\",\n  \"departmentId\" : \"3000000007043\",\n  \"dueDate\" : \"2016-07-21T16:16:16.000Z\",\n  \"priority\" : \"High\",\n  \"category\" : null,\n  \"status\" : \"In Progress\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tasks",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tasks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2016-07-14T09:14:41.000Z\",\n  \"cf\" : {\n  },\n  \"subject\" : \"Bug Fix #120\",\n  \"departmentId\" : \"3000000007043\",\n  \"dueDate\" : \"2016-07-21T16:16:16.000Z\",\n  \"creatorId\" : \"3000000008692\",\n  \"description\" : null,\n  \"ownerId\" : null,\n  \"priority\" : \"High\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Tasks/dv/51123033fe97b2f886f750280ded9c40\",\n  \"createdTime\" : \"2016-07-14T08:27:26.000Z\",\n  \"modifiedBy\" : {\n    \"firstName\" : \"George\",\n    \"lastName\" : \"McKinson\",\n    \"photoURL\" : null,\n    \"id\" : \"5000000015911\"\n  },\n  \"id\" : \"3000000054002\",\n  \"isSpam\" : false,\n  \"category\" : \"null\",\n  \"ticketId\" : \"3000000008753\",\n  \"status\" : \"In Progress\"\n}"
						}
					]
				},
				{
					"name": "Update task",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tasks/:task_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								":task_id"
							],
							"variable": [
								{
									"key": "task_id"
								}
							]
						},
						"description": "This API helps update the details of a task.\n#### OAuth Scope\n- `Desk.activities.UPDATE`\n- `Desk.activities.tasks.UPDATE`\n- `Desk.tasks.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| customFields  | &lt;list&gt;<br /> | User-defined fields related to the task \n| cf  | &lt;list&gt;<br /> | User-defined fields related to the task \n| departmentId  | &lt;long&gt;<br /> | ID of the department in which the task must be created \n| subject  | &lt;string&gt;<br />max chars : 300 | Subject of the task \n| ticketId  | &lt;long&gt;<br /> | ID of the ticket with which the task must be associated \n| dueDate  | &lt;timestamp&gt;<br /> | Due date for completing the task \n| ownerId  | &lt;long&gt;<br /> | ID of the user to whom the task is assigned \n| category  | &lt;string&gt;<br />max chars : 120 | Category of the task \n| status  | &lt;string&gt;<br />max chars : 120 | Status of task completion \n| priority  | &lt;string&gt;<br />max chars : 120 | Priority of the task \n| description  | &lt;string&gt;<br />max chars : 65535 | Description of the task \n| contactId  | &lt;long&gt;<br /> | ID of the contact associated with the task \n| reminder  | &lt;JSONArray&gt;<br /> | Details of the reminder set for the task \n"
					},
					"response": [
						{
							"name": "Update task",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subject\" : \"Bug Fix #120\",\n  \"departmentId\" : \"3000000007043\",\n  \"dueDate\" : \"2016-07-21T16:16:16.000Z\",\n  \"category\" : null,\n  \"priority\" : \"High\",\n  \"status\" : \"In Progress\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tasks/3000000054002",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tasks",
										"3000000054002"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2016-07-14T09:14:41.000Z\",\n  \"cf\" : {\n  },\n  \"subject\" : \"Bug Fix #120\",\n  \"departmentId\" : \"3000000007043\",\n  \"dueDate\" : \"2016-07-21T16:16:16.000Z\",\n  \"creatorId\" : \"3000000008692\",\n  \"description\" : null,\n  \"ownerId\" : null,\n  \"priority\" : \"High\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Tasks/dv/51123033fe97b2f886f750280ded9c40\",\n  \"createdTime\" : \"2016-07-14T08:27:26.000Z\",\n  \"id\" : \"3000000054002\",\n  \"isSpam\" : false,\n  \"category\" : \"null\",\n  \"ticketId\" : \"3000000008753\",\n  \"status\" : \"In Progress\"\n}"
						}
					]
				},
				{
					"name": "Delete tasks",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tasks/moveToTrash",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								"moveToTrash"
							]
						},
						"description": "This API moves task entries to the Recycle Bin of your help desk portal.\n#### OAuth Scope\n- `Desk.activities.DELETE`\n- `Desk.activities.tasks.DELETE`\n- `Desk.tasks.DELETE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| entityIds (required) | &lt;list&gt;<br /> | IDs of the activities to delete \n"
					},
					"response": [
						{
							"name": "Delete tasks",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityIds\" : [ \"2000032003232\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tasks/moveToTrash",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tasks",
										"moveToTrash"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List tasks by ticket",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"tasks"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the tasks must be fetched",
									"disabled": true
								},
								{
									"key": "isCompleted",
									"value": "<boolean>\n",
									"description": "Key that denotes whether the task is completed or not",
									"disabled": true
								},
								{
									"key": "isSpam",
									"value": "<boolean>\n",
									"description": "Key that denotes whether to fetch spam tasks or not",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of tasks to list",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Key that sorts the tasks by a specific attribute: `dueDate` or `createdTime`.The default sorting order is ascending. A `-` prefix denotes a descending order of sorting. ",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the task. Values allowed are: `contacts`, `assignee`,`tickets`,`teams`,`projects`.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API lists all tasks associated with a particular ticket.\n#### OAuth Scope\n- `Desk.activities.READ`\n- `Desk.activities.tasks.READ`\n- `Desk.tickets.READ`\n- `Desk.tasks.READ`\n\n"
					},
					"response": [
						{
							"name": "List tasks by ticket",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/5000000016294/tasks?include=assignee,tickets,contacts,teams",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"5000000016294",
										"tasks"
									],
									"query": [
										{
											"key": "include",
											"value": "assignee,tickets,contacts,teams"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"subject\" : \"New gadget replacement with latest OS\",\n    \"completedTime\" : null,\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : \"2019-04-25T16:52:11.000Z\",\n    \"creatorId\" : \"5000000015911\",\n    \"ownerId\" : \"5000000015911\",\n    \"secId\" : \"9d4883f2d94d59e4d4dad33a9adf3649\",\n    \"isCommented\" : false,\n    \"contact\" : {\n      \"firstName\" : null,\n      \"lastName\" : \"Lawrence\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : null,\n      \"id\" : \"5000000016252\",\n      \"isSpam\" : false,\n      \"secId\" : \"9d4883f2d94d59e42b7cc45393ad8ff8\"\n    },\n    \"createdTime\" : \"2019-04-08T07:26:26.000Z\",\n    \"startTime\" : \"2019-04-25T16:52:11.000Z\",\n    \"id\" : \"5000000074002\",\n    \"direction\" : \"inbound\",\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : null,\n      \"id\" : \"5000000016294\",\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"George\",\n        \"lastName\" : \"McKinson\",\n        \"id\" : \"5000000015911\"\n      },\n      \"isSpam\" : false,\n      \"status\" : \"Open\",\n      \"secId\" : \"9d4883f2d94d59e415b08d3d4c697d42\"\n    },\n    \"contactId\" : \"5000000016252\",\n    \"team\" : null,\n    \"priority\" : \"High\",\n    \"layoutId\" : \"5000000013466\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Tasks/dv/9d4883f2d94d59e4d4dad33a9adf3649\",\n    \"teamId\" : null,\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : null,\n    \"activityType\" : \"Tasks\",\n    \"ticketId\" : \"5000000016294\",\n    \"status\" : \"Deferred\"\n  }, {\n    \"subject\" : \"Tempered glass replacement\",\n    \"completedTime\" : null,\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : \"2019-04-25T16:52:11.000Z\",\n    \"creatorId\" : \"5000000015911\",\n    \"ownerId\" : \"5000000015911\",\n    \"secId\" : \"9d4883f2d94d59e46474bbeb6432292e\",\n    \"isCommented\" : false,\n    \"contact\" : null,\n    \"createdTime\" : \"2019-04-09T04:37:26.000Z\",\n    \"startTime\" : \"2019-04-25T16:52:11.000Z\",\n    \"id\" : \"5000000075033\",\n    \"direction\" : \"inbound\",\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : null,\n      \"id\" : \"5000000016294\",\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"George\",\n        \"lastName\" : \"McKinson\",\n        \"id\" : \"5000000015911\"\n      },\n      \"isSpam\" : false,\n      \"status\" : \"Open\",\n      \"secId\" : \"9d4883f2d94d59e415b08d3d4c697d42\"\n    },\n    \"contactId\" : null,\n    \"team\" : null,\n    \"priority\" : \"High\",\n    \"layoutId\" : \"5000000013466\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Tasks/dv/9d4883f2d94d59e46474bbeb6432292e\",\n    \"teamId\" : null,\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : null,\n    \"activityType\" : \"Tasks\",\n    \"ticketId\" : \"5000000016294\",\n    \"status\" : \"Deferred12546\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List all tasks count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tasks/count?viewId=<long>\n&departmentId=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								"count"
							],
							"query": [
								{
									"key": "viewId",
									"value": "<long>\n",
									"description": "ID of the view to apply while fetching the resources"
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the task count must be fetched"
								},
								{
									"key": "assignee",
									"value": "<string>\nmax chars : 100",
									"description": " Key that filters tasks by assignee. A valid assigneeId must be passed for this parameter. Multiple assigneeIds can be passed as comma-separated values.",
									"disabled": true
								},
								{
									"key": "dueDate",
									"value": "<string>\nmax chars : 100",
									"description": "Filter by task duedate. Values allowed are `Overdue`, `Tomorrow`, `CurrentWeek`, `CurrentMonth` and `Today`. You can include both values by separating them with a comma",
									"disabled": true
								}
							]
						},
						"description": "This API returns the number of tasks in your help desk.\n#### OAuth Scope\n- `Desk.tasks.READ`\n\n"
					},
					"response": [
						{
							"name": "List all tasks count",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tasks/count?viewId=5000000007880&departmentId=5000000007069",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tasks",
										"count"
									],
									"query": [
										{
											"key": "viewId",
											"value": "5000000007880"
										},
										{
											"key": "departmentId",
											"value": "5000000007069"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"count\" : \"10\"\n}"
						}
					]
				},
				{
					"name": "Update many tasks",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tasks/updateMany",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								"updateMany"
							]
						},
						"description": "This API updates multiple tasks at once.\n#### OAuth Scope\n- `Desk.activities.UPDATE`\n- `Desk.activities.tasks.UPDATE`\n- `Desk.tasks.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | Array containing the IDs of the entities to update. The maximum number of IDs allowed is 50. \n| fieldName (required) | &lt;string&gt;<br />max chars : 320 |  Name of the field&nbsp;to update \n| fieldValue  | &lt;string&gt;<br />max chars : 320 | Value in the field \n| isCustomField  | &lt;boolean&gt;<br /> | Key that denotes if the field is a user-defined field or not \n"
					},
					"response": [
						{
							"name": "Update many tasks",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fieldName\" : \"mobile\",\n  \"isCustomField\" : false,\n  \"ids\" : [ \"1892000000093303\", \"1892000000085009\", \"1892000000050003\" ],\n  \"fieldValue\" : \"8508569875\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tasks/updateMany",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tasks",
										"updateMany"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : true,\n    \"id\" : \"1892000000093303\",\n    \"errors\" : null\n  }, {\n    \"success\" : true,\n    \"id\" : \"1892000000085009\",\n    \"errors\" : null\n  }, {\n    \"success\" : false,\n    \"id\" : \"1892000000050003\",\n    \"errors\" : {\n      \"errorMessage\" : \"Either the field is invalid or the field may be restricted to update\",\n      \"errorCode\" : \"UNPROCESSABLE_ENTITY\",\n      \"httpCode\" : \"422\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Delete spam tasks",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tasks/emptySpam",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								"emptySpam"
							]
						},
						"description": "This API deletes all spam tasks.\n#### OAuth Scope\n- `Desk.activities.DELETE`\n- `Desk.activities.tasks.DELETE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| departmentId (required) | &lt;long&gt;<br /> | ID of the department to which the activities belong \n"
					},
					"response": [
						{
							"name": "Delete spam tasks",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"departmentId\" : \"4000000025121\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tasks/emptySpam",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tasks",
										"emptySpam"
									]
								}
							},
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Tasks are work activities assigned to agents. It is not mandatory for tasks to be related to only ticket resolution."
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Get product",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/products/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								":product_id"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Key that fetches secondary information related to the product. Values allowed are: `departments` and `owner`. You can pass multiple values by separating them with commas.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						},
						"description": "This API fetches a single product from your helpdesk.\n#### OAuth Scope\n- `Desk.products.READ`\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get product",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/products/6000000124009",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"products",
										"6000000124009"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"owner\" : {\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/6000000009050/photo?orgId=581861259\",\n    \"firstName\" : \"Aaron\",\n    \"lastName\" : \"Stone\",\n    \"name\" : \"Aaron Stone\",\n    \"id\" : \"6000000009050\"\n  },\n  \"unitPrice\" : \"100.0\",\n  \"modifiedTime\" : \"2017-06-28T13:25:06.000Z\",\n  \"cf\" : {\n  },\n  \"description\" : null,\n  \"departmentIds\" : [ \"6000000009450\", \"6000000009380\", \"6000000009230\" ],\n  \"ownerId\" : \"6000000009050\",\n  \"layoutId\" : \"6000000002556\",\n  \"productName\" : \"Dell\",\n  \"productCategory\" : null,\n  \"productCode\" : \"12345\",\n  \"isDeleted\" : false,\n  \"createdBy\" : \"6000000009050\",\n  \"createdTime\" : \"2017-06-28T13:25:06.000Z\",\n  \"modifiedBy\" : \"6000000009050\",\n  \"id\" : \"6000000124009\",\n  \"departments\" : [ {\n    \"name\" : \"Associated Department 1\",\n    \"id\" : \"6000000009450\"\n  }, {\n    \"name\" : \"Associated Department 2\",\n    \"id\" : \"6000000009380\"\n  }, {\n    \"name\" : \"Associated Department 3\",\n    \"id\" : \"6000000009230\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List products",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "viewId",
									"value": "<long>\n",
									"description": "ID of the view to apply while fetching the products",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the products must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "No. of products to fetch",
									"disabled": true
								},
								{
									"key": "departmentIds",
									"value": "<long>\n",
									"description": "This key will soon be deprecated from both API requests and responses. Please replace it with the&nbsp;departmentId key in your code.",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the products must be fetched. If you want to list the products configured in all accessible departments, pass the value&nbsp;0.",
									"disabled": true
								},
								{
									"key": "ownerId",
									"value": "<long>\n",
									"description": "ID of user to whom the product is assigned",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort by a specific attribute : `productName`, `productCode`, `unitPrice`, `createdTime` or `modifiedTime`. The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								},
								{
									"key": "fields",
									"value": "<string>\nmax chars : 100",
									"description": "Key that returns the values of mentioned fields (both pre-defined and custom) in your portal. All field types except multi-text are supported. Standard, non-editable fields are supported too. These fields include: `layoutId`. Maximum of 30 fields is supported as comma separated values.",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<list>\n",
									"description": "Secondary information related to the contact.Value supported is `owner`.",
									"disabled": true
								}
							]
						},
						"description": "This API lists a specific number of products from your help desk portal, based on the limit defined. (Note: The departmentIds key will soon be deprecated and not included in API responses.)\n#### OAuth Scope\n- `Desk.products.READ`\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List products",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/products?departmentIds=6000000007239,6000000029263",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"products"
									],
									"query": [
										{
											"key": "departmentIds",
											"value": "6000000007239,6000000029263"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"unitPrice\" : \"100.0\",\n    \"productCode\" : null,\n    \"id\" : \"6000000121033\",\n    \"departmentIds\" : [ \"6000000007239\", \"6000000029263\" ],\n    \"productName\" : \"HTC\"\n  }, {\n    \"unitPrice\" : \"100.0\",\n    \"productCode\" : null,\n    \"id\" : \"6000000121037\",\n    \"departmentIds\" : [ \"6000000007239\", \"6000000029263\" ],\n    \"productName\" : \"Dell\"\n  }, {\n    \"unitPrice\" : \"100.0\",\n    \"productCode\" : null,\n    \"id\" : \"6000000145024\",\n    \"departmentIds\" : [ \"6000000007239\", \"6000000029263\" ],\n    \"productName\" : \"Lenovo\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Create product",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						},
						"description": "This API adds a product to your helpdesk.\n#### OAuth Scope\n- `Desk.products.CREATE`\n- `Desk.settings.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| departmentIds (required) | &lt;list&gt;<br /> | IDs of departments associated with the product \n| ownerId  | &lt;long&gt;<br /> | ID of user to whom the product is assigned \n| productName (required) | &lt;string&gt;<br />max chars : 200 | Name of the product \n| productCode  | &lt;string&gt;<br />max chars : 200 | Reference code of the product \n| productCategory  | &lt;string&gt;<br />max chars : 200 | Category to which the product belongs \n| manufacturer  | &lt;string&gt;<br />max chars : 200 | Organization that manufactures the product \n| unitPrice  | &lt;double&gt;<br /> | Price of the product \n| customFields  | &lt;list&gt;<br /> | User-defined fields related to the product \n| cf  | &lt;list&gt;<br /> | User-defined fields related to the product \n| description  | &lt;string&gt;<br />max chars : 65535 | Description of the product \n"
					},
					"response": [
						{
							"name": "Create product",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"unitPrice\" : \"100\",\n  \"productCode\" : \"12345\",\n  \"departmentIds\" : [ \"6000000007239\", \"6000000029263\" ],\n  \"productName\" : \"Dell\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/products",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"products"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"unitPrice\" : \"100.0\",\n  \"modifiedTime\" : \"2017-07-18T10:46:25.667Z\",\n  \"cf\" : {\n  },\n  \"description\" : null,\n  \"departmentIds\" : [ \"6000000007239\", \"6000000029263\" ],\n  \"ownerId\" : \"6000000009050\",\n  \"layoutId\" : \"6000000002556\",\n  \"productName\" : \"Dell\",\n  \"productCategory\" : null,\n  \"productCode\" : \"12345\",\n  \"isDeleted\" : false,\n  \"createdBy\" : \"6000000009050\",\n  \"createdTime\" : \"2017-07-18T10:46:25.667Z\",\n  \"modifiedBy\" : \"6000000009050\",\n  \"id\" : \"6000000164001\"\n}"
						}
					]
				},
				{
					"name": "List tickets by products",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/products/:product_id/tickets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								":product_id",
								"tickets"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the tickets must be fetched",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<Integer>\n",
									"description": "Index number, starting from which the tickets must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<Integer>\nrange : 1-100",
									"description": "Number of tickets to fetch",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort by a specific attribute: `createdTime` or `modifiedTime`. The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								},
								{
									"key": "dueDate",
									"value": "<string>\nmax chars : 100",
									"description": "Filter by ticket duedate. Values allowed are `overdue`, `tomorrow`, `currentWeek`, `currentMonth` and `today`. You can include both values by separating them with a comma",
									"disabled": true
								},
								{
									"key": "isSpam",
									"value": "<boolean>\ndefault : false",
									"description": "Filters Spam tickets",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the tickets.&nbsp;Values allowed are:&nbsp;`products`,&nbsp;`departments`,&nbsp;`team`,&nbsp;`isRead` and&nbsp;`assignee`. You can pass multiple values by separating them with a comma in the API request.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						},
						"description": "This API lists tickets received from a specific products.\n#### OAuth Scope\n- `Desk.tickets.READ`\n- `Desk.settings.READ`\n- `Desk.search.READ`\n\n"
					},
					"response": [
						{
							"name": "List tickets by products",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/products/18944000000424033/tickets?include=departments,team,assignee",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"products",
										"18944000000424033",
										"tickets"
									],
									"query": [
										{
											"key": "include",
											"value": "departments,team,assignee"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"149\",\n    \"sentiment\" : \"NEGATIVE\",\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : \"2017-11-04T07:03:09.000Z\",\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Email\",\n    \"onholdTime\" : null,\n    \"language\" : \"English\",\n    \"closedTime\" : null,\n    \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n    \"id\" : \"18944000000336005\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"support@zylker.com\",\n    \"customerResponseTime\" : \"2017-11-03T07:03:09.203Z\",\n    \"productId\" : \"18944000000424033\",\n    \"contactId\" : \"18944000000421011\",\n    \"threadCount\" : \"7\",\n    \"lastThread\" : null,\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\"\n    },\n    \"priority\" : \"Medium\",\n    \"assigneeId\" : \"1892000000042001\",\n    \"commentCount\" : \"0\",\n    \"phone\" : \"9876543321\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/20d7881a46edfcffefe308ab38676ec3e612657a51fd5fbe\",\n    \"teamId\" : \"8920000000069071\",\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/1892000000042001/photo\",\n      \"id\" : \"1892000000042001\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"status\" : \"Open\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Update product",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/products/:product_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								":product_id"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						},
						"description": "This API updates details of a product in your help desk portal.\n#### OAuth Scope\n- `Desk.products.UPDATE`\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| departmentIds  | &lt;list&gt;<br /> | IDs of departments associated with the product \n| ownerId  | &lt;long&gt;<br /> | ID of user to whom the product is assigned \n| productName  | &lt;string&gt;<br />max chars : 200 | Name of the product \n| productCode  | &lt;string&gt;<br />max chars : 200 | Reference code of the product \n| productCategory  | &lt;string&gt;<br />max chars : 200 | Category to which the product belongs \n| manufacturer  | &lt;string&gt;<br />max chars : 200 | Organization that manufactures the product \n| unitPrice  | &lt;double&gt;<br /> | Price of the product \n| customFields  | &lt;list&gt;<br /> | User-defined fields related to the product \n| cf  | &lt;list&gt;<br /> | User-defined fields related to the product \n| description  | &lt;string&gt;<br />max chars : 65535 | Description of the product \n"
					},
					"response": [
						{
							"name": "Update product",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"departmentIds\" : [ \"6000000029263\", \"6000000125041\" ],\n  \"productName\" : \"Dell\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/products/6000000124009",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"products",
										"6000000124009"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"unitPrice\" : \"100.0\",\n  \"modifiedTime\" : \"2017-07-18T10:53:40.787Z\",\n  \"cf\" : {\n  },\n  \"description\" : null,\n  \"departmentIds\" : [ \"6000000029263\", \"6000000125041\" ],\n  \"ownerId\" : \"6000000009050\",\n  \"layoutId\" : \"6000000002556\",\n  \"productName\" : \"Dell\",\n  \"productCategory\" : null,\n  \"productCode\" : \"12345\",\n  \"isDeleted\" : false,\n  \"createdBy\" : \"6000000009050\",\n  \"createdTime\" : \"2017-06-28T13:25:06.000Z\",\n  \"modifiedBy\" : \"6000000009050\",\n  \"id\" : \"6000000124009\"\n}"
						}
					]
				},
				{
					"name": "Move Products to trash",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/products/moveToTrash",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"moveToTrash"
							]
						},
						"description": "This API moves products to the Recycle Bin of your help desk portal.\n#### OAuth Scope\n- `Desk.products.DELETE`\n- `Desk.settings.DELETE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| departmentId  | &lt;long&gt;<br /> | ID of the department containing the products \n| productIds (required) | &lt;list&gt;<br /> | IDs of the products you want to delete \n"
					},
					"response": [
						{
							"name": "Move Products to trash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"productIds\" : [ \"2000032003232\" ],\n  \"departmentId\" : \"2000032006800\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/products/moveToTrash",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"products",
										"moveToTrash"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Search for duplicate records",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/products/searchDuplicates?productName=<string>\nmax chars : 200",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"searchDuplicates"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the products must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "No. of products to fetch",
									"disabled": true
								},
								{
									"key": "productName",
									"value": "<string>\nmax chars : 200",
									"description": "Name of the product, used as the keyword for the search"
								}
							]
						},
						"description": "This API searches for duplicate records of a product.\n#### OAuth Scope\n- `Desk.products.READ`\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Search for duplicate records",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/products/searchDuplicates?productName=Dell",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"products",
										"searchDuplicates"
									],
									"query": [
										{
											"key": "productName",
											"value": "Dell"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"unitPrice\" : \"100.0\",\n    \"productCode\" : null,\n    \"id\" : \"6000000121033\",\n    \"productName\" : \"Dell\"\n  }, {\n    \"unitPrice\" : \"100.0\",\n    \"productCode\" : null,\n    \"id\" : \"6000000121037\",\n    \"productName\" : \"Dell\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Associate contacts with a product",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/products/:product_id/associateContacts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"products",
								":product_id",
								"associateContacts"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						},
						"description": "This API associates contacts with a product. Only a maximum of 10 contacts can be associated with a product through a single API request.\n#### OAuth Scope\n- `Desk.products.UPDATE`\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | IDs of the resources to associate \n| associate (required) | &lt;boolean&gt;<br /> | `true` for associating the resource and `false` for dissociating the resource \n"
					},
					"response": [
						{
							"name": "Associate contacts with a product",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\" : [ \"2000000034031\", \"2000000034029\" ],\n  \"associate\" : true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/products/2000000031001/associateContacts",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"products",
										"2000000031001",
										"associateContacts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Associate accounts with a product",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/products/:product_id/associateAccounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"products",
								":product_id",
								"associateAccounts"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						},
						"description": "This API associates accounts with a product. Only a maximum of 10 accounts can be associated with a product through a single API request.\n#### OAuth Scope\n- `Desk.products.UPDATE`\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | IDs of the resources to associate \n| associate (required) | &lt;boolean&gt;<br /> | `true` for associating the resource and `false` for dissociating the resource \n"
					},
					"response": [
						{
							"name": "Associate accounts with a product",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\" : [ \"2000000029035\", \"2000000029001\" ],\n  \"associate\" : true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/products/2000000031001/associateAccounts",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"products",
										"2000000031001",
										"associateAccounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List accounts associated with product",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/products/:products_id/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"products",
								":products_id",
								"accounts"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\n",
									"description": "Index number starting from which the accounts must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of accounts to fetch",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Key that sorts the accounts by a specific attribute: `accountName` or `createdTime`.The default sorting order is ascending. A `-` prefix denotes descending order of sorting",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "products_id"
								}
							]
						},
						"description": "This API lists the accounts associated with a product\n#### OAuth Scope\n- `Desk.contacts.READ`\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List accounts associated with product",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "support.zoho.com/api/v1/products/2000000031001/accounts",
									"host": [
										"support",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"products",
										"2000000031001",
										"accounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"website\" : \"112121\",\n    \"accountName\" : \"Admin Account\",\n    \"phone\" : \"121212\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n    \"zohoCRMAccount\" : {\n      \"id\" : \"32754000000537001\"\n    },\n    \"id\" : \"1892000000052077\",\n    \"email\" : \"admin@zylker.com\"\n  }, {\n    \"website\" : \"1211212\",\n    \"accountName\" : \"Agent Account\",\n    \"phone\" : \"11211\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n    \"zohoCRMAccount\" : {\n      \"id\" : \"32754000000537001\"\n    },\n    \"id\" : \"1892000000052090\",\n    \"email\" : \"agent@zylker.com\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List contacts associated with product",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/products/:products_id/contacts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"products",
								":products_id",
								"contacts"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\n",
									"description": "Index number, starting from which the contacts must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of contacts to fetch",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Parameter that sorts contacts by one of these attributes: <br>`firstName,`<br> <br>`lastName,`<br> <br>`phone,`<br> <br>`email,`<br> <br>`account,`<br> <br>`createdTime,`<br> <br>`modifiedTime`<br>",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<list>\n",
									"description": "Key that fetches secondary information related to the contact.Value allowed is `accounts`",
									"disabled": true
								},
								{
									"key": "isSpam",
									"value": "<boolean>\ndefault : false",
									"description": "Filters Spam contacts",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "products_id"
								}
							]
						},
						"description": "This API lists the contacts associated with a product.\n#### OAuth Scope\n- `Desk.contacts.READ`\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List contacts associated with product",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "support.zoho.com/api/v1/products/2000000031001/contacts",
									"host": [
										"support",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"products",
										"2000000031001",
										"contacts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"lastName\" : \"Case\",\n    \"secondaryEmail\" : null,\n    \"ownerId\" : null,\n    \"type\" : null,\n    \"accountId\" : \"1892000000091433\",\n    \"firstName\" : \"Jonathan\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/contacts/1892000000772003/photo\",\n    \"isAnonymous\" : true,\n    \"phone\" : \"555555\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n    \"zohoCRMContact\" : null,\n    \"id\" : \"1892000000772003\",\n    \"customerHappiness\" : {\n      \"badPercentage\" : \"0\",\n      \"okPercentage\" : \"0\",\n      \"goodPercentage\" : \"0\"\n    },\n    \"email\" : \"case@zylker.com\"\n  }, {\n    \"lastName\" : \"Jade\",\n    \"secondaryEmail\" : null,\n    \"ownerId\" : null,\n    \"type\" : null,\n    \"accountId\" : \"1892000000052077\",\n    \"firstName\" : \"Christ\",\n    \"photoURL\" : null,\n    \"isAnonymous\" : true,\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n    \"zohoCRMContact\" : {\n      \"id\" : \"1892000000772030\",\n      \"type\" : \"contacts_leads\"\n    },\n    \"id\" : \"1892000000772001\",\n    \"customerHappiness\" : {\n      \"badPercentage\" : \"22\",\n      \"okPercentage\" : \"31\",\n      \"goodPercentage\" : \"47\"\n    },\n    \"email\" : \"jade@zylker.com\"\n  } ]\n}"
						}
					]
				}
			],
			"description": "Products are the goods/services your organization sells."
		},
		{
			"name": "HelpCenter",
			"item": [
				{
					"name": "List help centers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/helpCenters",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"helpCenters"
							]
						},
						"description": "This API lists the help centers configured in your Zoho Desk portal.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List help centers",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/helpCenters?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"helpCenters"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"isDefault\" : true,\n    \"name\" : \"Zoho Cares\",\n    \"id\" : \"24073000002579275\",\n    \"departmentIds\" : [ \"24073000000102043\" ],\n    \"isMultilingualEnabled\" : true,\n    \"helpCenterLocales\" : [ {\n      \"name\" : \"ZohoCorp Portal\",\n      \"locale\" : \"en\",\n      \"type\" : \"DEFAULT\",\n      \"status\" : \"ACCESIBLE_IN_HELPCENTER\"\n    } ],\n    \"primaryLocale\" : \"en\",\n    \"logoUrl\" : \"https://localimg.zohostatic.com/support/app/images/portalLogo.de847024ebc0131731a3.png\",\n    \"url\" : \"https://help.zoho.com/portal/\",\n    \"status\" : \"ACTIVE\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get details of help center",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/helpCenters/:helpcenter_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"helpCenters",
								":helpcenter_id"
							],
							"variable": [
								{
									"key": "helpcenter_id"
								}
							]
						},
						"description": "This API fetches the details of a particular help center.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get details of help center",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/helpCenters/24073000002579275?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"helpCenters",
										"24073000002579275"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"domains\" : [ {\n    \"name\" : \"forums.zoho.com\",\n    \"type\" : \"SECONDARY\"\n  }, {\n    \"name\" : \"help.zoho.com\",\n    \"type\" : \"PRIMARY\"\n  } ],\n  \"logoLinkBackUrl\" : \"https://www.zoho.com/desk/\",\n  \"departmentIds\" : [ \"24073000000102043\" ],\n  \"logoUrl\" : \"https://localimg.zohostatic.com/support/app/images/portalLogo.de847024ebc0131731a3.png\",\n  \"url\" : \"https://help.zoho.com/portal/\",\n  \"isDefault\" : true,\n  \"siteMapUpdatedTime\" : \"2019-12-26T08:48:09.000Z\",\n  \"name\" : \"Zoho Cares\",\n  \"favIconUrl\" : \"https://localimg.zohostatic.com/support/app/images/support-2.befdbf2e5043b988ef7e.ico\",\n  \"id\" : \"24073000002579275\",\n  \"helpCenterLocales\" : [ {\n    \"name\" : \"Zoho Cares\",\n    \"locale\" : \"en\",\n    \"type\" : \"DEFAULT\",\n    \"status\" : \"ACCESIBLE_IN_HELPCENTER\"\n  } ],\n  \"primaryLocale\" : \"en\",\n  \"status\" : \"ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "Update Helpcenter sitemaps",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/helpCenters/4000000190032/sitemaps",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"helpCenters",
								"4000000190032",
								"sitemaps"
							]
						},
						"description": "This API will generate sitemaps for the given Helpcenter\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Update Helpcenter sitemaps",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/helpCenters/4000000190032/sitemaps?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"helpCenters",
										"4000000190032",
										"sitemaps"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Help center refers to the central self-service portal through which customers can look for solutions and fix issues by themselves.The help center brings together different help modules, such as your knowledge base, community forum, live chat, and ticket submission form"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "List help center users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 1,",
									"description": "Index number, starting from which the users must be fetched. The default value is 1.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 50,",
									"description": "Number of users to list. The default value and the maximum value allowed is 50.",
									"disabled": true
								},
								{
									"key": "searchBy",
									"value": "<String>\n",
									"description": "Search keyword to use for finding a particular user. The keyword must contain at least two characters. ",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<String>\n",
									"description": " Key that sorts the list of users by a particular attribute: -(`email` or `modifiedTime`)",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<String>\n",
									"description": "Activation status of the users to list",
									"disabled": true
								},
								{
									"key": "helpCenterId",
									"value": "<long>\n",
									"description": " ID of the help center from which the users must be fetched",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the user. Value allowed is `count`.",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of help center users, based on the limit defined. It also helps you search for specific users.\n#### OAuth Scope\n- `Desk.search.READ`\n- `Desk.contacts.READ`\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List help center users",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/users?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&include=count",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"users"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										},
										{
											"key": "include",
											"value": "count"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"lastAccessedTime\" : \"2021-06-11T06:21:32.000Z\",\n    \"photoURL\" : \"https://desk.zoho.com/portal/api/portalUser/17883000000094001/photo\",\n    \"emailAddress\" : \"carol@zylker.com\",\n    \"name\" : \"Developer\",\n    \"id\" : \"310975130121\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#39B54A\",\n        \"textColor\" : \"#FFFFFF\"\n      },\n      \"name\" : \"Lock Label\",\n      \"id\" : \"24073000002823026\",\n      \"logoUrl\" : null\n    },\n    \"type\" : \"ENDUSER\",\n    \"status\" : \"ACTIVE\"\n  } ],\n  \"count\" : \"1\"\n}"
						}
					]
				},
				{
					"name": "Get details of user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/:user_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								":user_id"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the user. Value allowed is `contact`.",
									"disabled": true
								},
								{
									"key": "helpCenterId",
									"value": "<long>\n",
									"description": "ID of the help center from which the user must be fetched",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "user_id"
								}
							]
						},
						"description": "This API fetches the details of a particular help center user.\n#### OAuth Scope\n- `Desk.contacts.READ`\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get details of user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/users/310975130121?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"users",
										"310975130121"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"lastAccessedTime\" : \"2021-06-11T06:21:32.000Z\",\n  \"photoURL\" : \"https://desk.zoho.com/portal/api/portalUser/17883000000094001/photo\",\n  \"contactId\" : \"3313135931139\",\n  \"contact\" : {\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"name\" : \"Developer\",\n    \"id\" : \"3313135931139\"\n  },\n  \"name\" : \"Developer\",\n  \"id\" : \"310975130121\",\n  \"label\" : {\n    \"preferences\" : {\n      \"shape\" : \"RECTANGLE\",\n      \"bgColor\" : \"#39B54A\",\n      \"textColor\" : \"#FFFFFF\"\n    },\n    \"name\" : \"Lock Label\",\n    \"id\" : \"24073000002823026\",\n    \"logoUrl\" : null\n  },\n  \"type\" : \"ENDUSER\",\n  \"email\" : [ {\n    \"emailAddress\" : \"zylcare@zylker.com\",\n    \"isVerified\" : \"false\",\n    \"isPrimary\" : \"true\"\n  } ],\n  \"status\" : \"ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "Update details of user",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/:user_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								":user_id"
							],
							"query": [
								{
									"key": "helpCenterId",
									"value": "<long>\n",
									"description": "ID of the help center from which the user must be updated",
									"disabled": true
								},
								{
									"key": "email",
									"value": "<list>\n",
									"description": "Email ID of the user",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<string>\nmax chars : 100",
									"description": "Activation status of the user. Values supported are `ACTIVE` and `DISABLED`.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "user_id"
								}
							]
						},
						"description": "This API helps update the details of a particular help center user.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n- `Desk.settings.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Update details of user",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\" : [ {\n    \"emailAddress\" : \"zylcare@zylker.com\",\n    \"isPrimary\" : \"true\"\n  } ],\n  \"status\" : \"ACTIVE\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/users/4000000190069?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"users",
										"4000000190069"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"lastAccessedTime\" : \"2021-06-11T06:21:32.000Z\",\n  \"photoURL\" : \"https://desk.zoho.com/portal/api/portalUser/17883000000094001/photo\",\n  \"contactId\" : \"3313135931139\",\n  \"name\" : \"Developer\",\n  \"id\" : \"310975130121\",\n  \"label\" : {\n    \"preferences\" : {\n      \"shape\" : \"RECTANGLE\",\n      \"bgColor\" : \"#39B54A\",\n      \"textColor\" : \"#FFFFFF\"\n    },\n    \"name\" : \"Lock Label\",\n    \"id\" : \"24073000002823026\",\n    \"logoUrl\" : null\n  },\n  \"type\" : \"ENDUSER\",\n  \"email\" : [ {\n    \"emailAddress\" : \"zylcare@zylker.com\",\n    \"isVerified\" : \"false\",\n    \"isPrimary\" : \"true\"\n  } ],\n  \"status\" : \"ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "Anonymize user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/users/:user_id/anonymize",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":user_id",
								"anonymize"
							],
							"variable": [
								{
									"key": "user_id"
								}
							]
						},
						"description": "This API permanently deletes all identifying information about a user from your help center.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| anonymizedName  | &lt;string&gt;<br />max chars : 100 | Display name of the user in tickets and community topics after anonymization \n"
					},
					"response": [
						{
							"name": "Anonymize user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"anonymizedName\" : \"Guest User 001\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/users/4000000190069?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"users",
										"4000000190069"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List user groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/:user_id/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								":user_id",
								"groups"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 1,",
									"description": "Index number, starting from which the groups must be fetched. The default value is 1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 50,",
									"description": "Number of groups to list. The default value and the maximum value allowed is 50",
									"disabled": true
								},
								{
									"key": "searchBy",
									"value": "<String>\n",
									"description": "Search keyword to use for finding a particular user. The keyword must contain at least two characters.",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<String>\n",
									"description": "Key that sorts the list of user groups by a particular attribute: -(`addedTime`)",
									"disabled": true
								},
								{
									"key": "helpCenterId",
									"value": "<long>\n",
									"description": "ID of the help center from which the groups must be fetched",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "user_id"
								}
							]
						},
						"description": "This API lists a particular number of user groups in a help center, based on the limit defined.\n#### OAuth Scope\n- `Desk.contacts.READ`\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List user groups",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/users/24073000002913021/groups?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&helpCenterId=24073000002733221",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"users",
										"24073000002913021",
										"groups"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										},
										{
											"key": "helpCenterId",
											"value": "24073000002733221"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"addedTime\" : \"2020-04-06T04:50:50.000Z\",\n    \"name\" : \"Zoho CRM Partners\",\n    \"id\" : \"24073000002957057\",\n    \"helpCenterId\" : \"24073000002733221\",\n    \"logoUrl\" : null,\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"addedTime\" : \"2020-04-06T04:50:30.000Z\",\n    \"name\" : \"Zoho Desk Partners\",\n    \"id\" : \"24073000002957051\",\n    \"helpCenterId\" : \"24073000002733221\",\n    \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/24073000002959001?portalId=b363e6f8e029247a38a55e49806bf1f683801f9cd92870bf7cc50d48844902f0\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"addedTime\" : \"2020-04-06T04:50:14.000Z\",\n    \"name\" : \"Zoho One Prime Customers\",\n    \"id\" : \"24073000002957045\",\n    \"helpCenterId\" : \"24073000002733221\",\n    \"logoUrl\" : null,\n    \"status\" : \"ACTIVE\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Add user to groups",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/:user_id/groups/associate?groups=<list>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								":user_id",
								"groups",
								"associate"
							],
							"query": [
								{
									"key": "helpCenterId",
									"value": "<long>\n",
									"description": "ID of the help center from which the groups must be validated",
									"disabled": true
								},
								{
									"key": "groups",
									"value": "<list>\n",
									"description": "IDs of the groups to which the user must be added"
								}
							],
							"variable": [
								{
									"key": "user_id"
								}
							]
						},
						"description": "This API adds a user to the groups specified.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n- `Desk.settings.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Add user to groups",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"groups\" : [ {\n    \"id\" : \"24073000002723212\"\n  }, {\n    \"id\" : \"24073000002732252\"\n  }, {\n    \"id\" : \"24073000002957051\"\n  }, {\n    \"id\" : \"24073000002793019\"\n  } ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/users/24073000002913021/groups/associate?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&helpCenterId=24073000002733221",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"users",
										"24073000002913021",
										"groups",
										"associate"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										},
										{
											"key": "helpCenterId",
											"value": "24073000002733221"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : true,\n    \"id\" : \"24073000002957051\",\n    \"errors\" : null\n  }, {\n    \"success\" : false,\n    \"id\" : \"24073000002793019\",\n    \"errors\" : {\n      \"errorCode\" : \"FORBIDDEN\",\n      \"httpCode\" : 403,\n      \"error\" : \"Restricted\"\n    }\n  }, {\n    \"success\" : false,\n    \"id\" : \"24073000002723212\",\n    \"errors\" : {\n      \"errorCode\" : \"FORBIDDEN\",\n      \"httpCode\" : 403,\n      \"error\" : \"Restricted\"\n    }\n  }, {\n    \"success\" : false,\n    \"id\" : \"24073000002732252\",\n    \"errors\" : {\n      \"errorCode\" : \"FORBIDDEN\",\n      \"httpCode\" : 403,\n      \"error\" : \"Restricted\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Remove user from groups",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/:user_id/groups/dissociate?groupIds=<list>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								":user_id",
								"groups",
								"dissociate"
							],
							"query": [
								{
									"key": "helpCenterId",
									"value": "<long>\n",
									"description": "ID of the help center from which the groups must be removed",
									"disabled": true
								},
								{
									"key": "groupIds",
									"value": "<list>\n",
									"description": "IDs of the groups from which the user must be removed"
								}
							],
							"variable": [
								{
									"key": "user_id"
								}
							]
						},
						"description": "This API removes a user from the groups specified.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n- `Desk.settings.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Remove user from groups",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"groupIds\" : [ \"24073000002957051\", \"24073000002932512\", \"24073000002953232\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/users/24073000002913021/groups/dissociate?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&helpCenterId=24073000002733221",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"users",
										"24073000002913021",
										"groups",
										"dissociate"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										},
										{
											"key": "helpCenterId",
											"value": "24073000002733221"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : false,\n    \"id\" : \"24073000002957051\",\n    \"errors\" : {\n      \"errorCode\" : \"FORBIDDEN\",\n      \"httpCode\" : 403,\n      \"error\" : \"Minimum user should be maintained\"\n    }\n  }, {\n    \"success\" : false,\n    \"id\" : \"24073000002932512\",\n    \"errors\" : {\n      \"errorCode\" : \"FORBIDDEN\",\n      \"httpCode\" : 403,\n      \"error\" : \"Restricted\"\n    }\n  }, {\n    \"success\" : true,\n    \"id\" : \"24073000002953232\",\n    \"errors\" : null\n  } ]\n}"
						}
					]
				},
				{
					"name": "List labels of user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/:user_id/labels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								":user_id",
								"labels"
							],
							"query": [
								{
									"key": "isPrimary",
									"value": "<boolean>\n",
									"description": "Key that filters the primary label assigned to the user",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<int>\ndefault : 1,",
									"description": "Index number, starting from which the labels must be fetched. The default value is 1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 50,",
									"description": "Number of labels to list. The default value and the maximum value allowed is 50",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<String>\n",
									"description": "Key that sorts the list of labels by a particular attribute: -(`assignedTime`)",
									"disabled": true
								},
								{
									"key": "searchBy",
									"value": "<String>\n",
									"description": "Search keyword to use for finding a particular user. The keyword must contain at least two characters.",
									"disabled": true
								},
								{
									"key": "helpCenterId",
									"value": "<long>\n",
									"description": "ID of the help center from which the labels must be fetched",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "user_id"
								}
							]
						},
						"description": "This API lists a particular number of labels associated with a user, based on the limit defined.\n#### OAuth Scope\n- `Desk.contacts.READ`\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List labels of user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/users/24073000002913021/labels?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&helpCenterId=24073000002733221",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"users",
										"24073000002913021",
										"labels"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										},
										{
											"key": "helpCenterId",
											"value": "24073000002733221"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"preferences\" : {\n      \"shape\" : \"ROUNDED\",\n      \"bgColor\" : \"#5787E0\",\n      \"textColor\" : \"#FFFFFF\"\n    },\n    \"isPrimary\" : false,\n    \"name\" : \"Prime Customer\",\n    \"id\" : \"24073000002958013\",\n    \"helpCenterId\" : \"24073000002886005\",\n    \"logoUrl\" : null,\n    \"assignedTime\" : \"2020-04-06T05:55:13.000Z\"\n  }, {\n    \"preferences\" : {\n      \"shape\" : \"RECTANGLE\",\n      \"bgColor\" : \"#39B54A\",\n      \"textColor\" : \"#FFFFFF\"\n    },\n    \"isPrimary\" : false,\n    \"name\" : \"Zoho One\",\n    \"id\" : \"24073000002958023\",\n    \"helpCenterId\" : \"24073000002886005\",\n    \"logoUrl\" : null,\n    \"assignedTime\" : \"2020-04-06T05:55:13.000Z\"\n  }, {\n    \"preferences\" : {\n      \"shape\" : \"RECTANGLE\",\n      \"bgColor\" : \"#CE6785\",\n      \"textColor\" : \"#FFFFFF\"\n    },\n    \"isPrimary\" : false,\n    \"name\" : \"MVP\",\n    \"id\" : \"24073000002958029\",\n    \"helpCenterId\" : \"24073000002886005\",\n    \"logoUrl\" : null,\n    \"assignedTime\" : \"2020-04-06T05:55:13.000Z\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Assign labels to user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/:user_id/labels/assign?labels=<list>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								":user_id",
								"labels",
								"assign"
							],
							"query": [
								{
									"key": "helpCenterId",
									"value": "<long>\n",
									"description": "ID of the help center from which the labels must be validated",
									"disabled": true
								},
								{
									"key": "labels",
									"value": "<list>\n",
									"description": "List containing the details of the labels to assign"
								}
							],
							"variable": [
								{
									"key": "user_id"
								}
							]
						},
						"description": "This API assigns the labels you specify to a particular user.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n- `Desk.settings.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Assign labels to user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"labels\" : [ {\n    \"isPrimary\" : \"false\",\n    \"id\" : \"24073000002958013\"\n  }, {\n    \"isPrimary\" : \"true\",\n    \"id\" : \"24073000002152013\"\n  }, {\n    \"isPrimary\" : \"false\",\n    \"id\" : \"24073000002958023\"\n  } ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/users/24073000002913021/labels/assign?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&helpCenterId=24073000002733221",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"users",
										"24073000002913021",
										"labels",
										"assign"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										},
										{
											"key": "helpCenterId",
											"value": "24073000002733221"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : true,\n    \"id\" : \"24073000002958013\",\n    \"errors\" : null\n  }, {\n    \"success\" : true,\n    \"id\" : \"24073000002958023\",\n    \"errors\" : null\n  }, {\n    \"success\" : false,\n    \"id\" : \"24073000002152013\",\n    \"errors\" : {\n      \"errorCode\" : \"FORBIDDEN\",\n      \"httpCode\" : 403,\n      \"error\" : \"Restricted\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Remove labels from user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/:user_id/labels/remove?labelIds=<list>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								":user_id",
								"labels",
								"remove"
							],
							"query": [
								{
									"key": "helpCenterId",
									"value": "<long>\n",
									"description": "ID of the help center from which the labels must be removed",
									"disabled": true
								},
								{
									"key": "labelIds",
									"value": "<list>\n",
									"description": "List containing the IDs of the labels to remove"
								}
							],
							"variable": [
								{
									"key": "user_id"
								}
							]
						},
						"description": "This API removes the labels you specify from a particular user.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n- `Desk.settings.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Remove labels from user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"labelIds\" : [ \"24073000002958023\", \"24073000002952323\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/users/24073000002913021/labels/remove?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&helpCenterId=24073000002733221",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"users",
										"24073000002913021",
										"labels",
										"remove"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										},
										{
											"key": "helpCenterId",
											"value": "24073000002733221"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : true,\n    \"id\" : \"24073000002958023\",\n    \"errors\" : null\n  }, {\n    \"success\" : false,\n    \"id\" : \"24073000002952323\",\n    \"errors\" : {\n      \"errorCode\" : \"FORBIDDEN\",\n      \"httpCode\" : 403,\n      \"error\" : \"Restricted\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "List User badges",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/([0-9]+)/badges",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"([0-9]+)",
								"badges"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 1,",
									"description": "Index number, starting from which the badges must be fetched. The default value is 1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 50,",
									"description": "Number of badges to list. The default value and the maximum value allowed is 50",
									"disabled": true
								},
								{
									"key": "type",
									"value": "<string>\nmax chars : 100",
									"description": "Type of badge: default or custom",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort by the `createdTime` attribute. The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "<date>\n",
									"description": "Start time should be in GMT time zone",
									"disabled": true
								},
								{
									"key": "endTime",
									"value": "<date>\n",
									"description": "End time should be in GMT time zone",
									"disabled": true
								}
							]
						},
						"description": "This API lists user's default and custom badges, based on the limit defined.\n#### OAuth Scope\n- `Desk.contacts.READ`\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List User badges",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/users/([0-9]+)/badges",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"users",
										"([0-9]+)",
										"badges"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[ {\n  \"name\" : \"Badge 1\",\n  \"isCustom\" : \"false\",\n  \"description\" : \"Best Contributor\",\n  \"id\" : \"1\",\n  \"iconUrl\" : \"https://www.zylker.com/badge1.jpg\"\n} ]"
						}
					]
				},
				{
					"name": "Add Badges to a user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/:user_id/badges/associate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								":user_id",
								"badges",
								"associate"
							],
							"variable": [
								{
									"key": "user_id"
								}
							]
						},
						"description": "This API adds specified badges to user.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| badgeIds (required) | &lt;list&gt;<br /> | IDs of the badges to which the user must be associated \n"
					},
					"response": [
						{
							"name": "Add Badges to a user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"badgeIds\" : [ \"24073000002823212\", \"24073000002832252\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/users/24073000002913021/badges/associate?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&helpCenterId=24073000002733221",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"users",
										"24073000002913021",
										"badges",
										"associate"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										},
										{
											"key": "helpCenterId",
											"value": "24073000002733221"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : true,\n    \"id\" : \"24073000002823212\",\n    \"errors\" : null\n  }, {\n    \"success\" : false,\n    \"id\" : \"24073000002832252\",\n    \"errors\" : {\n      \"errorCode\" : \"FORBIDDEN\",\n      \"httpCode\" : 403\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Remove Badges from user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/:user_id/badges/dissociate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								":user_id",
								"badges",
								"dissociate"
							],
							"variable": [
								{
									"key": "user_id"
								}
							]
						},
						"description": "This API removes specified badges from the users.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| badgeIds (required) | &lt;list&gt;<br /> | IDs of the badges from which the user must be dissociated \n"
					},
					"response": [
						{
							"name": "Remove Badges from user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"badgeIds\" : [ \"24073000002957051\", \"24073000002953232\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/users/24073000002913021/badges/dissociate?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&helpCenterId=24073000002733221",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"users",
										"24073000002913021",
										"badges",
										"dissociate"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										},
										{
											"key": "helpCenterId",
											"value": "24073000002733221"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : false,\n    \"id\" : \"24073000002957051\",\n    \"errors\" : {\n      \"errorCode\" : \"FORBIDDEN\",\n      \"httpCode\" : 403\n    }\n  }, {\n    \"success\" : true,\n    \"id\" : \"24073000002953232\",\n    \"errors\" : null\n  } ]\n}"
						}
					]
				}
			],
			"description": "Users are the end-users of your product/service, who access your help center to find solutions."
		},
		{
			"name": "Labels",
			"item": [
				{
					"name": "Create label",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/labels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"labels"
							]
						},
						"description": "This API creates a label in your help center.\n#### OAuth Scope\n- `Desk.contacts.CREATE`\n- `Desk.settings.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name (required) | &lt;String&gt;<br /> | Name of the label \n| logoId  | &lt;long&gt;<br /> | ID of the logo set for the label \n| helpCenterId (required) | &lt;long&gt;<br /> | ID of the help center in which the label must be created \n| preferences  | &lt;JSONObject&gt;<br /> | Visual preferences related to the label/logo \n"
					},
					"response": [
						{
							"name": "Create label",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"preferences\" : {\n    \"shape\" : \"ROUNDED\",\n    \"bgColor\" : \"#FFEE\",\n    \"textColor\" : \"#FFEE\"\n  },\n  \"name\" : \"Pro Customer\",\n  \"helpCenterId\" : \"310975130119\",\n  \"logoId\" : \"310975130121\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/labels?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"labels"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2017-09-19T04:58:50.000Z\",\n  \"preferences\" : {\n    \"shape\" : \"ROUNDED\",\n    \"bgColor\" : \"#FFEE\",\n    \"textColor\" : \"#FFEE\"\n  },\n  \"creator\" : {\n    \"photoURL\" : \"https://desk.zoho.com/portal/api/user/6000000015895/photo?orgId=143315\",\n    \"name\" : \"SupportAdmin\",\n    \"id\" : \"310975130121\"\n  },\n  \"modifier\" : {\n    \"photoURL\" : \"https://desk.zoho.com/portal/api/user/6000000015895/photo?orgId=143315\",\n    \"name\" : \"SupportAdmin\",\n    \"id\" : \"310975130121\"\n  },\n  \"name\" : \"Pro Customer\",\n  \"count\" : \"0\",\n  \"createdTime\" : \"2017-09-19T04:58:50.000Z\",\n  \"id\" : \"310975130110\",\n  \"helpCenterId\" : \"310975130119\",\n  \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/310975130121?portalId=5c9470fcc808cc98932703e28221d6c302e105dc4da8b23fafb6719abeecaa48\"\n}"
						}
					]
				},
				{
					"name": "Update label",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/labels/:label_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"labels",
								":label_id"
							],
							"variable": [
								{
									"key": "label_id"
								}
							]
						},
						"description": "This API helps update the details of a label.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name  | &lt;String&gt;<br /> | Name of the label \n| logoId  | &lt;long&gt;<br /> | ID of the logo set for the label \n| preferences  | &lt;JSONObject&gt;<br /> | Visual preferences related to the label/logo \n"
					},
					"response": [
						{
							"name": "Update label",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"preferences\" : {\n    \"shape\" : \"ROUNDED\",\n    \"bgColor\" : \"#FFEE\",\n    \"textColor\" : \"#FFEE\"\n  },\n  \"name\" : \"Pro Customer\",\n  \"logoId\" : \"310975130121\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/labels/310975130110?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"labels",
										"310975130110"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2017-09-19T04:58:50.000Z\",\n  \"preferences\" : {\n    \"shape\" : \"ROUNDED\",\n    \"bgColor\" : \"#FFEE\",\n    \"textColor\" : \"#FFEE\"\n  },\n  \"creator\" : {\n    \"photoURL\" : \"https://desk.zoho.com/portal/api/user/6000000015895/photo?orgId=143315\",\n    \"name\" : \"SupportAdmin\",\n    \"id\" : \"310975130121\"\n  },\n  \"modifier\" : {\n    \"photoURL\" : \"https://desk.zoho.com/portal/api/user/6000000015895/photo?orgId=143315\",\n    \"name\" : \"SupportAdmin\",\n    \"id\" : \"310975130121\"\n  },\n  \"name\" : \"Pro Customer\",\n  \"count\" : \"892\",\n  \"createdTime\" : \"2017-09-19T04:58:50.000Z\",\n  \"id\" : \"310975130110\",\n  \"helpCenterId\" : \"310975130119\",\n  \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/310975130121?portalId=5c9470fcc808cc98932703e28221d6c302e105dc4da8b23fafb6719abeecaa48\"\n}"
						}
					]
				},
				{
					"name": "Get details of label",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/labels/:label_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"labels",
								":label_id"
							],
							"variable": [
								{
									"key": "label_id"
								}
							]
						},
						"description": "This API fetches the details of a particular label.\n#### OAuth Scope\n- `Desk.contacts.READ`\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get details of label",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/labels/310975130110?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"labels",
										"310975130110"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2017-09-19T04:58:50.000Z\",\n  \"preferences\" : {\n    \"shape\" : \"ROUNDED\",\n    \"bgColor\" : \"#FFEE\",\n    \"textColor\" : \"#FFEE\"\n  },\n  \"creator\" : {\n    \"photoURL\" : \"https://desk.zoho.com/portal/api/user/6000000015895/photo?orgId=143315\",\n    \"name\" : \"SupportAdmin\",\n    \"id\" : \"310975130121\"\n  },\n  \"modifier\" : {\n    \"photoURL\" : \"https://desk.zoho.com/portal/api/user/6000000015895/photo?orgId=143315\",\n    \"name\" : \"SupportAdmin\",\n    \"id\" : \"310975130121\"\n  },\n  \"name\" : \"Pro Customer\",\n  \"count\" : \"320\",\n  \"createdTime\" : \"2017-09-19T04:58:50.000Z\",\n  \"id\" : \"310975130110\",\n  \"helpCenterId\" : \"310975130119\",\n  \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/310975130121?portalId=5c9470fcc808cc98932703e28221d6c302e105dc4da8b23fafb6719abeecaa48\"\n}"
						}
					]
				},
				{
					"name": "List labels",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/labels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"labels"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 1,",
									"description": "Index number, starting from which the labels must be fetched. The default value is 1.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 50,",
									"description": "Number of labels to list. The default value and the maximum value allowed is 50.",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<String>\n",
									"description": "Key that sorts the list of labels by a particular attribute: -(`createdTime` or `modifiedTime`, or `name`)",
									"disabled": true
								},
								{
									"key": "searchBy",
									"value": "<String>\n",
									"description": "Search keyword to use for finding a particular label. The keyword must contain at least two characters.          Three types of search are supported: `keyword*` (search for values that start with the keyword,          `*keyword* `(search for values that contain the keyword), and `keyword` (search for values that are exact matches of the keyword) ",
									"disabled": true
								},
								{
									"key": "helpCenterId",
									"value": "<long>\n",
									"description": "ID of the help center from which the labels must be fetched",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of labels, based on the limit defined.\n#### OAuth Scope\n- `Desk.contacts.READ`\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List labels",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/labels?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"labels"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2017-09-19T04:58:50.000Z\",\n    \"preferences\" : {\n      \"shape\" : \"ROUNDED\",\n      \"bgColor\" : \"#FFEE\",\n      \"textColor\" : \"#FFEE\"\n    },\n    \"creator\" : {\n      \"photoURL\" : \"https://desk.zoho.com/portal/api/user/6000000015895/photo?orgId=143315\",\n      \"name\" : \"SupportAdmin\",\n      \"id\" : \"310975130121\"\n    },\n    \"modifier\" : {\n      \"photoURL\" : \"https://desk.zoho.com/portal/api/user/6000000015895/photo?orgId=143315\",\n      \"name\" : \"SupportAdmin\",\n      \"id\" : \"310975130121\"\n    },\n    \"name\" : \"Pro Customer\",\n    \"count\" : \"892\",\n    \"createdTime\" : \"2017-09-19T04:58:50.000Z\",\n    \"id\" : \"310975130110\",\n    \"helpCenterId\" : \"310975130119\",\n    \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/310975130121?portalId=5c9470fcc808cc98932703e28221d6c302e105dc4da8b23fafb6719abeecaa48\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Delete label",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/labels/:label_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"labels",
								":label_id"
							],
							"variable": [
								{
									"key": "label_id"
								}
							]
						},
						"description": "This API deletes a label from your help center.\n#### OAuth Scope\n- `Desk.contacts.DELETE`\n- `Desk.settings.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete label",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/labels/310975130110?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"labels",
										"310975130110"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete label by labelIds",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/labels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"labels"
							],
							"query": [
								{
									"key": "labelIds",
									"value": "<long>\n",
									"description": "IDs of the labels to delete",
									"disabled": true
								}
							]
						},
						"description": "This API deletes labels, based on the IDs specified.\n#### OAuth Scope\n- `Desk.contacts.DELETE`\n- `Desk.settings.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete label by labelIds",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/labels?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&labelIds=310975130110,310975130021",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"labels"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										},
										{
											"key": "labelIds",
											"value": "310975130110,310975130021"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Assign label to users",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/labels/:label_id/users/add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"labels",
								":label_id",
								"users",
								"add"
							],
							"variable": [
								{
									"key": "label_id"
								}
							]
						},
						"description": "This API assigns a particular label to multiple users.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| userIds (required) | &lt;list&gt;<br /> | IDs of the users to whom the label must be assigned \n"
					},
					"response": [
						{
							"name": "Assign label to users",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userIds\" : [ \"3109751143253\", \"310975131231\", \"310975133141\", \"310975101849\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/labels/310975130110/users/add?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"labels",
										"310975130110",
										"users",
										"add"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove users under a label",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/labels/:label_id/users/remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"labels",
								":label_id",
								"users",
								"remove"
							],
							"variable": [
								{
									"key": "label_id"
								}
							]
						},
						"description": "This API removes all users under a particular label.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| userIds (required) | &lt;list&gt;<br /> | IDs of the users from whom the label must be removed \n"
					},
					"response": [
						{
							"name": "Remove users under a label",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userIds\" : [ \"3109751143253\", \"310975131231\", \"310975133141\", \"310975101849\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/labels/310975130110/users/remove?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"labels",
										"310975130110",
										"users",
										"remove"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List users under a label",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/labels/:label_id/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"labels",
								":label_id",
								"users"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 1,",
									"description": "Index number, starting from which the users must be fetched. The default value is 1. ",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 50,",
									"description": "Number of users to list. The default value is 50 and the maximum value allowed is 100",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<String>\n",
									"description": "Key that sorts the list of users by a specific attribute: -(`assignedTime`)",
									"disabled": true
								},
								{
									"key": "searchBy",
									"value": "<String>\n",
									"description": "Search keyword to use for finding a particular user. The keyword must contain at least two characters.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "label_id"
								}
							]
						},
						"description": "This API lists a particular number of users under a label, based on the limit defined.\n#### OAuth Scope\n- `Desk.search.READ`\n- `Desk.contacts.READ`\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List users under a label",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/labels/310975130110/users?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"labels",
										"310975130110",
										"users"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"photoUrl\" : null,\n    \"emailAddress\" : \"carol@zylker.com\",\n    \"name\" : \"svega RM\",\n    \"userType\" : \"ENDUSER\",\n    \"assignee\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/portal/api/user/6000000015895/photo?orgId=143315\",\n      \"name\" : \"Chris\",\n      \"id\" : \"6000000015895\"\n    },\n    \"id\" : \"6000000032907\",\n    \"assignedTime\" : \"2019-08-09T07:47:44.000Z\",\n    \"status\" : \"ACTIVE\"\n  } ]\n}"
						}
					]
				}
			],
			"description": "Labels are tags that you add to users to highlight their contribution in your help center."
		},
		{
			"name": "Groups",
			"item": [
				{
					"name": "Create user groups",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"groups"
							]
						},
						"description": "This API creates a user group in your help center.\n#### OAuth Scope\n- `Desk.contacts.CREATE`\n- `Desk.settings.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name (required) | &lt;string&gt;<br />max chars : 100 | Name of the group \n| description  | &lt;string&gt;<br />max chars : 3000 | A brief description of the group \n| logoId  | &lt;long&gt;<br /> | ID of the logo to associate with the group \n| helpCenterId (required) | &lt;long&gt;<br /> | ID of the help center in which the group must be created \n"
					},
					"response": [
						{
							"name": "Create user groups",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"Prime Customer\",\n  \"description\" : \"Prime customer will have special access to Knowledge base module and Community categories\",\n  \"helpCenterId\" : \"31097519102\",\n  \"logoId\" : \"310975130121\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/groups?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"groups"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2017-09-19T04:58:50.000Z\",\n  \"creator\" : {\n    \"photoURL\" : \"https://desk.zoho.com/portal/api/user/6000000015895/photo?orgId=143315\",\n    \"name\" : \"SupportAdmin\",\n    \"id\" : \"310975130121\"\n  },\n  \"modifier\" : {\n    \"photoURL\" : \"https://desk.zoho.com/portal/api/user/6000000015895/photo?orgId=143315\",\n    \"name\" : \"SupportAdmin\",\n    \"id\" : \"310975130121\"\n  },\n  \"name\" : \"Prime Customer\",\n  \"count\" : \"0\",\n  \"description\" : \"Prime customer will have special access to Knowledge base module and Community categories\",\n  \"createdTime\" : \"2017-09-19T04:58:50.000Z\",\n  \"id\" : \"310975134902\",\n  \"helpCenterId\" : \"31097519102\",\n  \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/310975130121?portalId=5c9470fcc808cc98932703e28221d6c302e105dc4da8b23fafb6719abeecaa48\",\n  \"status\" : \"ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "Update group",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/groups/:group_Id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"groups",
								":group_Id"
							],
							"variable": [
								{
									"key": "group_Id"
								}
							]
						},
						"description": "This API helps update the details of a user group.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name  | &lt;string&gt;<br />max chars : 100 | Name of the group \n| description  | &lt;string&gt;<br />max chars : 3000 | A brief description of the group \n| logoId  | &lt;long&gt;<br /> | ID of the logo to associate with the group \n"
					},
					"response": [
						{
							"name": "Update group",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"MVP Customer\",\n  \"description\" : \"Prime customer will have special access to Knowledge base module and Community categories\",\n  \"logoId\" : \"310975130133\",\n  \"status\" : \"ACTIVE\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/groups/310975134902?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"groups",
										"310975134902"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2017-09-19T04:58:50.000Z\",\n  \"creator\" : {\n    \"photoURL\" : \"https://desk.zoho.com/portal/api/user/6000000015895/photo?orgId=143315\",\n    \"name\" : \"SupportAdmin\",\n    \"id\" : \"310975130121\"\n  },\n  \"modifier\" : {\n    \"photoURL\" : \"https://desk.zoho.com/portal/api/user/6000000015895/photo?orgId=143315\",\n    \"name\" : \"SupportAdmin\",\n    \"id\" : \"310975130121\"\n  },\n  \"name\" : \"MVP Customer\",\n  \"count\" : \"892\",\n  \"description\" : \"Prime customer will have special access to Knowledge base module and Community categories\",\n  \"createdTime\" : \"2017-09-19T04:58:50.000Z\",\n  \"id\" : \"310975134902\",\n  \"helpCenterId\" : \"31097519102\",\n  \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/310975130133?portalId=5c9470fcc808cc98932703e28221d6c302e105dc4da8b23fafb6719abeecaa48\",\n  \"status\" : \"ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "Get details of group",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/groups/:group_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"groups",
								":group_id"
							],
							"variable": [
								{
									"key": "group_id"
								}
							]
						},
						"description": "This API fetches the details of a particular user group.\n#### OAuth Scope\n- `Desk.contacts.READ`\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get details of group",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/groups/310975134902?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"groups",
										"310975134902"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2017-09-19T04:58:50.000Z\",\n  \"creator\" : {\n    \"photoURL\" : \"https://desk.zoho.com/portal/api/user/310975130121/photo?orgId=143315\",\n    \"name\" : \"SupportAdmin\",\n    \"id\" : \"310975130121\"\n  },\n  \"modifier\" : {\n    \"photoURL\" : \"https://desk.zoho.com/portal/api/user/310975130121/photo?orgId=143315\",\n    \"name\" : \"SupportAdmin\",\n    \"id\" : \"310975130121\"\n  },\n  \"name\" : \"MVP Customer\",\n  \"count\" : \"892\",\n  \"description\" : \"Prime customer will have special access to Knowledge base module and Community categories\",\n  \"createdTime\" : \"2017-09-19T04:58:50.000Z\",\n  \"id\" : \"310975134902\",\n  \"helpCenterId\" : \"310975130119\",\n  \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/310975130133?portalId=5c9470fcc808cc98932703e28221d6c302e105dc4da8b23fafb6719abeecaa48\",\n  \"status\" : \"ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "List groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"groups"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 1,",
									"description": "Index number, starting from which the groups must be fetched. The default value is 1. ",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 50,",
									"description": "Number of groups to list. The default value and the maximum value allowed is 50.",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<String>\n",
									"description": "Key that sorts the list of groups by a particular attribute: -(`createdTime`, `modifiedTime`, `name`, or `count`)",
									"disabled": true
								},
								{
									"key": "searchBy",
									"value": "<String>\n",
									"description": "Search keyword to use for finding a particular group The keyword must contain at least two characters.        Three types of search are supported: `keyword*` (search for values that start with the keyword, `*keyword*` (search for values that contain the keyword),          and `keyword` (search for values that are exact matches of the keyword).",
									"disabled": true
								},
								{
									"key": "helpCenterId",
									"value": "<long>\n",
									"description": "ID of the help center from which the resource must be fetched",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of groups, based on the limit defined.\n#### OAuth Scope\n- `Desk.contacts.READ`\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List groups",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/groups?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&helpCenterId=310975130119",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"groups"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										},
										{
											"key": "helpCenterId",
											"value": "310975130119"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2017-09-19T04:58:50.000Z\",\n    \"creator\" : {\n      \"photoURL\" : \"https://desk.zoho.com/portal/api/user/310975130121/photo?orgId=143315\",\n      \"name\" : \"SupportAdmin\",\n      \"id\" : \"310975130121\"\n    },\n    \"modifier\" : {\n      \"photoURL\" : \"https://desk.zoho.com/portal/api/user/310975130121/photo?orgId=143315\",\n      \"name\" : \"SupportAdmin\",\n      \"id\" : \"310975130121\"\n    },\n    \"name\" : \"Pro Customer\",\n    \"count\" : \"353\",\n    \"description\" : \"Pro Customers paid customers of the org will avail 24x7 Support service\",\n    \"createdTime\" : \"2017-09-19T04:58:50.000Z\",\n    \"id\" : \"310975130110\",\n    \"helpCenterId\" : \"310975130119\",\n    \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/310975130133?portalId=5c9470fcc808cc98932703e28221d6c302e105dc4da8b23fafb6719abeecaa48\",\n    \"status\" : \"ACTIVE\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Delete group",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/groups/:group_Id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"groups",
								":group_Id"
							],
							"variable": [
								{
									"key": "group_Id"
								}
							]
						},
						"description": "This API deletes a user group from your help center.\n#### OAuth Scope\n- `Desk.contacts.DELETE`\n- `Desk.settings.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete group",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/groups/310975130110?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"groups",
										"310975130110"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add users to group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/groups/:group_id/users/add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"groups",
								":group_id",
								"users",
								"add"
							],
							"variable": [
								{
									"key": "group_id"
								}
							]
						},
						"description": "This API adds users to a particular group.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| users (required) | &lt;list&gt;<br /> | IDs of the users who must be added to the group \n"
					},
					"response": [
						{
							"name": "Add users to group",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"users\" : [ {\n    \"id\" : \"17883000000094001\"\n  }, {\n    \"id\" : \"17883000000094023\"\n  } ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/groups/310975130110/users/add?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"groups",
										"310975130110",
										"users",
										"add"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove users from group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/groups/:group_Id/users/remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"groups",
								":group_Id",
								"users",
								"remove"
							],
							"variable": [
								{
									"key": "group_Id"
								}
							]
						},
						"description": "This API removes particular users from a group.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| userIds (required) | &lt;list&gt;<br /> | IDs of the users who must be removed from the group \n"
					},
					"response": [
						{
							"name": "Remove users from group",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userIds\" : [ \"17883000000013101\", \"17883000000094023\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/groups/310975130110/users/remove?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"groups",
										"310975130110",
										"users",
										"remove"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List users in a group",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/groups/:group_Id/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"groups",
								":group_Id",
								"users"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 1,",
									"description": "Index number, starting from which the users must be fetched. The default value is 1. ",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 50,",
									"description": "Number of users to list. The default value is 50 and the maximum value allowed is 100.",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<String>\n",
									"description": "Key that sorts the list of users, based on a specific attribute: -(`addedTime`)",
									"disabled": true
								},
								{
									"key": "searchBy",
									"value": "<String>\n",
									"description": " Search keyword to use for finding a particular user. The keyword must contain at least two characters.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "group_Id"
								}
							]
						},
						"description": "This API lists a particular number of users in a group, based on the limit defined.\n#### OAuth Scope\n- `Desk.search.READ`\n- `Desk.contacts.READ`\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List users in a group",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/groups/310975130110/users?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"groups",
										"310975130110",
										"users"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"photoUrl\" : null,\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/portal/api/user/24073000000095005/photo?orgId=143315\",\n      \"name\" : \"ZylCare Admin\",\n      \"id\" : \"24073000000095005\"\n    },\n    \"emailAddress\" : \"carol@zylker.com\",\n    \"name\" : \"John \",\n    \"addedTime\" : \"2019-11-08T14:57:39.000Z\",\n    \"userType\" : \"ENDUSER\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#6CD4DF\",\n        \"textColor\" : \"#FFFFFF\"\n      },\n      \"name\" : \"Prime Customer\",\n      \"id\" : \"24073000002132001\"\n    },\n    \"id\" : \"24073000001997453\",\n    \"status\" : \"ACTIVE\"\n  } ]\n}"
						}
					]
				}
			],
			"description": "Groups are collections of end-users—often related to a specific account, geography, brand, or product—using which you can determine access to your knowledge base and community forums."
		},
		{
			"name": "Articles",
			"item": [
				{
					"name": "List articles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articles"
							],
							"query": [
								{
									"key": "from",
									"value": "<Integer>\nrange : >0",
									"description": "Index number starting from which the articles must be fetched.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<Integer>\nrange : 1-50",
									"description": "Number of articles to fetch",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<String>\n",
									"description": "Key that sorts the articles based on a specific attribute: <br>`createdTime,`<br> or <br>`modifiedTime`<br>",
									"disabled": true
								},
								{
									"key": "permission",
									"value": "<String>\n",
									"description": "Access permission for the article. Values allowed are: `ALL`, `REGISTEREDUSERS`, and `AGENTS`",
									"disabled": true
								},
								{
									"key": "authorId",
									"value": "<Long>\n",
									"description": "ID of article owner",
									"disabled": true
								},
								{
									"key": "categoryId",
									"value": "<Long>\n",
									"description": "ID of the category to which the article belongs",
									"disabled": true
								},
								{
									"key": "modifiedTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters articles modified within a specific date and time range. Enter the dates in the ISO date format of 'yyyy-MM-ddThh:mm:ss.SSSZ,yyyy-MM-ddThh:mm:ss.SSSZ'",
									"disabled": true
								},
								{
									"key": "expiryTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters articles which will expire within a specific date and time range. Enter the dates in the ISO date format of 'yyyy-MM-ddThh:mm:ss.SSSZ,yyyy-MM-ddThh:mm:ss.SSSZ'",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<String>\n",
									"description": "Publishing status of the article. Values allowed are `Draft`, `Published`, `Review`, `Expired`",
									"disabled": true
								}
							]
						},
						"description": "This API fetches a specific number of articles from your knowledge base, based on the limit defined.\n#### OAuth Scope\n- `Desk.articles.READ`\n\n"
					},
					"response": [
						{
							"name": "List articles",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/articles?from=0&limit=10&sortBy=-createdTime&status=Published&categoryId=4000000013240&permission=ALL&orgId=5686513&modifiedTimeRange=2018-07-16T04:48:08.000Z,2018-07-16T07:48:08.000Z&authorId=4000000012931",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "from",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "sortBy",
											"value": "-createdTime"
										},
										{
											"key": "status",
											"value": "Published"
										},
										{
											"key": "categoryId",
											"value": "4000000013240"
										},
										{
											"key": "permission",
											"value": "ALL"
										},
										{
											"key": "orgId",
											"value": "5686513"
										},
										{
											"key": "modifiedTimeRange",
											"value": "2018-07-16T04:48:08.000Z,2018-07-16T07:48:08.000Z"
										},
										{
											"key": "authorId",
											"value": "4000000012931"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2020-06-24T11:46:43.000Z\",\n    \"creatorId\" : \"4000000000059\",\n    \"dislikeCount\" : \"0\",\n    \"modifierId\" : \"4000000000059\",\n    \"likeCount\" : \"0\",\n    \"locale\" : \"en\",\n    \"ownerId\" : \"4000000000059\",\n    \"title\" : \"Answering your first ticket.\",\n    \"isTrashed\" : false,\n    \"createdTime\" : \"2020-06-24T11:46:43.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Hill\",\n      \"id\" : \"4000000000059\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"id\" : \"4000000019059\",\n    \"viewCount\" : \"0\",\n    \"owner\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Hill\",\n      \"id\" : \"4000000000059\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"summary\" : \"Zoho Desk packs a bunch of features that are expressly there to help you respond to tickets smartly. The first of these, you've already discovered: Auto-Suggest Articles. Zoho Desk pulls up relevant articles on the ticket's content—so you can save ...\",\n    \"latestVersionStatus\" : \"Published\",\n    \"author\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Hill\",\n      \"id\" : \"4000000000059\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"permission\" : \"AGENTS\",\n    \"authorId\" : \"4000000000059\",\n    \"usageCount\" : \"0\",\n    \"commentCount\" : \"0\",\n    \"rootCategoryId\" : \"4000000017276\",\n    \"translationId\" : \"4000000017294\",\n    \"createdBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Hill\",\n      \"id\" : \"4000000000059\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"234543\"\n    },\n    \"latestVersion\" : \"1.0\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/4000000019059/en\",\n    \"feedbackCount\" : \"0\",\n    \"portalUrl\" : \"https://desk.zoho.com/portal/zylker/en/kb/articles/answering-your-first-ticket\",\n    \"attachmentCount\" : \"0\",\n    \"latestPublishedVersion\" : \"1.0\",\n    \"category\" : {\n      \"name\" : \"General\",\n      \"id\" : \"4000000017287\",\n      \"locale\" : \"en\"\n    },\n    \"permalink\" : \"answering-your-first-ticket\",\n    \"categoryId\" : \"4000000017287\",\n    \"status\" : \"Published\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get article",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articles/:article_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articles",
								":article_id"
							],
							"query": [
								{
									"key": "version",
									"value": "<String>\n",
									"description": "Version number of the article",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "article_id"
								}
							]
						},
						"description": "This API fetches an article from your knowledge base.\n#### OAuth Scope\n- `Desk.articles.READ`\n\n"
					},
					"response": [
						{
							"name": "Get article",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/22372000000133001?version=1.2&orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"22372000000133001"
									],
									"query": [
										{
											"key": "version",
											"value": "1.2"
										},
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2020-06-24T11:46:43.000Z\",\n  \"reviewedTime\" : \"2020-06-24T11:46:43.000Z\",\n  \"creatorId\" : \"4000000000059\",\n  \"dislikeCount\" : \"0\",\n  \"modifierId\" : \"4000000000059\",\n  \"likeCount\" : \"0\",\n  \"locale\" : \"en\",\n  \"ownerId\" : \"4000000000059\",\n  \"title\" : \"Answering your first ticket.\",\n  \"expiryDate\" : null,\n  \"isTrashed\" : false,\n  \"createdTime\" : \"2020-06-24T11:46:43.000Z\",\n  \"modifiedBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"id\" : \"4000000019059\",\n  \"viewCount\" : \"0\",\n  \"seo\" : {\n    \"keywords\" : \"helpcenter, knowledge base\",\n    \"isEnabled\" : true,\n    \"description\" : \"Knowledge base\",\n    \"title\" : \"Helpcenter and knowledge base\"\n  },\n  \"owner\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"summary\" : \"Zoho Desk packs a bunch of features that are expressly there to help you respond to tickets smartly. The first of these, you've already discovered: Auto-Suggest Articles. Zoho Desk pulls up relevant articles on the ticket's content—so you can save ...\",\n  \"latestVersionStatus\" : \"Published\",\n  \"myVote\" : null,\n  \"author\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"permission\" : \"AGENTS\",\n  \"authorId\" : \"4000000000059\",\n  \"reviewedBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"currentVersion\" : \"1.0\",\n  \"usageCount\" : \"0\",\n  \"commentCount\" : \"0\",\n  \"rootCategoryId\" : \"4000000017276\",\n  \"tags\" : [ \"first ticket\" ],\n  \"answer\" : \"<p>Zoho Desk packs a bunch of features that are expressly there to help you respond to tickets smartly.<br><br>The first of these, you've already discovered: Auto-Suggest Articles. Zoho Desk pulls up relevant articles on the ticket's content—so you can save time on frequently asked questions.<br><br>Every action that you can perform with respect to a ticket has a corresponding keyboard shortcut. With these, you can optimize the time you spend on each ticket. (And the shortcut to access these shortcuts is Shift + ? ).When you need to quickly consult a colleague, you can tag them in a ticket comment without having to leave this screen. That's like a quick chat, without even leaving your place, and with the full context of the ticket.<br><br>With these, you're good to go.<br><br>Go on, save the world from bad customer service!</p>\",\n  \"translationId\" : \"4000000017294\",\n  \"createdBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"latestVersion\" : \"1.0\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/4000000019059/en\",\n  \"feedbackCount\" : \"0\",\n  \"portalUrl\" : \"https://desk.zoho.com/portal/zylker/en/kb/articles/answering-your-first-ticket\",\n  \"attachmentCount\" : \"0\",\n  \"latestPublishedVersion\" : \"1.0\",\n  \"category\" : {\n    \"name\" : \"General\",\n    \"id\" : \"4000000017287\",\n    \"locale\" : \"en\"\n  },\n  \"permalink\" : \"answering-your-first-ticket\",\n  \"categoryId\" : \"4000000017287\",\n  \"status\" : \"Published\"\n}"
						}
					]
				},
				{
					"name": "Create an article",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articles"
							]
						},
						"description": "This API creates an article in your helpdesk.\n#### OAuth Scope\n- `Desk.articles.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| categoryId (required) | &lt;Long&gt;<br /> | The Category \n| title (required) | &lt;String&gt;<br /> | The title of Solution \n| answer (required) | &lt;String&gt;<br /> | The answer part of Solution \n| permalink  | &lt;String&gt;<br /> | The permalink of Solution \n| authorId  | &lt;Long&gt;<br /> | The owner of the solution \n| status (required) | &lt;String&gt;<br /> | Status of the Solution \n| permission (required) | &lt;String&gt;<br /> | Permission of the Solution \n| tags  | &lt;String Array&gt;<br /> | Tags associated with the Solution \n| seoTitle  | &lt;String&gt;<br /> | SEO Title of Solution \n| seoKeywords  | &lt;String&gt;<br /> | SEO Key of Solution \n| seoDescription  | &lt;String&gt;<br /> | SEO Description of Solution \n| isSEOEnabled  | &lt;boolean&gt;<br /> | SEO enabled status of an article \n| expiryDate  | &lt;String&gt;<br /> | Schedule expiry date \n"
					},
					"response": [
						{
							"name": "Create an article",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"seoDescription\" : \"Knowledge Base for your product\",\n  \"permission\" : \"ALL\",\n  \"title\" : \"Importance of a Knowledge Base\",\n  \"authorId\" : 22372000000094004,\n  \"seoTitle\" : \"Knowledge Base\",\n  \"seoKeywords\" : \"Helpcenter, Knowledge Base\",\n  \"tags\" : [ \"knowledge base\", \"helpcenter\" ],\n  \"expiryDate\" : \"2018-05-21T05:55:00.000Z\",\n  \"isSEOEnabled\" : true,\n  \"answer\" : \"The knowledge base is a key component of a good help center. This is where you can share the basics of using your products or services to your customers. Help articles and FAQs are great assets when it comes to answering the most fundamental questions your customers might have regarding your offerings. Help articles also ease the burden of your customer support agents by enabling self-service.\",\n  \"permalink\" : \"knowledgebase\",\n  \"categoryId\" : 22372000000094160,\n  \"status\" : \"Draft\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/articles?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2020-06-24T11:46:43.000Z\",\n  \"reviewedTime\" : \"2020-06-24T11:46:43.000Z\",\n  \"creatorId\" : \"4000000000059\",\n  \"dislikeCount\" : \"0\",\n  \"modifierId\" : \"4000000000059\",\n  \"likeCount\" : \"0\",\n  \"locale\" : \"en\",\n  \"ownerId\" : \"4000000000059\",\n  \"title\" : \"Answering your first ticket.\",\n  \"expiryDate\" : null,\n  \"isTrashed\" : false,\n  \"createdTime\" : \"2020-06-24T11:46:43.000Z\",\n  \"modifiedBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"id\" : \"4000000019059\",\n  \"viewCount\" : \"0\",\n  \"seo\" : {\n    \"keywords\" : \"helpcenter, knowledge base\",\n    \"isEnabled\" : true,\n    \"description\" : \"Knowledge base\",\n    \"title\" : \"Helpcenter and knowledge base\"\n  },\n  \"owner\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"summary\" : \"Zoho Desk packs a bunch of features that are expressly there to help you respond to tickets smartly. The first of these, you've already discovered: Auto-Suggest Articles. Zoho Desk pulls up relevant articles on the ticket's content—so you can save ...\",\n  \"latestVersionStatus\" : \"Published\",\n  \"myVote\" : null,\n  \"author\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"permission\" : \"AGENTS\",\n  \"authorId\" : \"4000000000059\",\n  \"reviewedBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"currentVersion\" : \"1.0\",\n  \"usageCount\" : \"0\",\n  \"commentCount\" : \"0\",\n  \"rootCategoryId\" : \"4000000017276\",\n  \"tags\" : [ \"first ticket\" ],\n  \"answer\" : \"<p>Zoho Desk packs a bunch of features that are expressly there to help you respond to tickets smartly.<br><br>The first of these, you've already discovered: Auto-Suggest Articles. Zoho Desk pulls up relevant articles on the ticket's content—so you can save time on frequently asked questions.<br><br>Every action that you can perform with respect to a ticket has a corresponding keyboard shortcut. With these, you can optimize the time you spend on each ticket. (And the shortcut to access these shortcuts is Shift + ? ).When you need to quickly consult a colleague, you can tag them in a ticket comment without having to leave this screen. That's like a quick chat, without even leaving your place, and with the full context of the ticket.<br><br>With these, you're good to go.<br><br>Go on, save the world from bad customer service!</p>\",\n  \"translationId\" : \"4000000017294\",\n  \"createdBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"latestVersion\" : \"1.0\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/4000000019059/en\",\n  \"feedbackCount\" : \"0\",\n  \"portalUrl\" : \"https://desk.zoho.com/portal/zylker/en/kb/articles/answering-your-first-ticket\",\n  \"attachmentCount\" : \"0\",\n  \"latestPublishedVersion\" : \"1.0\",\n  \"category\" : {\n    \"name\" : \"General\",\n    \"id\" : \"4000000017287\",\n    \"locale\" : \"en\"\n  },\n  \"permalink\" : \"answering-your-first-ticket\",\n  \"categoryId\" : \"4000000017287\",\n  \"status\" : \"Published\"\n}"
						}
					]
				},
				{
					"name": "Update an article",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articles/:article_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articles",
								":article_id"
							],
							"query": [
								{
									"key": "categoryId",
									"value": "<Long>\n",
									"description": "The Category",
									"disabled": true
								},
								{
									"key": "title",
									"value": "<String>\n",
									"description": "The title of Solution",
									"disabled": true
								},
								{
									"key": "answer",
									"value": "<String>\n",
									"description": "The answer part of Solution",
									"disabled": true
								},
								{
									"key": "permalink",
									"value": "<String>\n",
									"description": "The permalink of Solution",
									"disabled": true
								},
								{
									"key": "authorId",
									"value": "<Long>\n",
									"description": "The owner of the solution",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<String>\n",
									"description": "Status of the Solution",
									"disabled": true
								},
								{
									"key": "permission",
									"value": "<String>\n",
									"description": "Permission of the Solution",
									"disabled": true
								},
								{
									"key": "tags",
									"value": "<String Array>\n",
									"description": "Tags associated with the Solution",
									"disabled": true
								},
								{
									"key": "seoTitle",
									"value": "<String>\n",
									"description": "SEO Title of Solution",
									"disabled": true
								},
								{
									"key": "seoKeywords",
									"value": "<String>\n",
									"description": "SEO Key of Solution",
									"disabled": true
								},
								{
									"key": "seoDescription",
									"value": "<String>\n",
									"description": "SEO Description of Solution",
									"disabled": true
								},
								{
									"key": "isSEOEnabled",
									"value": "<boolean>\n",
									"description": "SEO enabled status of an article",
									"disabled": true
								},
								{
									"key": "expiryDate",
									"value": "<String>\n",
									"description": "Schedule expiry date",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "article_id"
								}
							]
						},
						"description": "This API updates an existing article.\n#### OAuth Scope\n- `Desk.articles.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Update an article",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"expiryDate\" : \"2018-05-21T05:55:00.000Z\",\n  \"isSEOEnabled\" : true,\n  \"answer\" : \"The knowledge base is a key component of a good help center. This is where you can share the basics of using your products or services to your customers. Help articles and FAQs are great assets when it comes to answering the most fundamental questions your customers might have regarding your offerings. Help articles also ease the burden of your customer support agents by enabling self-service.\",\n  \"seoDescription\" : \"Knowledge base for your product\",\n  \"permission\" : \"REGISTEREDUSERS\",\n  \"title\" : \"Importance of a Knowledge Base\",\n  \"authorId\" : 22372000000094004,\n  \"seoTitle\" : \"Knowledge base\",\n  \"seoKeywords\" : \"Knowledge base, Helpcenter\",\n  \"categoryId\" : 22372000000094160,\n  \"status\" : \"Draft\",\n  \"tags\" : [ \"helpcenter\", \"knowledge base\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/22372000000133001?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"22372000000133001"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2020-06-24T11:46:43.000Z\",\n  \"reviewedTime\" : \"2020-06-24T11:46:43.000Z\",\n  \"creatorId\" : \"4000000000059\",\n  \"dislikeCount\" : \"0\",\n  \"modifierId\" : \"4000000000059\",\n  \"likeCount\" : \"0\",\n  \"locale\" : \"en\",\n  \"ownerId\" : \"4000000000059\",\n  \"title\" : \"Answering your first ticket.\",\n  \"expiryDate\" : null,\n  \"isTrashed\" : false,\n  \"createdTime\" : \"2020-06-24T11:46:43.000Z\",\n  \"modifiedBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"id\" : \"4000000019059\",\n  \"viewCount\" : \"0\",\n  \"seo\" : {\n    \"keywords\" : \"helpcenter, knowledge base\",\n    \"isEnabled\" : true,\n    \"description\" : \"Knowledge base\",\n    \"title\" : \"Helpcenter and knowledge base\"\n  },\n  \"owner\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"summary\" : \"Zoho Desk packs a bunch of features that are expressly there to help you respond to tickets smartly. The first of these, you've already discovered: Auto-Suggest Articles. Zoho Desk pulls up relevant articles on the ticket's content—so you can save ...\",\n  \"latestVersionStatus\" : \"Published\",\n  \"myVote\" : null,\n  \"author\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"permission\" : \"AGENTS\",\n  \"authorId\" : \"4000000000059\",\n  \"reviewedBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"currentVersion\" : \"1.0\",\n  \"usageCount\" : \"0\",\n  \"commentCount\" : \"0\",\n  \"rootCategoryId\" : \"4000000017276\",\n  \"tags\" : [ \"first ticket\" ],\n  \"answer\" : \"<p>Zoho Desk packs a bunch of features that are expressly there to help you respond to tickets smartly.<br><br>The first of these, you've already discovered: Auto-Suggest Articles. Zoho Desk pulls up relevant articles on the ticket's content—so you can save time on frequently asked questions.<br><br>Every action that you can perform with respect to a ticket has a corresponding keyboard shortcut. With these, you can optimize the time you spend on each ticket. (And the shortcut to access these shortcuts is Shift + ? ).When you need to quickly consult a colleague, you can tag them in a ticket comment without having to leave this screen. That's like a quick chat, without even leaving your place, and with the full context of the ticket.<br><br>With these, you're good to go.<br><br>Go on, save the world from bad customer service!</p>\",\n  \"translationId\" : \"4000000017294\",\n  \"createdBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Hill\",\n    \"id\" : \"4000000000059\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"234543\"\n  },\n  \"latestVersion\" : \"1.0\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/4000000019059/en\",\n  \"feedbackCount\" : \"0\",\n  \"portalUrl\" : \"https://desk.zoho.com/portal/zylker/en/kb/articles/answering-your-first-ticket\",\n  \"attachmentCount\" : \"0\",\n  \"latestPublishedVersion\" : \"1.0\",\n  \"category\" : {\n    \"name\" : \"General\",\n    \"id\" : \"4000000017287\",\n    \"locale\" : \"en\"\n  },\n  \"permalink\" : \"answering-your-first-ticket\",\n  \"categoryId\" : \"4000000017287\",\n  \"status\" : \"Published\"\n}"
						}
					]
				},
				{
					"name": "Validate permalink",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articles/checkPermalinkAvailability",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articles",
								"checkPermalinkAvailability"
							]
						},
						"description": "This API validates if a permalink is available for a help article.\n#### OAuth Scope\n- `Desk.articles.READ`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| permalink (required) | &lt;String&gt;<br /> | The permalink of Solution \n| locale  | &lt;String&gt;<br /> | Language \n"
					},
					"response": [
						{
							"name": "Validate permalink",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"permalink\" : \"how-to-open-account-2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/checkPermalinkAvailability?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"checkPermalinkAvailability"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"isAvailable\" : false,\n  \"suggestion\" : \"how-to-open-account-2-18-12-2017\"\n}"
						}
					]
				},
				{
					"name": "Get article history",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articles/:article_id/history",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articles",
								":article_id",
								"history"
							],
							"query": [
								{
									"key": "from",
									"value": "<Integer>\ndefault : 1,",
									"description": "From index",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<Integer>\ndefault : 10,",
									"description": "Number of records to fetch",
									"disabled": true
								},
								{
									"key": "events",
									"value": "<String>\n",
									"description": "Actions happened on the article. We can give multiple events comma saperated. Allowed values `CREATED`, `SEO_INFO_ADDED`, `TAGS_ADDED`, `ATTACHMENT_ADDED`, `ATTACHMENT_REMOVED`, `TAGS_EDITED`, `STATUS_CHANGED`, `DISPALY_PERMISSION_CHANGED`, `PERMALINK_EDITED`, `OWNER_CHANGED`, `SECTION_CHANGED`, `TITLE_EDITED`, `SEO_INFO_EDITED`, `VERSION_CREATED`, `MOVED_TO_TRASH`, `RESTORED`, `ATTACHMENT_MODIFIED`, `VERSION_REVERTED`, `TAGS_DELETED`, `COMMENTS_ADDED`, `COMMENTS_EDITED`, `COMMENTS_DELETED`, `VERSION_UPDATED`, `VERSION_QUICKEDIT`, `VERSION_DELETED`, `SEO_TITLE_CHANGED`, `SEO_KEYWORDS_CHANGED`, `SEO_DESCRIPTION_CHANGED`, `SEO_STATUS_CHANGED`",
									"disabled": true
								},
								{
									"key": "userIds",
									"value": "<Long>\n",
									"description": "User who did the action",
									"disabled": true
								},
								{
									"key": "fromTime",
									"value": "<Timestamp>\n",
									"description": "From time. Time should be in GMT with format",
									"disabled": true
								},
								{
									"key": "toTime",
									"value": "<Timestamp>\n",
									"description": "To time. Time should be in GMT with format",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "article_id"
								}
							]
						},
						"description": "This API fetches the event history of an article.\n#### OAuth Scope\n- `Desk.articles.READ`\n\n"
					},
					"response": [
						{
							"name": "Get article history",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/22372000000665001/history?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"22372000000665001",
										"history"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"eventTime\" : \"2018-03-15T14:27:02.000Z\",\n    \"deltedVersion\" : [ \"2.0\", \"3.0\" ],\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"VERSION_DELETED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"editedVersion\" : \"3.0\",\n    \"eventTime\" : \"2018-03-15T14:27:02.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"VERSION_QUICKEDIT\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"eventTime\" : \"2018-03-15T14:27:02.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"oldVersion\" : \"3.0\",\n    \"locale\" : \"en\",\n    \"event\" : \"VERSION_REVERTED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    },\n    \"newVersion\" : \"4.0\"\n  }, {\n    \"eventTime\" : \"2018-03-15T14:27:02.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"oldVersion\" : \"1.0\",\n    \"locale\" : \"en\",\n    \"event\" : \"VERSION_UPDATED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    },\n    \"newVersion\" : \"2.0\"\n  }, {\n    \"createdVersion\" : \"1.0\",\n    \"eventTime\" : \"2018-03-15T14:27:02.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"VERSION_CREATED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"eventTime\" : \"2018-03-15T14:27:02.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"RESTORED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"eventTime\" : \"2018-03-15T14:26:28.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"MOVED_TO_TRASH\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"newPermalink\" : \"test-article888\",\n    \"eventTime\" : \"2018-03-15T14:19:28.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"PERMALINK_EDITED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    },\n    \"oldPermalink\" : \"test-article\"\n  }, {\n    \"eventTime\" : \"2018-03-15T14:16:06.000Z\",\n    \"deletedTags\" : [ \"asda\", \"qwer\", \"ert\" ],\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"TAGS_DELETED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"newTags\" : [ \"asda\", \"qwer\", \"ert\" ],\n    \"oldTags\" : [ \"asda\", \"qwer\" ],\n    \"eventTime\" : \"2018-03-15T14:15:52.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"TAGS_EDITED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"eventTime\" : \"2018-03-15T14:15:40.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"addedTags\" : [ \"qwer\", \"asda\" ],\n    \"locale\" : \"en\",\n    \"event\" : \"TAGS_ADDED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"eventTime\" : \"2018-03-13T07:44:02.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"deletedCommentId\" : \"1000000014007\",\n    \"event\" : \"COMMENTS_DELETED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"editedCommentId\" : \"1000000014001\",\n    \"eventTime\" : \"2018-03-13T07:43:45.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"COMMENTS_EDITED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"addedCommentId\" : \"1000000014001\",\n    \"eventTime\" : \"2018-03-13T07:43:36.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"COMMENTS_ADDED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"removedAttachments\" : [ \"af0u71a819bc9d6304a2e9e77d20a1dd7da7c\", \"af0u796cb3b7b55d14f0a9b6f78e0aa3ccb56\" ],\n    \"eventTime\" : \"2018-03-13T18:36:04.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"event\" : \"ATTACHMENT_REMOVED\",\n    \"locale\" : \"en\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"oldAttachements\" : [ \"af0u71a819bc9d6304a2e9e77d20a1dd7da7c\" ],\n    \"eventTime\" : \"2018-03-13T18:36:04.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"event\" : \"ATTACHMENT_MODIFIED\",\n    \"locale\" : \"en\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    },\n    \"newAttachments\" : [ \"af0u71a819bc9d6304a2e9e77d20a1dd7da7c\", \"af0u796cb3b7b55d14f0a9b6f78e0aa3ccb56\" ]\n  }, {\n    \"addedAttachments\" : [ \"af0u71a819bc9d6304a2e9e77d20a1dd7da7c\", \"af0u796cb3b7b55d14f0a9b6f78e0aa3ccb56\" ],\n    \"eventTime\" : \"2018-03-13T18:36:04.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"event\" : \"ATTACHMENT_ADDED\",\n    \"locale\" : \"en\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"newSectionId\" : \"1000000012741\",\n    \"oldSectionId\" : \"1000000014013\",\n    \"eventTime\" : \"2018-03-15T14:10:11.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"SECTION_CHANGED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"oldDisplayPermission\" : \"REGISTERED_USERS\",\n    \"newDisplayPermission\" : \"AGENTS_ONLY\",\n    \"eventTime\" : \"2018-03-15T14:10:11.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"DISPALY_PERMISSION_CHANGED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"newStatus\" : \"PUBLISH\",\n    \"eventTime\" : \"2018-03-15T14:10:11.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"STATUS_CHANGED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"newTitle\" : \"Test article dddddd\",\n    \"eventTime\" : \"2018-03-13T07:32:35.000Z\",\n    \"oldTitle\" : \"Test article\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"TITLE_EDITED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"eventTime\" : \"2018-03-15T14:05:21.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"SEO_DESCRIPTION_CHANGED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"eventTime\" : \"2018-03-15T14:05:21.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"SEO_KEYWORDS_CHANGED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"oldSEOTitle\" : \"ajsjkda\",\n    \"newSEOTitle\" : \"ajsjkdaass\",\n    \"eventTime\" : \"2018-03-15T14:05:21.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"SEO_TITLE_CHANGED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"eventTime\" : \"2018-03-15T14:05:21.000Z\",\n    \"oldSEOStatus\" : \"false\",\n    \"solutionId\" : \"1000000012768\",\n    \"newSEOStatus\" : \"true\",\n    \"locale\" : \"en\",\n    \"event\" : \"SEO_STATUS_CHANGED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  }, {\n    \"eventTime\" : \"2018-03-12T14:05:07.000Z\",\n    \"solutionId\" : \"1000000012768\",\n    \"locale\" : \"en\",\n    \"event\" : \"CREATED\",\n    \"user\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000094005/photo?orgId=292828\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000094005\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Upload attachments",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articleAttachments?workspaceId=<String>\n&attachmentType=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articleAttachments"
							],
							"query": [
								{
									"key": "workspaceId",
									"value": "<String>\n",
									"description": "Workspace id to which the attachement should be uploaded"
								},
								{
									"key": "attachmentType",
									"value": "<String>\n",
									"description": "Attachment type. Allowed values `file`, `blob`"
								}
							]
						},
						"description": "This API uploads files to your portal gallery.\n#### OAuth Scope\n- `Desk.articles.CREATE`\n\n"
					},
					"response": [
						{
							"name": "Upload attachments",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/articleAttachments?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&workspaceId=4fv34170cbb5ea8ed43a0932efaf53545818a&attachmentType=file",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articleAttachments"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										},
										{
											"key": "workspaceId",
											"value": "4fv34170cbb5ea8ed43a0932efaf53545818a"
										},
										{
											"key": "attachmentType",
											"value": "file"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"resourceId\" : \"96b17694d63cd0f03eadbe4ae534f4ba993bb0\",\n  \"extension\" : \"png\",\n  \"name\" : \"Screen Shot 2018-12-28 at 7.21.58 PM.png\",\n  \"filesize\" : \"62\"\n}"
						}
					]
				},
				{
					"name": "Move articles to trash",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articles/moveToTrash",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articles",
								"moveToTrash"
							]
						},
						"description": "This API moves articles to the Recycle Bin\n#### OAuth Scope\n- `Desk.articles.DELETE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | Array of Entity id to be deleted \n"
					},
					"response": [
						{
							"name": "Move articles to trash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\" : [ \"2345678987654323\", \"3456789087654567\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/moveToTrash?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"moveToTrash"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : \"true\",\n    \"id\" : \"2345678987654323\",\n    \"errors\" : null\n  }, {\n    \"success\" : \"false\",\n    \"id\" : \"3456789087654567\",\n    \"errors\" : {\n      \"errorCode\" : \"FORBIDDEN\",\n      \"httpCode\" : \"403\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Preview article",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articles/preview",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articles",
								"preview"
							]
						},
						"description": "This API shows a preview of help articles, through which you can check the content for formatting, alignment, and grammar/spelling errors and get the look and feel of the help article even before publishing it.\n#### OAuth Scope\n- `Desk.articles.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| title (required) | &lt;String&gt;<br /> | The title of Solution \n| answer (required) | &lt;String&gt;<br /> | The answer part of Solution \n"
					},
					"response": [
						{
							"name": "Preview article",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"answer\" : \"<div>Demo for article preview<br /></div><div>Lorem Ipsum is simply dummy text of the printing and typesetting industry. <br /></div>\",\n  \"title\" : \"Demo for article preview\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/preview?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"preview"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"answer\" : \"<div>Demo for article preview<br /></div><div>Lorem Ipsum is simply dummy text of the printing and typesetting industry. <br /></div>\",\n  \"title\" : \"Demo for article preview\"\n}"
						}
					]
				},
				{
					"name": "Get article count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articles/count",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articles",
								"count"
							],
							"query": [
								{
									"key": "categoryId",
									"value": "<Long>\n",
									"description": "Article count for given category. If categoryId is not given or null, it considered as all category i.e all department",
									"disabled": true
								},
								{
									"key": "authorId",
									"value": "<Long>\n",
									"description": "Article count for the particular author",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<String>\n",
									"description": "Publishing status of the article to get count. Values allowed are `Draft`, `Published`, `Review`, `Expired`",
									"disabled": true
								},
								{
									"key": "permission",
									"value": "<String>\n",
									"description": "Permissions to get the article count. Values allowed are `ALL`, `REGISTEREDUSERS`, `AGENTS`",
									"disabled": true
								}
							]
						},
						"description": "This API returns the number of articles published in the knowledge base of your help desk portal.\n#### OAuth Scope\n- `Desk.articles.READ`\n\n"
					},
					"response": [
						{
							"name": "Get article count",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/count?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&categoryId=30000087654324&authorId=2000087651124&status=Draft&permission=ALL",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"count"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										},
										{
											"key": "categoryId",
											"value": "30000087654324"
										},
										{
											"key": "authorId",
											"value": "2000087651124"
										},
										{
											"key": "status",
											"value": "Draft"
										},
										{
											"key": "permission",
											"value": "ALL"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"count\" : \"5\"\n}"
						}
					]
				},
				{
					"name": "Map articles to tickets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/notifyArticleUsage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"notifyArticleUsage"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API maps tickets with help articles to automatically suggest the same articles for similar tickets that arrive later.\n#### OAuth Scope\n- `Desk.articles.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | Array of Entity ids \n"
					},
					"response": [
						{
							"name": "Map articles to tickets",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\" : [ \"1000000022005\", \"1000000034567\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/10002398278/notifyArticleUsage?orgId=55560202",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"10002398278",
										"notifyArticleUsage"
									],
									"query": [
										{
											"key": "orgId",
											"value": "55560202"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get articles for manual sorting",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/kbCategory/:category_id/repositionArticles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"kbCategory",
								":category_id",
								"repositionArticles"
							],
							"variable": [
								{
									"key": "category_id"
								}
							]
						},
						"description": "This API lists the positions of help articles to enable manual sorting. Only leaf categories that have a maximum of 1000 articles can be repositioned.\n#### OAuth Scope\n- `Desk.articles.READ`\n\n"
					},
					"response": [
						{
							"name": "Get articles for manual sorting",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/kbCategory/4000000013240/repositionArticles?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"kbCategory",
										"4000000013240",
										"repositionArticles"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/22372000000281023\",\n    \"id\" : \"22372000000281023\",\n    \"title\" : \"Importance of a Knowledge Base\",\n    \"authorId\" : \"4000000012931\"\n  }, {\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/22372000000209871\",\n    \"id\" : \"22372000000209871\",\n    \"title\" : \"Importance of a Knowledge Base\",\n    \"authorId\" : \"4000000012931\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Update article position",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/kbCategory/:category_id/repositionArticles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"kbCategory",
								":category_id",
								"repositionArticles"
							],
							"variable": [
								{
									"key": "category_id"
								}
							]
						},
						"description": "This API helps you manually sort articles in your knowledge base. Only leaf categories that have a maximum of 1000 articles can be repositioned.\n#### OAuth Scope\n- `Desk.articles.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | Array of Entity ids \n"
					},
					"response": [
						{
							"name": "Update article position",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\" : [ \"4000000083313\", \"4000000082105\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/kbCategory/2000087651211/repositionArticles?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"kbCategory",
										"2000087651211",
										"repositionArticles"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get attachments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articles/:article_id/translations/{locale}/attachments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articles",
								":article_id",
								"translations",
								"{locale}",
								"attachments"
							],
							"query": [
								{
									"key": "from",
									"value": "<Integer>\nrange : >0",
									"description": "Index number starting from which the article attachments must be fetched.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<Integer>\nrange : 1-30",
									"description": "Number of attachments to fetch",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "article_id"
								}
							]
						},
						"description": "This API fetches the files attached to an article translation\n#### OAuth Scope\n- `Desk.articles.READ`\n\n"
					},
					"response": [
						{
							"name": "Get attachments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/9000067589998/translations/en-us/attachments?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"9000067589998",
										"translations",
										"en-us",
										"attachments"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"resourceId\" : \"dkx4q10b53a2b6e844addaec2723cd4b07092\",\n  \"extension\" : \"txt\",\n  \"name\" : \"aadas1_2_3_5_54_.txt\",\n  \"viewUrl\" : \"https://desk.zoho.com/support/DocsDisplay?attachId=e91351dc29e5b7394d93c8deb91b642a0b498ee34174141d&action=view&zgId=17ec4c79299ee107dc91a236738b3d70&entityId=e91351dc29e5b739421838319e770b0a42acf79f93f757e8\",\n  \"downloadUrl\" : \"https://desk.zoho.com/support/DocsDisplay?attachId=e91351dc29e5b7394d93c8deb91b642a0b498ee34174141d&action=download&zgId=17ec4c79299ee107dc91a236738b3d70&entityId=e91351dc29e5b739421838319e770b0a42acf79f93f757e8\",\n  \"createdTime\" : \"2018-07-10T22:45:05.865Z\",\n  \"filesize\" : \"62\"\n}"
						}
					]
				},
				{
					"name": "Upload and associate attachments",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articles/:article_id/translations/{locale}/attachments?attachmentType=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articles",
								":article_id",
								"translations",
								"{locale}",
								"attachments"
							],
							"query": [
								{
									"key": "attachmentType",
									"value": "<String>\n",
									"description": "Attachment type. Allowed values `file`, `blob`"
								}
							],
							"variable": [
								{
									"key": "article_id"
								}
							]
						},
						"description": "This API attaches files to translations and also uploads them to the knowledge base gallery\n#### OAuth Scope\n- `Desk.articles.CREATE`\n\n"
					},
					"response": [
						{
							"name": "Upload and associate attachments",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/9000067589998/translations/en-us/attachments?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5&attachmentType=file",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"9000067589998",
										"translations",
										"en-us",
										"attachments"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										},
										{
											"key": "attachmentType",
											"value": "file"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"resourceId\" : \"dkx4q10b53a2b6e844addaec2723cd4b07092\",\n  \"extension\" : \"txt\",\n  \"name\" : \"aadas1_2_3_5_54_.txt\",\n  \"viewUrl\" : \"https://desk.zoho.com/support/DocsDisplay?attachId=e91351dc29e5b7394d93c8deb91b642a0b498ee34174141d&action=view&zgId=17ec4c79299ee107dc91a236738b3d70&entityId=e91351dc29e5b739421838319e770b0a42acf79f93f757e8\",\n  \"downloadUrl\" : \"https://desk.zoho.com/support/DocsDisplay?attachId=e91351dc29e5b7394d93c8deb91b642a0b498ee34174141d&action=download&zgId=17ec4c79299ee107dc91a236738b3d70&entityId=e91351dc29e5b739421838319e770b0a42acf79f93f757e8\",\n  \"createdTime\" : \"2018-07-10T22:45:05.865Z\",\n  \"filesize\" : \"62\"\n}"
						}
					]
				},
				{
					"name": "Attach files to translation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articles/:article_id/translations/{locale}/associateAttachments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articles",
								":article_id",
								"translations",
								"{locale}",
								"associateAttachments"
							],
							"variable": [
								{
									"key": "article_id"
								}
							]
						},
						"description": "This API attaches specific files in the gallery to a translation\n#### OAuth Scope\n- `Desk.articles.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| attachmentIds (required) | &lt;String Array&gt;<br /> | Attachment associated with the Solution \n"
					},
					"response": [
						{
							"name": "Attach files to translation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attachmentIds\" : [ \"1vq0db78bc1203a0645e0a38373b3bddf8d40\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/9876543456789/translations/en-us/associateAttachments?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"9876543456789",
										"translations",
										"en-us",
										"associateAttachments"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"resourceId\" : \"1vq0db78bc1203a0645e0a38373b3bddf8d40\",\n    \"extension\" : \"txt\",\n    \"name\" : \"aadas1_2_3_5_54_.txt\",\n    \"viewUrl\" : \"https://desk.zoho.com/support/DocsDisplay?attachId=e91351dc29e5b7394d93c8deb91b642a0b498ee34174141d&action=view&zgId=17ec4c79299ee107dc91a236738b3d70&entityId=e91351dc29e5b739421838319e770b0a42acf79f93f757e8\",\n    \"downloadUrl\" : \"https://desk.zoho.com/support/DocsDisplay?attachId=e91351dc29e5b7394d93c8deb91b642a0b498ee34174141d&action=download&zgId=17ec4c79299ee107dc91a236738b3d70&entityId=e91351dc29e5b739421838319e770b0a42acf79f93f757e8\",\n    \"createdTime\" : \"2018-07-10T22:45:05.865Z\",\n    \"filesize\" : \"62\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Dissociate attachments from translation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articles/:article_id/translations/{locale}/dissociateAttachments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articles",
								":article_id",
								"translations",
								"{locale}",
								"dissociateAttachments"
							],
							"variable": [
								{
									"key": "article_id"
								}
							]
						},
						"description": "This API removes the file attachments from a translation\n#### OAuth Scope\n- `Desk.articles.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| attachmentIds (required) | &lt;String Array&gt;<br /> | Attachment associated with the Solution \n"
					},
					"response": [
						{
							"name": "Dissociate attachments from translation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attachmentIds\" : [ \"1vq0db78bc1203a0645e0a38373b3bddf8d40\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/876546789087/translations/en-us/dissociateAttachments?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"876546789087",
										"translations",
										"en-us",
										"dissociateAttachments"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Like translation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articles/:article_id/translations/{locale}/like",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articles",
								":article_id",
								"translations",
								"{locale}",
								"like"
							],
							"variable": [
								{
									"key": "article_id"
								}
							]
						},
						"description": "This API adds a like (a positive reaction) to a translation\n#### OAuth Scope\n- `Desk.articles.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Like translation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/876546789087/translations/en-us/like?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"876546789087",
										"translations",
										"en-us",
										"like"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Dislike translation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articles/([0-9]+)/translations/:locale/dislike",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articles",
								"([0-9]+)",
								"translations",
								":locale",
								"dislike"
							],
							"variable": [
								{
									"key": "locale"
								}
							]
						},
						"description": "This API adds a dislike (a negative reaction) to a translation.\n#### OAuth Scope\n- `Desk.articles.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Dislike translation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/876546789087/translations/en-us/dislike?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"876546789087",
										"translations",
										"en-us",
										"dislike"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get article statistics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articles/:article_id/insights",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articles",
								":article_id",
								"insights"
							],
							"variable": [
								{
									"key": "article_id"
								}
							]
						},
						"description": "This API fetches the basic insights related to an article\n#### OAuth Scope\n- `Desk.articles.READ`\n\n"
					},
					"response": [
						{
							"name": "Get article statistics",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/876546789087/insights?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"876546789087",
										"insights"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"feedbackCount\" : 0,\n  \"lastLikedTime\" : \"2018-11-20T14:03:07.000Z\",\n  \"dislikeCount\" : \"0\",\n  \"lastUsageTime\" : null,\n  \"likeCount\" : \"1\",\n  \"attachmentCount\" : 0,\n  \"viewCount\" : \"0\",\n  \"lastActivityTime\" : \"2018-11-20T14:03:07.000Z\",\n  \"lastDislikedTime\" : null,\n  \"usageCount\" : \"0\",\n  \"commentCount\" : 0\n}"
						}
					]
				},
				{
					"name": "Get permalinks of translation",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articles/:article_id/translations/{locale}/permalinks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articles",
								":article_id",
								"translations",
								"{locale}",
								"permalinks"
							],
							"variable": [
								{
									"key": "article_id"
								}
							]
						},
						"description": "This API fetches the primary and secondary permalinks of a translation\n#### OAuth Scope\n- `Desk.articles.READ`\n\n"
					},
					"response": [
						{
							"name": "Get permalinks of translation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/1000000028029/translations/en-us/permalinks?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"1000000028029",
										"translations",
										"en-us",
										"permalinks"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"primaryPermalink\" : \"how-to-open-account\",\n  \"secondaryPermalinks\" : [ \"how-to-open-account-1\", \"how-to-open-account-3\" ]\n}"
						}
					]
				},
				{
					"name": "Update permalink of translation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articles/:article_id/translations/{locale}/permalinks/add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articles",
								":article_id",
								"translations",
								"{locale}",
								"permalinks",
								"add"
							],
							"variable": [
								{
									"key": "article_id"
								}
							]
						},
						"description": "This API updates the permalink of a translation and adds the old permalink to the redirection list\n#### OAuth Scope\n- `Desk.articles.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| permalink (required) | &lt;String&gt;<br /> | The permalink of Solution \n| isOldPermalinkNeeded  | &lt;Boolean&gt;<br /> | The variable that defines if permalink needs to be added to redirect list. By default, it is true \n"
					},
					"response": [
						{
							"name": "Update permalink of translation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isOldPermalinkNeeded\" : true,\n  \"permalink\" : \"how-to-open-account\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/1000000028029/translations/en-us/permalinks/add?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"1000000028029",
										"translations",
										"en-us",
										"permalinks",
										"add"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"primaryPermalink\" : \"how-to-open-account\",\n  \"secondaryPermalinks\" : [ \"how-to-open-account-1\", \"how-to-open-account-3\", \"how-to-open-account-2\" ]\n}"
						}
					]
				},
				{
					"name": "Remove redirection permalink from translation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articles/:article_id/translations/{locale}/permalinks/removeSecondaryPermalink",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articles",
								":article_id",
								"translations",
								"{locale}",
								"permalinks",
								"removeSecondaryPermalink"
							],
							"variable": [
								{
									"key": "article_id"
								}
							]
						},
						"description": "This API removes the redirection permalink from the redirection list of a translation\n#### OAuth Scope\n- `Desk.articles.DELETE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| permalink (required) | &lt;String&gt;<br /> | The permalink of Solution \n"
					},
					"response": [
						{
							"name": "Remove redirection permalink from translation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"permalink\" : \"how-to-open-account-2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/1000000028029/translations/en-us/permalinks/removeSecondaryPermalink?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"1000000028029",
										"translations",
										"en-us",
										"permalinks",
										"removeSecondaryPermalink"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Download article translation attachment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articles/:articleId/translations/{locale}/attachments/{attachmentId}/content",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articles",
								":articleId",
								"translations",
								"{locale}",
								"attachments",
								"{attachmentId}",
								"content"
							],
							"query": [
								{
									"key": "inline",
									"value": "<boolean>\n",
									"description": "Display content inline",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "articleId"
								}
							]
						},
						"description": "This API downloads the attachment associated with article translation.\n#### OAuth Scope\n- `Desk.articles.READ`\n\n"
					},
					"response": [
						{
							"name": "Download article translation attachment",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/6000000072015/translations/ja-jp/attachments/b96b17694d63cd0f03eadbe4/content?orgId=2389290&authtoken=50c9bb96b17694d63cd0f03eadbe4ae5",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"6000000072015",
										"translations",
										"ja-jp",
										"attachments",
										"b96b17694d63cd0f03eadbe4",
										"content"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "authtoken",
											"value": "50c9bb96b17694d63cd0f03eadbe4ae5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Articles are pieces of help content that you share on the knowledge base of your help desk portal. Articles intend to educate users on how to use features/functions and provide solutions to issues that customers frequently encounter."
		},
		{
			"name": "Article Feedback",
			"item": [
				{
					"name": "List feedback comments on article translation",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articles/:article_id/translations/{locale}/feedbacks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articles",
								":article_id",
								"translations",
								"{locale}",
								"feedbacks"
							],
							"query": [
								{
									"key": "from",
									"value": "<Int>\nrange : >0",
									"description": "Index number, starting from which the comments must be fetched. Default value is 1.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<Int>\nrange : 1-50",
									"description": "Number of comments to list. Default value is 10.",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<String>\n",
									"description": "Key that sorts the comments based on a specific attribute: createdTime. To sort the comments in descending order, append a '-' before the value",
									"disabled": true
								},
								{
									"key": "createdTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters comments created within a specific date and time range. Enter the dates in the ISO date format of 'yyyy-MM-ddThh:mm:ss.SSSZ,yyyy-MM-ddThh:mm:ss.SSSZ'",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the comments. Values allowed are: ticket, contact and resolution.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "article_id"
								}
							]
						},
						"description": "This API lists a particular number of comments received on a translation of an article, based on the limit defined.\n#### OAuth Scope\n- `Desk.articles.READ`\n\n"
					},
					"response": [
						{
							"name": "List feedback comments on article translation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/22372000001370011/translations/en-us/feedbacks?from=1&limit=10&sortBy=-createdTime&include=ticket,contact,resolution",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"22372000001370011",
										"translations",
										"en-us",
										"feedbacks"
									],
									"query": [
										{
											"key": "from",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "sortBy",
											"value": "-createdTime"
										},
										{
											"key": "include",
											"value": "ticket,contact,resolution"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ticket\" : {\n      \"ticketNumber\" : \"163\",\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/b34f0de640d72a1d8d1a6f7ca800abb8f3148ec5bcd90913\",\n      \"id\" : \"22372000001389007\",\n      \"deletedTime\" : \"2018-10-07T10:27:20.000Z\",\n      \"deletedBy\" : {\n        \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/22372000000761001/photo\",\n        \"name\" : \"Zylker\",\n        \"id\" : \"22372000000761001\",\n        \"status\" : \"ACTIVE\",\n        \"zuid\" : \"15223452\"\n      }\n    },\n    \"contactId\" : \"22372000001386025\",\n    \"contact\" : {\n      \"photoURL\" : null,\n      \"name\" : \"John\",\n      \"id\" : \"22372000001386025\"\n    },\n    \"createdTime\" : \"2018-10-07T15:55:24.000Z\",\n    \"id\" : \"22372000001386045\",\n    \"resolution\" : {\n      \"modifiedTime\" : \"2020-12-03T05:08:21.000Z\",\n      \"createdBy\" : {\n        \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000000063/photo?orgId=15224553\",\n        \"name\" : \"Charlie\",\n        \"id\" : \"22372000000000063\",\n        \"status\" : \"ACTIVE\",\n        \"zuid\" : \"15224552\"\n      },\n      \"feedbackId\" : \"227800000075038\",\n      \"createdTime\" : \"2020-12-03T05:08:21.000Z\",\n      \"modifiedBy\" : {\n        \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000000063/photo?orgId=15224553\",\n        \"name\" : \"Charlie\",\n        \"id\" : \"22372000000000063\",\n        \"status\" : \"ACTIVE\",\n        \"zuid\" : \"15224552\"\n      },\n      \"id\" : \"22372340000106009\",\n      \"resolution\" : \"Content has been modified in user basis\",\n      \"contentType\" : \"PLAIN_TEXT\"\n    },\n    \"ticketId\" : \"22372000001389007\",\n    \"content\" : \"Please add pricing details in tabular columns\",\n    \"article\" : {\n      \"author\" : {\n        \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000000063/photo?orgId=15224553\",\n        \"name\" : \"Charlie\",\n        \"id\" : \"22372000000000063\",\n        \"status\" : \"ACTIVE\",\n        \"zuid\" : \"15224552\"\n      },\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/22372000001370011\",\n      \"id\" : \"22372000001370011\",\n      \"locale\" : \"en\",\n      \"title\" : \"Pricing details\"\n    },\n    \"status\" : \"RESOLVED\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get details of feedback comment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articleFeedbacks/:feedback_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articleFeedbacks",
								":feedback_id"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the comment. Values allowed are: ticket, contact and resolution.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "feedback_id"
								}
							]
						},
						"description": "This API fetches the details of a particular feedback comment.\n#### OAuth Scope\n- `Desk.articles.READ`\n\n"
					},
					"response": [
						{
							"name": "Get details of feedback comment",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/articleFeedbacks/22372000001386045?&include=ticket,contact,resolution",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articleFeedbacks",
										"22372000001386045"
									],
									"query": [
										{
											"key": ""
										},
										{
											"key": "include",
											"value": "ticket,contact,resolution"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"ticket\" : {\n    \"ticketNumber\" : \"163\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/b34f0de640d72a1d8d1a6f7ca800abb8f3148ec5bcd90913\",\n    \"id\" : \"22372000001389007\",\n    \"deletedTime\" : \"2018-10-07T10:27:20.000Z\",\n    \"deletedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/22372000000761001/photo\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000761001\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"15223452\"\n    }\n  },\n  \"contactId\" : \"22372000001386025\",\n  \"contact\" : {\n    \"photoURL\" : null,\n    \"name\" : \"John\",\n    \"id\" : \"22372000001386025\"\n  },\n  \"createdTime\" : \"2018-10-07T15:55:24.000Z\",\n  \"id\" : \"22372000001386045\",\n  \"resolution\" : {\n    \"modifiedTime\" : \"2020-12-03T05:08:21.000Z\",\n    \"createdBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000000063/photo?orgId=15224553\",\n      \"name\" : \"Charlie\",\n      \"id\" : \"22372000000000063\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"15224552\"\n    },\n    \"feedbackId\" : \"227800000075038\",\n    \"createdTime\" : \"2020-12-03T05:08:21.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000000063/photo?orgId=15224553\",\n      \"name\" : \"Charlie\",\n      \"id\" : \"22372000000000063\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"15224552\"\n    },\n    \"id\" : \"22372340000106009\",\n    \"resolution\" : \"Content has been modified in user basis\",\n    \"contentType\" : \"PLAIN_TEXT\"\n  },\n  \"ticketId\" : \"22372000001389007\",\n  \"content\" : \"Please add pricing details in tabular columns\",\n  \"article\" : {\n    \"author\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000000063/photo?orgId=15224553\",\n      \"name\" : \"Charlie\",\n      \"id\" : \"22372000000000063\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"15224552\"\n    },\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/22372000001370011\",\n    \"id\" : \"22372000001370011\",\n    \"locale\" : \"en\",\n    \"title\" : \"Pricing details\"\n  },\n  \"status\" : \"RESOLVED\"\n}"
						}
					]
				},
				{
					"name": "List feedback comments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articleFeedbacks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articleFeedbacks"
							],
							"query": [
								{
									"key": "from",
									"value": "<Int>\nrange : >0",
									"description": "Index number, starting from which the comments must be fetched. Default value is 1.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<Int>\nrange : 1-50",
									"description": "Number of comments to list. Default value is 10.",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<String>\n",
									"description": "Key that sorts the comments based on a specific attribute: createdTime. To sort the comments in descending order, append a '-' before the value.",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the comments. Values allowed are: ticket, contact and resolution.",
									"disabled": true
								},
								{
									"key": "departmentIds",
									"value": "<String>\n",
									"description": "Filter article feedback comments based on department ids",
									"disabled": true
								},
								{
									"key": "rootCategoryIds",
									"value": "<String>\n",
									"description": "Filter article feedback comments based on rootCategoryIds",
									"disabled": true
								},
								{
									"key": "timeRange",
									"value": "<String>\n",
									"description": "Key that filters comments created within a specific date and time range. Enter the time limit in the formats of <br>`LAST_24_HRS,`<br> <br>`LAST_7_DAYS,`<br> <br>`LAST_30_DAYS,`<br> <br>`LAST_365_DAYS`<br> and <br>`yyyy-MM-ddThh:mm:ss.SSSZ,yyyy-MM-ddThh:mm:ss.SSSZ`<br>. Default value : LAST_7_DAYS.",
									"disabled": true
								},
								{
									"key": "locale",
									"value": "<String>\n",
									"description": "Locale of an article translation in which feedback comments to be fetched",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of comments received on an article, based on the limit defined.\n#### OAuth Scope\n- `Desk.articles.READ`\n\n"
					},
					"response": [
						{
							"name": "List feedback comments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/articleFeedbacks?from=1&limit=10&sortBy=-createdTime&rootCategoryIds=2237200000137333&include=ticket,contact,resolution&timeRange=LAST_365_DAYS&locale=en",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articleFeedbacks"
									],
									"query": [
										{
											"key": "from",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "sortBy",
											"value": "-createdTime"
										},
										{
											"key": "rootCategoryIds",
											"value": "2237200000137333"
										},
										{
											"key": "include",
											"value": "ticket,contact,resolution"
										},
										{
											"key": "timeRange",
											"value": "LAST_365_DAYS"
										},
										{
											"key": "locale",
											"value": "en"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ticket\" : {\n      \"ticketNumber\" : \"163\",\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/b34f0de640d72a1d8d1a6f7ca800abb8f3148ec5bcd90913\",\n      \"id\" : \"22372000001389007\",\n      \"deletedTime\" : \"2018-10-07T10:27:20.000Z\",\n      \"deletedBy\" : {\n        \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/22372000000761001/photo\",\n        \"name\" : \"Zylker\",\n        \"id\" : \"22372000000761001\",\n        \"status\" : \"ACTIVE\",\n        \"zuid\" : \"15223452\"\n      }\n    },\n    \"contactId\" : \"22372000001386025\",\n    \"contact\" : {\n      \"photoURL\" : null,\n      \"name\" : \"John\",\n      \"id\" : \"22372000001386025\"\n    },\n    \"createdTime\" : \"2018-10-07T15:55:24.000Z\",\n    \"id\" : \"22372000001386045\",\n    \"resolution\" : {\n      \"modifiedTime\" : \"2020-12-03T05:08:21.000Z\",\n      \"createdBy\" : {\n        \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000000063/photo?orgId=15224553\",\n        \"name\" : \"Charlie\",\n        \"id\" : \"22372000000000063\",\n        \"status\" : \"ACTIVE\",\n        \"zuid\" : \"15224552\"\n      },\n      \"feedbackId\" : \"227800000075038\",\n      \"createdTime\" : \"2020-12-03T05:08:21.000Z\",\n      \"modifiedBy\" : {\n        \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000000063/photo?orgId=15224553\",\n        \"name\" : \"Charlie\",\n        \"id\" : \"22372000000000063\",\n        \"status\" : \"ACTIVE\",\n        \"zuid\" : \"15224552\"\n      },\n      \"id\" : \"22372340000106009\",\n      \"resolution\" : \"Content has been modified in user basis\",\n      \"contentType\" : \"PLAIN_TEXT\"\n    },\n    \"ticketId\" : \"22372000001389007\",\n    \"content\" : \"Please add pricing details in tabular columns\",\n    \"article\" : {\n      \"author\" : {\n        \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000000063/photo?orgId=15224553\",\n        \"name\" : \"Charlie\",\n        \"id\" : \"22372000000000063\",\n        \"status\" : \"ACTIVE\",\n        \"zuid\" : \"15224552\"\n      },\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/22372000001370011\",\n      \"id\" : \"22372000001370011\",\n      \"locale\" : \"en\",\n      \"title\" : \"Pricing details\"\n    },\n    \"status\" : \"RESOLVED\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Delete feedback comment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articleFeedbacks/:feedback_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articleFeedbacks",
								":feedback_id"
							],
							"variable": [
								{
									"key": "feedback_id"
								}
							]
						},
						"description": "This API deletes a particular feedback comment from an article.\n#### OAuth Scope\n- `Desk.articles.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Delete feedback comment",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/articleFeedbacks/22372000001386045",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articleFeedbacks",
										"22372000001386045"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Convert feedback comment into ticket",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articleFeedbacks/:feedback_id/addAsTicket",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articleFeedbacks",
								":feedback_id",
								"addAsTicket"
							],
							"variable": [
								{
									"key": "feedback_id"
								}
							]
						},
						"description": "This API adds a feedback comment as a ticket in your help desk portal and assigns it to the author of the article.\n#### OAuth Scope\n- `Desk.tickets.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n"
					},
					"response": [
						{
							"name": "Convert feedback comment into ticket",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/articleFeedbacks/22372000001386045/addAsTicket",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articleFeedbacks",
										"22372000001386045",
										"addAsTicket"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"ticket\" : {\n    \"ticketNumber\" : \"163\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/b34f0de640d72a1d8d1a6f7ca800abb8f3148ec5bcd90913\",\n    \"id\" : \"22372000001389007\",\n    \"deletedTime\" : \"2018-10-07T10:27:20.000Z\",\n    \"deletedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/22372000000761001/photo\",\n      \"name\" : \"Zylker\",\n      \"id\" : \"22372000000761001\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"15223452\"\n    }\n  },\n  \"contactId\" : \"22372000001386025\",\n  \"createdTime\" : \"2018-10-07T15:55:24.000Z\",\n  \"id\" : \"22372000001386045\",\n  \"ticketId\" : \"22372000001389007\",\n  \"content\" : \"Please add pricing details in tabular columns\",\n  \"article\" : {\n    \"author\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/22372000000000063/photo?orgId=15224553\",\n      \"name\" : \"Charlie\",\n      \"id\" : \"22372000000000063\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"15224552\"\n    },\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/22372000001370011\",\n    \"id\" : \"22372000001370011\",\n    \"locale\" : \"en\",\n    \"title\" : \"Pricing details\"\n  },\n  \"status\" : \"RESOLVED\"\n}"
						}
					]
				}
			],
			"description": "Article feedback refers to the text comments posted by users if they did not find a help article useful. This feedback can be used to improve the help article(s)."
		},
		{
			"name": "KBCategory",
			"item": [
				{
					"name": "Create root category",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/kbRootCategories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"kbRootCategories"
							]
						},
						"description": "This API creates a root category in your knowledge base.\n#### OAuth Scope\n- `Desk.articles.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name (required) | &lt;String&gt;<br /> | Name of the category \n| description (required) | &lt;String&gt;<br /> | A brief description of the category \n| status  | &lt;String&gt;<br />default : HIDE_IN_HELPCENTER | Activation status of the category \n| visibility  | &lt;String&gt;<br />default : NONE | Visibility setting of the category. Values allowed are: AGENTS, GROUP_USERS, ALL_USERS, NONE, and PRIVATE_IP. \n| groupIds  | &lt;list&gt;<br /> | List of group IDs \n| articleViewType (required) | &lt;String&gt;<br /> | View to apply while listing help articles. Values allowed are: LISTVIEW and OVERVIEW. \n| isReviewEnabled (required) | &lt;boolean&gt;<br /> | Key that specifies whether the category must be reviewed or not \n| logoId (required) | &lt;long&gt;<br /> | ID of the logo to set for the category \n| associatedDepartmentIds (required) | &lt;list&gt;<br /> | IDs of the departments associated with the category \n| helpcenterId  | &lt;long&gt;<br /> | ID of the help center to which the category belongs \n"
					},
					"response": [
						{
							"name": "Create root category",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isReviewEnabled\" : false,\n  \"articleViewType\" : \"LISTVIEW\",\n  \"visibility\" : \"ALL_USERS\",\n  \"translations\" : [ {\n    \"name\" : \"Zoho Desk\",\n    \"description\" : \"A helpdesk software\",\n    \"permalink\" : \"zoho-desk\",\n    \"locale\" : \"en\"\n  } ],\n  \"name\" : \"Zoho Desk\",\n  \"logoId\" : \"25\",\n  \"feedbackTicketConversionPreference\" : {\n    \"departmentId\" : \"5000000063895\",\n    \"assigneeId\" : \"5000000000059\",\n    \"status\" : \"ENABLED\"\n  },\n  \"status\" : \"SHOW_IN_HELPCENTER\",\n  \"associatedDepartmentIds\" : [ \"5000000063895\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/kbRootCategories",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"kbRootCategories"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2020-01-02T15:26:51.000Z\",\n  \"visibility\" : \"ALL_USERS\",\n  \"articleViewType\" : \"LISTVIEW\",\n  \"groups\" : [ ],\n  \"logoUrl\" : \"https://desk.zoho.com/support/App/build/fonts/certificate.svg\",\n  \"feedbackTicketConversionPreference\" : {\n    \"departmentId\" : \"5000000063895\",\n    \"assignee\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/5000000000059/photo?orgId=15114553\",\n      \"name\" : \"Charlie Marlie\",\n      \"id\" : \"5000000000059\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"15224545\"\n    },\n    \"status\" : \"ENABLED\"\n  },\n  \"associatedDepartmentIds\" : [ \"5000000063895\" ],\n  \"encryptedWorkspaceId\" : \"uhahs234dha2342342424da2342342342\",\n  \"helpcenterId\" : \"5000000015871\",\n  \"isReviewEnabled\" : true,\n  \"isTrashed\" : false,\n  \"createdBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Zylker\",\n    \"id\" : \"5000000015867\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"343224\"\n  },\n  \"translations\" : [ {\n    \"modifiedTime\" : \"2020-01-02T15:24:42.000Z\",\n    \"createdBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"5000000015867\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"343224\"\n    },\n    \"name\" : \"Zoho Desk\",\n    \"description\" : \"A helpdesk software\",\n    \"createdTime\" : \"2020-01-02T15:24:42.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"5000000015867\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"343224\"\n    },\n    \"id\" : \"5000000336004\",\n    \"permalink\" : \"zoho-desk\",\n    \"locale\" : \"en\",\n    \"categoryId\" : \"5000000319037\"\n  } ],\n  \"name\" : \"Zoho Desk\",\n  \"createdTime\" : \"2019-12-30T12:10:30.000Z\",\n  \"modifiedBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Zylker\",\n    \"id\" : \"5000000015867\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"343224\"\n  },\n  \"id\" : \"5000000319037\",\n  \"status\" : \"SHOW_IN_HELPCENTER\",\n  \"order\" : \"3\",\n  \"workspaceId\" : \"asa432da353sda\"\n}"
						}
					]
				},
				{
					"name": "Upload logo image",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/kbCategoryLogo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"kbCategoryLogo"
							]
						},
						"description": "This API is used to upload an image to be used as logo\n#### OAuth Scope\n- `Desk.articles.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n"
					},
					"response": [
						{
							"name": "Upload logo image",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/kbCategoryLogo",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"kbCategoryLogo"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"id\" : \"2029254000000178001\"\n}"
						}
					]
				},
				{
					"name": "Create a section",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/kbSections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"kbSections"
							]
						},
						"description": "This API creates a section in your helpdesk\n#### OAuth Scope\n- `Desk.articles.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name (required) | &lt;String&gt;<br /> | Section Name \n| parentCategoryId (required) | &lt;Long&gt;<br /> | Parent id (either section or rootCategoryId) below which we need to create a section \n| description  | &lt;String&gt;<br /> | A short description of the section \n| logoId  | &lt;long&gt;<br /> | Logo for each category \n| status  | &lt;String&gt;<br />default : HIDE_IN_HELPCENTER | Status of the section \n| visibility  | &lt;String&gt;<br />default : NONE | Visibility of the section. Values allowed are <br>`AGENTS`<br>, <br>`GROUP_USERS`<br>, <br>`ALL_USERS`<br>,<br>`NONE`<br>,<br>`PRIVATE_IP`<br>  \n| groupIds  | &lt;list&gt;<br /> | group ids list  \n| articlePermission  | &lt;String&gt;<br /> | To update the article permission based on category visibility \n"
					},
					"response": [
						{
							"name": "Create a section",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"articlePermission\" : \"ALL\",\n  \"translations\" : [ {\n    \"name\" : \"For Agents\",\n    \"description\" : \"Section 1 description\",\n    \"locale\" : \"en-us\",\n    \"permalink\" : \"for-agents\"\n  } ],\n  \"name\" : \"For Agents\",\n  \"description\" : \"Section 1 description\",\n  \"parentCategoryId\" : 5000000340014,\n  \"logoId\" : \"10\",\n  \"status\" : \"SHOW_IN_HELPCENTER\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/kbSections",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"kbSections"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2020-01-07T01:15:14.000Z\",\n  \"visibility\" : \"ALL_USERS\",\n  \"description\" : \"Section 1 description\",\n  \"groups\" : [ ],\n  \"logoUrl\" : \"https://desk.zoho.com/support/App/build/fonts/certificate.svg\",\n  \"rootCategoryId\" : \"5000000066427\",\n  \"isTrashed\" : false,\n  \"createdBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Zylker\",\n    \"id\" : \"5000000015867\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"343224\"\n  },\n  \"translations\" : [ {\n    \"modifiedTime\" : \"2020-01-07T01:15:14.000Z\",\n    \"createdBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"5000000015867\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"343224\"\n    },\n    \"name\" : \"For Agents\",\n    \"description\" : \"Section 1 description\",\n    \"createdTime\" : \"2020-01-07T01:15:14.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"5000000015867\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"343224\"\n    },\n    \"id\" : \"5000000341019\",\n    \"permalink\" : \"for-agents\",\n    \"locale\" : \"en\",\n    \"categoryId\" : \"5000000341017\"\n  } ],\n  \"name\" : \"For Agents\",\n  \"createdTime\" : \"2020-01-07T01:15:14.000Z\",\n  \"parentCategoryId\" : \"5000000340014\",\n  \"modifiedBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Zylker\",\n    \"id\" : \"5000000015867\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"343224\"\n  },\n  \"id\" : \"5000000341017\",\n  \"status\" : \"SHOW_IN_HELPCENTER\",\n  \"order\" : \"2\"\n}"
						}
					]
				},
				{
					"name": "Update a section",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/kbSections/:sectionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"kbSections",
								":sectionId"
							],
							"variable": [
								{
									"key": "sectionId"
								}
							]
						},
						"description": "This API updates a section in your helpdesk\n#### OAuth Scope\n- `Desk.articles.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name  | &lt;String&gt;<br /> | Section Name \n| description  | &lt;String&gt;<br /> | A short description of the section \n| logoId  | &lt;long&gt;<br /> | Logo for each category \n| status  | &lt;String&gt;<br />default : HIDE_IN_HELPCENTER | Status of the section \n| visibility  | &lt;String&gt;<br />default : NONE | Visibility of the section. Values allowed are <br>`AGENTS`<br>, <br>`GROUP_USERS`<br>, <br>`ALL_USERS`<br>,<br>`PRIVATE_IP`<br>,<br>`NONE`<br>  \n| groupIds  | &lt;list&gt;<br /> | group ids list  \n| articlePermission  | &lt;String&gt;<br /> | To update the article permission based on category visibility \n"
					},
					"response": [
						{
							"name": "Update a section",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"articlePermission\" : \"REGISTEREDUSERS\",\n  \"translations\" : [ {\n    \"name\" : \"section name updated\",\n    \"locale\" : \"pl-pl\"\n  } ],\n  \"status\" : \"HIDE_IN_HELPCENTER\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/kbSections/5000000340014",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"kbSections",
										"5000000340014"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2020-01-07T01:15:14.000Z\",\n  \"visibility\" : \"ALL_USERS\",\n  \"description\" : \"Section 1 description\",\n  \"groups\" : [ ],\n  \"logoUrl\" : \"https://desk.zoho.com/support/App/build/fonts/certificate.svg\",\n  \"rootCategoryId\" : \"5000000066427\",\n  \"isTrashed\" : false,\n  \"createdBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Zylker\",\n    \"id\" : \"5000000015867\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"343224\"\n  },\n  \"translations\" : [ {\n    \"modifiedTime\" : \"2020-01-07T01:15:14.000Z\",\n    \"createdBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"5000000015867\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"343224\"\n    },\n    \"name\" : \"For Agents\",\n    \"description\" : \"Section 1 description\",\n    \"createdTime\" : \"2020-01-07T01:15:14.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"5000000015867\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"343224\"\n    },\n    \"id\" : \"5000000341019\",\n    \"permalink\" : \"for-agents\",\n    \"locale\" : \"en\",\n    \"categoryId\" : \"5000000341017\"\n  } ],\n  \"name\" : \"For Agents\",\n  \"createdTime\" : \"2020-01-07T01:15:14.000Z\",\n  \"parentCategoryId\" : \"5000000340014\",\n  \"modifiedBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Zylker\",\n    \"id\" : \"5000000015867\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"343224\"\n  },\n  \"id\" : \"5000000341017\",\n  \"status\" : \"SHOW_IN_HELPCENTER\",\n  \"order\" : \"2\"\n}"
						}
					]
				},
				{
					"name": "Get a section",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/kbSections/:sectionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"kbSections",
								":sectionId"
							],
							"query": [
								{
									"key": "include",
									"value": "<String>\n",
									"description": "Include params are publicArticlesCount, allArticlesCount",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "sectionId"
								}
							]
						},
						"description": "This API fetches a section in your helpdesk\n#### OAuth Scope\n- `Desk.articles.READ`\n\n"
					},
					"response": [
						{
							"name": "Get a section",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/kbSections/5000000340014",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"kbSections",
										"5000000340014"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2020-01-07T01:15:14.000Z\",\n  \"visibility\" : \"ALL_USERS\",\n  \"description\" : \"Section 1 description\",\n  \"groups\" : [ ],\n  \"logoUrl\" : \"https://desk.zoho.com/support/App/build/fonts/certificate.svg\",\n  \"rootCategoryId\" : \"5000000066427\",\n  \"isTrashed\" : false,\n  \"createdBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Zylker\",\n    \"id\" : \"5000000015867\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"343224\"\n  },\n  \"translations\" : [ {\n    \"modifiedTime\" : \"2020-01-07T01:15:14.000Z\",\n    \"createdBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"5000000015867\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"343224\"\n    },\n    \"name\" : \"For Agents\",\n    \"description\" : \"Section 1 description\",\n    \"createdTime\" : \"2020-01-07T01:15:14.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"5000000015867\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"343224\"\n    },\n    \"id\" : \"5000000341019\",\n    \"permalink\" : \"for-agents\",\n    \"locale\" : \"en\",\n    \"categoryId\" : \"5000000341017\"\n  } ],\n  \"name\" : \"For Agents\",\n  \"createdTime\" : \"2020-01-07T01:15:14.000Z\",\n  \"parentCategoryId\" : \"5000000340014\",\n  \"modifiedBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Zylker\",\n    \"id\" : \"5000000015867\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"343224\"\n  },\n  \"id\" : \"5000000341017\",\n  \"status\" : \"SHOW_IN_HELPCENTER\",\n  \"order\" : \"2\"\n}"
						}
					]
				},
				{
					"name": "Get root category",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/kbRootCategories/:rootCategoryId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"kbRootCategories",
								":rootCategoryId"
							],
							"query": [
								{
									"key": "include",
									"value": "<String>\n",
									"description": "Additional information related to the category. Values allowed are: publicArticlesCount and allArticlesCount.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "rootCategoryId"
								}
							]
						},
						"description": "This API fetches the details of a root category.\n#### OAuth Scope\n- `Desk.articles.READ`\n\n"
					},
					"response": [
						{
							"name": "Get root category",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/kbRootCategories/5000000340014",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"kbRootCategories",
										"5000000340014"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2020-01-02T15:26:51.000Z\",\n  \"visibility\" : \"ALL_USERS\",\n  \"articleViewType\" : \"LISTVIEW\",\n  \"groups\" : [ ],\n  \"logoUrl\" : \"https://desk.zoho.com/support/App/build/fonts/certificate.svg\",\n  \"feedbackTicketConversionPreference\" : {\n    \"departmentId\" : \"5000000063895\",\n    \"assignee\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/5000000000059/photo?orgId=15114553\",\n      \"name\" : \"Charlie Marlie\",\n      \"id\" : \"5000000000059\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"15224545\"\n    },\n    \"status\" : \"ENABLED\"\n  },\n  \"associatedDepartmentIds\" : [ \"5000000063895\" ],\n  \"encryptedWorkspaceId\" : \"uhahsdhada\",\n  \"helpcenterId\" : \"5000000015871\",\n  \"isReviewEnabled\" : true,\n  \"isTrashed\" : false,\n  \"createdBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Zylker\",\n    \"id\" : \"5000000015867\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"343224\"\n  },\n  \"translations\" : [ {\n    \"modifiedTime\" : \"2020-01-02T15:24:42.000Z\",\n    \"createdBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"5000000015867\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"343224\"\n    },\n    \"name\" : \"Root category name\",\n    \"description\" : \"description of root\",\n    \"createdTime\" : \"2020-01-02T15:24:42.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"5000000015867\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"343224\"\n    },\n    \"id\" : \"5000000336004\",\n    \"permalink\" : \"root-category-name\",\n    \"locale\" : \"en\",\n    \"categoryId\" : \"5000000319037\"\n  } ],\n  \"name\" : \"Root category name\",\n  \"createdTime\" : \"2019-12-30T12:10:30.000Z\",\n  \"modifiedBy\" : {\n    \"photoURL\" : null,\n    \"name\" : \"Zylker\",\n    \"id\" : \"5000000015867\",\n    \"status\" : \"ACTIVE\",\n    \"zuid\" : \"343224\"\n  },\n  \"id\" : \"5000000319037\",\n  \"status\" : \"SHOW_IN_HELPCENTER\",\n  \"order\" : \"3\",\n  \"workspaceId\" : \"asadasda\"\n}"
						}
					]
				},
				{
					"name": "Get a category tree",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/kbRootCategories/:rootCategoryId/categoryTree",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"kbRootCategories",
								":rootCategoryId",
								"categoryTree"
							],
							"query": [
								{
									"key": "locale",
									"value": "<String>\n",
									"description": "Locale of the translated name",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<String>\n",
									"description": "Sort order of the categories. Allowed values : name, order",
									"disabled": true
								},
								{
									"key": "includeTrash",
									"value": "<Boolean>\n",
									"description": "Presence flag of the category",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<String>\n",
									"description": "Include params are publicArticlesCount, allArticlesCount",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "rootCategoryId"
								}
							]
						},
						"description": "This API fetches the full tree of a root category in your helpdesk\n#### OAuth Scope\n- `Desk.articles.READ`\n\n"
					},
					"response": [
						{
							"name": "Get a category tree",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/kbRootCategories/5000000340014/categoryTree&sortBy=order&includeTrash=true&locale=en&include=publicArticlesCount,allArticlesCount",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"kbRootCategories",
										"5000000340014",
										"categoryTree&sortBy=order&includeTrash=true&locale=en&include=publicArticlesCount,allArticlesCount"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"visibility\" : \"ALL_USERS\",\n  \"allArticlesCount\" : \"0\",\n  \"description\" : \"test\",\n  \"locale\" : \"en\",\n  \"logoUrl\" : \"https://desk.zoho.com/support/App/build/fonts/certificate.svg\",\n  \"publicArticlesCount\" : \"0\",\n  \"isTrashed\" : false,\n  \"children\" : [ {\n    \"visibility\" : \"ALL_USERS\",\n    \"allArticlesCount\" : \"0\",\n    \"description\" : \"Desk\",\n    \"locale\" : \"en\",\n    \"logoUrl\" : \"https://desk.zoho.com/support/App/build/fonts/certificate.svg\",\n    \"rootCategoryId\" : \"5000000066427\",\n    \"publicArticlesCount\" : \"0\",\n    \"isTrashed\" : false,\n    \"children\" : [ {\n      \"visibility\" : \"ALL_USERS\",\n      \"allArticlesCount\" : \"0\",\n      \"description\" : \"Section 2\",\n      \"locale\" : \"en\",\n      \"logoUrl\" : \"https://desk.zoho.com/support/App/build/fonts/certificate.svg\",\n      \"rootCategoryId\" : \"5000000066427\",\n      \"publicArticlesCount\" : \"0\",\n      \"isTrashed\" : false,\n      \"children\" : [ ],\n      \"translations\" : [ {\n        \"name\" : \"section 2 en\",\n        \"description\" : null,\n        \"id\" : \"5000000341003\",\n        \"permalink\" : \"section-2-en\",\n        \"locale\" : \"en\"\n      } ],\n      \"name\" : \"Section 2\",\n      \"parentCategoryId\" : \"5000000340014\",\n      \"id\" : \"5000000341001\",\n      \"status\" : \"SHOW_IN_HELPCENTER\",\n      \"order\" : \"1\"\n    } ],\n    \"translations\" : [ {\n      \"name\" : \"For Agents\",\n      \"description\" : null,\n      \"id\" : \"5000000340016\",\n      \"permalink\" : \"for-agents\",\n      \"locale\" : \"en\"\n    } ],\n    \"name\" : \"Desk\",\n    \"parentCategoryId\" : \"5000000066427\",\n    \"id\" : \"5000000340014\",\n    \"status\" : \"SHOW_IN_HELPCENTER\",\n    \"order\" : \"5\"\n  } ],\n  \"translations\" : [ {\n    \"name\" : \"Desk\",\n    \"description\" : \"Helpdesk-software\",\n    \"id\" : \"5000000265103\",\n    \"permalink\" : \"desk\",\n    \"locale\" : \"en\"\n  } ],\n  \"name\" : \"test\",\n  \"id\" : \"5000000066427\",\n  \"status\" : \"SHOW_IN_HELPCENTER\",\n  \"order\" : \"1\"\n}"
						}
					]
				},
				{
					"name": "List root categories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/kbRootCategories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"kbRootCategories"
							],
							"query": [
								{
									"key": "locale",
									"value": "<String>\n",
									"description": "Language of the category",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<String>\n",
									"description": "Key that sorts the categories, based on a specific attribute: name or order",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<Int>\ndefault : 1,",
									"description": "Index number, starting from which the categories must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<Int>\ndefault : 50,",
									"description": "Number of categories to list",
									"disabled": true
								},
								{
									"key": "searchValue",
									"value": "<String>\n",
									"description": "Keyword for searching for a particular category",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<String>\n",
									"description": "Activation status of the category. Values allowed are: SHOW_IN_HELPCENTER, HIDE_IN_HELPCENTER, and DISABLED.",
									"disabled": true
								},
								{
									"key": "isTrashed",
									"value": "<boolean>\n",
									"description": "Key that denotes whether the category is deleted or not",
									"disabled": true
								},
								{
									"key": "isReviewEnabled",
									"value": "<boolean>\n",
									"description": "Key that specifies whether the category must be reviewed or not",
									"disabled": true
								},
								{
									"key": "visibility",
									"value": "<String>\n",
									"description": "Visibility setting of the category. Values allowed are: AGENTS, GROUP_USERS, ALL_USERS, and NONE.",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<String>\n",
									"description": "ID of the department associated with the category",
									"disabled": true
								},
								{
									"key": "helpcenterId",
									"value": "<String>\n",
									"description": "ID of the help center to which the category belongs",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<String>\n",
									"description": "Additional information related to the category. Values allowed are: publicArticlesCount, allArticlesCount, and sectionsCount.",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of root categories, based on the limit defined.\n#### OAuth Scope\n- `Desk.articles.READ`\n\n"
					},
					"response": [
						{
							"name": "List root categories",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/kbRootCategories",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"kbRootCategories"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2020-01-05T13:18:07.000Z\",\n    \"visibility\" : \"ALL_USERS\",\n    \"articleViewType\" : \"LISTVIEW\",\n    \"allArticlesCount\" : \"11\",\n    \"groups\" : [ ],\n    \"sectionsCount\" : \"7\",\n    \"logoUrl\" : \"https://desk.zoho.com/support/App/build/fonts/certificate.svg\",\n    \"feedbackTicketConversionPreference\" : {\n      \"departmentId\" : \"5000000063895\",\n      \"assignee\" : {\n        \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/5000000000059/photo?orgId=15114553\",\n        \"name\" : \"Charlie Marlie\",\n        \"id\" : \"5000000000059\",\n        \"status\" : \"ACTIVE\",\n        \"zuid\" : \"15224545\"\n      },\n      \"status\" : \"ENABLED\"\n    },\n    \"associatedDepartmentIds\" : [ \"5000000063895\" ],\n    \"publicArticlesCount\" : \"3\",\n    \"encryptedWorkspaceId\" : \"04bd200bc14c4cac0c0026a0342c1f21263012407fa56109a37788e786a96ec0383c1eeb08849f9be78a6f7b8b8f31033dde60d41ad95443c6570636db1a9b20\",\n    \"helpcenterId\" : \"5000000015871\",\n    \"isReviewEnabled\" : false,\n    \"isTrashed\" : false,\n    \"createdBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"5000000015867\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"343224\"\n    },\n    \"translations\" : [ {\n      \"modifiedTime\" : \"2019-10-10T06:18:39.000Z\",\n      \"createdBy\" : {\n        \"photoURL\" : null,\n        \"name\" : \"Zylker\",\n        \"id\" : \"5000000015867\",\n        \"status\" : \"ACTIVE\",\n        \"zuid\" : \"343224\"\n      },\n      \"name\" : \"Zoho Desk\",\n      \"description\" : \"A helpdesk software\",\n      \"createdTime\" : \"2019-06-24T07:03:39.000Z\",\n      \"modifiedBy\" : {\n        \"photoURL\" : null,\n        \"name\" : \"Zylker\",\n        \"id\" : \"5000000015867\",\n        \"status\" : \"ACTIVE\",\n        \"zuid\" : \"343224\"\n      },\n      \"id\" : \"5000000265103\",\n      \"permalink\" : \"zoho-desk\",\n      \"locale\" : \"en\",\n      \"categoryId\" : \"5000000066427\"\n    } ],\n    \"name\" : \"Zoho Desk\",\n    \"createdTime\" : \"2019-06-24T07:03:39.000Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"5000000015867\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"343224\"\n    },\n    \"id\" : \"5000000066427\",\n    \"status\" : \"SHOW_IN_HELPCENTER\",\n    \"order\" : \"1\",\n    \"workspaceId\" : \"ponaz00368c36c9274809bf96849b392f8d67\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get review owners",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/kbRootCategories/:rootCategoryId/reviewOwners",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"kbRootCategories",
								":rootCategoryId",
								"reviewOwners"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "<String>\n",
									"description": "Sort order of the owners. Allowed values : firstName, lastName",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<Int>\ndefault : 1,",
									"description": "Offset value",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<Int>\ndefault : 50,",
									"description": "Number of objects",
									"disabled": true
								},
								{
									"key": "searchValue",
									"value": "<String>\n",
									"description": "Search string",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "rootCategoryId"
								}
							]
						},
						"description": "This API fetches review owners of a root category in your helpdesk\n#### OAuth Scope\n- `Desk.articles.READ`\n\n"
					},
					"response": [
						{
							"name": "Get review owners",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/kbRootCategories/5000000066427/reviewOwners",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"kbRootCategories",
										"5000000066427",
										"reviewOwners"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"photoURL\" : null,\n    \"name\" : \"Zylker\",\n    \"id\" : \"5000000015867\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Add review owner",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/kbRootCategories/:rootCategoryId/reviewOwners/add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"kbRootCategories",
								":rootCategoryId",
								"reviewOwners",
								"add"
							],
							"variable": [
								{
									"key": "rootCategoryId"
								}
							]
						},
						"description": "This API adds review owners of a root category in your helpdesk\n#### OAuth Scope\n- `Desk.articles.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| reviewOwnerIds (required) | &lt;list&gt;<br /> | review owner ids list  \n"
					},
					"response": [
						{
							"name": "Add review owner",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"reviewOwnerIds\" : [ \"5000000015867\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/kbRootCategories/5000000066427/reviewOwners/add",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"kbRootCategories",
										"5000000066427",
										"reviewOwners",
										"add"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : true,\n    \"id\" : \"5000000015867\",\n    \"errors\" : null\n  } ]\n}"
						}
					]
				},
				{
					"name": "Remove review owner",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/kbRootCategories/:rootCategoryId/reviewOwners/remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"kbRootCategories",
								":rootCategoryId",
								"reviewOwners",
								"remove"
							],
							"variable": [
								{
									"key": "rootCategoryId"
								}
							]
						},
						"description": "This API removes review owners of a root category in your helpdesk\n#### OAuth Scope\n- `Desk.articles.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| reviewOwnerIds (required) | &lt;list&gt;<br /> | review owner ids list  \n"
					},
					"response": [
						{
							"name": "Remove review owner",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"reviewOwnerIds\" : [ \"5000000015867\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/kbRootCategories/5000000066427/reviewOwners/remove",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"kbRootCategories",
										"5000000066427",
										"reviewOwners",
										"remove"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : true,\n    \"id\" : \"5000000015867\",\n    \"errors\" : null\n  } ]\n}"
						}
					]
				},
				{
					"name": "Add a permalink to a root catgeory",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/kbRootCategories/:rootCategoryId/translations/{locale}/permalinks/add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"kbRootCategories",
								":rootCategoryId",
								"translations",
								"{locale}",
								"permalinks",
								"add"
							],
							"variable": [
								{
									"key": "rootCategoryId"
								}
							]
						},
						"description": "This API adds a permalink to a root category translation\n#### OAuth Scope\n- `Desk.articles.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| permalink (required) | &lt;String&gt;<br /> | The permalink of Solution \n| isOldPermalinkNeeded  | &lt;Boolean&gt;<br /> | The variable that defines if permalink needs to be added to redirect list. By default, it is true \n"
					},
					"response": [
						{
							"name": "Add a permalink to a root catgeory",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isOldPermalinkNeeded\" : true,\n  \"permalink\" : \"new-permalink\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/kbRootCategories/5000000066427/translations/en/add",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"kbRootCategories",
										"5000000066427",
										"translations",
										"en",
										"add"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"createdBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"6000000016514\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"343224\"\n    },\n    \"isPrimary\" : true,\n    \"createdTime\" : \"2020-05-01T14:16:43.000Z\",\n    \"permalink\" : \"autobot\"\n  }, {\n    \"createdBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"6000000016514\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"343224\"\n    },\n    \"isPrimary\" : false,\n    \"createdTime\" : \"2020-05-01T14:12:29.000Z\",\n    \"permalink\" : \"transformers\"\n  }, {\n    \"createdBy\" : {\n      \"photoURL\" : null,\n      \"name\" : \"Zylker\",\n      \"id\" : \"6000000016514\",\n      \"status\" : \"ACTIVE\",\n      \"zuid\" : \"343224\"\n    },\n    \"isPrimary\" : false,\n    \"createdTime\" : \"2020-05-01T14:12:24.000Z\",\n    \"permalink\" : \"flash\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Remove a permalink of a root category",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/kbRootCategories/:rootCategoryId/translations/{locale}/permalinks/remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"kbRootCategories",
								":rootCategoryId",
								"translations",
								"{locale}",
								"permalinks",
								"remove"
							],
							"variable": [
								{
									"key": "rootCategoryId"
								}
							]
						},
						"description": "This API removes a permalink of a root category translation\n#### OAuth Scope\n- `Desk.articles.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| permalink (required) | &lt;String&gt;<br /> | The permalink of Solution \n"
					},
					"response": [
						{
							"name": "Remove a permalink of a root category",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"permalink\" : \"permalink-2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/kbRootCategories/5000000066427/translations/en/remove",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"kbRootCategories",
										"5000000066427",
										"translations",
										"en",
										"remove"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"primaryPermalink\" : \"new-permalink\",\n  \"secondaryPermalinks\" : [ \"permalink-3\" ]\n}"
						}
					]
				}
			],
			"description": "Categories are groups using which you can organize help articles in your knowledge base. You can create categories, based on the products/services you offer or the nature of the issues your customers report."
		},
		{
			"name": "Contracts",
			"item": [
				{
					"name": "Get a contract",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contracts/:{contract_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contracts",
								":{contract_id}"
							],
							"variable": [
								{
									"key": "{contract_id}"
								}
							]
						},
						"description": "This API fetches a single contract from your helpdesk.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get a contract",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contracts/5000000009331",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contracts",
										"5000000009331"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"associatedSLAId\" : \"5000000007671\",\n  \"modifiedTime\" : \"2018-01-15T11:13:04.000Z\",\n  \"product\" : {\n    \"id\" : \"500000001290\",\n    \"productName\" : \"Desk\"\n  },\n  \"cf\" : {\n    \"cf_mycustomfield1\" : \"hello\"\n  },\n  \"productId\" : \"5000000009328\",\n  \"endDate\" : \"2019-01-10\",\n  \"departmentId\" : \"5000000007235\",\n  \"notifyBefore\" : \"5\",\n  \"contractNumber\" : \"101\",\n  \"description\" : null,\n  \"sla\" : {\n    \"name\" : \"Gold SLAs\",\n    \"id\" : \"5000000007671\"\n  },\n  \"ownerId\" : \"5000000009148\",\n  \"notificationAgentIds\" : [ \"5000000009148\" ],\n  \"accountId\" : \"5000000009326\",\n  \"createdBy\" : \"5000000009148\",\n  \"notifyOn\" : \"2019-01-05\",\n  \"createdTime\" : \"2018-01-10T11:29:41.000Z\",\n  \"contractName\" : \"Ticket Resolution Contract for 5 Star Crisps\",\n  \"modifiedBy\" : \"5000000009148\",\n  \"id\" : \"5000000009331\",\n  \"startDate\" : \"2018-01-10\",\n  \"account\" : {\n    \"website\" : \"https://www.zoho.com\",\n    \"accountName\" : \"Zoho\",\n    \"id\" : \"500000008909\"\n  }\n}"
						}
					]
				},
				{
					"name": "List all contracts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contracts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contracts"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "From index",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of contracts to fetch",
									"disabled": true
								},
								{
									"key": "viewId",
									"value": "<integer>\n",
									"description": "ID of the view to apply while fetching the resources",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the contracts must be fetched",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "<long>\n",
									"description": "ID of the account associated with the contract",
									"disabled": true
								},
								{
									"key": "ownerId",
									"value": "<long>\n",
									"description": "ID of contract owner",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Parameter that sorts contracts by one of these attributes:&nbsp;<br>`accountName`,<br>&nbsp;<br>`contractName`,<br>&nbsp;<br>`contractEndDate`,<br> <br>`contractStartDate`,<br>&nbsp;<br>`createdTime`, or<br>&nbsp;<br>`modifiedTime`.<br> The default order of sorting is ascending. To sort in descending order, prefix a `-` with the parameter.",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Allowed Value is: `accounts`",
									"disabled": true
								}
							]
						},
						"description": "To get a list of contracts\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List all contracts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contracts",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contracts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"associatedSLAId\" : \"10000000149109\",\n    \"accountId\" : \"10000000265011\",\n    \"contractStatus\" : \"FUTURE\",\n    \"productId\" : null,\n    \"endDate\" : \"2018-11-10\",\n    \"departmentId\" : \"10000000010762\",\n    \"contractName\" : \"C2\",\n    \"id\" : \"10000000270023\",\n    \"ownerId\" : \"10000000012902\",\n    \"startDate\" : \"2018-10-10\"\n  }, {\n    \"associatedSLAId\" : \"10000000149109\",\n    \"accountId\" : \"10000000265011\",\n    \"contractStatus\" : \"EXPIRED\",\n    \"productId\" : null,\n    \"endDate\" : \"2018-09-10\",\n    \"departmentId\" : \"10000000010762\",\n    \"contractName\" : \"New\",\n    \"id\" : \"10000000270045\",\n    \"ownerId\" : \"10000000012902\",\n    \"startDate\" : \"2018-09-09\"\n  }, {\n    \"associatedSLAId\" : \"10000000149109\",\n    \"accountId\" : \"10000000272001\",\n    \"contractStatus\" : \"ACTIVE\",\n    \"productId\" : null,\n    \"endDate\" : \"2018-12-11\",\n    \"departmentId\" : \"10000000010762\",\n    \"contractName\" : \"THIRD\",\n    \"id\" : \"10000000272013\",\n    \"ownerId\" : \"10000000012902\",\n    \"startDate\" : \"2018-09-11\"\n  }, {\n    \"associatedSLAId\" : \"10000000149109\",\n    \"accountId\" : \"10000000272037\",\n    \"contractStatus\" : \"ACTIVE\",\n    \"productId\" : null,\n    \"endDate\" : \"2019-03-11\",\n    \"departmentId\" : \"10000000010762\",\n    \"contractName\" : \"Fourth ACC\",\n    \"id\" : \"10000000272049\",\n    \"ownerId\" : \"10000000012902\",\n    \"startDate\" : \"2018-09-11\"\n  }, {\n    \"associatedSLAId\" : \"10000000149109\",\n    \"accountId\" : \"10000000272071\",\n    \"contractStatus\" : \"EXPIRED\",\n    \"productId\" : null,\n    \"endDate\" : \"2018-09-12\",\n    \"departmentId\" : \"10000000010762\",\n    \"contractName\" : \"old\",\n    \"id\" : \"10000000272083\",\n    \"ownerId\" : \"10000000012902\",\n    \"startDate\" : \"2017-09-11\"\n  }, {\n    \"associatedSLAId\" : \"10000000149109\",\n    \"accountId\" : \"10000000265011\",\n    \"contractStatus\" : \"ACTIVE\",\n    \"productId\" : null,\n    \"endDate\" : \"2018-09-30\",\n    \"departmentId\" : \"10000000010762\",\n    \"contractName\" : \"FUTURE 1\",\n    \"id\" : \"10000000273003\",\n    \"ownerId\" : \"10000000012902\",\n    \"startDate\" : \"2018-09-15\"\n  }, {\n    \"associatedSLAId\" : \"10000000149109\",\n    \"accountId\" : \"10000000265011\",\n    \"contractStatus\" : \"FUTURE\",\n    \"productId\" : null,\n    \"endDate\" : \"2018-12-11\",\n    \"departmentId\" : \"10000000010762\",\n    \"contractName\" : \"FUTURE 3\",\n    \"id\" : \"10000000273025\",\n    \"ownerId\" : \"10000000012902\",\n    \"startDate\" : \"2018-11-11\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Create a contract",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contracts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contracts"
							]
						},
						"description": "This API creates a contract in your helpdesk.\n#### OAuth Scope\n- `Desk.settings.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| associatedSLAId (required) | &lt;long&gt;<br /> | ID of the SLA associated with the contract \n| accountId (required) | &lt;long&gt;<br /> | ID of the account associated with the contract \n| departmentId (required) | &lt;long&gt;<br /> | ID of the department to which the contract belongs \n| productId  | &lt;long&gt;<br /> | ID of the product associated with the contract \n| contractNumber  | &lt;string&gt;<br />max chars : 50 | Serial number of the contract \n| notificationAgentIds  | &lt;list&gt;<br /> | List of agents to be notified  \n| notifyBefore  | &lt;int&gt;<br /> | Number of days before endDate when notifications about contract expiry must be sent to the agents concerned  \n| startDate (required) | &lt;date&gt;<br /> | Date from which the contract is valid \n| endDate  | &lt;date&gt;<br /> | Date until which the contract is valid \n| ownerId (required) | &lt;long&gt;<br /> | ID of the contract owner \n| contractName (required) | &lt;string&gt;<br />max chars : 80 | Name of the contract \n| description  | &lt;string&gt;<br />max chars : 65535 | A short description of the contract \n| customFields  | &lt;list&gt;<br /> | User-defined fields associated with the contract \n| cf  | &lt;list&gt;<br /> | User-defined fields associated with the contract \n| sla  | &lt;list&gt;<br /> | SLA fields associated with the contract \n| account  | &lt;list&gt;<br /> | Account fields associated with the contract \n| product  | &lt;list&gt;<br /> | Product fields associated with the contract \n"
					},
					"response": [
						{
							"name": "Create a contract",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"associatedSLAId\" : \"10000000062047\",\n  \"cf\" : {\n    \"cf_mycustomfield1\" : \"Some Value\"\n  },\n  \"productId\" : null,\n  \"endDate\" : \"2019-07-23\",\n  \"departmentId\" : \"10000000013228\",\n  \"notifyBefore\" : \"3\",\n  \"description\" : \"My Description\",\n  \"contractNumber\" : 9495,\n  \"ownerId\" : \"10000000012816\",\n  \"notificationAgentIds\" : [ \"10000000012816\" ],\n  \"accountId\" : \"10000000012985\",\n  \"contractName\" : \"MyContractName\",\n  \"startDate\" : \"2018-07-23\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/contracts",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contracts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"associatedSLAId\" : \"10000000062047\",\n  \"modifiedTime\" : \"2018-07-24T07:31:57.075Z\",\n  \"product\" : {\n    \"id\" : \"500000001290\",\n    \"productName\" : \"Desk\"\n  },\n  \"cf\" : {\n    \"cf_mycustomfield1\" : \"Some Value\"\n  },\n  \"productId\" : null,\n  \"endDate\" : \"2019-07-23\",\n  \"departmentId\" : \"10000000013228\",\n  \"notifyBefore\" : \"3\",\n  \"contractNumber\" : \"9495\",\n  \"description\" : \"My Description\",\n  \"sla\" : {\n    \"name\" : \"Gold SLAs\",\n    \"id\" : \"5000000007671\"\n  },\n  \"ownerId\" : \"10000000012816\",\n  \"notificationAgentIds\" : [ \"10000000012816\" ],\n  \"accountId\" : \"10000000012985\",\n  \"createdBy\" : \"10000000012816\",\n  \"notifyOn\" : \"2019-07-20\",\n  \"createdTime\" : \"2018-07-24T07:31:57.075Z\",\n  \"contractName\" : \"MyContractName\",\n  \"modifiedBy\" : \"10000000012816\",\n  \"id\" : \"10000000082016\",\n  \"startDate\" : \"2018-07-23\",\n  \"account\" : {\n    \"website\" : \"https://www.zoho.com\",\n    \"accountName\" : \"Zoho\",\n    \"id\" : \"500000008909\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update a contract",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contracts/:contract_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contracts",
								":contract_id"
							],
							"variable": [
								{
									"key": "contract_id"
								}
							]
						},
						"description": "This API updates the details of an existing contract.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| associatedSLAId  | &lt;long&gt;<br /> | ID of the SLA associated with the contract \n| accountId  | &lt;long&gt;<br /> | ID of the account associated with the contract \n| departmentId  | &lt;long&gt;<br /> | ID of the department to which the contract belongs \n| productId  | &lt;long&gt;<br /> | ID of the product associated with the contract \n| contractNumber  | &lt;string&gt;<br />max chars : 50 | Serial number of the contract \n| notificationAgentIds  | &lt;list&gt;<br /> | List of agents to be notified  \n| notifyBefore  | &lt;int&gt;<br /> | Number of days before endDate when notifications about contract expiry must be sent to the agents concerned  \n| startDate  | &lt;date&gt;<br /> | Date from which the contract is valid \n| endDate  | &lt;date&gt;<br /> | Date until which the contract is valid \n| ownerId  | &lt;long&gt;<br /> | ID of the contract owner \n| contractName  | &lt;string&gt;<br />max chars : 80 | Name of the contract \n| description  | &lt;string&gt;<br />max chars : 65535 | A short description of the contract \n| customFields  | &lt;list&gt;<br /> | User-defined fields associated with the contract \n| cf  | &lt;list&gt;<br /> | User-defined fields associated with the contract \n| sla  | &lt;list&gt;<br /> | SLA fields associated with the contract \n| account  | &lt;list&gt;<br /> | Account fields associated with the contract \n| product  | &lt;list&gt;<br /> | Product fields associated with the contract \n"
					},
					"response": [
						{
							"name": "Update a contract",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"associatedSLAId\" : \"10000000062047\",\n  \"cf\" : {\n    \"cf_mycustomfield1\" : \"Some Update Value\"\n  },\n  \"productId\" : null,\n  \"endDate\" : \"2019-09-15\",\n  \"departmentId\" : \"10000000013228\",\n  \"notifyBefore\" : \"5\",\n  \"description\" : \"My Description Updated\",\n  \"contractNumber\" : 9496,\n  \"ownerId\" : \"10000000012816\",\n  \"notificationAgentIds\" : [ \"10000000012816\" ],\n  \"accountId\" : \"10000000012985\",\n  \"contractName\" : \"My Updated Contract Name\",\n  \"startDate\" : \"2018-08-14\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/contracts/10000000078091",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contracts",
										"10000000078091"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"associatedSLAId\" : \"10000000062047\",\n  \"modifiedTime\" : \"2018-07-24T07:33:11.728Z\",\n  \"product\" : {\n    \"id\" : \"500000001290\",\n    \"productName\" : \"Desk\"\n  },\n  \"cf\" : {\n    \"cf_mycustomfield1\" : \"Some Update Value\"\n  },\n  \"productId\" : null,\n  \"endDate\" : \"2019-09-15\",\n  \"departmentId\" : \"10000000013228\",\n  \"notifyBefore\" : \"5\",\n  \"contractNumber\" : \"9496\",\n  \"description\" : \"My Description Updated\",\n  \"sla\" : {\n    \"name\" : \"Gold SLAs\",\n    \"id\" : \"5000000007671\"\n  },\n  \"ownerId\" : \"10000000012816\",\n  \"notificationAgentIds\" : [ \"10000000012816\" ],\n  \"accountId\" : \"10000000012985\",\n  \"createdBy\" : \"10000000012816\",\n  \"notifyOn\" : \"2019-09-10\",\n  \"createdTime\" : \"2018-07-24T07:31:57.000Z\",\n  \"contractName\" : \"My Updated Contract Name\",\n  \"modifiedBy\" : \"10000000012816\",\n  \"id\" : \"10000000082016\",\n  \"startDate\" : \"2018-08-14\",\n  \"account\" : {\n    \"website\" : \"https://www.zoho.com\",\n    \"accountName\" : \"Zoho\",\n    \"id\" : \"500000008909\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete contracts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contracts/moveToTrash",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contracts",
								"moveToTrash"
							]
						},
						"description": "This API moves contracts to the Recycle Bin of your help desk portal\n#### OAuth Scope\n- `Desk.settings.DELETE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| contractIds (required) | &lt;list&gt;<br /> | IDs of the contracts that you want to delete \n"
					},
					"response": [
						{
							"name": "Delete contracts",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contractIds\" : [ \"10000000014816\", \"1000000001243\", \"10000000018818\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/contracts/moveToTrash",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contracts",
										"moveToTrash"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Contracts help you organize your desk commitments, enabling you to deliver more professional and dedicated customer service. By defining contracts, you can determine the level of service to offer and set the contract period for an account or a product."
		},
		{
			"name": "Timetracking",
			"item": [
				{
					"name": "Create TimeTrackSettings",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/timeTrackSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"timeTrackSettings"
							]
						},
						"description": "This API adds a TimeTracking configuration to your helpdesk.\n#### OAuth Scope\n- `Desk.settings.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| isTimeTracking (required) | &lt;boolean&gt;<br /> | Time tracking refers to the process of recording the time agents take to resolve tickets. This information can be recorded manually or automatically, based on your organization's requirement and preference. APIs related to this endpoint help you configure the settings for automated time tracking. \n| depId (required) | &lt;long&gt;<br /> | ID of the department in which time tracking must be enabled or disabled. \n| isBillable  | &lt;boolean&gt;<br /> | Key that returns if the time tracked is billable or not. \n| billingType  | &lt;String&gt;<br /> | Type of billing configured. Values supported are `FIXED_COST_FOR_TICKETS` `FIXED_COST_FOR_AGENTS` `SPECIFIC_COST_PER_AGENT` and `SPECIFIC_COST_PER_PROFILE`  \n| fixedCost  | &lt;Double&gt;<br /> | Cost fixed for either billing category - by ticket or by agent. \n| agents  | &lt;list&gt;<br /> | List of agents in the department \n| profiles  | &lt;list&gt;<br /> | List of user profiles defined in the department \n| timerAction  | &lt;String&gt;<br /> | Action that the active timers in the department must perform. Values supported are `ADD` and `DISCARD` \n| activityPreference  | &lt;list&gt;<br /> | Activity preference(s) \n| ticketPreference  | &lt;list&gt;<br /> | Ticket preference(s) \n"
					},
					"response": [
						{
							"name": "Create TimeTrackSettings",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ticketPreference\" : {\n    \"autoTrackAction\" : {\n      \"fieldUpdate\" : true,\n      \"onChatComplete\" : true,\n      \"onRemoteAssist\" : true,\n      \"commentActions\" : true,\n      \"approvalActions\" : true,\n      \"sendReply\" : true,\n      \"manualDraft\" : true,\n      \"resolutionActions\" : true,\n      \"attachmentActions\" : true\n    },\n    \"isReviewTime\" : \"false\",\n    \"isAutoPause\" : \"true\",\n    \"isAutoTimer\" : \"true\",\n    \"isHideTimeTracking\" : \"false\"\n  },\n  \"billingType\" : \"SPECIFIC_COST_PER_AGENT\",\n  \"activityPreference\" : {\n    \"isTasksEnabled\" : \"true\",\n    \"trackMode\" : \"CONSECUTIVE\",\n    \"isEventsEnabled\" : \"true\",\n    \"canAutoTrackCalls\" : \"true\"\n  },\n  \"fixedCost\" : \"1000\",\n  \"profiles\" : [ {\n    \"cost\" : \"100\",\n    \"id\" : \"1\"\n  }, {\n    \"cost\" : \"200\",\n    \"id\" : \"2\"\n  } ],\n  \"depId\" : \"1892000000006907\",\n  \"isTimeTracking\" : \"true\",\n  \"isBillable\" : \"true\",\n  \"agents\" : [ {\n    \"cost\" : \"100\",\n    \"id\" : \"1\"\n  }, {\n    \"cost\" : \"200\",\n    \"id\" : \"2\"\n  } ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/timeTrackSettings",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"timeTrackSettings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"ticketPreference\" : {\n    \"autoTrackAction\" : {\n      \"fieldUpdate\" : true,\n      \"onChatComplete\" : true,\n      \"onRemoteAssist\" : true,\n      \"commentActions\" : true,\n      \"approvalActions\" : true,\n      \"sendReply\" : true,\n      \"manualDraft\" : true,\n      \"resolutionActions\" : true,\n      \"attachmentActions\" : true\n    },\n    \"isReviewTime\" : false,\n    \"isAutoPause\" : true,\n    \"isAutoTimer\" : true,\n    \"isHideTimeTracking\" : false\n  },\n  \"billingType\" : \"SPECIFIC_COST_PER_AGENT\",\n  \"activityPreference\" : {\n    \"isTasksEnabled\" : true,\n    \"trackMode\" : \"CONSECUTIVE\",\n    \"isEventsEnabled\" : true,\n    \"canAutoTrackCalls\" : true\n  },\n  \"fixedCost\" : \"1000\",\n  \"profiles\" : [ {\n    \"cost\" : \"100\",\n    \"id\" : \"1\"\n  }, {\n    \"cost\" : \"200\",\n    \"id\" : \"2\"\n  } ],\n  \"depId\" : \"1892000000006907\",\n  \"isTimeTracking\" : true,\n  \"isBillable\" : true,\n  \"agents\" : [ {\n    \"cost\" : \"100\",\n    \"id\" : \"1\"\n  }, {\n    \"cost\" : \"200\",\n    \"id\" : \"2\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Update TimeTrackSettings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/timeTrackSettings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"timeTrackSettings"
							]
						},
						"description": "This API updates an existing TimeTracking configuration.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| isTimeTracking  | &lt;boolean&gt;<br /> | Time tracking refers to the process of recording the time agents take to resolve tickets. This information can be recorded manually or automatically, based on your organization's requirement and preference. APIs related to this endpoint help you configure the settings for automated time tracking. \n| depId  | &lt;long&gt;<br /> | ID of the department in which time tracking must be enabled or disabled. \n| isBillable  | &lt;boolean&gt;<br /> | Key that returns if the time tracked is billable or not. \n| billingType  | &lt;String&gt;<br /> | Type of billing configured. Values supported are `FIXED_COST_FOR_TICKETS` `FIXED_COST_FOR_AGENTS` `SPECIFIC_COST_PER_AGENT` and `SPECIFIC_COST_PER_PROFILE`  \n| fixedCost  | &lt;Double&gt;<br /> | Cost fixed for either billing category - by ticket or by agent. \n| agents  | &lt;list&gt;<br /> | List of agents in the department \n| profiles  | &lt;list&gt;<br /> | List of user profiles defined in the department \n| timerAction  | &lt;String&gt;<br /> | Action that the active timers in the department must perform. Values supported are `ADD` and `DISCARD` \n| activityPreference  | &lt;list&gt;<br /> | Activity preference(s) \n| ticketPreference  | &lt;list&gt;<br /> | Ticket preference(s) \n"
					},
					"response": [
						{
							"name": "Update TimeTrackSettings",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ticketPreference\" : {\n    \"autoTrackAction\" : {\n      \"fieldUpdate\" : true,\n      \"onChatComplete\" : true,\n      \"onRemoteAssist\" : true,\n      \"commentActions\" : true,\n      \"approvalActions\" : true,\n      \"sendReply\" : true,\n      \"manualDraft\" : true,\n      \"resolutionActions\" : true,\n      \"attachmentActions\" : true\n    },\n    \"isReviewTime\" : \"false\",\n    \"isAutoPause\" : \"true\",\n    \"isAutoTimer\" : \"true\",\n    \"isHideTimeTracking\" : \"false\"\n  },\n  \"billingType\" : \"SPECIFIC_COST_PER_AGENT\",\n  \"activityPreference\" : {\n    \"isTasksEnabled\" : \"true\",\n    \"trackMode\" : \"CONSECUTIVE\",\n    \"isEventsEnabled\" : \"true\",\n    \"canAutoTrackCalls\" : \"true\"\n  },\n  \"fixedCost\" : \"1000\",\n  \"profiles\" : [ {\n    \"cost\" : \"100\",\n    \"id\" : \"1\"\n  }, {\n    \"cost\" : \"200\",\n    \"id\" : \"2\"\n  } ],\n  \"depId\" : \"1892000000006907\",\n  \"isTimeTracking\" : \"true\",\n  \"timerAction\" : \"ADD\",\n  \"isBillable\" : \"true\",\n  \"agents\" : [ {\n    \"cost\" : \"100\",\n    \"id\" : \"1\"\n  }, {\n    \"cost\" : \"200\",\n    \"id\" : \"2\"\n  } ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/timeTrackSettings",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"timeTrackSettings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"ticketPreference\" : {\n    \"autoTrackAction\" : {\n      \"fieldUpdate\" : true,\n      \"onChatComplete\" : true,\n      \"onRemoteAssist\" : true,\n      \"commentActions\" : true,\n      \"approvalActions\" : true,\n      \"sendReply\" : true,\n      \"manualDraft\" : true,\n      \"resolutionActions\" : true,\n      \"attachmentActions\" : true\n    },\n    \"isReviewTime\" : \"false\",\n    \"isAutoPause\" : \"true\",\n    \"isAutoTimer\" : \"true\",\n    \"isHideTimeTracking\" : \"false\"\n  },\n  \"billingType\" : \"SPECIFIC_COST_PER_AGENT\",\n  \"activityPreference\" : {\n    \"isTasksEnabled\" : \"true\",\n    \"trackMode\" : \"CONSECUTIVE\",\n    \"isEventsEnabled\" : \"true\",\n    \"canAutoTrackCalls\" : \"true\"\n  },\n  \"fixedCost\" : \"1000\",\n  \"profiles\" : [ {\n    \"cost\" : \"100\",\n    \"id\" : \"1\"\n  }, {\n    \"cost\" : \"200\",\n    \"id\" : \"2\"\n  } ],\n  \"depId\" : \"1892000000006907\",\n  \"isTimeTracking\" : \"true\",\n  \"isBillable\" : \"true\",\n  \"agents\" : [ {\n    \"cost\" : \"100\",\n    \"id\" : \"1\"\n  }, {\n    \"cost\" : \"200\",\n    \"id\" : \"2\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get TimeTrack Settings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/timeTrackSettings?depId=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"timeTrackSettings"
							],
							"query": [
								{
									"key": "depId",
									"value": "<long>\n",
									"description": "ID of the department"
								}
							]
						},
						"description": "This API fetches the details of the TimeTrack Settings configured in your helpdesk.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get TimeTrack Settings",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/timeTrackSettings",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"timeTrackSettings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"ticketPreference\" : {\n    \"autoTrackAction\" : {\n      \"fieldUpdate\" : true,\n      \"onChatComplete\" : true,\n      \"onRemoteAssist\" : true,\n      \"commentActions\" : true,\n      \"approvalActions\" : true,\n      \"sendReply\" : true,\n      \"manualDraft\" : true,\n      \"resolutionActions\" : true,\n      \"attachmentActions\" : true\n    },\n    \"isReviewTime\" : \"false\",\n    \"isAutoPause\" : \"true\",\n    \"isAutoTimer\" : \"true\",\n    \"isHideTimeTracking\" : \"false\"\n  },\n  \"billingType\" : \"SPECIFIC_COST_PER_AGENT\",\n  \"activityPreference\" : {\n    \"isTasksEnabled\" : \"true\",\n    \"trackMode\" : \"CONSECUTIVE\",\n    \"isEventsEnabled\" : \"true\",\n    \"canAutoTrackCalls\" : \"true\"\n  },\n  \"fixedCost\" : \"1000\",\n  \"profiles\" : [ {\n    \"cost\" : \"100\",\n    \"id\" : \"1\"\n  }, {\n    \"cost\" : \"200\",\n    \"id\" : \"2\"\n  } ],\n  \"depId\" : \"1892000000006907\",\n  \"isTimeTracking\" : \"true\",\n  \"isBillable\" : \"true\",\n  \"agents\" : [ {\n    \"cost\" : \"100\",\n    \"id\" : \"1\"\n  }, {\n    \"cost\" : \"200\",\n    \"id\" : \"2\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List history details of billing TimeTrack Settings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/timeTrackHistory?depId=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"timeTrackHistory"
							],
							"query": [
								{
									"key": "depId",
									"value": "<long>\n",
									"description": "ID of the department from which the history must be fetched."
								},
								{
									"key": "from",
									"value": "<int>\n",
									"description": "Index number, starting from which the events must be fetched.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\nrange : 1-50",
									"description": "Number of events to be fetched.",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Secondary information related to the time entry. Value supported is `owner`.",
									"disabled": true
								}
							]
						},
						"description": "This API fetches the history of changes made to the billing preferences in time tracking settings. The different events supported are BILLING_PREFERENCE_ENABLED, BILLING_PREFERENCE_DISABLED, BILLING_TYPE_SELECTED, BILLING_TYPE_CHANGED, FIXED_COST_ENTERED, FIXED_COST_EDITED, AGENT_ADDED, AGENT_COST_EDITED, AGENT_DELETED, PROFILE_ADDED, PROFILE_COST_EDITED, and PROFILE_DELETED.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List history details of billing TimeTrack Settings",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/timeTrackSettings/history?depId=15000000044059&include=owner",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"timeTrackSettings",
										"history"
									],
									"query": [
										{
											"key": "depId",
											"value": "15000000044059"
										},
										{
											"key": "include",
											"value": "owner"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"owner\" : [ {\n      \"photoURL\" : \"'https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166343&nps=404&exp=20'\",\n      \"name\" : \"meenakshi\"\n    } ],\n    \"modifiedTime\" : \"2018-02-19T12:53:49.000Z\",\n    \"agentId\" : \"15000000009148\",\n    \"name\" : \"AGENT_DELETED\",\n    \"modifiedBy\" : \"15000000009148\"\n  }, {\n    \"owner\" : {\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166891&nps=404&exp=600'\",\n      \"name\" : \"meenakshi\"\n    },\n    \"modifiedTime\" : \"2018-02-19T12:53:49.000Z\",\n    \"agentId\" : \"15000000009321\",\n    \"cost\" : \"100\",\n    \"name\" : \"AGENT_ADDED\",\n    \"modifiedBy\" : \"15000000009148\",\n    \"modifiedAgent\" : {\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166343&nps=404&exp=20\",\n      \"name\" : \"meenakshi\"\n    }\n  }, {\n    \"owner\" : {\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166343&nps=404&exp=20\",\n      \"name\" : \"meenakshi\"\n    },\n    \"modifiedTime\" : \"2018-02-19T12:45:17.000Z\",\n    \"agentId\" : \"15000000009148\",\n    \"cost\" : \"100\",\n    \"name\" : \"AGENT_ADDED\",\n    \"modifiedBy\" : \"15000000009148\",\n    \"modifiedAgent\" : {\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166343&nps=404&exp=20\",\n      \"name\" : \"meenakshi\"\n    }\n  }, {\n    \"owner\" : {\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166343&nps=404&exp=20\",\n      \"name\" : \"meenakshi\"\n    },\n    \"newValue\" : \"SPECIFIC_COST_PER_AGENT\",\n    \"modifiedTime\" : \"2018-02-19T12:45:17.000Z\",\n    \"name\" : \"BILLING_TYPE_CHANGED\",\n    \"modifiedBy\" : \"15000000009148\",\n    \"oldValue\" : \"FIXED_COST_FOR_TICKETS\",\n    \"modifiedAgent\" : null\n  }, {\n    \"owner\" : {\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166343&nps=404&exp=20\",\n      \"name\" : \"meenakshi\"\n    },\n    \"modifiedTime\" : \"2018-02-09T09:09:10.000Z\",\n    \"name\" : \"BILLING_PREFERENCE_ENABLED\",\n    \"modifiedBy\" : \"15000000009148\"\n  }, {\n    \"owner\" : {\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166343&nps=404&exp=20\",\n      \"name\" : \"meenakshi\"\n    },\n    \"newValue\" : null,\n    \"modifiedTime\" : \"2018-02-09T09:08:57.000Z\",\n    \"name\" : \"FIXED_COST_ENTERED\",\n    \"modifiedBy\" : \"15000000009148\",\n    \"oldValue\" : null,\n    \"modifiedAgent\" : null\n  }, {\n    \"owner\" : {\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166343&nps=404&exp=20\",\n      \"name\" : \"meenakshi\"\n    },\n    \"newValue\" : \"FIXED_COST_FOR_TICKETS\",\n    \"modifiedTime\" : \"2018-02-09T09:08:57.000Z\",\n    \"name\" : \"BILLING_TYPE_SELECTED\",\n    \"modifiedBy\" : \"15000000009148\",\n    \"oldValue\" : null,\n    \"modifiedAgent\" : null\n  }, {\n    \"owner\" : {\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166343&nps=404&exp=20\",\n      \"name\" : \"meenakshi\"\n    },\n    \"modifiedTime\" : \"2018-02-09T07:50:01.000Z\",\n    \"name\" : \"BILLING_PREFERENCE_DISABLED\",\n    \"modifiedBy\" : \"15000000009148\",\n    \"modifiedAgent\" : null\n  }, {\n    \"owner\" : {\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166343&nps=404&exp=20\",\n      \"name\" : \"meenakshi\"\n    },\n    \"newValue\" : \"1300\",\n    \"modifiedTime\" : \"2018-02-09T05:13:00.000Z\",\n    \"name\" : \"FIXED_COST_ENTERED\",\n    \"modifiedBy\" : \"15000000009148\",\n    \"oldValue\" : null,\n    \"modifiedAgent\" : null\n  }, {\n    \"owner\" : {\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=5166343&nps=404&exp=20\",\n      \"name\" : \"meenakshi\"\n    },\n    \"newValue\" : \"FIXED_COST_FOR_AGENTS\",\n    \"modifiedTime\" : \"2018-02-09T05:13:00.000Z\",\n    \"name\" : \"BILLING_TYPE_CHANGED\",\n    \"modifiedBy\" : \"15000000009148\",\n    \"oldValue\" : \"FIXED_COST_FOR_TICKETS\",\n    \"modifiedAgent\" : null\n  } ]\n}"
						}
					]
				}
			],
			"description": "Time tracking refers to the process of recording the time agents take to resolve tickets. This information can be recorded manually or automatically, based on your organization's requirement and preference. APIs related to this endpoint help you configure the settings for automated time tracking."
		},
		{
			"name": "Views",
			"item": [
				{
					"name": "List Views",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/views?module=<string>\nmax chars : 100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"views"
							],
							"query": [
								{
									"key": "module",
									"value": "<string>\nmax chars : 100",
									"description": "Allowed values are : `tickets`, `tasks`,`contacts`, `accounts`,`contacts`, `products` ,`activities`,`calls`,`events`."
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "Allowed values are : `Valid Department Id`.",
									"disabled": true
								}
							]
						},
						"description": "This API lists the different views configured for a specific module or for all modules in your help desk portal. Values allowed are: Tickets, Contacts, Accounts, Tasks, Products, and Contracts.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List Views",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/views?module=tickets&departmentId=981212321312321",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"views"
									],
									"query": [
										{
											"key": "module",
											"value": "tickets"
										},
										{
											"key": "departmentId",
											"value": "981212321312321"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"isCustomView\" : false,\n    \"name\" : \"All Tasks\",\n    \"id\" : \"4000000007834\"\n  }, {\n    \"isCustomView\" : false,\n    \"name\" : \"My Tasks\",\n    \"id\" : \"4000000007836\"\n  }, {\n    \"isCustomView\" : false,\n    \"name\" : \"My Open Tasks\",\n    \"id\" : \"4000000007838\"\n  }, {\n    \"isCustomView\" : false,\n    \"name\" : \"Completed Tasks\",\n    \"id\" : \"4000000007840\"\n  }, {\n    \"isCustomView\" : false,\n    \"name\" : \"Open Tasks\",\n    \"id\" : \"4000000007842\"\n  }, {\n    \"isCustomView\" : false,\n    \"name\" : \"Overdue Tasks\",\n    \"id\" : \"4000000007844\"\n  }, {\n    \"isCustomView\" : false,\n    \"name\" : \"Todays Tasks\",\n    \"id\" : \"4000000007846\"\n  }, {\n    \"isCustomView\" : false,\n    \"name\" : \"Tomorrows Tasks\",\n    \"id\" : \"4000000007848\"\n  }, {\n    \"isCustomView\" : false,\n    \"name\" : \"Today+Overdue Tasks\",\n    \"id\" : \"4000000007850\"\n  }, {\n    \"isCustomView\" : false,\n    \"name\" : \"Next7days+Overdue Tasks\",\n    \"id\" : \"4000000007852\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Add Star View",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/views/:view_id/star",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"views",
								":view_id",
								"star"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department in which the view(s) is (are) configured.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "view_id"
								}
							]
						},
						"description": "This API stars a view, enabling quick access to the view.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Add Star View",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/views/4000000007824/star?departmentId=981212321312321",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"views",
										"4000000007824",
										"star"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "981212321312321"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove Star View",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/starredViews/:view_id/unstar",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"starredViews",
								":view_id",
								"unstar"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "Allowed values are : `Valid Department Id`.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "view_id"
								}
							]
						},
						"description": "This API unstars a view, disabling quick access to the view.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Remove Star View",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/starredViews/4000000007824/unstar?departmentId=981212321312321",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"starredViews",
										"4000000007824",
										"unstar"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "981212321312321"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Starred Views",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/starredViews?module=<string>\nmax chars : 100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"starredViews"
							],
							"query": [
								{
									"key": "module",
									"value": "<string>\nmax chars : 100",
									"description": "Module associated with the view. Values allowed are:`tickets`, `tasks`, `contacts`, `accounts`, `activities`, `calls` or `events`."
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department in which the view(s) is (are) configured.",
									"disabled": true
								}
							]
						},
						"description": "This API lists the starred views in a module. Number of resources in the starred view is displayed only for the Tickets module.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List Starred Views",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/starredViews?module=tickets&departmentId=4000000007123",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"starredViews"
									],
									"query": [
										{
											"key": "module",
											"value": "tickets"
										},
										{
											"key": "departmentId",
											"value": "4000000007123"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"starredViews\" : [ {\n    \"isCustomView\" : false,\n    \"name\" : \"All Tickets\",\n    \"count\" : \"40\",\n    \"id\" : \"4000000007834\"\n  }, {\n    \"isCustomView\" : false,\n    \"name\" : \"Open Tickets\",\n    \"count\" : \"22\",\n    \"id\" : \"4000000007844\"\n  } ],\n  \"module\" : \"tickets\"\n}"
						}
					]
				},
				{
					"name": "Starred Views Reorder",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/starredViews/order?module=<string>\nmax chars : 100&starredViewIds=<list>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"starredViews",
								"order"
							],
							"query": [
								{
									"key": "module",
									"value": "<string>\nmax chars : 100",
									"description": "Module associated with the view. Values allowed are: `tickets`, `tasks`, `contacts`, `accounts`, `contacts`, `activities`, `calls` or `events`."
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department in which the view(s) is (are) configured.",
									"disabled": true
								},
								{
									"key": "starredViewIds",
									"value": "<list>\n",
									"description": "IDs of the starred views."
								}
							]
						},
						"description": "This API helps reorder the starred views in a module.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Starred Views Reorder",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"starredViewIds\" : [ \"4000000007808\", \"4000000007810\", \"4000000007818\", \"4000000007820\", \"4000000007828\", \"4000000007830\", \"4000000007848\", \"4000000007850\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/starredViews/order?departmentId=981212321312321&module=tickets",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"starredViews",
										"order"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "981212321312321"
										},
										{
											"key": "module",
											"value": "tickets"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Last Accessed View",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/lastAccessedView?module=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"lastAccessedView"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department in which the view(s) is (are) configured.",
									"disabled": true
								},
								{
									"key": "module",
									"value": "<String>\n",
									"description": "Module associated with the view. Values allowed are:`tickets`, `tasks`, `contacts`, `accounts`, `activities`, `calls` or `events`."
								}
							]
						},
						"description": "This API fetches the view last accessed by the user in the module and department specified in the request.\n#### OAuth Scope\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Last Accessed View",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/lastAccessedView?departmentId=4000000007069&module=tickets",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"lastAccessedView"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "4000000007069"
										},
										{
											"key": "module",
											"value": "tickets"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : {\n    \"name\" : \"My Records\",\n    \"id\" : \"4000000008143\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update Last Accessed View",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/lastAccessedView/([0-9]+)",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"lastAccessedView",
								"([0-9]+)"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department in which the view(s) is (are) configured.",
									"disabled": true
								}
							]
						},
						"description": "This API updates the view last accessed by the user in the module and department specified in the request.\n#### OAuth Scope\n- `Desk.basic.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Update Last Accessed View",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/lastAccessedView/4000000008143?departmentId=4000000007069",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"lastAccessedView",
										"4000000008143"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "4000000007069"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Views are customized displays of help desk data, which help customer service agents effectively organize their everyday work and deliver better customer service."
		},
		{
			"name": "Search",
			"item": [
				{
					"name": "Search across modules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/search?searchStr=:searchStr&departmentId={departmentId}&from={from}&limit={limit}&sortBy={sortField}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"search"
							],
							"query": [
								{
									"key": "searchStr",
									"value": "<String>\n",
									"description": "Keyword or phrase to search",
									"disabled": true
								},
								{
									"key": "module",
									"value": "<String>\n",
									"description": "Module to search in: `tickets`, `accounts`, `contacts` or `tasks`. The default response includes all modules.",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the resource must be fetched",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<int>\ndefault : 0,",
									"description": "Index number, starting from which the resources must be searched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 10,",
									"description": "Number of resources to return in the search result",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<String>\n",
									"description": "Sort by a specific attribute: `relevance` or `modifiedTime`",
									"disabled": true
								}
							]
						},
						"description": "This API returns information from all modules or a specific module, based on the value of the module query param.\n#### OAuth Scope\n- `Desk.search.READ`\n- `Desk.tickets.READ`\n- `Desk.contacts.READ`\n- `Desk.tasks.READ`\n\n"
					},
					"response": [
						{
							"name": "Search across modules",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/search?searchStr=zylker&from=0&limit=10&sortBy=modifiedTime",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"search"
									],
									"query": [
										{
											"key": "searchStr",
											"value": "zylker"
										},
										{
											"key": "from",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "sortBy",
											"value": "modifiedTime"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"subject\" : \"Zylker ticket\",\n    \"departmentId\" : \"4000000007043\",\n    \"dueDate\" : null,\n    \"channel\" : \"Phone\",\n    \"onholdTime\" : null,\n    \"sharedDepartments\" : [ ],\n    \"closedTime\" : null,\n    \"number\" : \"104\",\n    \"contact\" : {\n      \"phone\" : null,\n      \"mobile\" : \"9876543210\",\n      \"name\" : \"Stephen\",\n      \"id\" : \"4000000013012\",\n      \"type\" : null,\n      \"email\" : null,\n      \"account\" : {\n        \"website\" : null,\n        \"name\" : \"Zylker Accounts\",\n        \"id\" : \"4000000008850\"\n      }\n    },\n    \"createdTime\" : \"2016-06-27T07:22:52.000Z\",\n    \"id\" : \"4000000016009\",\n    \"department\" : {\n      \"name\" : \"Testing\",\n      \"id\" : \"4000000007043\"\n    },\n    \"email\" : null,\n    \"customerResponseTime\" : \"2016-06-27T07:22:52.117Z\",\n    \"cf\" : {\n      \"cf_featureRequest\" : false,\n      \"cf_region\" : \"Asia\"\n    },\n    \"productId\" : \"4000000013043\",\n    \"contactId\" : \"4000000013012\",\n    \"module\" : \"tickets\",\n    \"threadCount\" : \"0\",\n    \"team\" : {\n      \"name\" : \"TestingTeam\",\n      \"id\" : \"4000000007235\"\n    },\n    \"priority\" : null,\n    \"assigneeId\" : \"4000000008692\",\n    \"commentCount\" : \"0\",\n    \"phone\" : null,\n    \"assignee\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"jade\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=10657727\",\n      \"emailId\" : \"jade@zylker.com\",\n      \"id\" : \"4000000008692\",\n      \"zuid\" : \"10657727\"\n    },\n    \"status\" : \"Open\"\n  }, {\n    \"cf\" : {\n      \"cf_followUpDate\" : \"2016-07-07T19:30:00.000Z\",\n      \"cf_severity\" : \"High\"\n    },\n    \"ticket\" : null,\n    \"subject\" : \"Wifi adapter not working in zylker\",\n    \"completedTime\" : null,\n    \"module\" : \"tasks\",\n    \"dueDate\" : \"2016-06-27T19:30:00.000Z\",\n    \"description\" : null,\n    \"ownerId\" : \"4000000008692\",\n    \"priority\" : \"High\",\n    \"isCommented\" : false,\n    \"createdBy\" : \"4000000008692\",\n    \"contact\" : null,\n    \"createdTime\" : \"2016-06-27T06:39:48.000Z\",\n    \"id\" : \"4000000013065\",\n    \"assignee\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"jade\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=10657727\",\n      \"emailId\" : \"jade@zylker.com\",\n      \"id\" : \"5000000009116\",\n      \"zuid\" : \"10657727\"\n    },\n    \"category\" : null,\n    \"department\" : {\n      \"name\" : \"Testing\",\n      \"id\" : \"5000000007235\"\n    },\n    \"ticketId\" : null,\n    \"status\" : \"Not Started\"\n  }, {\n    \"website\" : null,\n    \"phone\" : null,\n    \"accountName\" : \"Zylker India\",\n    \"customFields\" : {\n      \"city\" : \"Delhi\",\n      \"state\" : \"India\"\n    },\n    \"module\" : \"accounts\",\n    \"id\" : \"4000000013027\",\n    \"email\" : null\n  }, {\n    \"lastName\" : \"Stephen\",\n    \"accountId\" : \"4000000008850\",\n    \"firstName\" : \"Henry\",\n    \"photoURL\" : null,\n    \"phone\" : null,\n    \"customFields\" : {\n      \"customerSince\" : \"2011\",\n      \"editionUsed\" : \"Professional\"\n    },\n    \"module\" : \"contacts\",\n    \"fullName\" : \"Henry Stephen\",\n    \"id\" : \"4000000013012\",\n    \"ownerId\" : \"4000000008692\",\n    \"email\" : null,\n    \"account\" : {\n      \"website\" : null,\n      \"name\" : \"Zylker India\",\n      \"id\" : \"4000000008850\"\n    }\n  } ],\n  \"count\" : {\n    \"tickets\" : 1,\n    \"accounts\" : 1,\n    \"tasks\" : 1,\n    \"contacts\" : 1\n  }\n}"
						}
					]
				},
				{
					"name": "Tickets Search API",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								"search"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 0,",
									"description": "From index, starts from 0",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 10,",
									"description": "No. of entities to fetch",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the entity must be fetched. if not passed then searches in permitted departments <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "id",
									"value": "<long>\n",
									"description": "ID of the ticket <br>`exact match`<br> ",
									"disabled": true
								},
								{
									"key": "ticketNumber",
									"value": "<String>\n",
									"description": "Serial number of the ticket in the help desk   <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "subject",
									"value": "<String>\n",
									"description": "subject of the ticket in the help desk  <br>`wildcard search`<br>",
									"disabled": true
								},
								{
									"key": "description",
									"value": "<String>\n",
									"description": "description of the ticket in the help desk  <br>`wildcard search`<br>",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<String>\n",
									"description": "Status of the ticket. Includes the custom statuses that exist in your help desk  <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "priority",
									"value": "<String>\n",
									"description": "Priority of the ticket   <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "email",
									"value": "<String>\n",
									"description": "Email ID in the ticket    <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "phone",
									"value": "<String>\n",
									"description": "Phone number in the ticket   <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "channel",
									"value": "<String>\n",
									"description": "Channel through which the ticket was received  <br>`exact match`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "category",
									"value": "<String>\n",
									"description": "Category in the ticket    <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "assigneeId",
									"value": "<long>\n",
									"description": "ID of the agent assigned to resolve the ticket  <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "contactId",
									"value": "<long>\n",
									"description": "ID of the contact who raised the ticket <br>`exact match`<br> ",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "<long>\n",
									"description": "ID of the account associated with the ticket <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "productId",
									"value": "<long>\n",
									"description": "ID of the product associated with the ticket <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "contactName",
									"value": "<String>\n",
									"description": "Name of the contact who raised the ticket <br>`wildcard search`<br>",
									"disabled": true
								},
								{
									"key": "accountName",
									"value": "<String>\n",
									"description": "Name of the account associated with the ticket <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "productName",
									"value": "<String>\n",
									"description": "Name of the product associated with the ticket <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "tag",
									"value": "<String>\n",
									"description": "Tag in the ticket <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "_all",
									"value": "<String>\n",
									"description": "Search throughout the ticket <br>`wildcard search`<br>",
									"disabled": true
								},
								{
									"key": "customField1",
									"value": "<String>\n",
									"description": "Custom field in the ticket <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField2",
									"value": "<String>\n",
									"description": "Custom field in the ticket <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField3",
									"value": "<String>\n",
									"description": "Custom field in the ticket <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField4",
									"value": "<String>\n",
									"description": "Custom field in the ticket <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField5",
									"value": "<String>\n",
									"description": "Custom field in the ticket <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField6",
									"value": "<String>\n",
									"description": "Custom field in the ticket <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField7",
									"value": "<String>\n",
									"description": "Custom field in the ticket <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField8",
									"value": "<String>\n",
									"description": "Custom field in the ticket <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField9",
									"value": "<String>\n",
									"description": "Custom field in the ticket <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField10",
									"value": "<String>\n",
									"description": "Custom field in the ticket <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customerResponseTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters tickets in which customer responses were recorded in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, customerResponseTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z2017-11-05T13:15:30.000Z,2018-09-05T13:15:30.000Z",
									"disabled": true
								},
								{
									"key": "createdTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters tickets created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								},
								{
									"key": "modifiedTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters tickets modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								},
								{
									"key": "dueDateRange",
									"value": "<timestamp>\n",
									"description": "Key that filters tickets due in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, dueDateRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<String>\n",
									"description": "SortBy can be: <br>`relevance`,<br> <br>`modifiedTime`,<br> <br>`createdTime`,<br>  <br>`customerResponseTime`<br>",
									"disabled": true
								}
							]
						},
						"description": "This API searches for tickets in your help desk. The values can be given comma separated, which denotes the search on the field is done using either of the values given.<br/><br/>Zoho Desk APIs support two types of search:exact match and wildcard match.<br/>exact match returns resources only if the value passed exactly matches with a resource in the help desk.<br/>wildcard match returns resources even if the value passed partially matches with a resource in the help desk.<br/>To perform wildcard match, append an asterisk (*) after the value to search.<br/><br/>CustomField param Example:<br/>customField1=cf_modelName:F3*<br/>customField2=cf_phone:902*<br/>customField3=cf_permanentAddress: Wall Street*<br/><br/>Note:<br/>wildcard match will not be available for the custom fields that are not of type string<br/>Wildcard character question mark (?) is not supported<br/>mobile and phone fields supports asterisk (*) at the beginning<br/><br/>Urlencoded Example:<br/>customField1=cf_modelName%3AF3*<br/>customField2=cf_phone%3A902*<br/>customField3=cf_permanentAddress%3AWall%20Street*<br/>For empty check: email=%24%7Bempty%7D\n#### OAuth Scope\n- `Desk.search.READ`\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Tickets Search API",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/search?limit=1&subject=analysis*",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"search"
									],
									"query": [
										{
											"key": "limit",
											"value": "1"
										},
										{
											"key": "subject",
											"value": "analysis*"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2016-06-21T13:16:14.000Z\",\n    \"ticketNumber\" : \"101\",\n    \"subCategory\" : \"Sub General\",\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : \"2016-06-21T16:16:16.000Z\",\n    \"departmentId\" : \"1892000000006907\",\n    \"isRead\" : false,\n    \"channel\" : \"FORUMS\",\n    \"onholdTime\" : null,\n    \"description\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"resolution\" : null,\n    \"sharedDepartments\" : [ {\n      \"name\" : \"Sample Department Name\",\n      \"id\" : \"1892000000006909\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"name\" : \"Sample Department Name\",\n      \"id\" : \"1892000000006911\",\n      \"type\" : \"READ_ONLY\"\n    } ],\n    \"closedTime\" : null,\n    \"isOverDue\" : false,\n    \"contact\" : {\n      \"lastName\" : \"Carol\",\n      \"firstName\" : \"Lucas\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : \"9876543456\",\n      \"id\" : \"1892000000042032\",\n      \"type\" : null,\n      \"email\" : \"carol@zylker.com\",\n      \"account\" : {\n        \"website\" : \"www.desk.com\",\n        \"accountName\" : \"desk Account\",\n        \"id\" : \"1892000000975382\"\n      }\n    },\n    \"createdTime\" : \"2013-11-04T11:21:07.000Z\",\n    \"modifiedBy\" : \"52338000000043001\",\n    \"id\" : \"1892000000042034\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"carol@zylker.com\",\n    \"customerResponseTime\" : \"2013-11-04T11:21:07.912Z\",\n    \"product\" : null,\n    \"cf\" : {\n      \"cf_permanentaddress\" : null,\n      \"cf_dateofpurchase\" : null,\n      \"cf_phone\" : null,\n      \"cf_numberofitems\" : null,\n      \"cf_url\" : null,\n      \"cf_secondaryemail\" : null,\n      \"cf_severitypercentage\" : \"0.0\",\n      \"cf_modelname\" : \"F3 2017\"\n    },\n    \"productId\" : null,\n    \"contactId\" : \"1892000000042032\",\n    \"threadCount\" : \"121\",\n    \"lastThread\" : {\n      \"channel\" : \"FEEDBACK\",\n      \"isDraft\" : false,\n      \"isForward\" : false,\n      \"direction\" : \"in\"\n    },\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\"\n    },\n    \"priority\" : \"High\",\n    \"classification\" : null,\n    \"assigneeId\" : \"1892000000056007\",\n    \"commentCount\" : \"1\",\n    \"phone\" : \"1 888 900 9646\",\n    \"createdBy\" : \"52338000000043001\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"teamId\" : \"8920000000069071\",\n    \"isEscalated\" : false,\n    \"isSpam\" : false,\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo?orgId=298902\",\n      \"emailId\" : \"jack@zylker.com\",\n      \"id\" : \"1892000000056007\",\n      \"zuid\" : \"640954748\"\n    },\n    \"category\" : \"general\",\n    \"status\" : \"Open\"\n  } ],\n  \"count\" : 1\n}"
						}
					]
				},
				{
					"name": "Search accounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/accounts/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"accounts",
								"search"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 0,",
									"description": "From index, starts from 0",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 10,",
									"description": "No. of entities to fetch",
									"disabled": true
								},
								{
									"key": "id",
									"value": "<long>\n",
									"description": "ID of the account <br>`exact match`<br> ",
									"disabled": true
								},
								{
									"key": "accountName",
									"value": "<String>\n",
									"description": "Name of the account <br>`wildcard search`<br>",
									"disabled": true
								},
								{
									"key": "_all",
									"value": "<String>\n",
									"description": "Search throughout the account <br>`wildcard search`<br>",
									"disabled": true
								},
								{
									"key": "customField1",
									"value": "<String>\n",
									"description": "Custom field in the account <br>`wildcard search`<br> e.g customField1=cf_activeAccount:true <br>`empty check`<br> e.g customField1=cf_activeAccount:${empty} <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField2",
									"value": "<String>\n",
									"description": "Custom field in the account <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br> e.g customField2=cf_activeAccount:${notempty}",
									"disabled": true
								},
								{
									"key": "customField3",
									"value": "<String>\n",
									"description": "Custom field in the account <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField4",
									"value": "<String>\n",
									"description": "Custom field in the account <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField5",
									"value": "<String>\n",
									"description": "Custom field in the account <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField6",
									"value": "<String>\n",
									"description": "Custom field in the account <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField7",
									"value": "<String>\n",
									"description": "Custom field in the account <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField8",
									"value": "<String>\n",
									"description": "Custom field in the account <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField9",
									"value": "<String>\n",
									"description": "Custom field in the account <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField10",
									"value": "<String>\n",
									"description": "Custom field in the account <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "createdTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters accounts created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								},
								{
									"key": "modifiedTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters accounts modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<String>\n",
									"description": "SortBy can be: <br>`relevance`,<br>  <br>`modifiedTime`,<br>  <br>`createdTime`,<br>  <br>`accountName`<br>",
									"disabled": true
								}
							]
						},
						"description": "This API searches for accounts in your help desk portal.\n#### OAuth Scope\n- `Desk.search.READ`\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "Search accounts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/search?limit=1&accountName=Zylker",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"search"
									],
									"query": [
										{
											"key": "limit",
											"value": "1"
										},
										{
											"key": "accountName",
											"value": "Zylker"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"owner\" : {\n      \"firstName\" : \"Twin\",\n      \"lastName\" : \"john\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/52338000000691001/photo?t=user&ID=10657727\",\n      \"emailId\" : \"jade@zylker.com\",\n      \"id\" : \"3263000000057001\",\n      \"zuid\" : \"10657727\"\n    },\n    \"country\" : \"USA\",\n    \"modifiedTime\" : \"2015-03-02T14:49:18.000Z\",\n    \"website\" : \"www.zylker.com\",\n    \"code\" : \"3211\",\n    \"cf\" : {\n      \"cf_contactcount\" : \"1\"\n    },\n    \"accountName\" : \"Zylker\",\n    \"city\" : null,\n    \"description\" : null,\n    \"industry\" : \"Automation\",\n    \"ownerId\" : \"3263000000057001\",\n    \"phone\" : \"6218129190\",\n    \"street\" : null,\n    \"annualrevenue\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n    \"state\" : null,\n    \"id\" : \"3263000000074571\",\n    \"fax\" : \"+1 444 8656 8732\",\n    \"email\" : \"support@zylker.com\"\n  } ],\n  \"count\" : 1\n}"
						}
					]
				},
				{
					"name": "Search Contacts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contacts/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contacts",
								"search"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 0,",
									"description": "From index, starts from 0",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 10,",
									"description": "No. of entities to fetch",
									"disabled": true
								},
								{
									"key": "id",
									"value": "<long>\n",
									"description": "ID of the contact <br>`exact match`<br> ",
									"disabled": true
								},
								{
									"key": "fullName",
									"value": "<String>\n",
									"description": "Full name of the contact <br>`wildcard search`<br>",
									"disabled": true
								},
								{
									"key": "firstName",
									"value": "<String>\n",
									"description": "First name of the contact <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "lastName",
									"value": "<String>\n",
									"description": "Last name of the contact <br>`wildcard search`<br>",
									"disabled": true
								},
								{
									"key": "email",
									"value": "<String>\n",
									"description": "Email ID of the contact <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "phone",
									"value": "<String>\n",
									"description": "Phone number of the contact  <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "mobile",
									"value": "<String>\n",
									"description": "Mobile number of the contact  <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "accountName",
									"value": "<String>\n",
									"description": "Name of the account associated with the Contact  <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "_all",
									"value": "<String>\n",
									"description": "Search throughout the contact <br>`wildcard search`<br>",
									"disabled": true
								},
								{
									"key": "customField1",
									"value": "<String>\n",
									"description": "Custom field in the Contact <br>`wildcard search`<br> e.g customField1=cf_mappedWithAccount:true <br>`empty check`<br> e.g customField1=cf_mappedWithAccount:${empty} <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField2",
									"value": "<String>\n",
									"description": "Custom field in the contact <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br> e.g customField2=cf_mappedWithAccount:${notempty}",
									"disabled": true
								},
								{
									"key": "customField3",
									"value": "<String>\n",
									"description": "Custom field in the contact <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField4",
									"value": "<String>\n",
									"description": "Custom field in the contact <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField5",
									"value": "<String>\n",
									"description": "Custom field in the contact <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField6",
									"value": "<String>\n",
									"description": "Custom field in the contact <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField7",
									"value": "<String>\n",
									"description": "Custom field in the contact <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField8",
									"value": "<String>\n",
									"description": "Custom field in the contact <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField9",
									"value": "<String>\n",
									"description": "Custom field in the contact <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField10",
									"value": "<String>\n",
									"description": "Custom field in the contact <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "createdTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters contacts created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								},
								{
									"key": "modifiedTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters contacts modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<String>\n",
									"description": "SortBy can be: <br>`relevance`,<br>  <br>`modifiedTime`,<br>  <br>`createdTime`,<br>  <br>`lastName`,<br>  <br>`firstName`<br>",
									"disabled": true
								}
							]
						},
						"description": "This API searches for contacts in your help desk portal.\n#### OAuth Scope\n- `Desk.search.READ`\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "Search Contacts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/search?limit=1&lastName=Lawrence",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"search"
									],
									"query": [
										{
											"key": "limit",
											"value": "1"
										},
										{
											"key": "lastName",
											"value": "Lawrence"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"lastName\" : \"Lawrence\",\n    \"modifiedTime\" : \"2016-05-04T09:57:17.000Z\",\n    \"country\" : null,\n    \"secondaryEmail\" : null,\n    \"city\" : null,\n    \"description\" : null,\n    \"ownerId\" : \"1892000000042001\",\n    \"type\" : null,\n    \"title\" : null,\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/contacts/1892000000042032/photo\",\n    \"twitter\" : null,\n    \"street\" : null,\n    \"createdTime\" : \"2013-11-04T11:21:07.000Z\",\n    \"isEndUser\" : \"false\",\n    \"zohoCRMContact\" : {\n      \"id\" : \"5000000014010\",\n      \"type\" : \"contacts_leads\"\n    },\n    \"customerHappiness\" : {\n      \"badPercentage\" : \"22\",\n      \"okPercentage\" : \"31\",\n      \"goodPercentage\" : \"47\"\n    },\n    \"state\" : null,\n    \"id\" : \"1892000000042032\",\n    \"email\" : \"lawrence@zylker.com\",\n    \"zip\" : null,\n    \"owner\" : {\n      \"firstName\" : \"Twin\",\n      \"lastName\" : \"john\",\n      \"photoURL\" : null,\n      \"emailId\" : \"lawrence@zylker.com\",\n      \"id\" : \"1892000000042001\",\n      \"zuid\" : \"14345345\"\n    },\n    \"cf\" : {\n      \"cf_permanentaddress\" : null,\n      \"cf_lastcontactedon\" : null\n    },\n    \"facebook\" : null,\n    \"mobile\" : null,\n    \"accountId\" : \"1892000000975382\",\n    \"firstName\" : \"Jennifer\",\n    \"phone\" : \"1 888 900 9646\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"account\" : {\n      \"website\" : null,\n      \"accountName\" : \"Zylker\",\n      \"id\" : \"1892000000975382\"\n    }\n  } ],\n  \"count\" : 1\n}"
						}
					]
				},
				{
					"name": "Article Search API",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/articles/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"articles",
								"search"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 0,",
									"description": "From index, starts from 0",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 10,",
									"description": "No. of entities to fetch",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the entity must be fetched. if not passed then searches in permitted departments <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "id",
									"value": "<long>\n",
									"description": "ID of the articles <br>`exact match`<br> ",
									"disabled": true
								},
								{
									"key": "title",
									"value": "<String>\n",
									"description": "title of the help article <br>`wildcard search`<br>",
									"disabled": true
								},
								{
									"key": "categoryName",
									"value": "<String>\n",
									"description": "Name of the Category <br>`wildcard search`<br>",
									"disabled": true
								},
								{
									"key": "categoryId",
									"value": "<long>\n",
									"description": "ID of the Category ",
									"disabled": true
								},
								{
									"key": "tag",
									"value": "<String>\n",
									"description": "Tag in the articles <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "_all",
									"value": "<String>\n",
									"description": "Key that includes all article details for the search <br>`wildcard search`<br>",
									"disabled": true
								},
								{
									"key": "createdTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters articles created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								},
								{
									"key": "modifiedTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters articles modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<String>\n",
									"description": "SortBy can be: <br>`relevance`,<br>  <br>`modifiedTime`,<br>  <br>`createdTime`<br>",
									"disabled": true
								}
							]
						},
						"description": "This API searches for help articles in your help desk. The values can be given comma separated, which denotes the search on the field is done using either of the values given.<br/>Zoho Desk APIs support two types of search:exact match and wildcard match.<br/>exact match returns resources only if the value passed exactly matches with a resource in the help desk.<br/>wildcard match returns resources even if the value passed partially matches with a resource in the help desk.<br/>To perform wildcard match, append an asterisk (*) after the value to search.\n#### OAuth Scope\n- `Desk.search.READ`\n- `Desk.articles.READ`\n\n"
					},
					"response": [
						{
							"name": "Article Search API",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/search?limit=1&title=Knowledge",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"search"
									],
									"query": [
										{
											"key": "limit",
											"value": "1"
										},
										{
											"key": "title",
											"value": "Knowledge"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"summary\" : \"Help articles are vital resources in user education. They are the first building blocks of an effective self-service setup.\",\n    \"modifiedTime\" : \"2018-07-16T06:48:08.000Z\",\n    \"latestVersionStatus\" : \"Published\",\n    \"author\" : {\n      \"photoURL\" : null,\n      \"name\" : \"HIll\",\n      \"id\" : \"5000000015935\"\n    },\n    \"creatorId\" : \"4000000012931\",\n    \"modifierId\" : \"4000000012931\",\n    \"dislikeCount\" : \"1\",\n    \"permission\" : \"AGENTS\",\n    \"likeCount\" : \"2\",\n    \"title\" : \"Importance of a Knowledge Base\",\n    \"authorId\" : \"4000000012931\",\n    \"usageCount\" : \"3\",\n    \"latestVersion\" : \"1.0\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Solutions/dv/22372000000281023\",\n    \"portalUrl\" : \"https://desk.zoho.com/portal/zylker/kb/articles/importance-of-knowledge-base\",\n    \"feedbackCount\" : \"1\",\n    \"createdTime\" : \"2018-07-16T06:48:08.000Z\",\n    \"latestPublishedVersion\" : \"1.0\",\n    \"viewCount\" : \"3\",\n    \"id\" : \"22372000000281023\",\n    \"permalink\" : \"importance-of-a-knowledge-base\",\n    \"category\" : {\n      \"name\" : \"General\",\n      \"id\" : \"5000000017008\"\n    },\n    \"categoryId\" : \"4000000013240\",\n    \"status\" : \"Published\"\n  } ],\n  \"count\" : 379\n}"
						}
					]
				},
				{
					"name": "Search Tasks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tasks/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								"search"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 0,",
									"description": "From index, starts from 0",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 10,",
									"description": "No. of entities to fetch",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the entity must be fetched  if not passed then searches in permitted departments <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "id",
									"value": "<long>\n",
									"description": "ID of the task <br>`exact match`<br> ",
									"disabled": true
								},
								{
									"key": "subject",
									"value": "<String>\n",
									"description": "subject of the task in the help desk   <br>`wildcard search`<br>",
									"disabled": true
								},
								{
									"key": "ticketNumber",
									"value": "<String>\n",
									"description": "ticket Number of the ticket that associated with the task  <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<String>\n",
									"description": "status of the task   <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "priority",
									"value": "<String>\n",
									"description": "Priority of the task   <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "assigneeId",
									"value": "<long>\n",
									"description": "ID of the agent assigned to resolve the task  <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "_all",
									"value": "<String>\n",
									"description": "Search throughout the task <br>`wildcard search`<br>",
									"disabled": true
								},
								{
									"key": "customField1",
									"value": "<String>\n",
									"description": "Custom field in the task <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField2",
									"value": "<String>\n",
									"description": "Custom field in the task <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField3",
									"value": "<String>\n",
									"description": "Custom field in the task <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField4",
									"value": "<String>\n",
									"description": "Custom field in the task <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField5",
									"value": "<String>\n",
									"description": "Custom field in the task <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField6",
									"value": "<String>\n",
									"description": "Custom field in the task <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField7",
									"value": "<String>\n",
									"description": "Custom field in the task <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField8",
									"value": "<String>\n",
									"description": "Custom field in the task <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField9",
									"value": "<String>\n",
									"description": "Custom field in the task <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField10",
									"value": "<String>\n",
									"description": "Custom field in the task <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "createdTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters tasks created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								},
								{
									"key": "modifiedTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters tasks modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								},
								{
									"key": "dueDateRange",
									"value": "<timestamp>\n",
									"description": "Key that filters tasks due in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, dueDateRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<String>\n",
									"description": "SortBy can be: <br>`relevance`,<br>  <br>`modifiedTime`,<br>  <br>`createdTime`,<br>",
									"disabled": true
								}
							]
						},
						"description": "This API searches for tasks in your help desk portal.\n#### OAuth Scope\n- `Desk.search.READ`\n- `Desk.activities.calls.READ`\n- `Desk.activities.events.READ`\n- `Desk.activities.READ`\n- `Desk.activities.tasks.READ`\n- `Desk.tasks.READ`\n\n"
					},
					"response": [
						{
							"name": "Search Tasks",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tasks/search?limit=1&priority=High,Low",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tasks",
										"search"
									],
									"query": [
										{
											"key": "limit",
											"value": "1"
										},
										{
											"key": "priority",
											"value": "High,Low"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2016-09-13T12:14:41.000Z\",\n    \"cf\" : {\n    },\n    \"ticket\" : null,\n    \"subject\" : \"Bug Fix #121\",\n    \"completedTime\" : null,\n    \"departmentId\" : \"3000000007043\",\n    \"dueDate\" : \"2016-09-19T12:27:26.000Z\",\n    \"creatorId\" : \"3000000008692\",\n    \"description\" : null,\n    \"ownerId\" : \"3000000054002\",\n    \"priority\" : \"High\",\n    \"isCommented\" : false,\n    \"createdTime\" : \"2016-08-14T08:27:26.000Z\",\n    \"assignee\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"jade\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=10657727\",\n      \"emailId\" : \"jade@zylker.com\",\n      \"id\" : \"5000000009116\",\n      \"zuid\" : \"10657727\"\n    },\n    \"id\" : \"3000000054004\",\n    \"department\" : {\n      \"name\" : \"Testing\",\n      \"id\" : \"5000000007235\"\n    },\n    \"category\" : null,\n    \"ticketId\" : null,\n    \"status\" : \"Not Started\"\n  } ],\n  \"count\" : 1\n}"
						}
					]
				},
				{
					"name": "Call Search API",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/calls/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"calls",
								"search"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 0,",
									"description": "Index number, starting from which the calls must be fetched. for example, from=0",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 10,",
									"description": "Number of calls to fetch",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the call must be fetched. If a valid ID is not passed, the search is performed in all departments permitted. <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "id",
									"value": "<long>\n",
									"description": "ID of the call <br>`exact match`<br> ",
									"disabled": true
								},
								{
									"key": "subject",
									"value": "<String>\n",
									"description": "subject of the call <br>`wildcard search`<br>",
									"disabled": true
								},
								{
									"key": "ticketNumber",
									"value": "<String>\n",
									"description": "Ticket number of the ticket associated with the call  <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<String>\n",
									"description": "Status of the call   <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "priority",
									"value": "<String>\n",
									"description": "Priority of the call  <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "assigneeId",
									"value": "<long>\n",
									"description": "ID of the agent assigned to handle the call  <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "_all",
									"value": "<String>\n",
									"description": "Key that includes all call details for the search <br>`wildcard search`<br>",
									"disabled": true
								},
								{
									"key": "customField1",
									"value": "<String>\n",
									"description": "Custom field in the call <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField2",
									"value": "<String>\n",
									"description": "Custom field in the call <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField3",
									"value": "<String>\n",
									"description": "Custom field in the call <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField4",
									"value": "<String>\n",
									"description": "Custom field in the call <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField5",
									"value": "<String>\n",
									"description": "Custom field in the call <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField6",
									"value": "<String>\n",
									"description": "Custom field in the call <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField7",
									"value": "<String>\n",
									"description": "Custom field in the call <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField8",
									"value": "<String>\n",
									"description": "Custom field in the call <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField9",
									"value": "<String>\n",
									"description": "Custom field in the call <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField10",
									"value": "<String>\n",
									"description": "Custom field in the call <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "createdTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters calls recorded in the help desk in a particular period. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								},
								{
									"key": "modifiedTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters calls whose details were modified in a particular period. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								},
								{
									"key": "startDateRange",
									"value": "<timestamp>\n",
									"description": "Key that filters calls that were made in a particular period. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, startDateRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<String>\n",
									"description": "SortBy can be: <br>`relevance`,<br>  <br>`modifiedTime`,<br>  <br>`createdTime`,<br>",
									"disabled": true
								}
							]
						},
						"description": "This API searches for calls in your help desk portal. You can pass multiple values by separating them with commas, which denotes the search on the field is done using any of the values passed.<br/>Zoho Desk APIs support two types of search:exact match and wildcard match.<br/>exact match returns resources only if the value passed exactly matches with a resource in the help desk.<br/>wildcard match returns resources even if the value passed partially matches with a resource in the help desk.<br/>To perform wildcard match, append an asterisk (*) after the value to search.\n#### OAuth Scope\n- `Desk.search.READ`\n- `Desk.calls.READ`\n\n"
					},
					"response": [
						{
							"name": "Call Search API",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/calls/search?limit=1&priority=High,Low",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"calls",
										"search"
									],
									"query": [
										{
											"key": "limit",
											"value": "1"
										},
										{
											"key": "priority",
											"value": "High,Low"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2016-07-26T17:32:11.000Z\",\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"contact\" : {\n        \"firstName\" : null,\n        \"lastName\" : \"Lawrence\",\n        \"phoneNumber\" : \"+14246721666\",\n        \"id\" : \"3000000008749\"\n      },\n      \"id\" : \"3000000008753\"\n    },\n    \"customFields\" : {\n    },\n    \"subject\" : \"New Call\",\n    \"completedTime\" : \"2016-07-26T17:32:11.000Z\",\n    \"departmentId\" : \"3000000007043\",\n    \"creatorId\" : \"3000000008692\",\n    \"description\" : null,\n    \"ownerId\" : null,\n    \"priority\" : \"Normal\",\n    \"duration\" : \"300\",\n    \"createdTime\" : \"2016-07-26T17:32:11.000Z\",\n    \"startTime\" : \"2016-07-25T16:52:11.000Z\",\n    \"id\" : \"3000000018001\",\n    \"assignee\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"raja\",\n      \"photoURL\" : null,\n      \"emailId\" : \"carol@zylker.com\",\n      \"id\" : \"36385000000120033\",\n      \"zuid\" : \"55499215\"\n    },\n    \"ticketId\" : \"3000000008753\",\n    \"direction\" : \"inbound\",\n    \"status\" : \"completed\"\n  } ],\n  \"count\" : 1\n}"
						}
					]
				},
				{
					"name": "Event Search API",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/events/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"events",
								"search"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 0,",
									"description": "Index number, starting from which the events must be fetched, starts from 0",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 10,",
									"description": "Number of events to fetch",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the event must be fetched. If a valid ID is not passed, the search is performed in all departments permitted. <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "id",
									"value": "<long>\n",
									"description": "ID of the event <br>`exact match`<br> ",
									"disabled": true
								},
								{
									"key": "subject",
									"value": "<String>\n",
									"description": "Subject of the event <br>`wildcard search`<br>",
									"disabled": true
								},
								{
									"key": "ticketNumber",
									"value": "<String>\n",
									"description": "Ticket number of the ticket associated with the event <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<String>\n",
									"description": "Status of the event <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "priority",
									"value": "<String>\n",
									"description": "Priority of the event <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "assigneeId",
									"value": "<long>\n",
									"description": "ID of the agent assigned to handle the event  <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "_all",
									"value": "<String>\n",
									"description": "Key that includes all event details for the search <br>`wildcard search`<br>",
									"disabled": true
								},
								{
									"key": "customField1",
									"value": "<String>\n",
									"description": "Custom field in the event <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField2",
									"value": "<String>\n",
									"description": "Custom field in the event <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField3",
									"value": "<String>\n",
									"description": "Custom field in the event <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField4",
									"value": "<String>\n",
									"description": "Custom field in the event <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField5",
									"value": "<String>\n",
									"description": "Custom field in the event <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField6",
									"value": "<String>\n",
									"description": "Custom field in the event <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField7",
									"value": "<String>\n",
									"description": "Custom field in the event <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField8",
									"value": "<String>\n",
									"description": "Custom field in the event <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField9",
									"value": "<String>\n",
									"description": "Custom field in the event <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField10",
									"value": "<String>\n",
									"description": "Custom field in the event <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "createdTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters events recorded in the help desk in a particular period. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								},
								{
									"key": "modifiedTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters events whose details were modified in a particular period. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								},
								{
									"key": "startDateRange",
									"value": "<timestamp>\n",
									"description": "Key that filters events that occurred in a particular period. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, startDateRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<String>\n",
									"description": "SortBy can be: <br>`relevance`,<br>  <br>`modifiedTime`,<br>  <br>`createdTime`,<br>",
									"disabled": true
								}
							]
						},
						"description": "This API searches for events in your help desk portal. You can pass multiple values by separating them with commas, which denotes the search on the field is done using any of the values passed.<br/>Zoho Desk APIs support two types of search:exact match and wildcard match.<br/>exact match returns resources only if the value passed exactly matches with a resource in the help desk.<br/>wildcard match returns resources even if the value passed partially matches with a resource in the help desk.<br/>To perform wildcard match, append an asterisk (*) after the value to search.\n#### OAuth Scope\n- `Desk.search.READ`\n- `Desk.events.READ`\n\n"
					},
					"response": [
						{
							"name": "Event Search API",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/events/search?limit=1&priority=High,Low",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"events",
										"search"
									],
									"query": [
										{
											"key": "limit",
											"value": "1"
										},
										{
											"key": "priority",
											"value": "High,Low"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2016-07-26T17:32:11.000Z\",\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"contact\" : {\n        \"firstName\" : null,\n        \"lastName\" : \"Lawrence\",\n        \"id\" : \"3000000008749\"\n      },\n      \"id\" : \"3000000008753\"\n    },\n    \"customFields\" : {\n    },\n    \"subject\" : \"New Event\",\n    \"completedTime\" : \"2016-07-26T17:32:11.000Z\",\n    \"departmentId\" : \"3000000007043\",\n    \"creatorId\" : \"3000000008692\",\n    \"description\" : null,\n    \"ownerId\" : null,\n    \"priority\" : \"Normal\",\n    \"duration\" : \"30\",\n    \"createdTime\" : \"2016-07-26T16:32:11.000Z\",\n    \"startTime\" : \"2016-07-26T17:02:11.000Z\",\n    \"id\" : \"3000000018001\",\n    \"assignee\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"raja\",\n      \"photoURL\" : null,\n      \"emailId\" : \"carol@zylker.com\",\n      \"id\" : \"36385000000120033\",\n      \"zuid\" : \"55499215\"\n    },\n    \"category\" : \"Meeting\",\n    \"ticketId\" : \"3000000008753\",\n    \"status\" : \"completed\"\n  } ],\n  \"count\" : 1\n}"
						}
					]
				},
				{
					"name": "Products Search API",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/products/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"search"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 0,",
									"description": "From index, starts from 0",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 10,",
									"description": "No. of entities to fetch",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the entity must be fetched  if not passed then searches in permitted departments <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "id",
									"value": "<long>\n",
									"description": "ID of the Product <br>`exact match`<br> ",
									"disabled": true
								},
								{
									"key": "productName",
									"value": "<String>\n",
									"description": "Name of the Product <br>`wildcard search`<br>",
									"disabled": true
								},
								{
									"key": "productCode",
									"value": "<String>\n",
									"description": "Code of the product <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "contactId",
									"value": "<long>\n",
									"description": "ID of the contact associated with the product <br>`exact match`<br> ",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "<long>\n",
									"description": "ID of the account associated with the product <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "_all",
									"value": "<String>\n",
									"description": "Search throughout the product <br>`wildcard search`<br>",
									"disabled": true
								},
								{
									"key": "customField1",
									"value": "<String>\n",
									"description": "Custom field in the product <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField2",
									"value": "<String>\n",
									"description": "Custom field in the product <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField3",
									"value": "<String>\n",
									"description": "Custom field in the product <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField4",
									"value": "<String>\n",
									"description": "Custom field in the product <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField5",
									"value": "<String>\n",
									"description": "Custom field in the product <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField6",
									"value": "<String>\n",
									"description": "Custom field in the product <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField7",
									"value": "<String>\n",
									"description": "Custom field in the product <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField8",
									"value": "<String>\n",
									"description": "Custom field in the product <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField9",
									"value": "<String>\n",
									"description": "Custom field in the product <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "customField10",
									"value": "<String>\n",
									"description": "Custom field in the product <br>`wildcard search`<br> <br>`empty check`<br> <br>`not empty check`<br>",
									"disabled": true
								},
								{
									"key": "createdTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters products created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								},
								{
									"key": "modifiedTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters products modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<String>\n",
									"description": "SortBy can be: <br>`relevance`,<br>  <br>`modifiedTime`,<br>  <br>`createdTime`,<br>  <br>`productName`<br>",
									"disabled": true
								}
							]
						},
						"description": "This API searches for products in your help desk. The values can be given comma separated, which denotes the search on the field is done using either of the values given.<br/>Zoho Desk APIs support two types of search:exact match and wildcard match.<br/>exact match returns resources only if the value passed exactly matches with a resource in the help desk.<br/>wildcard match returns resources even if the value passed partially matches with a resource in the help desk.<br/>To perform wildcard match, append an asterisk (*) after the value to search.\n#### OAuth Scope\n- `Desk.search.READ`\n- `Desk.products.READ`\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Products Search API",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/products/search?limit=1&productName=Search2",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"products",
										"search"
									],
									"query": [
										{
											"key": "limit",
											"value": "1"
										},
										{
											"key": "productName",
											"value": "Search2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2017-11-02T10:31:35.000Z\",\n    \"productCode\" : \"Search2\",\n    \"cf\" : {\n      \"cf_productTagName\" : null\n    },\n    \"createdBy\" : \"5000000009116\",\n    \"description\" : null,\n    \"createdTime\" : \"2017-11-02T10:31:35.000Z\",\n    \"modifiedBy\" : \"5000000009116\",\n    \"departmentIds\" : [ \"5000000007235\" ],\n    \"id\" : \"5000000009882\",\n    \"productName\" : \"Search2\"\n  } ],\n  \"count\" : 1\n}"
						}
					]
				},
				{
					"name": "Search Activities",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/activities/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"activities",
								"search"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 0,",
									"description": "Index number, starting from which the activities must be fetched, starts from 0",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 10,",
									"description": "Number of activities to list",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the activity must be fetched. If you do not pass a value for this parameter, the search is performed in all permitted departments. <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "id",
									"value": "<long>\n",
									"description": "ID of the activity <br>`exact match`<br> ",
									"disabled": true
								},
								{
									"key": "subject",
									"value": "<String>\n",
									"description": "Subject of the activity <br>`wildcard search`<br>",
									"disabled": true
								},
								{
									"key": "ticketNumber",
									"value": "<String>\n",
									"description": "Serial number of the ticket associated with the activity <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<String>\n",
									"description": "Completion status of the activity <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "priority",
									"value": "<String>\n",
									"description": "Priority of the activity <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "assigneeId",
									"value": "<long>\n",
									"description": "ID of the agent assigned to handle the activity <br>`exact match`<br>",
									"disabled": true
								},
								{
									"key": "_all",
									"value": "<String>\n",
									"description": "Key that searches across all fields in all activities <br>`wildcard search`<br>",
									"disabled": true
								},
								{
									"key": "createdTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters activities created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z.",
									"disabled": true
								},
								{
									"key": "modifiedTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters activities whose details were modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z.",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<String>\n",
									"description": "SortBy can be: <br>`relevance`,<br>  <br>`modifiedTime`,<br>  <br>`createdTime`,<br>",
									"disabled": true
								}
							]
						},
						"description": "This API searches for activities in your help desk portal.\n#### OAuth Scope\n- `Desk.search.READ`\n- `Desk.activities.calls.READ`\n- `Desk.activities.events.READ`\n- `Desk.activities.READ`\n- `Desk.activities.tasks.READ`\n- `Desk.calls.READ`\n- `Desk.tasks.READ`\n- `Desk.events.READ`\n\n"
					},
					"response": [
						{
							"name": "Search Activities",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/activities/search?limit=1&priority=High,Low",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"activities",
										"search"
									],
									"query": [
										{
											"key": "limit",
											"value": "1"
										},
										{
											"key": "priority",
											"value": "High,Low"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2016-09-13T12:14:41.000Z\",\n    \"ticket\" : null,\n    \"customFields\" : {\n    },\n    \"subject\" : \"Bug Fix #121\",\n    \"completedTime\" : null,\n    \"module\" : \"task\",\n    \"departmentId\" : \"3000000007043\",\n    \"dueDate\" : \"2016-09-19T12:27:26.000Z\",\n    \"creatorId\" : \"3000000008692\",\n    \"description\" : null,\n    \"ownerId\" : \"3000000054002\",\n    \"priority\" : \"High\",\n    \"isCommented\" : false,\n    \"createdTime\" : \"2016-08-14T08:27:26.000Z\",\n    \"assignee\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"jade\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=10657727\",\n      \"emailId\" : \"jade@zylker.com\",\n      \"id\" : \"5000000009116\",\n      \"zuid\" : \"10657727\"\n    },\n    \"id\" : \"3000000054004\",\n    \"department\" : {\n      \"name\" : \"Testing\",\n      \"id\" : \"5000000007235\"\n    },\n    \"category\" : null,\n    \"ticketId\" : null,\n    \"status\" : \"Not Started\"\n  } ],\n  \"count\" : 1\n}"
						}
					]
				}
			],
			"description": "Search helps you find resources in all modules or a specific module in your help desk portal. You can search for multiple resources by separating the values with a comma. Zoho Desk APIs support exact match, wildcard match, empty check and not empty check.<br/><br/>1. Exact match returns resources only if the value passed exactly matches with a resource in the help desk. Wildcard match returns resources even if the value passed partially matches with a resource in the help desk.<br/>2. To perform a multiple character wildcard match, append an asterisk (*) after the value to search.<br/>3. If you want the search to return resources that do not have a value in a particular field, pass the value of the corresponding query parameter as ${empty} in the API request.<br/>4. If you want the search to return resources with any value in a particular field, pass the value of the corresponding query parameter as ${notempty} in the API request.<br/>5. Both ${empty} and ${notEmpty} should be urlEncoded.<br/><br/>Note:<br/>1. Query parameters, especially those of string type, pertaining to search APIs must be URL-encoded.<br/>2. New resources that you add to your help desk might take some time to be indexed for search. Therefore, if the resources do not appear in search results, wait for a few minutes and try again.<br/>3. At least 3 characters are required in the search string for a successful search.<br/>4. To search status mapped tickets use ${OPEN},${ONHOLD},${CLOSED} respectively for open, onhold and closed status mapping<br/>5. Wildcard match is supported only for fields of string type. To perform a wildcard match, append an asterisk () after the search keyword. For example, doc returns doc and document in the search results, but not donation.<br/>6. Appending an asterisk (*) at the beginning or middle of the search keyword does not provide any results.<br/>7. In the case of mobile and phone fields, wildcard match works even if the asterisk (*) is appended at the beginning of the search keyword.<br/>8. The sortBy=relevance key-attribute pair fetches the most relevant records first.<br/>9. sortBy=-modifiedTime, A - prefix denotes a descending order of sorting.<br/>10. Each search can return only a maximum of 5,000 resources. To fetch more resources, write your program such that the search results are filtered based on the TimeRange parameter.<br/>Example:<br/>A month time range in modifiedTime field<br/>https://desk.zoho.com/api/v1/tickets/search?limit=100&from=0&sortBy=modifiedTime&modifiedTimeRange=2018-01-01T00:00:00.000Z,2019-01-31T23:59:59.000Z"
		},
		{
			"name": "Ticket TimeEntry",
			"item": [
				{
					"name": "Get Ticket Time Entry",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/timeEntry/{timeEntry_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"timeEntry",
								"{timeEntry_id}"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Secondary information related to the time entry. Value supported is `owner`.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API fetches a time entry recorded for a ticket.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Ticket Time Entry",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000031007/timeEntry/4000000033010?include=owner",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000031007",
										"timeEntry",
										"4000000033010"
									],
									"query": [
										{
											"key": "include",
											"value": "owner"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"owner\" : {\n    \"firstName\" : \"Eswer\",\n    \"lastName\" : \"KM\",\n    \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n    \"name\" : \"Eswer KM\",\n    \"id\" : \"4000000008688129\"\n  },\n  \"parent\" : {\n    \"ticketNumber\" : \"1004\",\n    \"subject\" : \"Ticket subject\",\n    \"id\" : \"4000000031007\",\n    \"type\" : \"TICKETS\"\n  },\n  \"secondsSpent\" : \"21\",\n  \"cf\" : {\n    \"cf_timeentryname\" : \"time1\"\n  },\n  \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n  \"departmentId\" : \"4000000008694\",\n  \"fixedCost\" : null,\n  \"minutesSpent\" : \"23\",\n  \"creatorId\" : \"4000000008692\",\n  \"agentCostPerHour\" : \"3.0\",\n  \"description\" : \"Time Entry description\",\n  \"hoursSpent\" : \"3\",\n  \"ownerId\" : \"4000000008692\",\n  \"isBillable\" : true,\n  \"mode\" : \"MANUAL\",\n  \"isTrashed\" : \"false\",\n  \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n  \"createdTime\" : \"2016-06-16T07:24:44.000Z\",\n  \"invoiceId\" : \"4000000008688123\",\n  \"id\" : \"4000000033001\",\n  \"requestChargeType\" : \"Customer Service\",\n  \"additionalCost\" : \"10.0\",\n  \"totalCost\" : \"20.17\"\n}"
						}
					]
				},
				{
					"name": "List Ticket Time Entries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/timeEntry",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"timeEntry"
							],
							"query": [
								{
									"key": "module",
									"value": "<string>\nmax chars : 100",
									"description": "Module from which the time entries must be fetched. Values allowed are `tickets` and `tasks`.",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the time entries must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of time entries to fetch",
									"disabled": true
								},
								{
									"key": "orderBy",
									"value": "<String>\n",
									"description": "Key that sorts the time entries in ascending or descending order, based on the `executedTime` attribute. Values allowed are `ASC` (default) and `DESC`.",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Secondary information related to the time entry. Value supported is `owner`.",
									"disabled": true
								},
								{
									"key": "billStatus",
									"value": "<String>\n",
									"description": "Key that filters time entries, based on their billing status: `nonBillable` , `billable` or `billed`",
									"disabled": true
								},
								{
									"key": "createdTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters time entries created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z.",
									"disabled": true
								},
								{
									"key": "modifiedTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters time entries whose details were modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API lists the time entries associated with a ticket.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "List Ticket Time Entries",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000031007/timeEntry?from=0&limit=10&include=owner&billStatus=billed&createdTimeRange=2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z&modifiedTimeRange=2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000031007",
										"timeEntry"
									],
									"query": [
										{
											"key": "from",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "include",
											"value": "owner"
										},
										{
											"key": "billStatus",
											"value": "billed"
										},
										{
											"key": "createdTimeRange",
											"value": "2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z"
										},
										{
											"key": "modifiedTimeRange",
											"value": "2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"21\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1004\",\n      \"subject\" : \"Ticket subject\",\n      \"id\" : \"4000000031007\",\n      \"type\" : \"TICKETS\"\n    },\n    \"cf\" : {\n      \"cf_timeentryname\" : \"time1\"\n    },\n    \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"23\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"3.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"3\",\n    \"ownerId\" : \"4000000008692\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:24:44.000Z\",\n    \"invoiceId\" : \"4000000008688123\",\n    \"id\" : \"4000000033001\",\n    \"requestChargeType\" : \"Customer Service\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"20.17\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"21\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1004\",\n      \"subject\" : \"Ticket subject\",\n      \"id\" : \"4000000031007\",\n      \"type\" : \"TICKETS\"\n    },\n    \"cf\" : {\n      \"cf_timeentryname\" : \"time2\"\n    },\n    \"executedTime\" : \"2016-06-24T19:30:00.000Z\",\n    \"departmentId\" : \"4000000008694\",\n    \"fixedCost\" : null,\n    \"minutesSpent\" : \"34\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"10.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"3\",\n    \"ownerId\" : \"4000000012090\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:46:39.000Z\",\n    \"invoiceId\" : \"4000000008688123\",\n    \"id\" : \"4000000033006\",\n    \"requestChargeType\" : \"Product Consultation\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"45.72\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"22\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1004\",\n      \"subject\" : \"Ticket subject\",\n      \"id\" : \"4000000031007\",\n      \"type\" : \"TICKETS\"\n    },\n    \"cf\" : {\n      \"cf_timeentryname\" : \"time3\"\n    },\n    \"executedTime\" : \"2016-06-13T19:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"22\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"20.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"32\",\n    \"ownerId\" : \"4000000008692\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:49:52.000Z\",\n    \"invoiceId\" : \"4000000008688123\",\n    \"id\" : \"4000000033011\",\n    \"requestChargeType\" : \"Customer Service\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"657.46\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Add Ticket Time Entry",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/timeEntry",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"timeEntry"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API adds a time entry in your help desk\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| requestChargeType  | &lt;string&gt;<br />max chars : 120 | Type of request in the ticket. Values supported are Customer Service, Upgrade Request, Product Consultation, and Support and Maintenance. \n| ownerId  | &lt;long&gt;<br /> | ID of the user associated with the time entry \n| executedTime (required) | &lt;timestamp&gt;<br /> | Time when work related to the time entry was started. \n| hoursSpent  | &lt;integer&gt;<br /> | Number of hours in the time entry. \n| minutesSpent  | &lt;integer&gt;<br /> | Number of minutes in the time entry. \n| secondsSpent  | &lt;integer&gt;<br /> | Number of seconds in the time entry. \n| agentCostPerHour  | &lt;double&gt;<br /> | Per hour cost of an agent. \n| additionalCost  | &lt;double&gt;<br /> | Additional cost incurred \n| fixedCost  | &lt;double&gt;<br /> | Fixed cost \n| description  | &lt;string&gt;<br />max chars : 65535 | Description of the time entry \n| customFields  | &lt;list&gt;<br /> |  User-defined fields related to the time entry. \n| cf  | &lt;JSONObject&gt;<br /> | User-defined fields related to the time entry. \n| mode  | &lt;String&gt;<br /> | Mode configured in time tracking. Supported values are `Manual` and `Auto` \n| isBillable  | &lt;boolean&gt;<br /> | Billing Preference \n| invoiceId  | &lt;long&gt;<br /> | ID of the invoice related to the time entry \n"
					},
					"response": [
						{
							"name": "Add Ticket Time Entry",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"secondsSpent\" : \"21\",\n  \"cf\" : {\n    \"cf_timeentryname\" : \"time2\"\n  },\n  \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n  \"minutesSpent\" : \"23\",\n  \"agentCostPerHour\" : \"3.0\",\n  \"description\" : \"Time Entry description\",\n  \"hoursSpent\" : \"3\",\n  \"invoiceId\" : \"4000000008688123\",\n  \"ownerId\" : \"4000000008692\",\n  \"requestChargeType\" : \"Customer Service\",\n  \"additionalCost\" : \"10.0\",\n  \"totalCost\" : \"20.17\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000031007/timeEntry",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000031007",
										"timeEntry"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"secondsSpent\" : \"21\",\n  \"parent\" : {\n    \"ticketNumber\" : \"1004\",\n    \"subject\" : \"Ticket subject\",\n    \"id\" : \"4000000031007\",\n    \"type\" : \"TICKETS\"\n  },\n  \"cf\" : {\n    \"cf_timeentryname\" : \"time2\"\n  },\n  \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n  \"fixedCost\" : null,\n  \"departmentId\" : \"4000000008694\",\n  \"minutesSpent\" : \"23\",\n  \"creatorId\" : \"4000000008692\",\n  \"agentCostPerHour\" : \"3.0\",\n  \"description\" : \"Time Entry description\",\n  \"hoursSpent\" : \"3\",\n  \"ownerId\" : \"4000000008692\",\n  \"isBillable\" : true,\n  \"mode\" : \"MANUAL\",\n  \"isTrashed\" : \"false\",\n  \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n  \"createdTime\" : \"2016-06-21T05:52:00.828Z\",\n  \"invoiceId\" : \"4000000008688123\",\n  \"id\" : \"4000000045001\",\n  \"requestChargeType\" : \"Customer Service\",\n  \"additionalCost\" : \"10.0\",\n  \"totalCost\" : \"20.17\"\n}"
						}
					]
				},
				{
					"name": "Update Ticket Time Entry",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/timeEntry/{timeEntry_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"timeEntry",
								"{timeEntry_id}"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API updates an existing ticket time entry\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| requestChargeType  | &lt;string&gt;<br />max chars : 120 | Type of request in the ticket. Values supported are Customer Service, Upgrade Request, Product Consultation, and Support and Maintenance. \n| ownerId  | &lt;long&gt;<br /> | ID of the user associated with the time entry \n| executedTime  | &lt;timestamp&gt;<br /> | Time when work related to the time entry was started. \n| hoursSpent  | &lt;integer&gt;<br /> | Number of hours in the time entry. \n| minutesSpent  | &lt;integer&gt;<br /> | Number of minutes in the time entry. \n| secondsSpent  | &lt;integer&gt;<br /> | Number of seconds in the time entry. \n| agentCostPerHour  | &lt;double&gt;<br /> | Per hour cost of an agent. \n| additionalCost  | &lt;double&gt;<br /> | Additional cost incurred \n| fixedCost  | &lt;double&gt;<br /> | Fixed cost \n| description  | &lt;string&gt;<br />max chars : 65535 | Description of the time entry \n| customFields  | &lt;list&gt;<br /> |  User-defined fields related to the time entry. \n| cf  | &lt;JSONObject&gt;<br /> | User-defined fields related to the time entry. \n| mode  | &lt;String&gt;<br /> | Mode configured in time tracking. Supported values are `Manual` and `Auto` \n| isBillable  | &lt;boolean&gt;<br /> | Billing Preference \n| invoiceId  | &lt;long&gt;<br /> | ID of the invoice related to the time entry \n"
					},
					"response": [
						{
							"name": "Update Ticket Time Entry",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\" : \"Time Entry description\",\n  \"requestChargeType\" : \"Customer Service\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000031007/timeEntry/4000000034008",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000031007",
										"timeEntry",
										"4000000034008"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"secondsSpent\" : \"21\",\n  \"parent\" : {\n    \"ticketNumber\" : \"1004\",\n    \"associatedTicketId\" : \"4000000031007\",\n    \"subject\" : \"Task subject\",\n    \"id\" : \"4000000031008\",\n    \"type\" : \"TASKS\"\n  },\n  \"cf\" : {\n    \"cf_timeentryname\" : \"time1\"\n  },\n  \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n  \"fixedCost\" : null,\n  \"departmentId\" : \"4000000008694\",\n  \"minutesSpent\" : \"23\",\n  \"creatorId\" : \"4000000008692\",\n  \"agentCostPerHour\" : \"3.0\",\n  \"description\" : \"Time Entry description\",\n  \"hoursSpent\" : \"3\",\n  \"ownerId\" : \"4000000008692\",\n  \"isBillable\" : true,\n  \"mode\" : \"MANUAL\",\n  \"isTrashed\" : \"false\",\n  \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n  \"createdTime\" : \"2016-06-21T05:52:00.000Z\",\n  \"invoiceId\" : \"4000000008688123\",\n  \"id\" : \"4000000045001\",\n  \"requestChargeType\" : \"Customer Service\",\n  \"additionalCost\" : \"10.0\",\n  \"totalCost\" : \"20.17\"\n}"
						}
					]
				},
				{
					"name": "Delete Ticket Time Entry",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/timeEntry/{timeEntry_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"timeEntry",
								"{timeEntry_id}"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API deletes a time entry recorded for a ticket\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Delete Ticket Time Entry",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000031007/timeEntry/4000000034008",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000031007",
										"timeEntry",
										"4000000034008"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get summation of Ticket Time Entries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/timeEntrySummation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"timeEntrySummation"
							],
							"query": [
								{
									"key": "module",
									"value": "<string>\nmax chars : 100",
									"description": "Module from which the time entries must be fetched. Values allowed are `tickets` and `tasks`.",
									"disabled": true
								},
								{
									"key": "billStatus",
									"value": "<String>\n",
									"description": "Key that filters time entries, based on their billing status: `nonBillable` , `billable` or `billed`",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API fetches the sum of time entries associated with a ticket.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get summation of Ticket Time Entries",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000031007/timeEntrySummation?billStatus=billed",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000031007",
										"timeEntrySummation"
									],
									"query": [
										{
											"key": "billStatus",
											"value": "billed"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"totalMins\" : 5,\n  \"totalHours\" : 12,\n  \"totalCosts\" : 1000,\n  \"totalSeconds\" : 24\n}"
						}
					]
				},
				{
					"name": "Get Ticket Time Entries by Billing Type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/timeEntryByBillingType?billingType=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"timeEntryByBillingType"
							],
							"query": [
								{
									"key": "billingType",
									"value": "<String>\n",
									"description": "Allowed values are `FIXED_COST_FOR_TICKETS` `FIXED_COST_FOR_AGENTS` `SPECIFIC_COST_PER_AGENT` `SPECIFIC_COST_PER_PROFILE`"
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Allowed value is : `owner` ",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the time entries must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of time entries to fetch",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API fetches time entries for a ticket created after recently modified time of the given billing type from your help desk\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Ticket Time Entries by Billing Type",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000031007/timeEntryByBillingType?billingType=FIXED_COST_FOR_TICKETS&include=owner&from=0&limit=10",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000031007",
										"timeEntryByBillingType"
									],
									"query": [
										{
											"key": "billingType",
											"value": "FIXED_COST_FOR_TICKETS"
										},
										{
											"key": "include",
											"value": "owner"
										},
										{
											"key": "from",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"0\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1004\",\n      \"subject\" : \"Ticket subject\",\n      \"id\" : \"4000000031007\",\n      \"type\" : \"TICKETS\"\n    },\n    \"cf\" : {\n    },\n    \"executedTime\" : null,\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"0\",\n    \"agentCostPerHour\" : null,\n    \"description\" : null,\n    \"hoursSpent\" : \"0\",\n    \"ownerId\" : \"15000000009148\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"createdBy\" : \"15000000009148\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2018-01-10T18:45:17.000Z\",\n    \"invoiceId\" : \"4000000008688123\",\n    \"id\" : \"15000000031007\",\n    \"requestChargeType\" : \"Customer Service\",\n    \"additionalCost\" : null,\n    \"totalCost\" : \"0.0\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"0\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1004\",\n      \"subject\" : \"Ticket subject\",\n      \"id\" : \"4000000031007\",\n      \"type\" : \"TICKETS\"\n    },\n    \"cf\" : {\n    },\n    \"executedTime\" : \"2017-12-20T18:09:20.000Z\",\n    \"departmentId\" : \"4000000008694\",\n    \"fixedCost\" : null,\n    \"minutesSpent\" : \"0\",\n    \"agentCostPerHour\" : null,\n    \"description\" : \"Dummy#2\",\n    \"hoursSpent\" : \"1\",\n    \"ownerId\" : \"15000000009148\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"createdBy\" : \"15000000009148\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2018-01-10T15:20:47.000Z\",\n    \"invoiceId\" : \"4000000008688123\",\n    \"id\" : \"15000000029314\",\n    \"requestChargeType\" : \"Upgrade Request\",\n    \"additionalCost\" : null,\n    \"totalCost\" : \"0.0\"\n  } ]\n}"
						}
					]
				}
			],
			"description": "Ticket time entry refers to the time taken by an agent to resolve a ticket."
		},
		{
			"name": "Ticket Approvals",
			"item": [
				{
					"name": "List approvals",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/approvals",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"approvals"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number starting from which the approvals must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of approvals to fetch",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<string>\nmax chars : 100",
									"description": "Key that filters the approvals by status",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API lists the approvals submitted in your help desk.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "List approvals",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000094004/approvals",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000094004",
										"approvals"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"approver\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"raj\",\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agent/4000000015001/photo\",\n      \"id\" : \"4000000015001\",\n      \"email\" : \"carol@zylker.com\"\n    },\n    \"requester\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"saran\",\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agent/4000000012629/photo\",\n      \"id\" : \"4000000012629\",\n      \"email\" : \"carol@zylker.com\"\n    },\n    \"requestedTime\" : \"2016-06-21T13:16:14.000Z\",\n    \"subject\" : \"Testing\",\n    \"description\" : \"testing\",\n    \"id\" : \"1892000001054081\",\n    \"status\" : \"Approved\",\n    \"processedTime\" : \"2018-02-07T10:12:35.000Z\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get approval",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/approvals/{approval_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"approvals",
								"{approval_id}"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API fetches the details of an approval.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get approval",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000094004/approvals/1892000001054081",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000094004",
										"approvals",
										"1892000001054081"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"approver\" : {\n    \"firstName\" : \"saran\",\n    \"lastName\" : \"raj\",\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agent/4000000015001/photo\",\n    \"id\" : \"4000000015001\",\n    \"email\" : null\n  },\n  \"requester\" : {\n    \"firstName\" : \"aravind\",\n    \"lastName\" : \"a\",\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agent/4000000012629/photo\",\n    \"id\" : \"4000000012629\",\n    \"email\" : null\n  },\n  \"requestedTime\" : \"2016-06-21T13:16:14.000Z\",\n  \"subject\" : \"Testing\",\n  \"processedTime \" : \"2018-02-07T10:12:35.000Z\",\n  \"description\" : \"testing\",\n  \"id\" : \"1892000001054081\",\n  \"status\" : \"Rejected\"\n}"
						}
					]
				},
				{
					"name": "Create approval",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/approvals",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"approvals"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API creates an approval in your help desk.\n#### OAuth Scope\n- `Desk.tickets.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| approverIds (required) | &lt;list&gt;<br /> | IDs of users to whom the approval must be submitted \n| subject (required) | &lt;string&gt;<br />max chars : 1000 | Subject of the approval \n| status  | &lt;string&gt;<br />max chars : 100 | Status of the approval \n| description  | &lt;String&gt;<br /> | Description of the approval \n"
					},
					"response": [
						{
							"name": "Create approval",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"approverIds\" : [ \"1892000000042001\" ],\n  \"subject\" : \"New approval\",\n  \"description\" : \"new app desc\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000094004/approvals",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000094004",
										"approvals"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"approvals\" : [ {\n    \"approver\" : {\n      \"firstName\" : \"saran\",\n      \"lastName\" : \"raj\",\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agent/4000000015001/photo\",\n      \"id\" : \"4000000015001\",\n      \"email\" : null\n    },\n    \"requester\" : {\n      \"firstName\" : \"aravind\",\n      \"lastName\" : \"a\",\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agent/4000000012629/photo\",\n      \"id\" : \"4000000012629\",\n      \"email\" : null\n    },\n    \"requestedTime\" : \"2016-06-21T13:16:14.000Z\",\n    \"subject\" : \"Testing\",\n    \"description\" : \"testing\",\n    \"id\" : \"1892000001054081\",\n    \"status\" : \"PENDING\",\n    \"processedTime\" : null\n  } ]\n}"
						}
					]
				},
				{
					"name": "Update approval",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/approvals/{approval_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"approvals",
								"{approval_id}"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API updates the details of an existing ticket approval.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| approverIds  | &lt;list&gt;<br /> | IDs of users to whom the approval must be submitted \n| subject  | &lt;string&gt;<br />max chars : 1000 | Subject of the approval \n| status  | &lt;string&gt;<br />max chars : 100 | Status of the approval \n| description  | &lt;String&gt;<br /> | Description of the approval \n"
					},
					"response": [
						{
							"name": "Update approval",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\" : \"Approved/Rejected\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000000094004/approvals/1892000001054081",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000000094004",
										"approvals",
										"1892000001054081"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"approver\" : {\n    \"firstName\" : \"saran\",\n    \"lastName\" : \"raj\",\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agent/4000000015001/photo\",\n    \"id\" : \"4000000015001\",\n    \"email\" : null\n  },\n  \"requester\" : {\n    \"firstName\" : \"aravind\",\n    \"lastName\" : \"a\",\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agent/4000000012629/photo\",\n    \"id\" : \"4000000012629\",\n    \"email\" : null\n  },\n  \"requesterId\" : \"1892000000042001\",\n  \"requestedTime\" : \"2016-06-21T13:16:14.000Z\",\n  \"approverId\" : \"1892000000042001\",\n  \"subject\" : \"Testing\",\n  \"description\" : \"testing\",\n  \"id\" : \"1892000001054081\",\n  \"status\" : \"Approved\",\n  \"processedTime\" : \"2018-02-07T10:12:35.000Z\"\n}"
						}
					]
				}
			],
			"description": "Often, customer support agents do not have the authority to make decisions related to ticket resolution. When the intervention of a support manager or any other higher authority is required in the decision-making process, the agent can submit the ticket for approval."
		},
		{
			"name": "Task TimeEntry",
			"item": [
				{
					"name": "Get a Task Time Entry",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tasks/:task_id/timeEntry/{timeEntry_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								":task_id",
								"timeEntry",
								"{timeEntry_id}"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Secondary information related to the time entry. Value supported is `owner`.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "task_id"
								}
							]
						},
						"description": "This API fetches a time entry recorded for a task.\n#### OAuth Scope\n- `Desk.activities.READ`\n- `Desk.activities.tasks.READ`\n- `Desk.tasks.READ`\n\n"
					},
					"response": [
						{
							"name": "Get a Task Time Entry",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tasks/4000000031007/timeEntry/4000000033010?include=owner",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tasks",
										"4000000031007",
										"timeEntry",
										"4000000033010"
									],
									"query": [
										{
											"key": "include",
											"value": "owner"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"owner\" : {\n    \"firstName\" : \"Eswer\",\n    \"lastName\" : \"KM\",\n    \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n    \"name\" : \"Eswer KM\",\n    \"id\" : \"4000000008688129\"\n  },\n  \"secondsSpent\" : \"21\",\n  \"parent\" : {\n    \"ticketNumber\" : \"1003\",\n    \"associatedTicketId\" : \"4000000030017\",\n    \"subject\" : \"Tasks subject\",\n    \"id\" : \"4000000031014\",\n    \"type\" : \"TASKS\"\n  },\n  \"cf\" : {\n    \"cf_timeentryname\" : \"time1\"\n  },\n  \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n  \"departmentId\" : \"4000000008694\",\n  \"fixedCost\" : null,\n  \"minutesSpent\" : \"23\",\n  \"creatorId\" : \"4000000008692\",\n  \"agentCostPerHour\" : \"3.0\",\n  \"description\" : \"Time Entry description\",\n  \"hoursSpent\" : \"3\",\n  \"ownerId\" : \"4000000008692\",\n  \"isBillable\" : true,\n  \"mode\" : \"MANUAL\",\n  \"isTrashed\" : \"false\",\n  \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n  \"createdTime\" : \"2016-06-16T07:24:44.000Z\",\n  \"invoiceId\" : \"40000000086881212\",\n  \"id\" : \"4000000033001\",\n  \"requestChargeType\" : \"Customer Service\",\n  \"additionalCost\" : \"10.0\",\n  \"totalCost\" : \"20.17\"\n}"
						}
					]
				},
				{
					"name": "List Task Time Entries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tasks/:task_id/timeEntry",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								":task_id",
								"timeEntry"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the time entries must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of time entries to fetch",
									"disabled": true
								},
								{
									"key": "orderBy",
									"value": "<String>\n",
									"description": "Key that sorts the time entries in ascending or descending order, based on the `executedTime` attribute. Values allowed are `ASC` (default) and `DESC`.",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": " Secondary information related to the time entry. Value supported is `owner`.",
									"disabled": true
								},
								{
									"key": "billStatus",
									"value": "<String>\n",
									"description": "Key that filters time entries, based on their billing status: `nonBillable` , `billable` or `billed`",
									"disabled": true
								},
								{
									"key": "createdTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters time entries created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z.",
									"disabled": true
								},
								{
									"key": "modifiedTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters time entries whose details were modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "task_id"
								}
							]
						},
						"description": "This API lists the time entries associated with a task.\n#### OAuth Scope\n- `Desk.activities.READ`\n- `Desk.activities.tasks.READ`\n- `Desk.tasks.READ`\n\n"
					},
					"response": [
						{
							"name": "List Task Time Entries",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tasks/4000000031007/timeEntry?from=0&limit=10&include=owner&billStatus=billed&createdTimeRange=2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z&modifiedTimeRange=2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tasks",
										"4000000031007",
										"timeEntry"
									],
									"query": [
										{
											"key": "from",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "include",
											"value": "owner"
										},
										{
											"key": "billStatus",
											"value": "billed"
										},
										{
											"key": "createdTimeRange",
											"value": "2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z"
										},
										{
											"key": "modifiedTimeRange",
											"value": "2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"21\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1003\",\n      \"associatedTicketId\" : \"4000000030017\",\n      \"subject\" : \"Tasks subject\",\n      \"id\" : \"4000000031014\",\n      \"type\" : \"TASKS\"\n    },\n    \"cf\" : {\n      \"cf_timeentryname\" : \"time1\"\n    },\n    \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"23\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"3.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"3\",\n    \"ownerId\" : \"4000000008692\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:24:44.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033001\",\n    \"requestChargeType\" : \"Customer Service\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"20.17\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"21\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1003\",\n      \"associatedTicketId\" : \"4000000030017\",\n      \"subject\" : \"Tasks subject\",\n      \"id\" : \"4000000031014\",\n      \"type\" : \"TASKS\"\n    },\n    \"cf\" : {\n      \"cf_timeentryname\" : \"time2\"\n    },\n    \"executedTime\" : \"2016-06-24T19:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"34\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"10.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"3\",\n    \"ownerId\" : \"4000000012090\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:46:39.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033006\",\n    \"requestChargeType\" : \"Product Consultation\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"45.72\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"22\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1003\",\n      \"associatedTicketId\" : \"4000000030017\",\n      \"subject\" : \"Tasks subject\",\n      \"id\" : \"4000000031014\",\n      \"type\" : \"TASKS\"\n    },\n    \"cf\" : {\n      \"cf_timeentryname\" : \"time3\"\n    },\n    \"executedTime\" : \"2016-06-13T19:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"22\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"20.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"32\",\n    \"ownerId\" : \"4000000008692\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:49:52.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033011\",\n    \"requestChargeType\" : \"Customer Service\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"657.46\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Add a Task Time Entry",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tasks/:task_id/timeEntry",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								":task_id",
								"timeEntry"
							],
							"variable": [
								{
									"key": "task_id"
								}
							]
						},
						"description": "This API creates a time entry in your help desk\n#### OAuth Scope\n- `Desk.activities.CREATE`\n- `Desk.activities.tasks.CREATE`\n- `Desk.tasks.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| requestChargeType  | &lt;string&gt;<br />max chars : 120 | Type of request in the ticket. Values supported are Customer Service, Upgrade Request, Product Consultation, and Support and Maintenance. \n| ownerId  | &lt;long&gt;<br /> | ID of the user associated with the time entry \n| executedTime (required) | &lt;timestamp&gt;<br /> | Time when work related to the time entry was started. \n| hoursSpent  | &lt;integer&gt;<br /> | Number of hours in the time entry. \n| minutesSpent  | &lt;integer&gt;<br /> | Number of minutes in the time entry. \n| secondsSpent  | &lt;integer&gt;<br /> | Number of seconds in the time entry. \n| agentCostPerHour  | &lt;double&gt;<br /> | Per hour cost of an agent. \n| additionalCost  | &lt;double&gt;<br /> | Additional cost incurred \n| fixedCost  | &lt;double&gt;<br /> | Fixed cost \n| description  | &lt;string&gt;<br />max chars : 65535 | Description of the time entry \n| customFields  | &lt;list&gt;<br /> |  User-defined fields related to the time entry. \n| cf  | &lt;JSONObject&gt;<br /> | User-defined fields related to the time entry. \n| mode  | &lt;String&gt;<br /> | Mode configured in time tracking. Supported values are `Manual` and `Auto` \n| isBillable  | &lt;boolean&gt;<br /> | Billing Preference \n| invoiceId  | &lt;long&gt;<br /> | ID of the invoice related to the time entry \n"
					},
					"response": [
						{
							"name": "Add a Task Time Entry",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"secondsSpent\" : \"21\",\n  \"cf\" : {\n    \"cf_timeentryname\" : \"time2\"\n  },\n  \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n  \"minutesSpent\" : \"23\",\n  \"agentCostPerHour\" : \"3.0\",\n  \"description\" : \"Time Entry description\",\n  \"hoursSpent\" : \"3\",\n  \"ownerId\" : \"4000000008692\",\n  \"requestChargeType\" : \"Customer Service\",\n  \"additionalCost\" : \"10.0\",\n  \"totalCost\" : \"20.17\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tasks/4000000031007/timeEntry",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tasks",
										"4000000031007",
										"timeEntry"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"secondsSpent\" : \"21\",\n  \"parent\" : {\n    \"ticketNumber\" : \"1003\",\n    \"associatedTicketId\" : \"4000000030017\",\n    \"subject\" : \"Tasks subject\",\n    \"id\" : \"4000000031014\",\n    \"type\" : \"TASKS\"\n  },\n  \"cf\" : {\n    \"cf_timeentryname\" : \"time2\"\n  },\n  \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n  \"fixedCost\" : null,\n  \"departmentId\" : \"4000000008694\",\n  \"minutesSpent\" : \"23\",\n  \"creatorId\" : \"4000000008692\",\n  \"agentCostPerHour\" : \"3.0\",\n  \"description\" : \"Time Entry description\",\n  \"hoursSpent\" : \"3\",\n  \"ownerId\" : \"4000000008692\",\n  \"isBillable\" : true,\n  \"mode\" : \"MANUAL\",\n  \"isTrashed\" : \"false\",\n  \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n  \"createdTime\" : \"2016-06-21T05:52:00.828Z\",\n  \"invoiceId\" : \"40000000086881212\",\n  \"id\" : \"4000000045001\",\n  \"requestChargeType\" : \"Customer Service\",\n  \"additionalCost\" : \"10.0\",\n  \"totalCost\" : \"20.17\"\n}"
						}
					]
				},
				{
					"name": "Update a Task Time Entry",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tasks/:task_id/timeEntry/{timeEntry_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								":task_id",
								"timeEntry",
								"{timeEntry_id}"
							],
							"variable": [
								{
									"key": "task_id"
								}
							]
						},
						"description": "This API updates details of an existing time entry.\n#### OAuth Scope\n- `Desk.activities.UPDATE`\n- `Desk.activities.tasks.UPDATE`\n- `Desk.tasks.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| requestChargeType  | &lt;string&gt;<br />max chars : 120 | Type of request in the ticket. Values supported are Customer Service, Upgrade Request, Product Consultation, and Support and Maintenance. \n| ownerId  | &lt;long&gt;<br /> | ID of the user associated with the time entry \n| executedTime  | &lt;timestamp&gt;<br /> | Time when work related to the time entry was started. \n| hoursSpent  | &lt;integer&gt;<br /> | Number of hours in the time entry. \n| minutesSpent  | &lt;integer&gt;<br /> | Number of minutes in the time entry. \n| secondsSpent  | &lt;integer&gt;<br /> | Number of seconds in the time entry. \n| agentCostPerHour  | &lt;double&gt;<br /> | Per hour cost of an agent. \n| additionalCost  | &lt;double&gt;<br /> | Additional cost incurred \n| fixedCost  | &lt;double&gt;<br /> | Fixed cost \n| description  | &lt;string&gt;<br />max chars : 65535 | Description of the time entry \n| customFields  | &lt;list&gt;<br /> |  User-defined fields related to the time entry. \n| cf  | &lt;JSONObject&gt;<br /> | User-defined fields related to the time entry. \n| mode  | &lt;String&gt;<br /> | Mode configured in time tracking. Supported values are `Manual` and `Auto` \n| isBillable  | &lt;boolean&gt;<br /> | Billing Preference \n| invoiceId  | &lt;long&gt;<br /> | ID of the invoice related to the time entry \n"
					},
					"response": [
						{
							"name": "Update a Task Time Entry",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\" : \"Time Entry description\",\n  \"requestChargeType\" : \"Customer Service\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tasks/4000000031007/timeEntry/4000000034008",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tasks",
										"4000000031007",
										"timeEntry",
										"4000000034008"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"secondsSpent\" : \"21\",\n  \"parent\" : {\n    \"ticketNumber\" : \"1003\",\n    \"associatedTicketId\" : \"4000000030017\",\n    \"subject\" : \"Tasks subject\",\n    \"id\" : \"4000000031014\",\n    \"type\" : \"TASKS\"\n  },\n  \"cf\" : {\n    \"cf_timeentryname\" : \"time1\"\n  },\n  \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n  \"fixedCost\" : null,\n  \"departmentId\" : \"4000000008694\",\n  \"minutesSpent\" : \"23\",\n  \"creatorId\" : \"4000000008692\",\n  \"agentCostPerHour\" : \"3.0\",\n  \"description\" : \"Time Entry description\",\n  \"hoursSpent\" : \"3\",\n  \"ownerId\" : \"4000000008692\",\n  \"isBillable\" : true,\n  \"mode\" : \"MANUAL\",\n  \"isTrashed\" : \"false\",\n  \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n  \"createdTime\" : \"2016-06-21T05:52:00.000Z\",\n  \"invoiceId\" : \"40000000086881212\",\n  \"id\" : \"4000000045001\",\n  \"requestChargeType\" : \"Customer Service\",\n  \"additionalCost\" : \"10.0\",\n  \"totalCost\" : \"20.17\"\n}"
						}
					]
				},
				{
					"name": "Delete a Task Time Entry",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tasks/:task_id/timeEntry/{timeEntry_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								":task_id",
								"timeEntry",
								"{timeEntry_id}"
							],
							"variable": [
								{
									"key": "task_id"
								}
							]
						},
						"description": "This API deletes a time entry recorded for a task.\n#### OAuth Scope\n- `Desk.activities.UPDATE`\n- `Desk.activities.tasks.UPDATE`\n- `Desk.tasks.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Delete a Task Time Entry",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tasks/4000000031007/timeEntry/4000000034008",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tasks",
										"4000000031007",
										"timeEntry",
										"4000000034008"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get summation of Task Time Entries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tasks/:task_id/timeEntrySummation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								":task_id",
								"timeEntrySummation"
							],
							"query": [
								{
									"key": "billStatus",
									"value": "<String>\n",
									"description": "Key that filters time entries, based on their billing status: `nonBillable` , `billable` or `billed`",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "task_id"
								}
							]
						},
						"description": "This API fetches the sum of time entries associated with a task.\n#### OAuth Scope\n- `Desk.activities.READ`\n- `Desk.activities.tasks.READ`\n- `Desk.tasks.READ`\n\n"
					},
					"response": [
						{
							"name": "Get summation of Task Time Entries",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tasks/4000000031007/timeEntrySummation?billStatus=billed",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tasks",
										"4000000031007",
										"timeEntrySummation"
									],
									"query": [
										{
											"key": "billStatus",
											"value": "billed"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"totalMins\" : 5,\n  \"totalHours\" : 12,\n  \"totalCosts\" : 1000,\n  \"totalSeconds\" : 24\n}"
						}
					]
				}
			],
			"description": "Tasks Time Entry refers to the time taken by an agent to complete a task."
		},
		{
			"name": "Agent TimeEntry",
			"item": [
				{
					"name": "Get an Agent Time Entry",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agents/:agent_id/timeEntry/{timeEntry_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								":agent_id",
								"timeEntry",
								"{timeEntry_id}"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Secondary information related to the time entry. Value supported is owner.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "agent_id"
								}
							]
						},
						"description": "This API fetches a time entry related to an agent.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get an Agent Time Entry",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/agents/4000000031007/timeEntry/4000000033010?include=owner",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agents",
										"4000000031007",
										"timeEntry",
										"4000000033010"
									],
									"query": [
										{
											"key": "include",
											"value": "owner"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"owner\" : {\n    \"firstName\" : \"Eswer\",\n    \"lastName\" : \"KM\",\n    \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n    \"name\" : \"Eswer KM\",\n    \"id\" : \"4000000008688129\"\n  },\n  \"secondsSpent\" : \"21\",\n  \"parent\" : {\n    \"ticketNumber\" : \"1001\",\n    \"associatedTicketId\" : \"4000000031007\",\n    \"subject\" : \"Task subject\",\n    \"id\" : \"4000000031010\",\n    \"type\" : \"TASKS\"\n  },\n  \"cf\" : {\n    \"cf_timeentryname\" : \"time1\"\n  },\n  \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n  \"fixedCost\" : null,\n  \"departmentId\" : \"4000000008694\",\n  \"minutesSpent\" : \"23\",\n  \"creatorId\" : \"4000000008692\",\n  \"agentCostPerHour\" : \"3.0\",\n  \"description\" : \"Time Entry description\",\n  \"hoursSpent\" : \"3\",\n  \"ownerId\" : \"4000000008692\",\n  \"isBillable\" : true,\n  \"mode\" : \"MANUAL\",\n  \"isTrashed\" : \"false\",\n  \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n  \"createdTime\" : \"2016-06-16T07:24:44.000Z\",\n  \"invoiceId\" : \"40000000086881212\",\n  \"id\" : \"4000000033001\",\n  \"requestChargeType\" : \"Customer Service\",\n  \"additionalCost\" : \"10.0\",\n  \"totalCost\" : \"20.17\"\n}"
						}
					]
				},
				{
					"name": "List Agent Time Entries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agents/:agent_id/timeEntry",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								":agent_id",
								"timeEntry"
							],
							"query": [
								{
									"key": "module",
									"value": "<string>\nmax chars : 100",
									"description": "Module from which the time entries must be fetched. Values allowed are `tickets` and `tasks`.",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the time entries must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of time entries to fetch",
									"disabled": true
								},
								{
									"key": "orderBy",
									"value": "<String>\n",
									"description": "Key that sorts the time entries in ascending or descending order, based on the `executedTime` attribute. Values allowed are `ASC` (default) and `DESC`.",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Secondary information related to the time entry. Value supported is `owner`.",
									"disabled": true
								},
								{
									"key": "billStatus",
									"value": "<String>\n",
									"description": "Key that filters time entries, based on their billing status: `nonBillable` , `billable` or `billed`",
									"disabled": true
								},
								{
									"key": "createdTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters time entries created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z.",
									"disabled": true
								},
								{
									"key": "modifiedTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters time entries whose details were modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "agent_id"
								}
							]
						},
						"description": "This API lists the time entries associated with an agent.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List Agent Time Entries",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/agents/4000000031007/timeEntry?module=ticket&from=0&limit=10&include=owner&billStatus=billed&createdTimeRange=2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z&modifiedTimeRange=2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agents",
										"4000000031007",
										"timeEntry"
									],
									"query": [
										{
											"key": "module",
											"value": "ticket"
										},
										{
											"key": "from",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "include",
											"value": "owner"
										},
										{
											"key": "billStatus",
											"value": "billed"
										},
										{
											"key": "createdTimeRange",
											"value": "2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z"
										},
										{
											"key": "modifiedTimeRange",
											"value": "2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"21\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1001\",\n      \"associatedTicketId\" : \"4000000031007\",\n      \"subject\" : \"Task subject\",\n      \"id\" : \"4000000031010\",\n      \"type\" : \"TASKS\"\n    },\n    \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"23\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"3.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"3\",\n    \"ownerId\" : \"4000000008692\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:24:44.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033001\",\n    \"requestChargeType\" : \"Customer Service\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"20.17\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"21\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1001\",\n      \"associatedTicketId\" : \"4000000031007\",\n      \"subject\" : \"Task subject\",\n      \"id\" : \"4000000031010\",\n      \"type\" : \"TASKS\"\n    },\n    \"executedTime\" : \"2016-06-24T19:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"34\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"10.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"3\",\n    \"ownerId\" : \"4000000012090\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:46:39.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033006\",\n    \"requestChargeType\" : \"Product Consultation\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"45.72\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"22\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1001\",\n      \"associatedTicketId\" : \"4000000031007\",\n      \"subject\" : \"Task subject\",\n      \"id\" : \"4000000031010\",\n      \"type\" : \"TASKS\"\n    },\n    \"executedTime\" : \"2016-06-13T19:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"22\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"20.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"32\",\n    \"ownerId\" : \"4000000008692\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:49:52.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033011\",\n    \"requestChargeType\" : \"Customer Service\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"657.46\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get summation of Agent Time Entries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agents/:agent_id/timeEntrySummation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								":agent_id",
								"timeEntrySummation"
							],
							"query": [
								{
									"key": "module",
									"value": "<string>\nmax chars : 100",
									"description": "Module Preference. It can be either `tickets` `tasks`",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department",
									"disabled": true
								},
								{
									"key": "billStatus",
									"value": "<String>\n",
									"description": "Key that filters time entries, based on their billing status: `nonBillable` , `billable` or `billed`",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "agent_id"
								}
							]
						},
						"description": "This API fetches the sum of time entries associated with an agent.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get summation of Agent Time Entries",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/agents/4000000031007/timeEntrySummation?module=ticket&billStatus=billed",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agents",
										"4000000031007",
										"timeEntrySummation"
									],
									"query": [
										{
											"key": "module",
											"value": "ticket"
										},
										{
											"key": "billStatus",
											"value": "billed"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"totalMins\" : 5,\n  \"totalHours\" : 12,\n  \"totalCosts\" : 1000,\n  \"totalSeconds\" : 24\n}"
						}
					]
				}
			],
			"description": "Agent time entry refers to the time taken by an agent to resolve a ticket or perform a task."
		},
		{
			"name": "Contact TimeEntry",
			"item": [
				{
					"name": "List Contact Time Entries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contacts/:contact_id/timeEntry",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contacts",
								":contact_id",
								"timeEntry"
							],
							"query": [
								{
									"key": "module",
									"value": "<string>\nmax chars : 100",
									"description": " Module from which the time entries must be fetched. Values allowed are `tickets` and `tasks`.",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the time entries must be fetched.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of time entries to fetch",
									"disabled": true
								},
								{
									"key": "orderBy",
									"value": "<String>\n",
									"description": "Key that sorts the time entries in ascending or descending order, based on the `executedTime` attribute. Values allowed are `ASC` (default) and `DESC`.",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Secondary information related to the time entry. Value supported is `owner`",
									"disabled": true
								},
								{
									"key": "billStatus",
									"value": "<String>\n",
									"description": "Key that filters time entries, based on their billing status: `nonBillable` , `billable` or `billed`",
									"disabled": true
								},
								{
									"key": "createdTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters time entries created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z.",
									"disabled": true
								},
								{
									"key": "modifiedTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters time entries whose details were modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API lists time entries recorded for a ticket or task related to a contact.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "List Contact Time Entries",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/4000000031007/timeEntry?module=ticket&from=0&limit=10&include=owner&billStatus=billed&createdTimeRange=2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z&modifiedTimeRange=2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"4000000031007",
										"timeEntry"
									],
									"query": [
										{
											"key": "module",
											"value": "ticket"
										},
										{
											"key": "from",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "include",
											"value": "owner"
										},
										{
											"key": "billStatus",
											"value": "billed"
										},
										{
											"key": "createdTimeRange",
											"value": "2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z"
										},
										{
											"key": "modifiedTimeRange",
											"value": "2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"21\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1001\",\n      \"associatedTicketId\" : \"4000000031014\",\n      \"subject\" : \"Task subject\",\n      \"id\" : \"4000000031007\",\n      \"type\" : \"TASKS\"\n    },\n    \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"23\",\n    \"agentCostPerHour\" : \"3.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"3\",\n    \"ownerId\" : \"4000000008692\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:24:44.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033001\",\n    \"requestChargeType\" : \"Customer Service\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"20.17\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"21\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1001\",\n      \"subject\" : \"Ticket subject\",\n      \"id\" : \"4000000031007\",\n      \"type\" : \"TICKETS\"\n    },\n    \"executedTime\" : \"2016-06-24T19:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"34\",\n    \"agentCostPerHour\" : \"10.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"3\",\n    \"ownerId\" : \"4000000012090\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:46:39.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033006\",\n    \"requestChargeType\" : \"Product Consultation\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"45.72\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"22\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1001\",\n      \"associatedTicketId\" : \"4000000031014\",\n      \"subject\" : \"Tasks subject\",\n      \"id\" : \"4000000031007\",\n      \"type\" : \"TASKS\"\n    },\n    \"executedTime\" : \"2016-06-13T19:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"22\",\n    \"agentCostPerHour\" : \"20.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"32\",\n    \"ownerId\" : \"4000000008692\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:49:52.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033011\",\n    \"requestChargeType\" : \"Customer Service\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"657.46\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get summation of Contact Time Entries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contacts/:contact_id/timeEntrySummation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contacts",
								":contact_id",
								"timeEntrySummation"
							],
							"query": [
								{
									"key": "module",
									"value": "<string>\nmax chars : 100",
									"description": "Module Preference. It can be either `tickets` `tasks`",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department",
									"disabled": true
								},
								{
									"key": "billStatus",
									"value": "<String>\n",
									"description": "Key that filters time entries, based on their billing status: `nonBillable` , `billable` or `billed`",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API fetches summation of time entries for a contact from your help desk\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "Get summation of Contact Time Entries",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/4000000031007/timeEntrySummation?module=ticket&billStatus=billed",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"4000000031007",
										"timeEntrySummation"
									],
									"query": [
										{
											"key": "module",
											"value": "ticket"
										},
										{
											"key": "billStatus",
											"value": "billed"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"totalMins\" : 5,\n  \"totalHours\" : 12,\n  \"totalCosts\" : 1000,\n  \"totalSeconds\" : 24\n}"
						}
					]
				}
			],
			"description": "Contact time entry refers to the time taken to resolve a ticket or perform a task related to a particular contact."
		},
		{
			"name": "Account TimeEntry",
			"item": [
				{
					"name": "List Account Time Entries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/accounts/:account_id/timeEntry",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"accounts",
								":account_id",
								"timeEntry"
							],
							"query": [
								{
									"key": "module",
									"value": "<string>\nmax chars : 100",
									"description": "Module from which the time entries must be fetched. Values allowed are `tickets` and `tasks`.",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the time entries must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of time entries to fetch",
									"disabled": true
								},
								{
									"key": "orderBy",
									"value": "<String>\n",
									"description": "Key that sorts the time entries in ascending or descending order, based on the `executedTime attribute. Values allowed are `ASC` (default) and `DESC@",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Secondary information related to the time entry. Value supported is `owner` ",
									"disabled": true
								},
								{
									"key": "billStatus",
									"value": "<String>\n",
									"description": "Key that filters time entries, based on their billing status: `nonBillable` , `billable` or `billed`",
									"disabled": true
								},
								{
									"key": "createdTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters time entries created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z.",
									"disabled": true
								},
								{
									"key": "modifiedTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters time entries whose details were modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "account_id"
								}
							]
						},
						"description": "This API lists time entries recorded for a ticket or task related to an account.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "List Account Time Entries",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/4000000031007/timeEntry?module=ticket&from=0&limit=10&include=owner&billStatus=billed&createdTimeRange=2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z&modifiedTimeRange=2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"4000000031007",
										"timeEntry"
									],
									"query": [
										{
											"key": "module",
											"value": "ticket"
										},
										{
											"key": "from",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "include",
											"value": "owner"
										},
										{
											"key": "billStatus",
											"value": "billed"
										},
										{
											"key": "createdTimeRange",
											"value": "2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z"
										},
										{
											"key": "modifiedTimeRange",
											"value": "2016-06-16T06:00:00.000Z,2016-06-16T20:00:00.000Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"21\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1001\",\n      \"associatedTicketId\" : \"4000000031014\",\n      \"subject\" : \"Task subject\",\n      \"id\" : \"4000000031007\",\n      \"type\" : \"TASKS\"\n    },\n    \"executedTime\" : \"2016-06-22T20:30:00.000Z\",\n    \"fixedCost\" : \"10.17\",\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"23\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"3.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"3\",\n    \"ownerId\" : \"4000000008692\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:24:44.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033001\",\n    \"requestChargeType\" : \"Customer Service\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"20.17\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688129\"\n    },\n    \"secondsSpent\" : \"21\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1001\",\n      \"associatedTicketId\" : \"4000000031014\",\n      \"subject\" : \"Task subject\",\n      \"id\" : \"4000000031007\",\n      \"type\" : \"TASKS\"\n    },\n    \"executedTime\" : \"2016-06-24T19:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"34\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"10.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"3\",\n    \"ownerId\" : \"4000000012090\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:46:39.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033006\",\n    \"requestChargeType\" : \"Product Consultation\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"45.72\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Eswer\",\n      \"lastName\" : \"KM\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&ID=4851669\",\n      \"name\" : \"Eswer KM\",\n      \"id\" : \"4000000008688128\"\n    },\n    \"secondsSpent\" : \"22\",\n    \"parent\" : {\n      \"ticketNumber\" : \"1001\",\n      \"subject\" : \"Ticket subject\",\n      \"id\" : \"4000000031007\",\n      \"type\" : \"TICKETS\"\n    },\n    \"executedTime\" : \"2016-06-13T19:30:00.000Z\",\n    \"fixedCost\" : null,\n    \"departmentId\" : \"4000000008694\",\n    \"minutesSpent\" : \"22\",\n    \"creatorId\" : \"4000000008692\",\n    \"agentCostPerHour\" : \"20.0\",\n    \"description\" : \"Time Entry description\",\n    \"hoursSpent\" : \"32\",\n    \"ownerId\" : \"4000000008692\",\n    \"isBillable\" : true,\n    \"mode\" : \"MANUAL\",\n    \"isTrashed\" : \"false\",\n    \"billingType\" : \"FIXED_COST_FOR_TICKETS\",\n    \"createdTime\" : \"2016-06-16T07:49:52.000Z\",\n    \"invoiceId\" : \"40000000086881212\",\n    \"id\" : \"4000000033011\",\n    \"requestChargeType\" : \"Customer Service\",\n    \"additionalCost\" : \"10.0\",\n    \"totalCost\" : \"657.46\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get summation of Account Time Entries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/accounts/:account_id/timeEntrySummation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"accounts",
								":account_id",
								"timeEntrySummation"
							],
							"query": [
								{
									"key": "module",
									"value": "<string>\nmax chars : 100",
									"description": "Module Preference. It can be either `tickets` `tasks`",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department",
									"disabled": true
								},
								{
									"key": "billStatus",
									"value": "<String>\n",
									"description": "Key that filters time entries, based on their billing status: `nonBillable` , `billable` or `billed`",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "account_id"
								}
							]
						},
						"description": "This API fetches summation of time entries for an account from your help desk\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "Get summation of Account Time Entries",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/4000000031007/timeEntrySummation?module=ticket&billStatus=billed",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"4000000031007",
										"timeEntrySummation"
									],
									"query": [
										{
											"key": "module",
											"value": "ticket"
										},
										{
											"key": "billStatus",
											"value": "billed"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"totalMins\" : 5,\n  \"totalHours\" : 12,\n  \"totalCosts\" : 1000,\n  \"totalSeconds\" : 24\n}"
						}
					]
				}
			],
			"description": "Account time entry refers to the time taken to resolve a ticket or perform a task related to a particular account."
		},
		{
			"name": "Ticket Timer",
			"item": [
				{
					"name": "Get Ticket Timer",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/timer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"timer"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API fetches the time elapsed in the ticket timer, along with the current state\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Ticket Timer",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.comhttp/desk.zoho.com/api/v1/tickets/13000000021183/timer",
									"host": [
										"desk",
										"zoho",
										"comhttp"
									],
									"path": [
										"desk.zoho.com",
										"api",
										"v1",
										"tickets",
										"13000000021183",
										"timer"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"hours\" : 0,\n  \"seconds\" : 26,\n  \"minutes\" : 5,\n  \"state\" : \"RUNNING\"\n}"
						}
					]
				},
				{
					"name": "Performs Ticket Timer actions",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/timer?action=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"timer"
							],
							"query": [
								{
									"key": "action",
									"value": "<String>\n",
									"description": " Action of the timer.Supported actions are  `START`, `STOP`, `PAUSE` and `RESUME`"
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API performs timer-related actions, such as START, STOP, PAUSE and RESUME\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Performs Ticket Timer actions",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.comhttp/desk.zoho.com/api/v1/tickets/13000000021183/timer?action=START",
									"host": [
										"desk",
										"zoho",
										"comhttp"
									],
									"path": [
										"desk.zoho.com",
										"api",
										"v1",
										"tickets",
										"13000000021183",
										"timer"
									],
									"query": [
										{
											"key": "action",
											"value": "START"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"hours\" : 0,\n  \"seconds\" : 0,\n  \"minutes\" : 0,\n  \"state\" : \"RUNNING\"\n}"
						}
					]
				}
			],
			"description": "Ticket timer is a feature that records the time an agent spends on resolving a ticket."
		},
		{
			"name": "Task Timer",
			"item": [
				{
					"name": "Get Task Timer",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tasks/:task_id/timer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								":task_id",
								"timer"
							],
							"variable": [
								{
									"key": "task_id"
								}
							]
						},
						"description": "This API fetches the time elapsed in the task timer, along with the current state\n#### OAuth Scope\n- `Desk.activities.READ`\n- `Desk.activities.tasks.READ`\n- `Desk.tasks.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Task Timer",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.comhttp/desk.zoho.com/api/v1/tasks/13000000021183/timer",
									"host": [
										"desk",
										"zoho",
										"comhttp"
									],
									"path": [
										"desk.zoho.com",
										"api",
										"v1",
										"tasks",
										"13000000021183",
										"timer"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"hours\" : 0,\n  \"seconds\" : 26,\n  \"minutes\" : 5,\n  \"state\" : \"RUNNING\"\n}"
						}
					]
				},
				{
					"name": "Performs Task Timer actions",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tasks/:task_id/timer?action=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								":task_id",
								"timer"
							],
							"query": [
								{
									"key": "action",
									"value": "<String>\n",
									"description": " Action of the timer.Supported actions are  `START`, `STOP`, `PAUSE` and `RESUME`"
								}
							],
							"variable": [
								{
									"key": "task_id"
								}
							]
						},
						"description": "This API performs timer-related actions, such as START, STOP, PAUSE and RESUME\n#### OAuth Scope\n- `Desk.activities.UPDATE`\n- `Desk.activities.tasks.UPDATE`\n- `Desk.tasks.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Performs Task Timer actions",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.comhttp/desk.zoho.com/api/v1/tasks/13000000075019/timer?action=START",
									"host": [
										"desk",
										"zoho",
										"comhttp"
									],
									"path": [
										"desk.zoho.com",
										"api",
										"v1",
										"tasks",
										"13000000075019",
										"timer"
									],
									"query": [
										{
											"key": "action",
											"value": "START"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"hours\" : 0,\n  \"seconds\" : 0,\n  \"minutes\" : 0,\n  \"state\" : \"RUNNING\"\n}"
						}
					]
				}
			],
			"description": "Task timer is the feature that records the time an agent spends on completing a task."
		},
		{
			"name": "Active Timer",
			"item": [
				{
					"name": "Get Active Timer for an Agent",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/myActiveTimers?departmentId=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"myActiveTimers"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "Department to which the ticket belongs"
								},
								{
									"key": "limit",
									"value": "<Integer>\nrange : 1-50",
									"description": "limit",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<Integer>\n",
									"description": "from",
									"disabled": true
								}
							]
						},
						"description": "This API fetches currently running timer details for an agent\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Active Timer for an Agent",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.comhttp/desk.zoho.com/api/v1/myActiveTimers?departmentId=7000000022910?from&limit=10",
									"host": [
										"desk",
										"zoho",
										"comhttp"
									],
									"path": [
										"desk.zoho.com",
										"api",
										"v1",
										"myActiveTimers"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "7000000022910?from"
										},
										{
											"key": "limit",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"timer\" : {\n      \"hours\" : 3,\n      \"seconds\" : 30,\n      \"minutes\" : 6,\n      \"state\" : \"RUNNING\"\n    },\n    \"task\" : {\n      \"subject\" : \"Bug Fix #120\",\n      \"dueDate\" : \"2018-07-21 16:16:16.0\",\n      \"depId\" : \"7000000016005\",\n      \"id\" : \"7000000016001\",\n      \"depName\" : \"activitycheck\",\n      \"status\" : \"In Progress\"\n    },\n    \"ticket\" : {\n      \"ticketNumber\" : 101,\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2018-05-10 14:49:45.0\",\n      \"depId\" : \"7000000016005\",\n      \"id\" : \"7000000013018\",\n      \"depName\" : \"activitycheck\",\n      \"status\" : \"Open\"\n    },\n    \"entity\" : \"Tasks\"\n  }, {\n    \"call\" : {\n      \"subject\" : \"Firt Call\",\n      \"dueDate\" : \"2018-07-21 16:16:16.0\",\n      \"depId\" : \"7000000016005\",\n      \"id\" : \"7000000016002\",\n      \"depName\" : \"activitycheck\",\n      \"status\" : \"In Progress\"\n    },\n    \"timer\" : {\n      \"hours\" : 3,\n      \"seconds\" : 37,\n      \"minutes\" : 7,\n      \"state\" : \"RUNNING\"\n    },\n    \"ticket\" : {\n      \"ticketNumber\" : 101,\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2018-05-10 14:49:45.0\",\n      \"depId\" : \"7000000016005\",\n      \"id\" : \"7000000013018\",\n      \"depName\" : \"activitycheck\",\n      \"status\" : \"Open\"\n    },\n    \"entity\" : \"Calls\"\n  }, {\n    \"timer\" : {\n      \"hours\" : 3,\n      \"seconds\" : 59,\n      \"minutes\" : 7,\n      \"state\" : \"RUNNING\"\n    },\n    \"ticket\" : {\n      \"ticketNumber\" : 101,\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2018-05-10 14:49:45.0\",\n      \"depId\" : \"7000000016007\",\n      \"id\" : \"7000000013018\",\n      \"depName\" : \"activitycheck\",\n      \"status\" : \"Open\"\n    },\n    \"event\" : {\n      \"subject\" : \"First Event\",\n      \"dueDate\" : \"2018-07-21 16:16:16.0\",\n      \"depId\" : \"7000000016005\",\n      \"id\" : \"7000000016003\",\n      \"depName\" : \"activitycheck\",\n      \"status\" : \"In Progress\"\n    },\n    \"entity\" : \"Events\"\n  }, {\n    \"timer\" : {\n      \"hours\" : 3,\n      \"seconds\" : 4,\n      \"minutes\" : 8,\n      \"state\" : \"RUNNING\"\n    },\n    \"ticket\" : {\n      \"ticketNumber\" : 101,\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2018-05-10 14:49:45.0\",\n      \"id\" : \"7000000013018\",\n      \"depName\" : \"activitycheck\",\n      \"status\" : \"Open\"\n    },\n    \"entity\" : \"Tickets\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List ticket timers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/activeTimer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"activeTimer"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the timers must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of timers to fetch",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Secondary information related to the timers. Value supported is `owner`.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API fetches the details of timers currently active in a ticket.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "List ticket timers",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.comhttp/desk.zoho.com/api/v1/tickets/13000000021183/activeTimer?include=owner",
									"host": [
										"desk",
										"zoho",
										"comhttp"
									],
									"path": [
										"desk.zoho.com",
										"api",
										"v1",
										"tickets",
										"13000000021183",
										"activeTimer"
									],
									"query": [
										{
											"key": "include",
											"value": "owner"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"owner\" : {\n      \"firstName\" : \"Sam\",\n      \"lastName\" : \"Jones\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=56934690&nps=404&exp=20\",\n      \"name\" : \"Sam Jones\",\n      \"id\" : \"7000000020001\"\n    },\n    \"timer\" : {\n      \"hours\" : 93,\n      \"seconds\" : 9,\n      \"minutes\" : 6,\n      \"state\" : \"Running\"\n    },\n    \"userId\" : \"7000000020001\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Robert\",\n      \"lastName\" : \"Downey\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=56934690&nps=404&exp=20\",\n      \"name\" : \"Robert Downey\",\n      \"id\" : \"7000000030001\"\n    },\n    \"timer\" : {\n      \"hours\" : 19,\n      \"seconds\" : 24,\n      \"minutes\" : 9,\n      \"state\" : \"Paused\"\n    },\n    \"userId\" : \"7000000030001\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List task timers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tasks/:task_id/activeTimer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								":task_id",
								"activeTimer"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the timers must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of timers to fetch",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Secondary information related to the timers. Value supported is `owner`.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "task_id"
								}
							]
						},
						"description": "This API fetches the details of timers currently active in a task.\n#### OAuth Scope\n- `Desk.activities.READ`\n- `Desk.activities.tasks.READ`\n- `Desk.tasks.READ`\n\n"
					},
					"response": [
						{
							"name": "List task timers",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.comhttp/desk.zoho.com/api/v1/tasks/13000000021183/activeTimer?include=owner",
									"host": [
										"desk",
										"zoho",
										"comhttp"
									],
									"path": [
										"desk.zoho.com",
										"api",
										"v1",
										"tasks",
										"13000000021183",
										"activeTimer"
									],
									"query": [
										{
											"key": "include",
											"value": "owner"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"owner\" : {\n      \"firstName\" : \"Sam\",\n      \"lastName\" : \"Jones\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=56934690&nps=404&exp=20\",\n      \"name\" : \"Sam Jones\",\n      \"id\" : \"7000000020001\"\n    },\n    \"timer\" : {\n      \"hours\" : 93,\n      \"seconds\" : 9,\n      \"minutes\" : 6,\n      \"state\" : \"Running\"\n    },\n    \"userId\" : \"7000000020001\"\n  }, {\n    \"owner\" : {\n      \"firstName\" : \"Robert\",\n      \"lastName\" : \"Downey\",\n      \"photoURL\" : \"https://contacts.zoho.com/file?t=user&fs=thumb&ID=56934690&nps=404&exp=20\",\n      \"name\" : \"Robert Downey\",\n      \"id\" : \"7000000030001\"\n    },\n    \"timer\" : {\n      \"hours\" : 19,\n      \"seconds\" : 24,\n      \"minutes\" : 9,\n      \"state\" : \"Paused\"\n    },\n    \"userId\" : \"7000000030001\"\n  } ]\n}"
						}
					]
				}
			],
			"description": "Active timer will fetch currently active [either running (or) paused] timer(s) details"
		},
		{
			"name": "Ticket Tags",
			"item": [
				{
					"name": "Search tags",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tags/search?departmentId=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tags",
								"search"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\n",
									"description": "Index number, starting from which the tags must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\nrange : 1-100",
									"description": " Number of tags to fetch",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the tags must be fetched."
								},
								{
									"key": "searchVal",
									"value": "<String>\n",
									"description": "Search keyword related to the tag.",
									"disabled": true
								}
							]
						},
						"description": "This API searches for tags added in your help desk portal.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Search tags",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tags/search",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"search"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"name\" : \"sample\",\n    \"tagType\" : \"MANUAL\",\n    \"id\" : 123234324\n  }, {\n    \"name\" : \"sample\",\n    \"tagType\" : \"SYSTEM\",\n    \"id\" : 123234324\n  } ]\n}"
						}
					]
				},
				{
					"name": "List ticket tags",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/ticketTags?departmentId=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"ticketTags"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the tags must be fetched"
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Key that sorts tags by a specific attribute: createdTime or count. The default sorting order is descending.",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<int>\n",
									"description": "Index number, starting from which the tags must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\nrange : 1-100",
									"description": "Number of tags to fetch",
									"disabled": true
								}
							]
						},
						"description": "This API lists the ticket tags added in your help desk portal.�\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "List ticket tags",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/ticketTags",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"ticketTags"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ticketCount\" : \"10\",\n    \"name\" : \"sample\",\n    \"tagType\" : \"MANUAL\",\n    \"id\" : \"12312312312\"\n  }, {\n    \"ticketCount\" : \"0\",\n    \"name\" : \"sample\",\n    \"tagType\" : \"MANUAL\",\n    \"id\" : \"12312312312\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List tickets by tag",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tags/:tag_id/tickets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tags",
								":tag_id",
								"tickets"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\n",
									"description": "Index number, starting from which tickets must be fetched.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\nrange : 1-100",
									"description": "Number of tickets to list",
									"disabled": true
								},
								{
									"key": "assignee",
									"value": "<string>\nmax chars : 100",
									"description": "User assigned to resolve the ticket. Values allowed are `Unassigned` or a valid `assigneeId`. You can pass multiple assigneeIds as comma-separated values.",
									"disabled": true
								},
								{
									"key": "channel",
									"value": "<string>\nmax chars : 100",
									"description": "Channel through which the tickets were received. You can pass multiple values by separating them with commas.",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<string>\nmax chars : 100",
									"description": "Resolution status of the tickets. You can pass multiple values by separating them with commas.",
									"disabled": true
								},
								{
									"key": "receivedInDays",
									"value": "<integer>\n",
									"description": "Number of days since the tickets were received. Values allowed are `15`, `30` , `90`.",
									"disabled": true
								},
								{
									"key": "priority",
									"value": "<string>\nmax chars : 100",
									"description": "Priority of the tickets. You can pass multiple values by separating them with commas.",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Key that sorts the tickets by a specific attribute: `dueDate`, `recentThread`, `createdTime`, or `ticketNumber`. The default sorting order is ascending. A - prefix denotes a descending order of sorting.",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the tickets. Values allowed are: `contacts`, `products`, `departments`, `team`, `isRead` and `assignee`. You can pass multiple values by separating them with commas.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "tag_id"
								}
							]
						},
						"description": "This API lists tickets containing the tag specified.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "List tickets by tag",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tags/1892000001010007/tickets?include=assignee,contacts,departments,team,isRead",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tags",
										"1892000001010007",
										"tickets"
									],
									"query": [
										{
											"key": "include",
											"value": "assignee,contacts,departments,team,isRead"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"101\",\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Real Time analysis Requirement\",\n    \"dueDate\" : \"2016-06-21T16:16:16.000Z\",\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Email\",\n    \"isRead\" : true,\n    \"language\" : \"English\",\n    \"closedTime\" : null,\n    \"contact\" : {\n      \"lastName\" : \"Carol\",\n      \"firstName\" : \"Lucas\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : \"8838109870\",\n      \"id\" : \"1892000000042032\",\n      \"isSpam\" : false,\n      \"type\" : \"paid\",\n      \"email\" : \"carol@zylker.com\",\n      \"account\" : {\n        \"website\" : \"www.desk.com\",\n        \"accountName\" : \"desk Account\",\n        \"id\" : \"1892000000975382\"\n      }\n    },\n    \"createdTime\" : \"2013-11-04T11:21:07.000Z\",\n    \"id\" : \"1892000000042034\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"carol@zylker.com\",\n    \"customerResponseTime\" : \"2013-11-04T11:21:07.912Z\",\n    \"productId\" : null,\n    \"contactId\" : \"1892000000042032\",\n    \"threadCount\" : \"121\",\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\"\n    },\n    \"priority\" : \"High\",\n    \"assigneeId\" : \"1892000000056007\",\n    \"commentCount\" : \"1\",\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"teamId\" : \"8920000000069071\",\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo?orgId=298902\",\n      \"id\" : \"1892000000056007\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"isSpam\" : false,\n    \"status\" : \"Open\"\n  }, {\n    \"ticketNumber\" : \"169\",\n    \"statusType\" : \"Open\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : null,\n    \"departmentId\" : \"1892000000006907\",\n    \"channel\" : \"Facebook\",\n    \"isRead\" : true,\n    \"closedTime\" : null,\n    \"contact\" : {\n      \"lastName\" : \"Richard\",\n      \"firstName\" : \"Lucas\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : \"8838109870\",\n      \"id\" : \"1892000000093203\",\n      \"isSpam\" : false,\n      \"type\" : \"paid\",\n      \"email\" : \"richard@zylker.com\",\n      \"account\" : {\n        \"website\" : \"www.desk.com\",\n        \"accountName\" : \"desk Account\",\n        \"id\" : \"1892000000975382\"\n      }\n    },\n    \"createdTime\" : \"2014-03-06T09:34:53.000Z\",\n    \"id\" : \"1892000000093205\",\n    \"department\" : {\n      \"name\" : \"dasdasdasd\",\n      \"id\" : \"1892000000006907\"\n    },\n    \"email\" : \"carol@zylker.com\",\n    \"customerResponseTime\" : \"2014-03-11T07:51:29.618Z\",\n    \"productId\" : null,\n    \"contactId\" : \"1892000000093203\",\n    \"threadCount\" : \"43\",\n    \"team\" : {\n      \"name\" : \"kjsdfjks\",\n      \"id\" : \"8920000000069071\"\n    },\n    \"priority\" : null,\n    \"assigneeId\" : \"1892000000042001\",\n    \"commentCount\" : \"0\",\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Cases/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n    \"teamId\" : \"8920000000069071\",\n    \"assignee\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000042001/photo?orgId=298902\",\n      \"id\" : \"1892000000042001\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"isSpam\" : false,\n    \"status\" : \"Open\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Associate Tag",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/associateTag",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"associateTag"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API adds a single tag or multiple tags to a ticket.\n#### OAuth Scope\n- `Desk.tickets.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| tags (required) | &lt;list&gt;<br /> | Names of the tags \n"
					},
					"response": [
						{
							"name": "Associate Tag",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tags\" : [ \"sample\", \"ticket\", \"tag\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000528005/associateTag",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000528005",
										"associateTag"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"name\" : \"sample\",\n    \"tagType\" : \"MANUAL\",\n    \"id\" : 123234324\n  }, {\n    \"name\" : \"ticket\",\n    \"tagType\" : \"MANUAL\",\n    \"id\" : 1232343244\n  }, {\n    \"name\" : \"tag\",\n    \"tagType\" : \"SYSTEM\",\n    \"id\" : 12323432434\n  } ]\n}"
						}
					]
				},
				{
					"name": "Dissociate Tag",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/dissociateTag",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"dissociateTag"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API removes a single tag or multiple tags from a ticket.\n#### OAuth Scope\n- `Desk.tickets.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| tags (required) | &lt;list&gt;<br /> | Names of the tags \n"
					},
					"response": [
						{
							"name": "Dissociate Tag",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tags\" : [ \"sample\", \"ticket\", \"tag\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000528005/dissociateTag",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000528005",
										"dissociateTag"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List tags in a ticket",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tickets/:ticket_id/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tickets",
								":ticket_id",
								"tags"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API lists tags associated with a ticket.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "List tags in a ticket",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000528005/tags",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000528005",
										"tags"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"tags\" : [ {\n    \"name\" : \"sample\",\n    \"tagType\" : \"MANUAL\",\n    \"id\" : 123234324\n  }, {\n    \"name\" : \"sample\",\n    \"tagType\" : \"MANUAL\",\n    \"id\" : 123234324\n  } ]\n}"
						}
					]
				},
				{
					"name": "List recent tags",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/recentTicketTags?departmentId=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"recentTicketTags"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the tags must be fetched"
								}
							]
						},
						"description": "This API lists the five most recent tags associated with tickets.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "List recent tags",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/recentTicketTags",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"recentTicketTags"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ticketCount\" : \"10\",\n    \"name\" : \"sample\",\n    \"tagType\" : \"MANUAL\",\n    \"id\" : \"12312312312\"\n  }, {\n    \"ticketCount\" : \"0\",\n    \"name\" : \"sample\",\n    \"tagType\" : \"MANUAL\",\n    \"id\" : \"12312312312\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Update recent tags",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/recentTicketTags/:tag_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"recentTicketTags",
								":tag_id"
							],
							"variable": [
								{
									"key": "tag_id"
								}
							]
						},
						"description": "This API adds a tag to the list of recently viewed tags. tag_id is a mandatory parameter in the API request.\n#### OAuth Scope\n- `Desk.tickets.CREATE`\n\n"
					},
					"response": [
						{
							"name": "Update recent tags",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/recentTicketTags/42312412421",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"recentTicketTags",
										"42312412421"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Ticket tags refer to the keywords added to tickets to ensure quick grouping, filtering, and reference."
		},
		{
			"name": "CustomerHappiness",
			"item": [
				{
					"name": "List all customerHappiness",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/customerHappiness?department=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"customerHappiness"
							],
							"query": [
								{
									"key": "department",
									"value": "<String>\n",
									"description": "Mandatory param to fetch the customer-happiness list for a given ID of the department. You can also provide department as `allDepartment` to fetch customer happiness from all departments"
								},
								{
									"key": "agentId",
									"value": "<Long>\n",
									"description": "Filter that returns the customer-happiness list for a particular agent",
									"disabled": true
								},
								{
									"key": "contactId",
									"value": "<Long>\n",
									"description": "Filter that returns the customer-happiness list for a particular contact",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "<Long>\n",
									"description": "Filter that returns the customer-happiness list for a particular account",
									"disabled": true
								},
								{
									"key": "ticketId",
									"value": "<Long>\n",
									"description": "Filter that returns the customer-happiness list for a particular ticket",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "<Long>\n",
									"description": "Start time from which the customer-happiness list should show. Start time should be in GMT time zone and in milliseconds",
									"disabled": true
								},
								{
									"key": "endTime",
									"value": "<Long>\n",
									"description": "Start time till which the customer-happiness list should show. End time should be in GMT time zone and in milliseconds",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<int>\n",
									"description": "The startng index from which the list should be displayed based on the time of receiving customer feedback",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\nrange : 1-50",
									"description": "Number of ratings to be displayed in the list",
									"disabled": true
								},
								{
									"key": "rating",
									"value": "<string>\nmax chars : 100",
									"description": "Segregate the list based on the type of rating. Allowed values are `good`, `ok`, or `bad`",
									"disabled": true
								},
								{
									"key": "duration",
									"value": "<string>\nmax chars : 100",
									"description": "Period from which the customer happiness rating must be fetched. Values allowed are: `TODAY`, `THIS_WEEK`, `LAST_WEEK`, `THIS_MONTH`, `LAST_MONTH`, `LAST_7_DAYS`, `YESTERDAY`, `LAST_1_HOUR`, `CUSTOM_IN_DATE`, `LAST_100_RATINGS`, `LAST24HOURS` and `LAST_30_DAYS`",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "<timestamp>\n",
									"description": "start date time",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "<timestamp>\n",
									"description": "end date time",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sorted by ratedtime",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Allowed values are :  `contacts`, `tickets`, `agents`. You can include both by separating them with a comma in the query param.",
									"disabled": true
								}
							]
						},
						"description": "Get customer-happiness list for a given department. You can also use any one of the sub modules: agentId, contactId, accountId, or ticketId at a time.\n#### OAuth Scope\n- `Desk.search.READ`\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "List all customerHappiness",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/customerHappiness?authtoken=ae075d0de8621f986c07c1fe256e4243&orgId=1234567&department=3000000023770",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"customerHappiness"
									],
									"query": [
										{
											"key": "authtoken",
											"value": "ae075d0de8621f986c07c1fe256e4243"
										},
										{
											"key": "orgId",
											"value": "1234567"
										},
										{
											"key": "department",
											"value": "3000000023770"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"agentId\" : \"5000000015959\",\n    \"agent\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/5000000015959/photo\",\n      \"id\" : \"5000000015959\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"ticket\" : {\n      \"ticketNumber\" : \"118\",\n      \"subject\" : \"GPS not working\",\n      \"id\" : \"5000000074060\"\n    },\n    \"contactId\" : \"5000000017055\",\n    \"departmentId\" : \"5000000056329\",\n    \"rating\" : \"GOOD\",\n    \"threadId\" : \"5000000090001\",\n    \"feedback\" : \"Great Work!!!\",\n    \"accountId\" : \"5000000017043\",\n    \"ratedTime\" : \"2021-12-02T14:36:20.291Z\",\n    \"customerRatedTime\" : \"2021-12-02T09:06:20.291Z\",\n    \"timezoneOffset\" : \"GMT +5:30\",\n    \"contact\" : {\n      \"name\" : \"Nirmal Kumar\",\n      \"id\" : \"5000000017055\"\n    },\n    \"id\" : \"5000000090012\",\n    \"ticketId\" : \"5000000074060\"\n  }, {\n    \"agentId\" : \"5000000015959\",\n    \"agent\" : {\n      \"firstName\" : \"dasca\",\n      \"lastName\" : \"vins\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/5000000015959/photo\",\n      \"id\" : \"5000000015959\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"ticket\" : {\n      \"ticketNumber\" : \"117\",\n      \"subject\" : \"Apps take time to load\",\n      \"id\" : \"5000000056151\"\n    },\n    \"contactId\" : \"5000000026602\",\n    \"departmentId\" : \"5000000042101\",\n    \"rating\" : \"BAD\",\n    \"threadId\" : \"5000000092045\",\n    \"feedback\" : \"The solution provided doesn't seem to work.\",\n    \"accountId\" : \"-1\",\n    \"ratedTime\" : \"2018-09-26T10:47:35.936Z\",\n    \"timezoneOffset\" : \"GMT +5:30\",\n    \"contact\" : {\n      \"name\" : \"Phillip Collins\",\n      \"id\" : \"5000000026602\"\n    },\n    \"id\" : \"5000000092056\",\n    \"ticketId\" : \"5000000056151\"\n  }, {\n    \"agentId\" : \"5000000015959\",\n    \"ticket\" : {\n      \"ticketNumber\" : \"114\",\n      \"subject\" : \"zPhone battery needs to be fixed\",\n      \"id\" : \"5000000055051\"\n    },\n    \"contactId\" : \"5000000017055\",\n    \"departmentId\" : \"5000000012860\",\n    \"rating\" : \"OKAY\",\n    \"threadId\" : \"5000000092069\",\n    \"feedback\" : \"The battery performance is better but I expect a little more.\",\n    \"accountId\" : \"5000000017043\",\n    \"ratedTime\" : \"2018-09-26T10:49:16.202Z\",\n    \"timezoneOffset\" : \"GMT +5:30\",\n    \"contact\" : {\n      \"name\" : \"Sam Rossner\",\n      \"id\" : \"5000000017055\"\n    },\n    \"id\" : \"5000000092084\",\n    \"ticketId\" : \"5000000055051\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get customer happiness count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/customerHappiness/count?department=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"customerHappiness",
								"count"
							],
							"query": [
								{
									"key": "department",
									"value": "<String>\n",
									"description": "Mandatory param to fetch the customer-happiness list for a given ID of a department. You can also provide department as `allDepartment` to fetch customer-happiness list from all the departments"
								},
								{
									"key": "agentId",
									"value": "<Long>\n",
									"description": "Filter that returns the customer-ratings count for a particular agent",
									"disabled": true
								},
								{
									"key": "contactId",
									"value": "<Long>\n",
									"description": "Filter that returns the customer-ratings count for a particular contact",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "<Long>\n",
									"description": "Filter that returns the customer-ratings count for a particular account",
									"disabled": true
								},
								{
									"key": "ticketId",
									"value": "<Long>\n",
									"description": "Filter that returns the customer-ratings count for a particular ticket",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "<Long>\n",
									"description": "Start time from which the customer-happiness list should show. Start time should be in GMT time zone and in milliseconds",
									"disabled": true
								},
								{
									"key": "endTime",
									"value": "<Long>\n",
									"description": "Start time till which the customer-happiness list should show. Start time should be in GMT time zone and in milliseconds",
									"disabled": true
								},
								{
									"key": "duration",
									"value": "<string>\nmax chars : 100",
									"description": "Period from which the customer happiness rating must be fetched. Values allowed are: `TODAY`, `THIS_WEEK`, `LAST_WEEK`, `THIS_MONTH`, `LAST_MONTH`, `LAST_7_DAYS`, `YESTERDAY`, `LAST_1_HOUR`, `CUSTOM_IN_DATE`, `LAST_100_RATINGS`, `LAST24HOURS` and `LAST_30_DAYS`",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "<timestamp>\n",
									"description": "start date time",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "<timestamp>\n",
									"description": "end date time",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<Integer>\n",
									"description": "The from index",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<Integer>\nrange : 1-50",
									"description": "Number of rating to be displayed",
									"disabled": true
								}
							]
						},
						"description": "This API gives you the count of the ratings given by the customers for each category of a given department. You can also use any one of the sub modules: agentId, contactId, accountId, or ticketId at a time.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get customer happiness count",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/customerHappiness/count?authtoken=ae075d0de8621f986c07c1fe256e4243&orgId=1234567&department=30000002344",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"customerHappiness",
										"count"
									],
									"query": [
										{
											"key": "authtoken",
											"value": "ae075d0de8621f986c07c1fe256e4243"
										},
										{
											"key": "orgId",
											"value": "1234567"
										},
										{
											"key": "department",
											"value": "30000002344"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"30000002344\" : {\n    \"bad\" : 3,\n    \"ok\" : 2,\n    \"good\" : 5\n  }\n}"
						}
					]
				}
			],
			"description": "Customer Happiness Measure"
		},
		{
			"name": "Ticket Templates",
			"item": [
				{
					"name": "Create ticket template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/ticketTemplates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"ticketTemplates"
							]
						},
						"description": "This API helps create a ticket template in your help desk portal.\n#### OAuth Scope\n- `Desk.settings.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ticketTemplateName (required) | &lt;string&gt;<br />max chars : 200 | Name of the ticket template \n| showInCustomerPortal  | &lt;boolean&gt;<br /> | Key that specifies if the template must be displayed in the help center or not \n| ticketTemplateValues (required) | &lt;list&gt;<br /> | Values to auto-populate in the different fields in the template \n"
					},
					"response": [
						{
							"name": "Create ticket template",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"showInCustomerPortal\" : true,\n  \"ticketTemplateName\" : \"temp1\",\n  \"ticketTemplateValues\" : {\n    \"cf\" : {\n      \"cf_severity_percentage\" : \"0.0\"\n    },\n    \"phone\" : \"9876545645\",\n    \"departmentId\" : \"4000000007073\",\n    \"email\" : \"jacks@zylker.com\"\n  },\n  \"layoutId\" : \"4000000020012\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/ticketTemplates",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"ticketTemplates"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"showInCustomerPortal\" : true,\n  \"ticketTemplateName\" : \"temp1\",\n  \"id\" : \"4000000020001\",\n  \"layoutId\" : \"4000000020012\",\n  \"ticketTemplateValues\" : {\n    \"subCategory\" : null,\n    \"cf\" : {\n      \"cf_severity_percentage\" : \"0.0\"\n    },\n    \"productId\" : null,\n    \"contactId\" : null,\n    \"subject\" : null,\n    \"departmentId\" : \"4000000007073\",\n    \"dueDate\" : null,\n    \"channel\" : null,\n    \"description\" : null,\n    \"secondaryContacts\" : [ \"4000000009076\", \"4000000009062\" ],\n    \"priority\" : null,\n    \"classification\" : null,\n    \"assigneeId\" : null,\n    \"accountId\" : null,\n    \"phone\" : \"9876545645\",\n    \"category\" : null,\n    \"email\" : \"jacks@zylker.com\",\n    \"status\" : null\n  }\n}"
						}
					]
				},
				{
					"name": "Get ticket template",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/ticketTemplates/:ticketTemplates_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"ticketTemplates",
								":ticketTemplates_id"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the template. Values allowed are:&nbsp;`contacts`,&nbsp;`products`, `departments`,&nbsp;`team`, and&nbsp;`assignee`. You can pass multiple values by separating them using commas in the API request.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticketTemplates_id"
								}
							]
						},
						"description": "This API fetches the details of a particular ticket template.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get ticket template",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/ticketTemplates/4000000020001?include=departments,assignee,contacts,team,products",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"ticketTemplates",
										"4000000020001"
									],
									"query": [
										{
											"key": "include",
											"value": "departments,assignee,contacts,team,products"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"showInCustomerPortal\" : true,\n  \"ticketTemplateName\" : \"temp1\",\n  \"id\" : \"4000000020001\",\n  \"layoutId\" : \"4000000020012\",\n  \"ticketTemplateValues\" : {\n    \"subCategory\" : null,\n    \"product\" : null,\n    \"cf\" : {\n      \"cf_severity_percentage\" : \"0.0\"\n    },\n    \"productId\" : null,\n    \"contactId\" : null,\n    \"subject\" : null,\n    \"departmentId\" : \"4000000007073\",\n    \"dueDate\" : null,\n    \"channel\" : null,\n    \"description\" : null,\n    \"secondaryContacts\" : [ \"4000000009076\", \"4000000009062\" ],\n    \"priority\" : null,\n    \"classification\" : null,\n    \"assigneeId\" : null,\n    \"accountId\" : null,\n    \"phone\" : \"9876545645\",\n    \"contact\" : null,\n    \"assignee\" : null,\n    \"department\" : {\n      \"name\" : \"testing department\",\n      \"id\" : \"4000000007073\"\n    },\n    \"category\" : null,\n    \"account\" : null,\n    \"email\" : \"jacks@zylker.com\",\n    \"status\" : null\n  }\n}"
						}
					]
				},
				{
					"name": "List ticket templates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/ticketTemplates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"ticketTemplates"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\nrange : >=0",
									"description": "Index number, starting from which the templates must be fetched",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which templates must be fetched",
									"disabled": true
								},
								{
									"key": "layoutId",
									"value": "<long>\n",
									"description": "ID of the layout from which templated must be fetched for the given department ID",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\ndefault : 10,",
									"description": "Number of templates to list. The default value is 10 and the maximum value supported is 100",
									"disabled": true
								},
								{
									"key": "showInCustomerPortal",
									"value": "<boolean>\n",
									"description": "Visibility of the templates in the help center",
									"disabled": true
								},
								{
									"key": "templateName",
									"value": "<String>\n",
									"description": "Name of the template",
									"disabled": true
								},
								{
									"key": "searchStr",
									"value": "<String>\n",
									"description": "String to search for ticket templates by ticket template name",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of ticket templates, based on the limit specified.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List ticket templates",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/ticketTemplates",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"ticketTemplates"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"showInCustomerPortal\" : true,\n    \"ticketTemplateName\" : \"Template1\",\n    \"id\" : \"4000000020001\",\n    \"layoutId\" : \"4000000020121\"\n  }, {\n    \"showInCustomerPortal\" : false,\n    \"ticketTemplateName\" : \"Template2\",\n    \"id\" : \"4000000020063\",\n    \"layoutId\" : \"4000000020431\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Update ticket template",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/ticketTemplates/:ticketTemplates_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"ticketTemplates",
								":ticketTemplates_id"
							],
							"variable": [
								{
									"key": "ticketTemplates_id"
								}
							]
						},
						"description": "This API helps update the details of a particular ticket template.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ticketTemplateName  | &lt;string&gt;<br />max chars : 200 | Name of the ticket template \n| showInCustomerPortal  | &lt;boolean&gt;<br /> | Key that specifies if the template must be displayed in the help center or not \n| ticketTemplateValues  | &lt;list&gt;<br /> | Values to auto-populate in the different fields in the template \n"
					},
					"response": [
						{
							"name": "Update ticket template",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"showInCustomerPortal\" : false,\n  \"ticketTemplateName\" : \"temptest\",\n  \"ticketTemplateValues\" : {\n    \"cf\" : {\n      \"cf_severity_percentage\" : \"60\"\n    },\n    \"productId\" : \"4000000009012\",\n    \"subject\" : \"UrgentProblem\",\n    \"departmentId\" : \"4000000007073\",\n    \"email\" : \"jacks@zylker.com\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/ticketTemplates/4000000020001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"ticketTemplates",
										"4000000020001"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"showInCustomerPortal\" : true,\n  \"ticketTemplateName\" : \"temptest\",\n  \"id\" : \"4000000020001\",\n  \"layoutId\" : \"4000000020012\",\n  \"ticketTemplateValues\" : {\n    \"subCategory\" : null,\n    \"cf\" : {\n      \"cf_severity_percentage\" : \"0.0\"\n    },\n    \"productId\" : \"4000000009012\",\n    \"contactId\" : null,\n    \"subject\" : \"UrgentProblem\",\n    \"departmentId\" : \"4000000007073\",\n    \"dueDate\" : null,\n    \"channel\" : null,\n    \"description\" : null,\n    \"secondaryContacts\" : [ \"4000000009076\", \"4000000009062\" ],\n    \"priority\" : null,\n    \"classification\" : null,\n    \"assigneeId\" : null,\n    \"accountId\" : null,\n    \"phone\" : \"9876545645\",\n    \"category\" : null,\n    \"email\" : \"jacks@zylker.com\",\n    \"status\" : null\n  }\n}"
						}
					]
				},
				{
					"name": "Delete ticket template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/ticketTemplates/deleteMany",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"ticketTemplates",
								"deleteMany"
							]
						},
						"description": "This API deletes a ticket template from your help desk portal.\n#### OAuth Scope\n- `Desk.settings.DELETE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | Array of Entity id to be deleted \n"
					},
					"response": [
						{
							"name": "Delete ticket template",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\" : [ \"4000000083313\", \"4000000082105\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/ticketTemplates/deleteMany",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"ticketTemplates",
										"deleteMany"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : true,\n    \"id\" : \"2000000021011\",\n    \"errors\" : null\n  }, {\n    \"success\" : false,\n    \"id\" : \"4000000082105\",\n    \"errors\" : {\n      \"errorCode\" : \"UNPROCESSABLE_ENTITY\",\n      \"httpCode\" : \"422\"\n    }\n  } ]\n}"
						}
					]
				}
			],
			"description": "Ticket templates are provisions that automatically populate predefined values in ticket fields, thereby helping users save time and effort while adding new tickets."
		},
		{
			"name": "Tickets Comments",
			"item": [
				{
					"name": "Create ticket comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tickets/:ticket_id/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tickets",
								":ticket_id",
								"comments"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API adds a comment to a ticket. To include an @mention, follow this format: zsu[@user:{zuid}]zsu.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| content  | &lt;string&gt;<br />max chars : 32000 | Content of the comment. To retrieve or set user mentions, use this code format: <b>zsu[@user:{zuid}zsu</b>. \n| isPublic  | &lt;boolean&gt;<br /> | Key that returns if a comment is public or not. The value of this key can be set only at the time of making a comment. \n| attachmentIds  | &lt;list&gt;<br /> | List of file attachments in the comment. For more information on attachments, refer to the Uploads section of this document. \n| contentType  | &lt;string&gt;<br />max chars : 100 | Used to denote the content-type which maybe `html` or `plainText`. The default type is `html`. \n"
					},
					"response": [
						{
							"name": "Create ticket comment",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isPublic\" : \"true\",\n  \"attachmentIds\" : [ \"4000000008892\" ],\n  \"contentType\" : \"html\",\n  \"content\" : \"zsu[@user:11550965]zsu Please fix this ASAP\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000528005/comments",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000528005",
										"comments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : null,\n  \"attachments\" : [ {\n    \"size\" : \"12734\",\n    \"name\" : \"Attachment.png\",\n    \"id\" : \"4000000008892\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/4000000528005/comments/4000000529001/attachments/4000000008892/content\"\n  } ],\n  \"commentedTime\" : \"2017-01-24T14:06:58.193Z\",\n  \"isPublic\" : true,\n  \"id\" : \"4000000529001\",\n  \"contentType\" : \"html\",\n  \"content\" : \"zsu[@user:11550965]zsu Please fix this ASAP\",\n  \"commenterId\" : \"4000000008692\",\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"LightAgent\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update ticket comment",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tickets/:ticket_id/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tickets",
								":ticket_id",
								"comments",
								"{comment_id}"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API modifies an existing comment. To include an @mention, follow this format: zsu[@user:{zuid}]zsu.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| content  | &lt;string&gt;<br />max chars : 32000 | Content of the comment. To retrieve or set user mentions, use this code format: <b>zsu[@user:{zuid}zsu</b>. \n| isPublic  | &lt;boolean&gt;<br /> | Key that returns if a comment is public or not. The value of this key can be set only at the time of making a comment. \n| attachmentIds  | &lt;list&gt;<br /> | List of file attachments in the comment. For more information on attachments, refer to the Uploads section of this document. \n| contentType  | &lt;string&gt;<br />max chars : 100 | Used to denote the content-type which maybe `html` or `plainText`. The default type is `html`. \n"
					},
					"response": [
						{
							"name": "Update ticket comment",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attachmentIds\" : [ \"4000000008994\" ],\n  \"content\" : \"Edited comment.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000528005/comments/4000000529001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000528005",
										"comments",
										"4000000529001"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2017-01-24T14:12:45.163Z\",\n  \"attachments\" : [ {\n    \"size\" : \"12734\",\n    \"name\" : \"Attachment_edited.png\",\n    \"id\" : \"4000000008994\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n  } ],\n  \"commentedTime\" : \"2017-01-24T14:06:58.000Z\",\n  \"isPublic\" : true,\n  \"id\" : \"4000000529001\",\n  \"contentType\" : \"plainText\",\n  \"commenterId\" : \"4000000008692\",\n  \"content\" : \"Fixed the issue.\",\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/portalUser/4000000008692/photo?orgId=292828\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"PortalUser\",\n    \"type\" : \"END_USER\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete ticket comment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tickets/:ticket_id/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tickets",
								":ticket_id",
								"comments",
								"{comment_id}"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API deletes a comment.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Delete ticket comment",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000528005/comments/4000000529001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000528005",
										"comments",
										"4000000529001"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get ticket comment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tickets/:ticket_id/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tickets",
								":ticket_id",
								"comments",
								"{comment_id}"
							],
							"query": [
								{
									"key": "include",
									"value": "<String>\n",
									"description": "Secondary information related to the comments. Value allowed is `mentions`, which returns the details of users mentioned in the comments.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API fetches a ticket comment from your help desk portal.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get ticket comment",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000528005/comments/4000000529001?include=mentions",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000528005",
										"comments",
										"4000000529001"
									],
									"query": [
										{
											"key": "include",
											"value": "mentions"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2017-01-24T14:12:45.000Z\",\n  \"attachments\" : [ {\n    \"size\" : \"12734\",\n    \"name\" : \"Attachment_edited.png\",\n    \"id\" : \"4000000008994\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n  } ],\n  \"commentedTime\" : \"2017-01-24T14:06:58.000Z\",\n  \"isPublic\" : true,\n  \"id\" : \"4000000529001\",\n  \"contentType\" : \"plainText\",\n  \"commenterId\" : \"4000000008692\",\n  \"content\" : \"Sample zsu[@user:55616589]zsu and zsu[@team:31138000001254025_new team]zsu testing\",\n  \"mention\" : [ {\n    \"firstName\" : \"\",\n    \"lastName\" : \"pandees\",\n    \"photoURL\" : null,\n    \"offSet\" : \"7\",\n    \"length\" : \"28\",\n    \"id\" : \"31138000000573164\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"carol@zylker.com\",\n    \"zuid\" : \"55616589\"\n  }, {\n    \"offSet\" : \"39\",\n    \"length\" : \"46\",\n    \"name\" : \"new team\",\n    \"id\" : \"31138000001254025\",\n    \"type\" : \"TEAM\"\n  } ],\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"LightAgent\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "List all ticket comments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tickets/:ticket_id/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tickets",
								":ticket_id",
								"comments"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\nrange : >=0",
									"description": "Index number starting from which the comments must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\ndefault : 50,",
									"description": "Number of comments to fetch",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort by the `commentedTime` attribute. The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<String>\n",
									"description": "Secondary information related to the comments. Value allowed is `mentions`, which returns the details of users mentioned in the comments.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API lists a particular number of comments recorded on a ticket, based on the limit specified.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "List all ticket comments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000528005/comments?include=mentions",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000528005",
										"comments"
									],
									"query": [
										{
											"key": "include",
											"value": "mentions"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2017-01-24T14:12:45.000Z\",\n    \"attachments\" : [ {\n      \"size\" : \"12734\",\n      \"name\" : \"Attachment_edited.png\",\n      \"id\" : \"4000000008994\",\n      \"href\" : \"https://desk.zoho.com/api/v1/tickets/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n    } ],\n    \"commentedTime\" : \"2017-01-24T14:06:58.000Z\",\n    \"isPublic\" : true,\n    \"id\" : \"4000000529001\",\n    \"contentType\" : \"html\",\n    \"content\" : \"Sample zsu[@user:55616589]zsu and zsu[@team:31138000001254025_new team]zsu testing\",\n    \"commenterId\" : \"4000000008692\",\n    \"mention\" : [ {\n      \"firstName\" : \"\",\n      \"lastName\" : \"pandees\",\n      \"photoURL\" : null,\n      \"offSet\" : \"7\",\n      \"length\" : \"28\",\n      \"id\" : \"31138000000573164\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"carol@zylker.com\",\n      \"zuid\" : \"55616589\"\n    }, {\n      \"offSet\" : \"39\",\n      \"length\" : \"46\",\n      \"name\" : \"new team\",\n      \"id\" : \"31138000001254025\",\n      \"type\" : \"TEAM\"\n    } ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"LightAgent\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  }, {\n    \"modifiedTime\" : null,\n    \"commentedTime\" : \"2017-01-24T14:14:37.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"4000000529007\",\n    \"contentType\" : \"html\",\n    \"content\" : \"zsu[@user:55616589]zsu Please fix this ASAP\",\n    \"commenterId\" : \"4000000008692\",\n    \"mention\" : [ {\n      \"firstName\" : \"\",\n      \"lastName\" : \"pandees\",\n      \"photoURL\" : null,\n      \"offSet\" : \"0\",\n      \"length\" : \"28\",\n      \"id\" : \"31138000000573164\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"carol@zylker.com\",\n      \"zuid\" : \"55616589\"\n    } ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/portalUser/4000000008692/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"PortalUser\",\n      \"type\" : \"END_USER\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get a ticket comment history",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tickets/:ticket_id/comments/{comment_id}/history",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tickets",
								":ticket_id",
								"comments",
								"{comment_id}",
								"history"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\nrange : >=0",
									"description": "Index number, starting from which the comment activities must be fetched",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<String>\n",
									"description": "Secondary information related to the comments. Value allowed is `mentions`, which returns the details of users mentioned in the comments.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\ndefault : 50,",
									"description": "Number of comment activities to fetch",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API fetches the history of comments recorded on a ticket, including instances of adding and editing the comments.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get a ticket comment history",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000528005/comments/4000000529001/history",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000528005",
										"comments",
										"4000000529001",
										"history"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"attachments\" : [ \"sample.png\", \"sam.txt\" ],\n    \"commentedTime\" : \"2013-11-04T11:21:07.912Z\",\n    \"isPublic\" : false,\n    \"commenterId\" : 13231241244,\n    \"content\" : \"hello comment\",\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/2000000012629/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"CEO\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"hagdsag@zylker.com\"\n    }\n  }, {\n    \"attachments\" : [ \"sample.png\", \"sam.txt\" ],\n    \"commentedTime\" : \"2013-11-04T11:21:07.912Z\",\n    \"isPublic\" : true,\n    \"commenterId\" : 13231241244,\n    \"content\" : \"hello comment\",\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/2000000012629/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"LightAgent\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"hagdsag@zylker.com\"\n    }\n  } ]\n}"
						}
					]
				}
			],
			"description": "Ticket comments are ticket-related conversations that occur mainly between different agents in your help desk portal. Comments marked as private in a ticket are visible only to agents, whereas comments marked as public appear on the customer portal too."
		},
		{
			"name": "Contacts Comments",
			"item": [
				{
					"name": "Create a contact comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contacts/:contact_id/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contacts",
								":contact_id",
								"comments"
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API adds a comment to a contact.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| content  | &lt;string&gt;<br />max chars : 32000 | Content of the comment. To retrieve or set user mentions, use this code format: <b>zsu[@user:{zuid}zsu</b>. \n| contentType  | &lt;string&gt;<br />max chars : 100 | Used to denote the content-type which maybe `html` or `plainText`. The default type is `html`. \n"
					},
					"response": [
						{
							"name": "Create a contact comment",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contentType\" : \"html\",\n  \"content\" : \"First contact comment\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/4000000530041/comments",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"4000000530041",
										"comments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : null,\n  \"commentedTime\" : \"2017-01-24T19:34:56.358Z\",\n  \"id\" : \"4000000530043\",\n  \"contentType\" : \"html\",\n  \"content\" : \"First contact comment\",\n  \"commenterId\" : \"4000000008692\",\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"CEO\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update a contact comment",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contacts/:contact_id/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contacts",
								":contact_id",
								"comments",
								"{comment_id}"
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API updates an existing contact comment.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| content  | &lt;string&gt;<br />max chars : 32000 | Content of the comment. To retrieve or set user mentions, use this code format: <b>zsu[@user:{zuid}zsu</b>. \n| contentType  | &lt;string&gt;<br />max chars : 100 | Used to denote the content-type which maybe `html` or `plainText`. The default type is `html`. \n"
					},
					"response": [
						{
							"name": "Update a contact comment",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\" : \"second contact comment edit\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/4000000530041/comments/4000000530045",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"4000000530041",
										"comments",
										"4000000530045"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : null,\n  \"commentedTime\" : \"2017-01-24T19:35:23.000Z\",\n  \"id\" : \"4000000530045\",\n  \"contentType\" : \"plainText\",\n  \"commenterId\" : \"4000000008692\",\n  \"content\" : \"second contact comment edit\",\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"LightAgent\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a contact comment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contacts/:contact_id/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contacts",
								":contact_id",
								"comments",
								"{comment_id}"
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API deletes an existing contact comment.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Delete a contact comment",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/4000000530041/comments/4000000530037",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"4000000530041",
										"comments",
										"4000000530037"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a contact comment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contacts/:contact_id/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contacts",
								":contact_id",
								"comments",
								"{comment_id}"
							],
							"query": [
								{
									"key": "include",
									"value": "<String>\n",
									"description": "Secondary information related to the comments. Value allowed is `mentions`, which returns the details of users mentioned in the comments.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API fetches a contact comment from the portal.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "Get a contact comment",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/4000000530041/comments/4000000530043?include=mentions",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"4000000530041",
										"comments",
										"4000000530043"
									],
									"query": [
										{
											"key": "include",
											"value": "mentions"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : null,\n  \"commentedTime\" : \"2017-01-24T19:34:56.000Z\",\n  \"id\" : \"4000000530043\",\n  \"contentType\" : \"plainText\",\n  \"commenterId\" : \"4000000008692\",\n  \"content\" : \"Sample zsu[@user:55616589]zsu and zsu[@team:31138000001254025_new team]zsu testing\",\n  \"mention\" : [ {\n    \"firstName\" : \"\",\n    \"lastName\" : \"pandees\",\n    \"photoURL\" : null,\n    \"offSet\" : \"7\",\n    \"length\" : \"28\",\n    \"id\" : \"31138000000573164\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade15tywin@zylker.com\",\n    \"zuid\" : \"55616589\"\n  }, {\n    \"offSet\" : \"39\",\n    \"length\" : \"46\",\n    \"name\" : \"new team\",\n    \"id\" : \"31138000001254025\",\n    \"type\" : \"TEAM\"\n  }, {\n    \"offSet\" : \"59\",\n    \"departmentId\" : \"3113800000634345\",\n    \"entityNumber\" : \"1342\",\n    \"length\" : \"26\",\n    \"name\" : \"\",\n    \"id\" : \"3113800000143134\",\n    \"type\" : \"TICKET\"\n  } ],\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"LightAgent\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "List all contact comments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contacts/:contact_id/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contacts",
								":contact_id",
								"comments"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\nrange : >=0",
									"description": "Index number starting from which the comments must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\ndefault : 50,",
									"description": "No. of comments to fetch",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "sortby can be `commentedTime`. default order : commentedTime in descending order , prefix `-` denotes desc",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<String>\n",
									"description": "Secondary information related to the comments. Value allowed is `mentions`, which returns the details of users mentioned in the comments.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API lists a particular number of comments recorded on a contact, based on the limit specified.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "List all contact comments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/4000000530041/comments?include=mentions",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"4000000530041",
										"comments"
									],
									"query": [
										{
											"key": "include",
											"value": "mentions"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : null,\n    \"commentedTime\" : \"2017-01-24T19:35:23.000Z\",\n    \"id\" : \"4000000530045\",\n    \"contentType\" : \"plainText\",\n    \"content\" : \"second contact comment\",\n    \"commenterId\" : \"4000000008692\",\n    \"mention\" : [ ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/portalUser/4000000008692/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"PortalUser\",\n      \"type\" : \"END_USER\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  }, {\n    \"modifiedTime\" : null,\n    \"commentedTime\" : \"2017-01-24T19:34:56.000Z\",\n    \"id\" : \"4000000530043\",\n    \"contentType\" : \"html\",\n    \"content\" : \"First contact comment\",\n    \"commenterId\" : \"4000000008692\",\n    \"mention\" : [ ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"CEO\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  } ]\n}"
						}
					]
				}
			],
			"description": "Contact comments refer to comments recorded on contacts in the portal, for the reference of other agents. We are introducing a new key called contentType in the responses to ticket comment APIs. This new key supports two values: html and plaintext. Both types of content will be delivered only in plain text in API responses and the contentType key only indicates the presence of html formatting in the original comment."
		},
		{
			"name": "Accounts Comments",
			"item": [
				{
					"name": "Create an account comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/accounts/:account_id/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"accounts",
								":account_id",
								"comments"
							],
							"variable": [
								{
									"key": "account_id"
								}
							]
						},
						"description": "This API adds a comment to an account.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| content  | &lt;string&gt;<br />max chars : 32000 | Content of the comment. To retrieve or set user mentions, use this code format: <b>zsu[@user:{zuid}zsu</b>. \n| contentType  | &lt;string&gt;<br />max chars : 100 | Used to denote the content-type which maybe `html` or `plainText`. The default type is `html`. \n"
					},
					"response": [
						{
							"name": "Create an account comment",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contentType\" : \"html\",\n  \"content\" : \"First account comment\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/4000000190069/comments",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"4000000190069",
										"comments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : null,\n  \"commentedTime\" : \"2017-01-24T19:45:21.167Z\",\n  \"id\" : \"4000000530047\",\n  \"contentType\" : \"html\",\n  \"content\" : \"First account comment\",\n  \"commenterId\" : \"4000000008692\",\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"CEO\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update an account comment",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/accounts/:account_id/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"accounts",
								":account_id",
								"comments",
								"{comment_id}"
							],
							"variable": [
								{
									"key": "account_id"
								}
							]
						},
						"description": "This API updates an existing account comment.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| content  | &lt;string&gt;<br />max chars : 32000 | Content of the comment. To retrieve or set user mentions, use this code format: <b>zsu[@user:{zuid}zsu</b>. \n| contentType  | &lt;string&gt;<br />max chars : 100 | Used to denote the content-type which maybe `html` or `plainText`. The default type is `html`. \n"
					},
					"response": [
						{
							"name": "Update an account comment",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\" : \"second account comment edit\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/4000000190069/comments/4000000530047",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"4000000190069",
										"comments",
										"4000000530047"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : null,\n  \"commentedTime\" : \"2017-01-24T19:45:21.000Z\",\n  \"id\" : \"4000000530047\",\n  \"contentType\" : \"plainText\",\n  \"commenterId\" : \"4000000008692\",\n  \"content\" : \"second account comment edit\",\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"LightAgent\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete an account comment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/accounts/:account_id/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"accounts",
								":account_id",
								"comments",
								"{comment_id}"
							],
							"variable": [
								{
									"key": "account_id"
								}
							]
						},
						"description": "This API deletes an existing account comment.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Delete an account comment",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/4000000190069/comments/4000000530047",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"4000000190069",
										"comments",
										"4000000530047"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an account comment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/accounts/:account_id/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"accounts",
								":account_id",
								"comments",
								"{comment_id}"
							],
							"query": [
								{
									"key": "include",
									"value": "<String>\n",
									"description": "Secondary information related to the comments. Value allowed is `mentions`, which returns the details of users mentioned in the comments.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "account_id"
								}
							]
						},
						"description": "This API fetches an account comment from the portal.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "Get an account comment",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/4000000190069/comments/4000000530047?include=mentions",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"4000000190069",
										"comments",
										"4000000530047"
									],
									"query": [
										{
											"key": "include",
											"value": "mentions"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2017-01-24T19:46:24.000Z\",\n  \"commentedTime\" : \"2017-01-24T19:45:21.000Z\",\n  \"id\" : \"4000000530047\",\n  \"contentType\" : \"plainText\",\n  \"content\" : \"Sample zsu[@user:55616589]zsu and zsu[@team:31138000001254025_new team]zsu testing\",\n  \"commenterId\" : \"4000000008692\",\n  \"mention\" : [ {\n    \"firstName\" : \"\",\n    \"lastName\" : \"pandees\",\n    \"photoURL\" : null,\n    \"offSet\" : \"7\",\n    \"length\" : \"28\",\n    \"id\" : \"31138000000573164\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade15tywin@zylker.com\",\n    \"zuid\" : \"55616589\"\n  }, {\n    \"offSet\" : \"39\",\n    \"length\" : \"46\",\n    \"name\" : \"new team\",\n    \"id\" : \"31138000001254025\",\n    \"type\" : \"TEAM\"\n  }, {\n    \"offSet\" : \"59\",\n    \"departmentId\" : \"3113800000634345\",\n    \"entityNumber\" : \"1342\",\n    \"length\" : \"26\",\n    \"name\" : \"\",\n    \"id\" : \"3113800000143134\",\n    \"type\" : \"TICKET\"\n  } ],\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"LightAgent\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "List all account comments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/accounts/:account_id/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"accounts",
								":account_id",
								"comments"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\nrange : >=0",
									"description": "Index number starting from which the comments must be fetched.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\ndefault : 50,",
									"description": "No. of comments to fetch",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "sortby can be `commentedTime`. default order : commentedTime in descending order , prefix `-` denotes desc",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<String>\n",
									"description": "Secondary information related to the comments. Value allowed is `mentions`, which returns the details of users mentioned in the comments.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "account_id"
								}
							]
						},
						"description": "This API lists a particular number of comments recorded on an account, based on the limit specified.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "List all account comments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/4000000190069/comments?include=mentions",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"4000000190069",
										"comments"
									],
									"query": [
										{
											"key": "include",
											"value": "mentions"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : null,\n    \"commentedTime\" : \"2017-01-24T19:45:55.000Z\",\n    \"id\" : \"4000000530049\",\n    \"contentType\" : \"plainText\",\n    \"commenterId\" : \"4000000008692\",\n    \"content\" : \"Sample zsu[@user:55616589]zsu and zsu[@team:31138000001254025_new team]zsu testing\",\n    \"mention\" : [ {\n      \"firstName\" : \"\",\n      \"lastName\" : \"pandees\",\n      \"photoURL\" : null,\n      \"offSet\" : \"7\",\n      \"length\" : \"28\",\n      \"id\" : \"31138000000573164\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade15tywin@zylker.com\",\n      \"zuid\" : \"55616589\"\n    }, {\n      \"offSet\" : \"39\",\n      \"length\" : \"46\",\n      \"name\" : \"new team\",\n      \"id\" : \"31138000001254025\",\n      \"type\" : \"TEAM\"\n    }, {\n      \"offSet\" : \"59\",\n      \"departmentId\" : \"3113800000634345\",\n      \"length\" : \"26\",\n      \"id\" : \"3113800000143134\",\n      \"type\" : \"TICKET\"\n    } ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"LightAgent\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  }, {\n    \"modifiedTime\" : \"2017-01-24T19:46:24.000Z\",\n    \"commentedTime\" : \"2017-01-24T19:45:21.000Z\",\n    \"id\" : \"4000000530047\",\n    \"contentType\" : \"html\",\n    \"commenterId\" : \"4000000008692\",\n    \"content\" : \"Sample zsu[@user:55616589]zsu and zsu[@team:31138000001254025_new team]zsu testing\",\n    \"mention\" : [ {\n      \"firstName\" : \"\",\n      \"lastName\" : \"pandees\",\n      \"photoURL\" : null,\n      \"offSet\" : \"7\",\n      \"length\" : \"28\",\n      \"id\" : \"31138000000573164\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade15tywin@zylker.com\",\n      \"zuid\" : \"55616589\"\n    }, {\n      \"offSet\" : \"39\",\n      \"length\" : \"46\",\n      \"name\" : \"new team\",\n      \"id\" : \"31138000001254025\",\n      \"type\" : \"TEAM\"\n    }, {\n      \"offSet\" : \"59\",\n      \"departmentId\" : \"3113800000634345\",\n      \"entityNumber\" : \"1342\",\n      \"length\" : \"26\",\n      \"name\" : \"\",\n      \"id\" : \"3113800000143134\",\n      \"type\" : \"TICKET\"\n    } ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"LightAgent\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  } ]\n}"
						}
					]
				}
			],
			"description": "Account comments refer to comments made on accounts in the portal, for the reference of other agents. We are introducing a new key called contentType in the responses to ticket comment APIs. This new key supports two values: html and plaintext. Both types of content will be delivered only in plain text in API responses and the contentType key only indicates the presence of html formatting in the original comment."
		},
		{
			"name": "Tasks Comments",
			"item": [
				{
					"name": "Create a task comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tasks/:task_id/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tasks",
								":task_id",
								"comments"
							],
							"variable": [
								{
									"key": "task_id"
								}
							]
						},
						"description": "This API adds a comment to a task.\n#### OAuth Scope\n- `Desk.activities.UPDATE`\n- `Desk.activities.tasks.UPDATE`\n- `Desk.tasks.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| content  | &lt;string&gt;<br />max chars : 32000 | Content of the comment. To retrieve or set user mentions, use this code format: <b>zsu[@user:{zuid}zsu</b>. \n| contentType  | &lt;string&gt;<br />max chars : 100 | Used to denote the content-type which maybe `html` or `plainText`. The default type is `html`. \n"
					},
					"response": [
						{
							"name": "Create a task comment",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contentType\" : \"html\",\n  \"content\" : \"First Task comment.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tasks/4000000530001/comments",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tasks",
										"4000000530001",
										"comments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : null,\n  \"attachments\" : [ {\n    \"size\" : \"12734\",\n    \"name\" : \"Attachment.png\",\n    \"id\" : \"4000000008994\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tasks/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n  } ],\n  \"commentedTime\" : \"2017-01-24T14:54:33.534Z\",\n  \"id\" : \"4000000530003\",\n  \"contentType\" : \"html\",\n  \"content\" : \"First Task comment.\",\n  \"commenterId\" : \"4000000008692\",\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"LightAgent\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update a task comment",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tasks/:task_id/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tasks",
								":task_id",
								"comments",
								"{comment_id}"
							],
							"variable": [
								{
									"key": "task_id"
								}
							]
						},
						"description": "This API updates an existing task comment.\n#### OAuth Scope\n- `Desk.activities.UPDATE`\n- `Desk.activities.tasks.UPDATE`\n- `Desk.tasks.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| content  | &lt;string&gt;<br />max chars : 32000 | Content of the comment. To retrieve or set user mentions, use this code format: <b>zsu[@user:{zuid}zsu</b>. \n| contentType  | &lt;string&gt;<br />max chars : 100 | Used to denote the content-type which maybe `html` or `plainText`. The default type is `html`. \n"
					},
					"response": [
						{
							"name": "Update a task comment",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\" : \"Edit Task comment\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tasks/4000000530001/comments/4000000530003",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tasks",
										"4000000530001",
										"comments",
										"4000000530003"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2017-01-24T14:56:20.447Z\",\n  \"attachments\" : [ {\n    \"size\" : \"12734\",\n    \"name\" : \"Attachment_edited.png\",\n    \"id\" : \"4000000008994\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tasks/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n  } ],\n  \"commentedTime\" : \"2017-01-24T14:54:33.000Z\",\n  \"id\" : \"4000000530003\",\n  \"contentType\" : \"plainText\",\n  \"commenterId\" : \"4000000008692\",\n  \"content\" : \"Edit Task comment\",\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"LightAgent\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a task comment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tasks/:task_id/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tasks",
								":task_id",
								"comments",
								"{comment_id}"
							],
							"variable": [
								{
									"key": "task_id"
								}
							]
						},
						"description": "This API deletes an existing task comment.\n#### OAuth Scope\n- `Desk.activities.UPDATE`\n- `Desk.activities.tasks.UPDATE`\n- `Desk.tasks.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Delete a task comment",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tasks/4000000530001/comments/4000000530003",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tasks",
										"4000000530001",
										"comments",
										"4000000530003"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a task comment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tasks/:task_id/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tasks",
								":task_id",
								"comments",
								"{comment_id}"
							],
							"query": [
								{
									"key": "include",
									"value": "<String>\n",
									"description": "Secondary information related to the comments. Value allowed is `mentions`, which returns the details of users mentioned in the comments.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "task_id"
								}
							]
						},
						"description": "This API fetches a task comment from the portal.\n#### OAuth Scope\n- `Desk.activities.READ`\n- `Desk.activities.tasks.READ`\n- `Desk.tasks.READ`\n\n"
					},
					"response": [
						{
							"name": "Get a task comment",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tasks/4000000530001/comments/4000000530005?include=mentions",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tasks",
										"4000000530001",
										"comments",
										"4000000530005"
									],
									"query": [
										{
											"key": "include",
											"value": "mentions"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : null,\n  \"attachments\" : [ {\n    \"size\" : \"12734\",\n    \"name\" : \"Attachment_edited.png\",\n    \"id\" : \"4000000008994\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tasks/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n  } ],\n  \"commentedTime\" : \"2017-01-24T15:04:47.000Z\",\n  \"id\" : \"4000000530005\",\n  \"contentType\" : \"plainText\",\n  \"content\" : \"Second Task Comment......\",\n  \"commenterId\" : \"4000000008692\",\n  \"mention\" : [ ],\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"CEO\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "List all task comments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tasks/:task_id/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tasks",
								":task_id",
								"comments"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\nrange : >=0",
									"description": "Index number starting from which the comments must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\ndefault : 50,",
									"description": "No. of comments to fetch",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort comments by the `commentedTime` attribute. The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<String>\n",
									"description": "Secondary information related to the comments. Value allowed is `mentions`, which returns the details of users mentioned in the comments.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "task_id"
								}
							]
						},
						"description": "This API lists a particular number of comments recorded on a task, based on the limit specified.\n#### OAuth Scope\n- `Desk.activities.READ`\n- `Desk.activities.tasks.READ`\n- `Desk.tasks.READ`\n\n"
					},
					"response": [
						{
							"name": "List all task comments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tasks/4000000530001/comments?include=mentions",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tasks",
										"4000000530001",
										"comments"
									],
									"query": [
										{
											"key": "include",
											"value": "mentions"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : null,\n    \"commentedTime\" : \"2017-01-24T15:04:47.000Z\",\n    \"id\" : \"4000000530005\",\n    \"contentType\" : \"plainText\",\n    \"commenterId\" : \"4000000008692\",\n    \"content\" : \"Second Task Comment......\",\n    \"mention\" : [ ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"LightAgent\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  }, {\n    \"modifiedTime\" : \"2017-01-24T14:56:20.000Z\",\n    \"attachments\" : [ {\n      \"size\" : \"12734\",\n      \"name\" : \"Attachment_list.png\",\n      \"id\" : \"4000000008994\",\n      \"href\" : \"https://desk.zoho.com/api/v1/tasks/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n    } ],\n    \"commentedTime\" : \"2017-01-24T14:54:33.000Z\",\n    \"id\" : \"4000000530003\",\n    \"contentType\" : \"html\",\n    \"commenterId\" : \"4000000008692\",\n    \"content\" : \"Edit Task comment\",\n    \"mention\" : [ ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/portalUser/4000000008692/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"PortalUser\",\n      \"type\" : \"END_USER\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  } ]\n}"
						}
					]
				}
			],
			"description": "Task comments refer to comments recorded on tasks assigned to agents. We are introducing a new key called contentType in the responses to ticket comment APIs. This new key supports two values: html and plaintext. Both types of content will be delivered only in plain text in API responses and the contentType key only indicates the presence of html formatting in the original comment."
		},
		{
			"name": "Articles Comments",
			"item": [
				{
					"name": "Create a translation comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/articles/:article_id/translations/{locale}/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"articles",
								":article_id",
								"translations",
								"{locale}",
								"comments"
							],
							"variable": [
								{
									"key": "article_id"
								}
							]
						},
						"description": "This API adds a comment to an article translation.\n#### OAuth Scope\n- `Desk.articles.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| content (required) | &lt;string&gt;<br />max chars : 32000 | Content of the comment. To retrieve or set user mentions, use this code format: <b>zsu[@user:{zuid}zsu</b>. \n| isPublic (required) | &lt;boolean&gt;<br /> | Visibility of the comment, which can be set only at the time of commenting.  \n| contentType (required) | &lt;string&gt;<br />max chars : 100 | Used to denote the content-type which maybe `html` or `plainText`. The default type is `html`. \n"
					},
					"response": [
						{
							"name": "Create a translation comment",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contentType\" : \"html\",\n  \"content\" : \"First article comment\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/4000000530033/translations/en-us/comments",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"4000000530033",
										"translations",
										"en-us",
										"comments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : null,\n  \"commentedTime\" : \"2017-01-24T19:28:35.309Z\",\n  \"isPublic\" : false,\n  \"id\" : \"4000000530037\",\n  \"contentType\" : \"html\",\n  \"content\" : \"First article comment\",\n  \"commenterId\" : \"4000000008692\",\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"LightAgent\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update a translation comment",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/articles/:article_id/translations/{locale}/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"articles",
								":article_id",
								"translations",
								"{locale}",
								"comments",
								"{comment_id}"
							],
							"variable": [
								{
									"key": "article_id"
								}
							]
						},
						"description": "This API updates an existing article translation comment.\n#### OAuth Scope\n- `Desk.articles.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| content  | &lt;string&gt;<br />max chars : 32000 | Content of the comment. To retrieve or set user mentions, use this code format: <b>zsu[@user:{zuid}zsu</b>. \n| isPublic  | &lt;boolean&gt;<br /> | Visibility of the comment, which can be set only at the time of commenting.  \n| contentType  | &lt;string&gt;<br />max chars : 100 | Used to denote the content-type which maybe `html` or `plainText`. The default type is `html`. \n"
					},
					"response": [
						{
							"name": "Update a translation comment",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\" : \"first article comment edit\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/4000000530033/translations/en-us/comments/4000000530037",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"4000000530033",
										"translations",
										"en-us",
										"comments",
										"4000000530037"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : null,\n  \"commentedTime\" : \"2017-01-24T19:28:35.000Z\",\n  \"isPublic\" : false,\n  \"id\" : \"4000000530037\",\n  \"contentType\" : \"plainText\",\n  \"commenterId\" : \"4000000008692\",\n  \"content\" : \"first article comment edit\",\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"LightAgent\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a translation comment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/articles/:article_id/translations/{locale}/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"articles",
								":article_id",
								"translations",
								"{locale}",
								"comments",
								"{comment_id}"
							],
							"variable": [
								{
									"key": "article_id"
								}
							]
						},
						"description": "This API deletes an existing article translation comment.\n#### OAuth Scope\n- `Desk.articles.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete a translation comment",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/4000000530033/translations/en-us/comments/4000000530037",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"4000000530033",
										"translations",
										"en-us",
										"comments",
										"4000000530037"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a article translation comment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/articles/:article_id/translations/{locale}/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"articles",
								":article_id",
								"translations",
								"{locale}",
								"comments",
								"{comment_id}"
							],
							"variable": [
								{
									"key": "article_id"
								}
							]
						},
						"description": "This API fetches an article translation comment from the portal.\n#### OAuth Scope\n- `Desk.articles.READ`\n\n"
					},
					"response": [
						{
							"name": "Get a article translation comment",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/4000000530033/translations/en-us/comments/4000000530037",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"4000000530033",
										"translations",
										"en-us",
										"comments",
										"4000000530037"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2017-01-24T19:29:59.000Z\",\n  \"commentedTime\" : \"2017-01-24T19:28:35.000Z\",\n  \"isPublic\" : false,\n  \"id\" : \"4000000530037\",\n  \"contentType\" : \"plainText\",\n  \"content\" : \"first article comment edit\",\n  \"commenterId\" : \"4000000008692\",\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"CEO\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "List all translation comments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/articles/:article_id/translations/{locale}comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"articles",
								":article_id",
								"translations",
								"{locale}comments"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\ndefault : 1,",
									"description": "Index number starting from which the comments must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\ndefault : 5,",
									"description": "No. of comments to fetch",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort comments by the `commentedTime` attribute. The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "article_id"
								}
							]
						},
						"description": "This API lists a particular number of comments recorded on an article translation, based on the limit specified.\n#### OAuth Scope\n- `Desk.articles.READ`\n\n"
					},
					"response": [
						{
							"name": "List all translation comments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/articles/4000000530033/translations/en-us/comments",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"articles",
										"4000000530033",
										"translations",
										"en-us",
										"comments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : null,\n    \"commentedTime\" : \"2017-01-24T19:29:22.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"4000000530039\",\n    \"contentType\" : \"plainText\",\n    \"commenterId\" : \"4000000008692\",\n    \"content\" : \"second article comment\",\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/4000000008692/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"LightAgent\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  }, {\n    \"modifiedTime\" : \"2017-01-24T19:29:59.000Z\",\n    \"commentedTime\" : \"2017-01-24T19:28:35.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"4000000530037\",\n    \"contentType\" : \"html\",\n    \"commenterId\" : \"4000000008692\",\n    \"content\" : \"first article comment edit\",\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/portalUser/4000000008692/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"PortalUser\",\n      \"type\" : \"END_USER\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  } ]\n}"
						}
					]
				}
			],
			"description": "Article comments refer to comments recorded on help articles in the knowledge base. We are introducing a new key called contentType in the responses to ticket comment APIs. This new key supports two values: html and plaintext. Both types of content will be delivered only in plain text in API responses and the contentType key only indicates the presence of html formatting in the original comment."
		},
		{
			"name": "Contracts Comments",
			"item": [
				{
					"name": "Create a contract comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contracts/:contract_id/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contracts",
								":contract_id",
								"comments"
							],
							"variable": [
								{
									"key": "contract_id"
								}
							]
						},
						"description": "This API adds a comment to a contract.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| content  | &lt;string&gt;<br />max chars : 32000 | Content of the comment. To retrieve or set user mentions, use this code format: <b>zsu[@user:{zuid}zsu</b>. \n| contentType  | &lt;string&gt;<br />max chars : 100 | Used to denote the content-type which maybe `html` or `plainText`. The default type is `html`. \n"
					},
					"response": [
						{
							"name": "Create a contract comment",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contentType\" : \"html\",\n  \"content\" : \"First contract comment\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/contracts/4000000230035/comments",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contracts",
										"4000000230035",
										"comments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : null,\n  \"attachments\" : [ {\n    \"size\" : \"12734\",\n    \"name\" : \"Attachment.png\",\n    \"id\" : \"4000000008892\",\n    \"href\" : \"https://desk.zoho.com/api/v1/contracts/4000000528005/comments/4000000529001/attachments/4000000008892/content\"\n  } ],\n  \"commentedTime\" : \"2017-01-24T19:49:34.472Z\",\n  \"id\" : \"4000000530051\",\n  \"contentType\" : \"html\",\n  \"content\" : \"First contract comment\",\n  \"commenterId\" : \"4000000008692\",\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/portalUser/4000000008692/photo?orgId=292828\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"PortalUser\",\n    \"type\" : \"END_USER\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update a contract comment",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contracts/:contract_id/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contracts",
								":contract_id",
								"comments",
								"{comment_id}"
							],
							"variable": [
								{
									"key": "contract_id"
								}
							]
						},
						"description": "This API updates an existing contract comment.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| content  | &lt;string&gt;<br />max chars : 32000 | Content of the comment. To retrieve or set user mentions, use this code format: <b>zsu[@user:{zuid}zsu</b>. \n| contentType  | &lt;string&gt;<br />max chars : 100 | Used to denote the content-type which maybe `html` or `plainText`. The default type is `html`. \n"
					},
					"response": [
						{
							"name": "Update a contract comment",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\" : \"second contract comment edit\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/contracts/4000000230035/comments/4000000530053",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contracts",
										"4000000230035",
										"comments",
										"4000000530053"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : null,\n  \"attachments\" : [ {\n    \"size\" : \"12734\",\n    \"name\" : \"Attachment_edited.png\",\n    \"id\" : \"4000000008994\",\n    \"href\" : \"https://desk.zoho.com/api/v1/contracts/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n  } ],\n  \"commentedTime\" : \"2017-01-24T19:50:08.000Z\",\n  \"id\" : \"4000000530053\",\n  \"contentType\" : \"plainText\",\n  \"commenterId\" : \"4000000008692\",\n  \"content\" : \"second contract comment edit\",\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/portalUser/4000000008692/photo?orgId=292828\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"PortalUser\",\n    \"type\" : \"END_USER\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a contract comment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contracts/:contract_id/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contracts",
								":contract_id",
								"comments",
								"{comment_id}"
							],
							"variable": [
								{
									"key": "contract_id"
								}
							]
						},
						"description": "This API deletes an existing contract comment.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Delete a contract comment",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contracts/4000000230035/comments/4000000530053",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contracts",
										"4000000230035",
										"comments",
										"4000000530053"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a contract comment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contracts/:contract_id/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contracts",
								":contract_id",
								"comments",
								"{comment_id}"
							],
							"query": [
								{
									"key": "include",
									"value": "<String>\n",
									"description": "Secondary information related to the comments. Value allowed is `mentions`, which returns the details of users mentioned in the comments.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "contract_id"
								}
							]
						},
						"description": "This API fetches a contract comment from the portal.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get a contract comment",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contracts/4000000230035/comments/4000000530053?include=mentions",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contracts",
										"4000000230035",
										"comments",
										"4000000530053"
									],
									"query": [
										{
											"key": "include",
											"value": "mentions"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2017-01-24T19:50:40.000Z\",\n  \"attachments\" : [ {\n    \"size\" : \"12734\",\n    \"name\" : \"Attachment_edited.png\",\n    \"id\" : \"4000000008994\",\n    \"href\" : \"https://desk.zoho.com/api/v1/contracts/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n  } ],\n  \"commentedTime\" : \"2017-01-24T19:50:08.000Z\",\n  \"id\" : \"4000000530053\",\n  \"contentType\" : \"plainText\",\n  \"content\" : \"second contract comment edit\",\n  \"commenterId\" : \"4000000008692\",\n  \"mention\" : [ ],\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/portalUser/4000000008692/photo?orgId=292828\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"PortalUser\",\n    \"type\" : \"END_USER\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "List all contract comment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contracts/:contract_id/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contracts",
								":contract_id",
								"comments"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\nrange : >=0",
									"description": "Index number starting from which the comments must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\ndefault : 50,",
									"description": "No. of comments to fetch",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "sortby can be `commentedTime`. default order : commentedTime in descending order , prefix `-` denotes desc",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<String>\n",
									"description": "Secondary information related to the comments. Value allowed is `mentions`, which returns the details of users mentioned in the comments.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "contract_id"
								}
							]
						},
						"description": "This API lists a particular number of comments recorded on a contract, based on the limit specified.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List all contract comment",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contracts/4000000230035/comments?include=mentions",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contracts",
										"4000000230035",
										"comments"
									],
									"query": [
										{
											"key": "include",
											"value": "mentions"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2017-01-24T19:50:40.000Z\",\n    \"attachments\" : [ {\n      \"size\" : \"12734\",\n      \"name\" : \"Attachment_edited.png\",\n      \"id\" : \"4000000008994\",\n      \"href\" : \"https://desk.zoho.com/api/v1/contracts/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n    } ],\n    \"commentedTime\" : \"2017-01-24T19:50:08.000Z\",\n    \"id\" : \"4000000530053\",\n    \"contentType\" : \"html\",\n    \"commenterId\" : \"4000000008692\",\n    \"content\" : \"second contract comment edit\",\n    \"mention\" : [ ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/portalUser/4000000008692/photo?orgId=292828\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"PortalUser\",\n      \"type\" : \"END_USER\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  }, {\n    \"modifiedTime\" : null,\n    \"commentedTime\" : \"2017-01-24T19:49:34.000Z\",\n    \"id\" : \"4000000530051\",\n    \"contentType\" : \"plainText\",\n    \"commenterId\" : \"4000000008692\",\n    \"content\" : \"First contract comment\",\n    \"mention\" : [ ]\n  } ]\n}"
						}
					]
				}
			],
			"description": "Contract comments refer to comments recorded on SLA contracts in the portal, for the reference of other agents. We are introducing a new key called contentType in the responses to ticket comment APIs. This new key supports two values: html and plaintext. Both types of content will be delivered only in plain text in API responses and the contentType key only indicates the presence of html formatting in the original comment."
		},
		{
			"name": "Uploads",
			"item": [
				{
					"name": "Upload file",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/uploads",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"uploads"
							]
						},
						"description": "This API uploads a file.\n#### OAuth Scope\n- `Desk.basic.CREATE`\n\n"
					},
					"response": [
						{
							"name": "Upload file",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/uploads",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"uploads"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"size\" : \"4769\",\n  \"creatorId\" : \"4000000008692\",\n  \"name\" : \"zoho.jpeg\",\n  \"createdTime\" : \"2016-06-23T07:31:42.000Z\",\n  \"isPublic\" : false,\n  \"id\" : \"4000000055001\",\n  \"href\" : \"https://desk.zoho.com/api/v1/uploads/1892000001008043/contents\"\n}"
						}
					]
				}
			],
			"description": "Uploads are temporary file attachments that exist with a ticket for a period of 24 hours."
		},
		{
			"name": "Ticket Attachments",
			"item": [
				{
					"name": "List ticket attachments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/attachments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"attachments"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort by the `createdTime` attribute. The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the attachments must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of attachments to fetch",
									"disabled": true
								},
								{
									"key": "isPublic",
									"value": "<Boolean>\n",
									"description": "Key that returns if the attachment is public or no",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Secondary information related to the attachments. Value allowed is `creator`, which returns the details of users who added the attachments.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API lists the files attached to a ticket.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "List ticket attachments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000001004024/attachments?include=creator",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000001004024",
										"attachments"
									],
									"query": [
										{
											"key": "include",
											"value": "creator"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"1079\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"issues.txt\",\n    \"createdTime\" : \"2013-11-06T10:25:03.000Z\",\n    \"isPublic\" : true,\n    \"id\" : \"1892000000047041\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000001004024/attachments/1892000000047041/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"135222\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"guidelines.pdf\",\n    \"createdTime\" : \"2014-03-05T06:16:15.000Z\",\n    \"isPublic\" : true,\n    \"id\" : \"1892000000089041\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000001004024/attachments/1892000000089041/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"97951\",\n    \"creatorId\" : \"1892000000042001\",\n    \"name\" : \"CreditHistory.pdf\",\n    \"createdTime\" : \"2016-06-21T10:15:34.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000001052021\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000001004024/attachments/1892000001052021/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"97951\",\n    \"creatorId\" : \"1892000000042001\",\n    \"name\" : \"values.txt\",\n    \"createdTime\" : \"2016-06-21T10:15:49.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000001052025\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000001004024/attachments/1892000001052025/content\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Create Ticket attachment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/attachments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"attachments"
							],
							"query": [
								{
									"key": "isPublic",
									"value": "<Boolean>\n",
									"description": "Field that determines whether the attachment is public or private",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API attaches a file to a ticket.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Create Ticket attachment",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000001004024/attachments",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000001004024",
										"attachments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"size\" : \"32\",\n  \"creatorId\" : \"1892000000042001\",\n  \"name\" : \"issues.txt\",\n  \"createdTime\" : \"2016-05-30T08:32:51.338Z\",\n  \"isPublic\" : false,\n  \"id\" : \"1892000001010001\",\n  \"href\" : \"https://desk.zoho.com/api/v1/tickets/1892000001004024/attachments/1892000001010001/content\"\n}"
						}
					]
				},
				{
					"name": "Update Ticket attachment",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/attachments/{attachment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"attachments",
								"{attachment_id}"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API updates an existing attachment.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| isPublic  | &lt;boolean&gt;<br /> | Whether to Show  \n"
					},
					"response": [
						{
							"name": "Update Ticket attachment",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isPublic\" : true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk%20.zoho.com/api/v1/tickets/1892000001004024/attachments/1892000001010001",
									"host": [
										"desk%20",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000001004024",
										"attachments",
										"1892000001010001"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Ticket attachment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/attachments/{attachment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"attachments",
								"{attachment_id}"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API deletes an attachment from a ticket.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Delete Ticket attachment",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/1892000001004024/attachments/1892000001010001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"1892000001004024",
										"attachments",
										"1892000001010001"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Ticket attachments are files you attach to a ticket to aid quick resolution."
		},
		{
			"name": "Contacts Attachments",
			"item": [
				{
					"name": "List Contact Attachments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contacts/:contact_id/attachments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contacts",
								":contact_id",
								"attachments"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort by the `createdTime` attribute. The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the attachments must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of attachments to fetch",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Secondary information related to the attachments. Value allowed is `creator`, which returns the details of users who added the attachments.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API lists the files attached to a contact.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "List Contact Attachments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/1892000001004024/attachments?include=creator",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"1892000001004024",
										"attachments"
									],
									"query": [
										{
											"key": "include",
											"value": "creator"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"1079\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"creation.txt\",\n    \"createdTime\" : \"2013-11-06T10:25:03.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000000047041\",\n    \"href\" : \"https://desk.zoho.com/api/v1/contacts/1892000001004024/attachments/1892000000047041/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"135222\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"profile.jpg\",\n    \"createdTime\" : \"2014-03-05T06:16:15.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000000089041\",\n    \"href\" : \"https://desk.zoho.com/api/v1/contacts/1892000001004024/attachments/1892000000089041/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"97951\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"contact_MobileNo.pdf\",\n    \"createdTime\" : \"2016-06-21T10:15:34.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000001052021\",\n    \"href\" : \"https://desk.zoho.com/api/v1/contacts/1892000001004024/attachments/1892000001052021/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"97951\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"contact_profile.jpg\",\n    \"createdTime\" : \"2016-06-21T10:15:49.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000001052025\",\n    \"href\" : \"https://desk.zoho.com/api/v1/contacts/1892000001004024/attachments/1892000001052025/content\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Create Contact Attachment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contacts/:contact_id/attachments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contacts",
								":contact_id",
								"attachments"
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API attaches a file to a contact.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n"
					},
					"response": [
						{
							"name": "Create Contact Attachment",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/1892000001004024/attachments",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"1892000001004024",
										"attachments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"size\" : \"32\",\n  \"creatorId\" : \"1892000000042002\",\n  \"name\" : \"profile.jpg\",\n  \"createdTime\" : \"2016-05-30T08:32:51.338Z\",\n  \"isPublic\" : false,\n  \"id\" : \"1892000001010001\",\n  \"href\" : \"https://desk.zoho.com/api/v1/contacts/1892000001004024/attachments/1892000001010001/content\"\n}"
						}
					]
				},
				{
					"name": "Delete Contact attachment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contacts/:contact_id/attachments/{attachment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contacts",
								":contact_id",
								"attachments",
								"{attachment_id}"
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API removes an attachment from a contact.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Delete Contact attachment",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/1892000001004024/attachments/1892000001010001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"1892000001004024",
										"attachments",
										"1892000001010001"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Contact attachments are files you attach to a contact to provide more context and reference information to other users."
		},
		{
			"name": "Accounts Attachments",
			"item": [
				{
					"name": "List Account attachments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/accounts/:account_id/attachments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"accounts",
								":account_id",
								"attachments"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort by the `createdTime` attribute. The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the attachments must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of attachments to fetch",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Secondary information related to the attachments. Value allowed is `creator`, which returns the details of users who added the attachments.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "account_id"
								}
							]
						},
						"description": "This API lists the files attached to an account.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "List Account attachments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/1892000001004024/attachments?include=creator",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"1892000001004024",
										"attachments"
									],
									"query": [
										{
											"key": "include",
											"value": "creator"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"1079\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"profile_photo.jpg\",\n    \"createdTime\" : \"2013-11-06T10:25:03.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000000047041\",\n    \"href\" : \"https://desk.zoho.com/api/v1/accounts/1892000001004024/attachments/1892000000047041/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"135222\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"profile.pdf\",\n    \"createdTime\" : \"2014-03-05T06:16:15.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000000089041\",\n    \"href\" : \"https://desk.zoho.com/api/v1/accounts/1892000001004024/attachments/1892000000089041/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"97951\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"logo.jpg\",\n    \"createdTime\" : \"2016-06-21T10:15:34.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000001052021\",\n    \"href\" : \"https://desk.zoho.com/api/v1/accounts/1892000001004024/attachments/1892000001052021/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"97951\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"profile.pdf\",\n    \"createdTime\" : \"2016-06-21T10:15:49.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000001052025\",\n    \"href\" : \"https://desk.zoho.com/api/v1/accounts/1892000001004024/attachments/1892000001052025/content\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Create Account attachment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/accounts/:account_id/attachments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"accounts",
								":account_id",
								"attachments"
							],
							"variable": [
								{
									"key": "account_id"
								}
							]
						},
						"description": "This API attaches a file to an account.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n"
					},
					"response": [
						{
							"name": "Create Account attachment",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/1892000001004024/attachments",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"1892000001004024",
										"attachments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"size\" : \"32\",\n  \"creatorId\" : \"1892000000042002\",\n  \"name\" : \"AccountDetails.txt\",\n  \"createdTime\" : \"2016-05-30T08:32:51.338Z\",\n  \"isPublic\" : false,\n  \"id\" : \"1892000001010001\",\n  \"href\" : \"https://desk.zoho.com/api/v1/accounts/1892000001004024/attachments/1892000001010001/content\"\n}"
						}
					]
				},
				{
					"name": "Delete Account attachment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/accounts/:account_id/attachments/{attachment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"accounts",
								":account_id",
								"attachments",
								"{attachment_id}"
							],
							"variable": [
								{
									"key": "account_id"
								}
							]
						},
						"description": "This API deletes an attachment from a account.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Delete Account attachment",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/1892000001004024/attachments/1892000001010001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"1892000001004024",
										"attachments",
										"1892000001010001"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Account attachments are files you attach to an account to provide more context and reference information to other users."
		},
		{
			"name": "Contact Deduplication",
			"item": [
				{
					"name": "List duplicate contacts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/groupContactDuplicateValues",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"groupContactDuplicateValues"
							],
							"query": [
								{
									"key": "fieldName",
									"value": "<string>\nmax chars : 100",
									"description": "Name of the field whose values must be matched for deduplication.Values allowed are: <br>`firstName,`<br> <br>`lastName,`<br> <br>`email,`<br> <br>`secondaryEmail,`<br> <br>`phone,`<br> <br>`fullName,`<br> and <br>`bothEmail.`<br>",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\ndefault : 0,",
									"description": "Index number starting from which the contacts must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of contacts to fetch",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Key that sorts the contacts by a specific attribute: `count` or `fieldValue`. The default sorting order is ascending. A `-` prefix denotes descending order of sorting",
									"disabled": true
								},
								{
									"key": "swFieldValue",
									"value": "<string>\nmax chars : 100",
									"description": "Key that specifies the letter with which the field values must start",
									"disabled": true
								}
							]
						},
						"description": "This API lists the duplicate entries of a contact.The fieldName parameters is mandatory in the API request<br/><br/>Note:<br/>If you encounter a 202 status code while executing this API request, it means there are 100,000 or more contacts in the help desk portal. Matching the records and finding duplicates will be time-consuming in such a scenario. Therefore, the deduplication request will be accepted, and after the process is completed, an automated report will be sent to the user who initiated the deduplication.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "List duplicate contacts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/groupContactDuplicateValues",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"groupContactDuplicateValues"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"count\" : 16,\n    \"fieldValue\" : \"Jade\"\n  }, {\n    \"count\" : 2,\n    \"fieldValue\" : \"saran\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List details of duplicate contacts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/groupContacts?fieldName=<string>\nmax chars : 100&fieldValues=<string>\nmax chars : 100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"groupContacts"
							],
							"query": [
								{
									"key": "fieldName",
									"value": "<string>\nmax chars : 100",
									"description": "Name of the field whose values must be matched for deduplication. Values allowed are: <br>`firstName,`<br> <br>`lastName,`<br> <br>`email,`<br> <br>`secondaryEmail,`<br> <br>`phone,`<br> <br>`fullName,`<br> and <br>`bothEmail.`<br>"
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Key that sorts the contacts by a specific attribute:&nbsp; <br>`firstName,`<br> <br>`lastName,`<br> <br>`fullName,`<br> <br>`phone,`<br> <br>`email,`<br> <br>`account,`<br> <br>`createdTime,`<br> <br>`modifiedTime`<br>",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\ndefault : 0,",
									"description": "Index number starting from which the contacts must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of contacts to fetch",
									"disabled": true
								},
								{
									"key": "fieldValues",
									"value": "<string>\nmax chars : 100",
									"description": "Actual values in each field related to the contact"
								},
								{
									"key": "include",
									"value": "<list>\n",
									"description": "Secondary information related to the contact. Value allowed is: `accounts`",
									"disabled": true
								}
							]
						},
						"description": "This API lists all the details of duplicate contacts.The fieldName and fieldValues parameters are mandatory in the API request\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "List details of duplicate contacts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/groupContacts",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"groupContacts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"fieldValue\" : \"Jade\",\n    \"contacts\" : [ {\n      \"lastName\" : \"Jade\",\n      \"secondaryEmail\" : null,\n      \"ownerId\" : null,\n      \"type\" : null,\n      \"accountId\" : \"1892000000091433\",\n      \"firstName\" : \"Jonathan\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/contacts/1892000000772003/photo\",\n      \"phone\" : \"555555\",\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n      \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n      \"zohoCRMContact\" : null,\n      \"id\" : \"1892000000772003\",\n      \"isSpam\" : false,\n      \"customerHappiness\" : {\n        \"badPercentage\" : \"0\",\n        \"okPercentage\" : \"0\",\n        \"goodPercentage\" : \"0\"\n      },\n      \"email\" : \"case@zylker.com\"\n    }, {\n      \"lastName\" : \"Jade\",\n      \"secondaryEmail\" : null,\n      \"ownerId\" : null,\n      \"type\" : null,\n      \"accountId\" : \"1892000000052077\",\n      \"firstName\" : \"Christ\",\n      \"photoURL\" : null,\n      \"phone\" : null,\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n      \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n      \"zohoCRMContact\" : {\n        \"id\" : \"1892000000772030\",\n        \"type\" : \"contacts_leads\"\n      },\n      \"id\" : \"1892000000772001\",\n      \"isSpam\" : false,\n      \"customerHappiness\" : {\n        \"badPercentage\" : \"22\",\n        \"okPercentage\" : \"31\",\n        \"goodPercentage\" : \"47\"\n      },\n      \"email\" : \"jade@zylker.com\"\n    } ]\n  }, {\n    \"fieldValue\" : \"Christ\",\n    \"contacts\" : [ {\n      \"lastName\" : \"Jade\",\n      \"secondaryEmail\" : null,\n      \"ownerId\" : null,\n      \"type\" : null,\n      \"accountId\" : \"1892000000091433\",\n      \"firstName\" : \"Christ\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/contacts/1892000000772003/photo\",\n      \"phone\" : \"555555\",\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n      \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n      \"zohoCRMContact\" : null,\n      \"id\" : \"1892000000772003\",\n      \"isSpam\" : false,\n      \"customerHappiness\" : {\n        \"badPercentage\" : \"0\",\n        \"okPercentage\" : \"0\",\n        \"goodPercentage\" : \"0\"\n      },\n      \"email\" : \"case@zylker.com\"\n    }, {\n      \"lastName\" : \"Jade\",\n      \"secondaryEmail\" : null,\n      \"ownerId\" : null,\n      \"type\" : null,\n      \"accountId\" : \"1892000000052077\",\n      \"firstName\" : \"Christ\",\n      \"photoURL\" : null,\n      \"phone\" : null,\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n      \"createdTime\" : \"2017-10-12T13:11:50.000Z\",\n      \"zohoCRMContact\" : {\n        \"id\" : \"1892000000772030\",\n        \"type\" : \"contacts_leads\"\n      },\n      \"id\" : \"1892000000772001\",\n      \"isSpam\" : false,\n      \"customerHappiness\" : {\n        \"badPercentage\" : \"22\",\n        \"okPercentage\" : \"31\",\n        \"goodPercentage\" : \"47\"\n      },\n      \"email\" : \"jade@zylker.com\"\n    } ]\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get name of default field",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contactsDeduplication/defaultFieldName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contactsDeduplication",
								"defaultFieldName"
							]
						},
						"description": "This API fetches the name of the field set as the default field for contact deduplication.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "Get name of default field",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contactsDeduplication/defaultFieldName",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contactsDeduplication",
										"defaultFieldName"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"fieldName\" : \"email\"\n}"
						}
					]
				},
				{
					"name": "Set default field for contact deduplication",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contactsDeduplication/defaultFieldName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contactsDeduplication",
								"defaultFieldName"
							]
						},
						"description": "This API sets the field you specify as the default field for deduplicating contacts.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| fieldName (required) | &lt;string&gt;<br />max chars : 100 | The name of the field \n| markDefault (required) | &lt;boolean&gt;<br /> | to mark the given field as default or remove the field from the default. \n"
					},
					"response": [
						{
							"name": "Set default field for contact deduplication",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fieldName\" : \"email\",\n  \"markDefault\" : true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/contactsDeduplication/defaultFieldName",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contactsDeduplication",
										"defaultFieldName"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Deduplication refers to identifying multiple resources containing the same information and consolidating them into a single, unique resource. The process of deduplicating multiple entries of the same contact is called contact deduplication."
		},
		{
			"name": "Account Deduplication",
			"item": [
				{
					"name": "List duplicate accounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/groupAccountDuplicateValues",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"groupAccountDuplicateValues"
							],
							"query": [
								{
									"key": "fieldName",
									"value": "<string>\nmax chars : 100",
									"description": "Name of the field whose values must be matched for deduplication.Values allowed are: <br>`email,`<br> <br>`phone,`<br> and <br>`accountName`<br>",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\ndefault : 0,",
									"description": "Index number starting from which the accounts must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of accounts to fetch",
									"disabled": true
								},
								{
									"key": "swFieldValue",
									"value": "<string>\nmax chars : 100",
									"description": "Key that specifies the letter with which the field values must start",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Key that sorts the accounts by a specific attribute: `count` or `fieldValue`. The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								}
							]
						},
						"description": "This API lists the duplicate entries of an account.The fieldName parameters is mandatory in the API request<br/><br/>Note:<br/>If you encounter a 202 status code while executing this API request, it means there are 100,000 or more accounts in the help desk portal. Matching the records and finding duplicates will be time-consuming in such a scenario. Therefore, the deduplication request will be accepted, and after the process is completed, an automated report will be sent to the user who initiated the deduplication.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "List duplicate accounts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/groupAccountDuplicateValues",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"groupAccountDuplicateValues"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"count\" : 16,\n    \"fieldValue\" : \"Admin Account\"\n  }, {\n    \"count\" : 2,\n    \"fieldValue\" : \"Agent Account\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List details of duplicate accounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/groupAccounts?fieldName=<string>\nmax chars : 100&fieldValues=<string>\nmax chars : 100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"groupAccounts"
							],
							"query": [
								{
									"key": "fieldName",
									"value": "<string>\nmax chars : 100",
									"description": "Name of the field whose values must be matched for deduplication.Values allowed are: <br>`email,`<br> <br>`phone,`<br> and <br>`accountName`<br>"
								},
								{
									"key": "from",
									"value": "<integer>\ndefault : 0,",
									"description": "Index number starting from which the accounts must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of accounts to fetch",
									"disabled": true
								},
								{
									"key": "fieldValues",
									"value": "<string>\nmax chars : 100",
									"description": "Actual values in each field related to the account"
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Key that sorts the accounts by a specific attribute: `accountName` or `createdTime` or `modifiedTime`. The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								}
							]
						},
						"description": "This API lists all the details of duplicate accounts.The fieldName and fieldValues parameters are mandatory in the API request\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "List details of duplicate accounts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/groupAccounts",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"groupAccounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"accounts\" : [ {\n      \"website\" : \"112121\",\n      \"accountName\" : \"Admin Account\",\n      \"phone\" : \"121212\",\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n      \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n      \"zohoCRMAccount\" : null,\n      \"id\" : \"1892000000052077\",\n      \"email\" : \"admin@zylker.com\"\n    }, {\n      \"website\" : \"112121\",\n      \"accountName\" : \"Admin Account\",\n      \"phone\" : \"121212\",\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n      \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n      \"zohoCRMAccount\" : null,\n      \"id\" : \"1892000000052077\",\n      \"email\" : \"admin@zylker.com\"\n    } ],\n    \"fieldValue\" : \"Admin Account\"\n  }, {\n    \"accounts\" : [ {\n      \"website\" : \"112121\",\n      \"accountName\" : \"Agent Account\",\n      \"phone\" : \"121212\",\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n      \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n      \"zohoCRMAccount\" : {\n        \"id\" : \"32754000000537001\"\n      },\n      \"id\" : \"1892000000052077\",\n      \"email\" : \"agent@zylker.com\"\n    }, {\n      \"website\" : \"112121\",\n      \"accountName\" : \"Agent Account\",\n      \"phone\" : \"121212\",\n      \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Accounts/dv/d126330fb061247d9ebddaeb9d93ba74750b0284bc703b38\",\n      \"createdTime\" : \"2015-02-16T16:57:44.000Z\",\n      \"zohoCRMAccount\" : {\n        \"id\" : \"32754000000537001\"\n      },\n      \"id\" : \"1892000000052077\",\n      \"email\" : \"agent@zylker.com\"\n    } ],\n    \"fieldValue\" : \"Agent Account\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get Default Field Name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/accountsDeduplication/defaultFieldName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"accountsDeduplication",
								"defaultFieldName"
							]
						},
						"description": "This API fetches the name of the field set as the default field for account deduplication.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Default Field Name",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/accountsDeduplication/defaultFieldName",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accountsDeduplication",
										"defaultFieldName"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"fieldName\" : \"email\"\n}"
						}
					]
				},
				{
					"name": "Set default field for account deduplication",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/accountsDeduplication/defaultFieldName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"accountsDeduplication",
								"defaultFieldName"
							]
						},
						"description": "This API sets the field you specify as the default field for deduplicating accounts.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| fieldName (required) | &lt;string&gt;<br />max chars : 100 | The name of the field \n| markDefault (required) | &lt;boolean&gt;<br /> | to mark the given field as default or remove the field from the default. \n"
					},
					"response": [
						{
							"name": "Set default field for account deduplication",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fieldName\" : \"accountName\",\n  \"markDefault\" : true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/accountsDeduplication/defaultFieldName",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accountsDeduplication",
										"defaultFieldName"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "The process of deduplicating multiple entries of the same account is called account deduplication"
		},
		{
			"name": "Account Followers",
			"item": [
				{
					"name": "Add account followers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/accounts/:account_id/addFollowers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"accounts",
								":account_id",
								"addFollowers"
							],
							"variable": [
								{
									"key": "account_id"
								}
							]
						},
						"description": "This API adds one or more users to the followers list of an account\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| followerIds (required) | &lt;list&gt;<br /> | the list of ids to be added as follower \n"
					},
					"response": [
						{
							"name": "Add account followers",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"followerIds\" : [ 5000000013292 ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/4000000190069/addFollowers",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"4000000190069",
										"addFollowers"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove account followers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/accounts/:account_id/removeFollowers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"accounts",
								":account_id",
								"removeFollowers"
							],
							"variable": [
								{
									"key": "account_id"
								}
							]
						},
						"description": "This API removes one or more users from the followers list of an account\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| followerIds (required) | &lt;list&gt;<br /> | the list of ids to be added as follower \n"
					},
					"response": [
						{
							"name": "Remove account followers",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"followerIds\" : [ 5000000013292 ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/4000000190069/removeFollowers",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"4000000190069",
										"removeFollowers"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get account followers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/accounts/:account_id/followers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"accounts",
								":account_id",
								"followers"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the followers must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of followers to list",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "account_id"
								}
							]
						},
						"description": "This API fetches the list of users following an account.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "Get account followers",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/accounts/4000000190069/followers",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"4000000190069",
										"followers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"firstName\" : \"\",\n    \"lastName\" : \"agent\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/5000000012903/photo\",\n    \"id\" : \"5000000012903\",\n    \"email\" : \"agent@zylker.com\"\n  }, {\n    \"firstName\" : \"\",\n    \"lastName\" : \"deskagent\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/5000000012902/photo\",\n    \"id\" : \"5000000012902\",\n    \"email\" : \"deskagent@zylker.com\"\n  } ]\n}"
						}
					]
				}
			],
			"description": "Account followers are users who follow an account to track the tickets raised from the account and the support provided."
		},
		{
			"name": "Contact Followers",
			"item": [
				{
					"name": "Add contact followers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contacts/:contact_id/addFollowers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contacts",
								":contact_id",
								"addFollowers"
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API adds one or more users to the followers list of a contact.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| followerIds (required) | &lt;list&gt;<br /> | the list of ids to be added as follower \n"
					},
					"response": [
						{
							"name": "Add contact followers",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"followerIds\" : [ 5000000013292 ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/4000000190069/addFollowers",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"4000000190069",
										"addFollowers"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove contact followers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contacts/:contact_id/removeFollowers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contacts",
								":contact_id",
								"removeFollowers"
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API removes one or more users from the followers list of a contact.\n#### OAuth Scope\n- `Desk.contacts.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| followerIds (required) | &lt;list&gt;<br /> | the list of ids to be added as follower \n"
					},
					"response": [
						{
							"name": "Remove contact followers",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"followerIds\" : [ 5000000013292 ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/4000000190069/removeFollowers",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"4000000190069",
										"removeFollowers"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get contact followers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/contacts/:contact_id/followers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"contacts",
								":contact_id",
								"followers"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the followers must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of followers to list",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "contact_id"
								}
							]
						},
						"description": "This API fetches the list of users following a contact.\n#### OAuth Scope\n- `Desk.contacts.READ`\n\n"
					},
					"response": [
						{
							"name": "Get contact followers",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/contacts/4000000190069/followers",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"contacts",
										"4000000190069",
										"followers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"firstName\" : \"\",\n    \"lastName\" : \"agent\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/5000000012903/photo\",\n    \"id\" : \"5000000012903\",\n    \"email\" : \"agent@zylker.com\"\n  }, {\n    \"firstName\" : \"\",\n    \"lastName\" : \"deskagent\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/5000000012902/photo\",\n    \"id\" : \"5000000012902\",\n    \"email\" : \"deskagent@zylker.com\"\n  } ]\n}"
						}
					]
				}
			],
			"description": "Contact followers are users who follow a contact to track the tickets raised by the contact and the support provided."
		},
		{
			"name": "Ticket Followers",
			"item": [
				{
					"name": "Add ticket followers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tickets/:ticket_id/addFollowers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tickets",
								":ticket_id",
								"addFollowers"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API adds one or more users to the followers list of a ticket.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| followerIds (required) | &lt;list&gt;<br /> | the list of ids to be added as follower \n"
					},
					"response": [
						{
							"name": "Add ticket followers",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"followerIds\" : [ 5000000013292 ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000190069/addFollowers",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000190069",
										"addFollowers"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove ticket followers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tickets/:ticket_id/removeFollowers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tickets",
								":ticket_id",
								"removeFollowers"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API removes one or more users from the followers list of a ticket.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| followerIds (required) | &lt;list&gt;<br /> | the list of ids to be added as follower \n"
					},
					"response": [
						{
							"name": "Remove ticket followers",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"followerIds\" : [ 5000000013292 ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000190069/removeFollowers",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000190069",
										"removeFollowers"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get ticket followers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tickets/:ticket_id/followers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tickets",
								":ticket_id",
								"followers"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API fetches the list of users following a ticket.<br/><br/>Note:<br/>Sometimes, followers of a contact/account indirectly end up as ticket followers if the ticket is associated with the contact/account they follow. In that case, the following key returns the value of the original module the user follows--*contact* or account.<br/><br/>Even in a case where the user first followed the ticket and then followed the contact/account associated with it, the following key returns the value contact or account. This is because the contact/account is the parent resource of the ticket.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get ticket followers",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/4000000190069/followers",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000190069",
										"followers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"firstName\" : \"\",\n    \"lastName\" : \"agent\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/5000000012903/photo\",\n    \"following\" : \"ticket\",\n    \"id\" : \"5000000012903\",\n    \"email\" : \"agent@zylker.com\"\n  }, {\n    \"firstName\" : \"\",\n    \"lastName\" : \"deskagent\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/5000000012902/photo\",\n    \"following\" : \"contact\",\n    \"id\" : \"5000000012902\",\n    \"email\" : \"deskagent@zylker.com\"\n  } ]\n}"
						}
					]
				}
			],
			"description": "Ticket followers are users who follow a ticket to track the progress made in resolving it."
		},
		{
			"name": "Tasks Attachments",
			"item": [
				{
					"name": "List Task attachments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tasks/:task_id/attachments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								":task_id",
								"attachments"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort by the `createdTime` attribute. The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the attachments must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of attachments to fetch",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Secondary information related to the attachments. Value allowed is `creator`, which returns the details of users who added the attachments.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "task_id"
								}
							]
						},
						"description": "This API lists the files attached to a task.\n#### OAuth Scope\n- `Desk.activities.READ`\n- `Desk.activities.tasks.READ`\n- `Desk.tasks.READ`\n\n"
					},
					"response": [
						{
							"name": "List Task attachments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tasks/1892000001004024/attachments?include=creator",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tasks",
										"1892000001004024",
										"attachments"
									],
									"query": [
										{
											"key": "include",
											"value": "creator"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"1079\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"issue.txt\",\n    \"createdTime\" : \"2013-11-06T10:25:03.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000000047041\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tasks/1892000001004024/attachments/1892000000047041/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"135222\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"program.pdf\",\n    \"createdTime\" : \"2014-03-05T06:16:15.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000000089041\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tasks/1892000001004024/attachments/1892000000047041/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"97951\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"errorfixed.txt\",\n    \"createdTime\" : \"2016-06-21T10:15:34.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000001052021\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tasks/1892000001004024/attachments/1892000000047041/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"97951\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"error_page.pdf\",\n    \"createdTime\" : \"2016-06-21T10:15:49.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000001052025\",\n    \"href\" : \"https://desk.zoho.com/api/v1/tasks/1892000001004024/attachments/1892000000047041/content\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Create Task attachment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tasks/:task_id/attachments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								":task_id",
								"attachments"
							],
							"variable": [
								{
									"key": "task_id"
								}
							]
						},
						"description": "This API attaches a file to a task.\n#### OAuth Scope\n- `Desk.activities.UPDATE`\n- `Desk.activities.tasks.UPDATE`\n- `Desk.tasks.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n"
					},
					"response": [
						{
							"name": "Create Task attachment",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tasks/1892000001004024/attachments",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tasks",
										"1892000001004024",
										"attachments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"size\" : \"32\",\n  \"creatorId\" : \"1892000000042002\",\n  \"name\" : \"task_history.txt\",\n  \"createdTime\" : \"2016-05-30T08:32:51.338Z\",\n  \"isPublic\" : false,\n  \"id\" : \"1892000001010001\",\n  \"href\" : \"https://desk.zoho.com/api/v1/tasks/1892000001004024/attachments/1892000001010001/content\"\n}"
						}
					]
				},
				{
					"name": "Delete Task attachment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tasks/:task_id/attachments/{attachment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								":task_id",
								"attachments",
								"{attachment_id}"
							],
							"variable": [
								{
									"key": "task_id"
								}
							]
						},
						"description": "This API removes an attachment from a task.\n#### OAuth Scope\n- `Desk.activities.UPDATE`\n- `Desk.activities.tasks.UPDATE`\n- `Desk.tasks.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Delete Task attachment",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tasks/1892000001004024/attachments/1892000001010001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tasks",
										"1892000001004024",
										"attachments",
										"1892000001010001"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Task attachments are files you attach to a task to aid quick resolution."
		},
		{
			"name": "Product Attachments",
			"item": [
				{
					"name": "List all attachments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/products/:product_id/attachments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								":product_id",
								"attachments"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort by the `createdTime` attribute. The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "from Index",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "the number of attachments to be displayed",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Secondary information related to the attachments. Value allowed is `creator`, which returns the details of users who added the attachments.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						},
						"description": "This API lists all attachments in a product.\n#### OAuth Scope\n- `Desk.products.READ`\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List all attachments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/products/1892000001004024/attachments?include=creator",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"products",
										"1892000001004024",
										"attachments"
									],
									"query": [
										{
											"key": "include",
											"value": "creator"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"1079\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"ticket.txt\",\n    \"createdTime\" : \"2013-11-06T10:25:03.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000000047041\",\n    \"href\" : \"https://desk.zoho.com/api/v1/products/1892000001004024/attachments/1892000000047041/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"135222\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"bsnl-feb14.pdf\",\n    \"createdTime\" : \"2014-03-05T06:16:15.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000000089041\",\n    \"href\" : \"https://desk.zoho.com/api/v1/products/1892000001004024/attachments/1892000000089041/content\"\n  }, {\n    \"size\" : \"97951\",\n    \"creatorId\" : \"1892000000042002\",\n    \"name\" : \"history.pdf\",\n    \"createdTime\" : \"2016-06-21T10:15:34.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000001052021\",\n    \"href\" : \"https://desk.zoho.com/api/v1/products/1892000001004024/attachments/1892000001052021/content\"\n  }, {\n    \"creator\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000047001/photo?orgId=298902\",\n      \"id\" : \"1892000000047001\",\n      \"email\" : \"jade@zylker.com\"\n    },\n    \"size\" : \"97951\",\n    \"creatorId\" : \"1892000000047001\",\n    \"name\" : \"fixes.txt\",\n    \"createdTime\" : \"2016-06-21T10:15:49.000Z\",\n    \"isPublic\" : false,\n    \"id\" : \"1892000001052025\",\n    \"href\" : \"https://desk.zoho.com/api/v1/products/1892000001004024/attachments/1892000001052025/content\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Create an attachment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/products/:product_id/attachments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								":product_id",
								"attachments"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						},
						"description": "This API attaches a file to a product.\n#### OAuth Scope\n- `Desk.products.UPDATE`\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n"
					},
					"response": [
						{
							"name": "Create an attachment",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/products/1892000001004024/attachments",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"products",
										"1892000001004024",
										"attachments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"size\" : \"32\",\n  \"creatorId\" : \"1892000000042002\",\n  \"name\" : \"tools.txt\",\n  \"createdTime\" : \"2016-05-30T08:32:51.338Z\",\n  \"isPublic\" : false,\n  \"id\" : \"1892000001010001\",\n  \"href\" : \"https://desk.zoho.com/api/v1/products/1892000001004024/attachments/1892000001010001/content\"\n}"
						}
					]
				},
				{
					"name": "Delete an attachment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/products/:product_id/attachments/{attachment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								":product_id",
								"attachments",
								"{attachment_id}"
							],
							"variable": [
								{
									"key": "product_id"
								}
							]
						},
						"description": "This API deletes an attachment from a product.\n#### OAuth Scope\n- `Desk.products.UPDATE`\n- `Desk.settings.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Delete an attachment",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/products/1892000001004024/attachments/1892000001010001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"products",
										"1892000001004024",
										"attachments",
										"1892000001010001"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Product attachments are the files you attach to a product to aid quick resolution."
		},
		{
			"name": "Activities",
			"item": [
				{
					"name": "List ticket activities",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/activities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"activities"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the activities must be listed",
									"disabled": true
								},
								{
									"key": "isCompleted",
									"value": "<boolean>\n",
									"description": "Key that denotes if the activity was completed or not",
									"disabled": true
								},
								{
									"key": "isSpam",
									"value": "<boolean>\n",
									"description": "Key that denotes whether to fetch spam activities or not",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of activities to list",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort by a specific attribute: `activityTime` or `createdTime`.The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Allowed values are : contacts, assignee,tickets,teams,projects.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API lists a particular number of activities associated with a ticket, based on the limit specified.\n#### OAuth Scope\n- `Desk.activities.calls.READ`\n- `Desk.activities.events.READ`\n- `Desk.activities.READ`\n- `Desk.activities.tasks.READ`\n- `Desk.calls.READ`\n- `Desk.tasks.READ`\n- `Desk.events.READ`\n\n"
					},
					"response": [
						{
							"name": "List ticket activities",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/5000000016294/activities?include=tickets,contacts,assignee,teams",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"5000000016294",
										"activities"
									],
									"query": [
										{
											"key": "include",
											"value": "tickets,contacts,assignee,teams"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : null,\n      \"id\" : \"5000000016294\",\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"George\",\n        \"lastName\" : \"35\",\n        \"id\" : \"5000000015911\"\n      },\n      \"isSpam\" : false,\n      \"status\" : \"Open\"\n    },\n    \"contactId\" : \"5000000016252\",\n    \"subject\" : \"Stall in Dubai Airport\",\n    \"completedTime\" : null,\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"team\" : null,\n    \"ownerId\" : \"5000000015911\",\n    \"priority\" : \"High\",\n    \"isCommented\" : false,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Events/dv/9d4883f2d94d59e484b8a02355a7e402\",\n    \"createdTime\" : \"2019-04-12T05:21:21.000Z\",\n    \"startTime\" : \"2019-12-25T16:52:11.000Z\",\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"35\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"id\" : \"5000000083048\",\n    \"isSpam\" : false,\n    \"category\" : \"Demo\",\n    \"activityType\" : \"Events\",\n    \"ticketId\" : \"5000000016294\",\n    \"direction\" : \"inbound\",\n    \"status\" : \"Not Started\"\n  }, {\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : null,\n      \"id\" : \"5000000016294\",\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"Steve\",\n        \"lastName\" : \"McKinson\",\n        \"id\" : \"5000000015911\"\n      },\n      \"isSpam\" : false,\n      \"status\" : \"Open\"\n    },\n    \"contactId\" : \"5000000016252\",\n    \"subject\" : \"Gadget Replacement\",\n    \"completedTime\" : \"2019-04-17T07:12:09.000Z\",\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"team\" : null,\n    \"ownerId\" : \"5000000015911\",\n    \"priority\" : \"High\",\n    \"isCommented\" : true,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Calls/dv/9d4883f2d94d59e4c0ddb2a7dd8a14ee\",\n    \"createdTime\" : \"2019-04-10T10:30:55.000Z\",\n    \"startTime\" : \"2019-04-11T06:30:00.000Z\",\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"35\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"id\" : \"5000000081089\",\n    \"isSpam\" : false,\n    \"category\" : \"Call\",\n    \"activityType\" : \"Calls\",\n    \"ticketId\" : \"5000000016294\",\n    \"direction\" : \"outbound\",\n    \"status\" : \"Completed\"\n  }, {\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : null,\n      \"id\" : \"5000000016294\",\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"Steve\",\n        \"lastName\" : \"McKinson\",\n        \"id\" : \"5000000015911\"\n      },\n      \"isSpam\" : false,\n      \"status\" : \"Open\"\n    },\n    \"contactId\" : \"5000000016252\",\n    \"subject\" : \"Rest OS Version\",\n    \"completedTime\" : null,\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : \"2019-04-24T06:30:00.000Z\",\n    \"creatorId\" : \"5000000015911\",\n    \"team\" : null,\n    \"ownerId\" : \"5000000015911\",\n    \"priority\" : \"High\",\n    \"isCommented\" : false,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Tasks/dv/9d4883f2d94d59e40af0073cf7981c2f\",\n    \"createdTime\" : \"2019-04-10T10:07:26.000Z\",\n    \"startTime\" : \"2019-04-24T06:30:00.000Z\",\n    \"assignee\" : {\n      \"firstName\" : \"Steve\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"id\" : \"5000000081036\",\n    \"isSpam\" : false,\n    \"category\" : null,\n    \"activityType\" : \"Tasks\",\n    \"ticketId\" : \"5000000016294\",\n    \"direction\" : \"inbound\",\n    \"status\" : \"Not Started\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Delete spam activities",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/activities/emptySpam",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"activities",
								"emptySpam"
							]
						},
						"description": "This API deletes all spam activities.\n#### OAuth Scope\n- `Desk.activities.calls.DELETE`\n- `Desk.activities.events.DELETE`\n- `Desk.activities.DELETE`\n- `Desk.activities.tasks.DELETE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| departmentId (required) | &lt;long&gt;<br /> | ID of the department to which the activities belong \n"
					},
					"response": [
						{
							"name": "Delete spam activities",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"departmentId\" : \"4000000025121\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/activities/emptySpam",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"activities",
										"emptySpam"
									]
								}
							},
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Activity refers to secondary activities that your customer support agents perform. In Zoho Desk, activities are of three types: tasks, calls, and events. It is not mandatory for activities to be related only to ticket resolution."
		},
		{
			"name": "Calls",
			"item": [
				{
					"name": "Get call",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/calls/:call_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"calls",
								":call_id"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the call. Values allowed are:  `contacts`, `assignee`,`tickets`,`teams`,`livecalls`.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "call_id"
								}
							]
						},
						"description": "This API fetches the details of a call.\n#### OAuth Scope\n- `Desk.activities.calls.READ`\n- `Desk.activities.READ`\n- `Desk.calls.READ`\n\n"
					},
					"response": [
						{
							"name": "Get call",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/calls/5000000081089?include=tickets,contacts,assignee,teams",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"calls",
										"5000000081089"
									],
									"query": [
										{
											"key": "include",
											"value": "tickets,contacts,assignee,teams"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2019-04-30T10:42:41.000Z\",\n  \"subject\" : \"Call check scheduled\",\n  \"completedTime\" : \"2019-04-17T07:12:09.000Z\",\n  \"departmentId\" : \"5000000012710\",\n  \"creatorId\" : \"5000000015911\",\n  \"description\" : null,\n  \"ownerId\" : \"5000000015911\",\n  \"livecall\" : {\n    \"recordings\" : [ {\n      \"duration\" : \"84\",\n      \"url\" : \"https://api.twilio.com/2010-04-01/Accounts/ACc3617ac782db73fcad51991c141243d6/Recordings/RE5ec62dec6cc69a9459e6ff8a096a7f31b\"\n    }, {\n      \"duration\" : \"675\",\n      \"url\" : \"https://api.twilio.com/2010-04-01/Accounts/ACc3617ac782db73fcad51991c141243d6/Recordings/RE5ec62dec6cc69a9459e6ff8a096a7f23b\"\n    } ],\n    \"voiceMailDuration\" : null,\n    \"id\" : \"6000000026017\",\n    \"voiceMailUrl\" : null\n  },\n  \"duration\" : \"7380\",\n  \"contact\" : {\n    \"firstName\" : null,\n    \"lastName\" : \"Lawrence\",\n    \"phone\" : \"1 888 900 9646\",\n    \"mobile\" : null,\n    \"id\" : \"5000000016252\",\n    \"isSpam\" : false\n  },\n  \"createdTime\" : \"2019-04-10T10:30:55.000Z\",\n  \"startTime\" : \"2019-04-11T06:30:00.000Z\",\n  \"modifiedBy\" : {\n    \"firstName\" : \"George\",\n    \"lastName\" : \"McKinson\",\n    \"photoURL\" : null,\n    \"id\" : \"5000000015911\"\n  },\n  \"id\" : \"5000000081089\",\n  \"direction\" : \"outbound\",\n  \"cf\" : {\n  },\n  \"ticket\" : {\n    \"ticketNumber\" : \"101\",\n    \"phone\" : \"1 888 900 9646\",\n    \"subject\" : \"Here's your first ticket.\",\n    \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n    \"teamId\" : null,\n    \"id\" : \"5000000016294\",\n    \"assignee\" : {\n      \"photoURL\" : null,\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"status\" : \"Open\"\n  },\n  \"reminder\" : [ {\n    \"alertType\" : [ \"POPUP\" ],\n    \"reminderType\" : \"ABSOLUTE\",\n    \"reminderTime\" : \"2019-04-24T06:30:00.000Z\"\n  }, {\n    \"alertType\" : [ \"SMS\", \"POPUP\" ],\n    \"reminderType\" : \"ABSOLUTE\",\n    \"reminderTime\" : \"2019-04-23T06:30:00.000Z\"\n  }, {\n    \"alertType\" : [ \"EMAIL\", \"POPUP\" ],\n    \"reminderType\" : \"ABSOLUTE\",\n    \"reminderTime\" : \"2019-04-22T06:30:00.000Z\"\n  } ],\n  \"contactId\" : \"5000000016252\",\n  \"team\" : null,\n  \"priority\" : \"High\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Calls/dv/9d4883f2d94d59e4c0ddb2a7dd8a14ee\",\n  \"assignee\" : {\n    \"firstName\" : \"George\",\n    \"lastName\" : \"McKinson\",\n    \"photoURL\" : null,\n    \"id\" : \"5000000015911\"\n  },\n  \"isSpam\" : false,\n  \"ticketId\" : \"5000000016294\",\n  \"status\" : \"Completed\"\n}"
						}
					]
				},
				{
					"name": "List calls",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/calls",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"calls"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the call. Values allowed are: `contacts`, `assignee`,`tickets`,`teams`.",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the calls must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of calls to fetch",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the calls must be fetched",
									"disabled": true
								},
								{
									"key": "departmentIds",
									"value": "<long>\n",
									"description": "Departments from which the calls need to be queried",
									"disabled": true
								},
								{
									"key": "viewId",
									"value": "<long>\n",
									"description": "ID of the view to apply while fetching the resources",
									"disabled": true
								},
								{
									"key": "assignee",
									"value": "<long>\n",
									"description": " Key that filters tickets by assignee. Values allowed are any valid assignee ID or multiple assignee IDs separated by commas.",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "<string>\nmax chars : 100",
									"description": "Start time for completing the call. Values allowed are `Overdue`, `Tomorrow`, `CurrentWeek`, `CurrentMonth` and `Today`.You can pass multiple values by separating them with commas.",
									"disabled": true
								},
								{
									"key": "isCompleted",
									"value": "<boolean>\n",
									"description": "Key that denotes whether the call is completed or not",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Key that sorts the calls by a specific attribute: `startTime` or `createdTime`.The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								}
							]
						},
						"description": "This API fetches a particular number of calls, based on the limit specified.\n#### OAuth Scope\n- `Desk.activities.calls.READ`\n- `Desk.activities.READ`\n- `Desk.calls.READ`\n\n"
					},
					"response": [
						{
							"name": "List calls",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/calls?include=tickets,contacts,assignee,teams",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"calls"
									],
									"query": [
										{
											"key": "include",
											"value": "tickets,contacts,assignee,teams"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ticket\" : null,\n    \"contactId\" : null,\n    \"subject\" : \"hRl\",\n    \"completedTime\" : \"2019-04-02T06:36:43.000Z\",\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"team\" : null,\n    \"ownerId\" : \"5000000015911\",\n    \"priority\" : \"Normal\",\n    \"isCommented\" : true,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Calls/dv/9d4883f2d94d59e48740f9abf01f71bf\",\n    \"contact\" : null,\n    \"createdTime\" : \"2019-04-02T06:36:43.000Z\",\n    \"startTime\" : \"2019-03-24T11:40:01.000Z\",\n    \"id\" : \"5000000049385\",\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : null,\n    \"activityType\" : \"Calls\",\n    \"ticketId\" : null,\n    \"status\" : \"Canceled\",\n    \"direction\" : \"inbound\"\n  }, {\n    \"ticket\" : null,\n    \"contactId\" : null,\n    \"subject\" : \"Irt\",\n    \"completedTime\" : \"2019-04-02T06:37:06.000Z\",\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"team\" : null,\n    \"ownerId\" : \"5000000015911\",\n    \"priority\" : \"Normal\",\n    \"isCommented\" : true,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Calls/dv/9d4883f2d94d59e4603451fcf41c54b2\",\n    \"contact\" : null,\n    \"createdTime\" : \"2019-04-02T06:37:06.000Z\",\n    \"startTime\" : \"2019-03-24T11:40:24.000Z\",\n    \"id\" : \"5000000053840\",\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : null,\n    \"activityType\" : \"Calls\",\n    \"ticketId\" : null,\n    \"status\" : \"Canceled\",\n    \"direction\" : \"inbound\"\n  }, {\n    \"ticket\" : null,\n    \"contactId\" : null,\n    \"subject\" : \"SG0\",\n    \"completedTime\" : \"2019-04-02T06:36:28.000Z\",\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"team\" : null,\n    \"ownerId\" : \"5000000015911\",\n    \"priority\" : \"Normal\",\n    \"isCommented\" : true,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Calls/dv/9d4883f2d94d59e46c76cc4bfd688f1b\",\n    \"contact\" : null,\n    \"createdTime\" : \"2019-04-02T06:36:28.000Z\",\n    \"startTime\" : \"2019-04-01T11:39:44.000Z\",\n    \"id\" : \"5000000047098\",\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : null,\n    \"activityType\" : \"Calls\",\n    \"ticketId\" : null,\n    \"status\" : \"Completed\",\n    \"direction\" : \"inbound\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Create call",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/calls",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"calls"
							]
						},
						"description": "This API adds a call entry to your help desk portal.\n#### OAuth Scope\n- `Desk.activities.calls.CREATE`\n- `Desk.activities.CREATE`\n- `Desk.calls.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| customFields  | &lt;list&gt;<br /> | User-defined fields related to the call \n| cf  | &lt;list&gt;<br /> | User-defined fields related to the call \n| departmentId (required) | &lt;long&gt;<br /> | ID of the department associated with the call and ticket \n| subject (required) | &lt;string&gt;<br />max chars : 300 | Subject of the call \n| startTime (required) | &lt;timestamp&gt;<br /> | Time when the call started. The value of this key must be recorded in the&nbsp;ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ. \n| direction (required) | &lt;string&gt;<br />max chars : 100 | Direction of the call: inbound or outbound \n| duration (required) | &lt;integer&gt;<br /> | Duration of the call in seconds \n| status (required) | &lt;string&gt;<br />max chars : 120 | Completion status of the call \n| ownerId  | &lt;long&gt;<br /> | ID of the user to whom the call is assigned \n| priority  | &lt;string&gt;<br />max chars : 120 | Priority of the call \n| description  | &lt;string&gt;<br />max chars : 65535 | Description of the call \n| ticketId  | &lt;long&gt;<br /> | ID of the ticket associated with the call \n| contactId (required) | &lt;long&gt;<br /> | ID of the contact associated with the call \n| reminder  | &lt;JSONArray&gt;<br /> | Details of the reminder associated with the call \n"
					},
					"response": [
						{
							"name": "Create call",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"duration\" : \"300\",\n  \"reminder\" : [ {\n    \"alertType\" : [ \"EMAIL\", \"SMS\", \"POPUP\" ],\n    \"reminderType\" : \"ABSOLUTE\",\n    \"reminderTime\" : \"2018-12-25T04:52:13.000Z\"\n  } ],\n  \"contactId\" : \"1892000000088017\",\n  \"subject\" : \"New Testing Call\",\n  \"departmentId\" : \"3000000007043\",\n  \"startTime\" : \"2016-07-25T16:52:11.000Z\",\n  \"priority\" : \"High\",\n  \"ticketId\" : \"3000000008753\",\n  \"direction\" : \"inbound\",\n  \"status\" : \"In Progress\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/calls",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"calls"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"cf\" : {\n  },\n  \"contactId\" : \"1892000000088017\",\n  \"subject\" : \"New Testing Call\",\n  \"departmentId\" : \"3000000007043\",\n  \"creatorId\" : \"3000000008692\",\n  \"description\" : null,\n  \"ownerId\" : null,\n  \"priority\" : \"High\",\n  \"duration\" : \"300\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Calls/dv/51123033fe97b2f886f750280ded9c40\",\n  \"createdTime\" : \"2016-07-14T08:27:26.000Z\",\n  \"startTime\" : \"2016-07-25T16:52:11.000Z\",\n  \"id\" : \"3000000054002\",\n  \"ticketId\" : \"3000000008753\",\n  \"direction\" : \"inbound\",\n  \"status\" : \"In Progress\"\n}"
						}
					]
				},
				{
					"name": "Update call",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/calls/:call_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"calls",
								":call_id"
							],
							"variable": [
								{
									"key": "call_id"
								}
							]
						},
						"description": "This API updates the details of a call.\n#### OAuth Scope\n- `Desk.activities.calls.UPDATE`\n- `Desk.activities.UPDATE`\n- `Desk.calls.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| customFields  | &lt;list&gt;<br /> | User-defined fields related to the call \n| cf  | &lt;list&gt;<br /> | User-defined fields related to the call \n| departmentId  | &lt;long&gt;<br /> | ID of the department associated with the call and ticket \n| subject  | &lt;string&gt;<br />max chars : 300 | Subject of the call \n| startTime  | &lt;timestamp&gt;<br /> | Time when the call started. The value of this key must be recorded in the&nbsp;ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ. \n| direction  | &lt;string&gt;<br />max chars : 100 | Direction of the call: inbound or outbound \n| duration  | &lt;integer&gt;<br /> | Duration of the call in seconds \n| status  | &lt;string&gt;<br />max chars : 120 | Completion status of the call \n| ownerId  | &lt;long&gt;<br /> | ID of the user to whom the call is assigned \n| priority  | &lt;string&gt;<br />max chars : 120 | Priority of the call \n| description  | &lt;string&gt;<br />max chars : 65535 | Description of the call \n| ticketId  | &lt;long&gt;<br /> | ID of the ticket associated with the call \n| contactId  | &lt;long&gt;<br /> | ID of the contact associated with the call \n| reminder  | &lt;JSONArray&gt;<br /> | Details of the reminder associated with the call \n"
					},
					"response": [
						{
							"name": "Update call",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contactId\" : \"30000000088017\",\n  \"description\" : \"Call completed with a callback request\",\n  \"status\" : \"completed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/calls/3000000054002",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"calls",
										"3000000054002"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2016-07-14T08:29:26.000Z\",\n  \"cf\" : {\n  },\n  \"contactId\" : \"30000000088017\",\n  \"subject\" : \"New Testing Call\",\n  \"completedTime\" : \"2016-07-14T08:29:26.000Z\",\n  \"departmentId\" : \"3000000007043\",\n  \"creatorId\" : \"3000000008692\",\n  \"description\" : \"Call completed with a callback request\",\n  \"ownerId\" : null,\n  \"priority\" : \"High\",\n  \"duration\" : \"120\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Calls/dv/51123033fe97b2f886f750280ded9c40\",\n  \"createdTime\" : \"2016-07-14T08:27:26.000Z\",\n  \"modifiedBy\" : {\n    \"firstName\" : \"George\",\n    \"lastName\" : \"McKinson\",\n    \"photoURL\" : null,\n    \"id\" : \"5000000015911\"\n  },\n  \"id\" : \"3000000054002\",\n  \"isSpam\" : false,\n  \"ticketId\" : \"3000000008753\",\n  \"direction\" : \"inbound\",\n  \"status\" : \"completed\"\n}"
						}
					]
				},
				{
					"name": "List calls by ticket",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/calls",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"calls"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the calls must be listed",
									"disabled": true
								},
								{
									"key": "isCompleted",
									"value": "<boolean>\n",
									"description": "Key that denotes if the call was completed or not",
									"disabled": true
								},
								{
									"key": "isSpam",
									"value": "<boolean>\n",
									"description": "Key that denotes whether to fetch spam calls or not",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of calls to list",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort by a specific attribute: `startTime` or `createdTime`.The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Allowed values are : `contacts`, `assignee`,`tickets`,`teams`.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API lists a particular number of calls associated with a ticket, based on the limit specified.\n#### OAuth Scope\n- `Desk.activities.calls.READ`\n- `Desk.activities.READ`\n- `Desk.tickets.READ`\n- `Desk.calls.READ`\n\n"
					},
					"response": [
						{
							"name": "List calls by ticket",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/5000000016294/calls?include=tickets,contacts,assignee,teams",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"5000000016294",
										"calls"
									],
									"query": [
										{
											"key": "include",
											"value": "tickets,contacts,assignee,teams"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"subject\" : \"Call check scheduled\",\n    \"completedTime\" : \"2019-04-17T07:12:09.000Z\",\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"ownerId\" : \"5000000015911\",\n    \"secId\" : \"9d4883f2d94d59e4c0ddb2a7dd8a14ee\",\n    \"isCommented\" : true,\n    \"contact\" : {\n      \"firstName\" : null,\n      \"lastName\" : \"Lawrence\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : null,\n      \"id\" : \"5000000016252\",\n      \"isSpam\" : false,\n      \"secId\" : \"9d4883f2d94d59e42b7cc45393ad8ff8\"\n    },\n    \"createdTime\" : \"2019-04-10T10:30:55.000Z\",\n    \"startTime\" : \"2019-04-11T06:30:00.000Z\",\n    \"id\" : \"5000000081089\",\n    \"direction\" : \"outbound\",\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : null,\n      \"id\" : \"5000000016294\",\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"George\",\n        \"lastName\" : \"McKinson\",\n        \"id\" : \"5000000015911\"\n      },\n      \"isSpam\" : false,\n      \"status\" : \"Open\",\n      \"secId\" : \"9d4883f2d94d59e415b08d3d4c697d42\"\n    },\n    \"contactId\" : \"5000000016252\",\n    \"team\" : null,\n    \"priority\" : \"High\",\n    \"layoutId\" : \"5000000013468\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Calls/dv/9d4883f2d94d59e4c0ddb2a7dd8a14ee\",\n    \"teamId\" : null,\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : \"Call\",\n    \"activityType\" : \"Calls\",\n    \"ticketId\" : \"5000000016294\",\n    \"status\" : \"Completed\"\n  }, {\n    \"subject\" : \"ddddd\",\n    \"completedTime\" : \"2019-04-17T07:11:43.000Z\",\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"ownerId\" : \"5000000015911\",\n    \"secId\" : \"9d4883f2d94d59e4437f38846d520c51\",\n    \"isCommented\" : false,\n    \"contact\" : {\n      \"firstName\" : null,\n      \"lastName\" : \"Lawrence\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : null,\n      \"id\" : \"5000000016252\",\n      \"isSpam\" : false,\n      \"secId\" : \"9d4883f2d94d59e42b7cc45393ad8ff8\"\n    },\n    \"createdTime\" : \"2019-04-05T11:15:15.000Z\",\n    \"startTime\" : \"2019-04-24T06:30:00.000Z\",\n    \"id\" : \"5000000069105\",\n    \"direction\" : \"outbound\",\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : null,\n      \"id\" : \"5000000016294\",\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"George\",\n        \"lastName\" : \"McKinson\",\n        \"id\" : \"5000000015911\"\n      },\n      \"isSpam\" : false,\n      \"status\" : \"Open\",\n      \"secId\" : \"9d4883f2d94d59e415b08d3d4c697d42\"\n    },\n    \"contactId\" : \"5000000016252\",\n    \"team\" : null,\n    \"priority\" : \"High\",\n    \"layoutId\" : \"5000000013468\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Calls/dv/9d4883f2d94d59e4437f38846d520c51\",\n    \"teamId\" : null,\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : \"Call\",\n    \"activityType\" : \"Calls\",\n    \"ticketId\" : \"5000000016294\",\n    \"status\" : \"Completed\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Delete calls",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/calls/moveToTrash",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"calls",
								"moveToTrash"
							]
						},
						"description": "This API moves call entries to the Recycle Bin of your help desk portal.\n#### OAuth Scope\n- `Desk.activities.calls.DELETE`\n- `Desk.activities.DELETE`\n- `Desk.calls.DELETE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| entityIds (required) | &lt;list&gt;<br /> | IDs of the activities to delete \n"
					},
					"response": [
						{
							"name": "Delete calls",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityIds\" : [ \"3000000053002\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/calls/moveToTrash",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"calls",
										"moveToTrash"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Clear live call mapping from an activity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/calls/:call_id/clearLiveCall",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"calls",
								":call_id",
								"clearLiveCall"
							],
							"variable": [
								{
									"key": "call_id"
								}
							]
						},
						"description": "This API clears the live call mapping from an activity\n#### OAuth Scope\n- `Desk.calls.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Clear live call mapping from an activity",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/calls/%7Bcall_id%7D/clearLiveCall",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"calls",
										"%7Bcall_id%7D",
										"clearLiveCall"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update many calls",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/calls/updateMany",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"calls",
								"updateMany"
							]
						},
						"description": "This API updates multiple calls at once.\n#### OAuth Scope\n- `Desk.activities.calls.UPDATE`\n- `Desk.activities.UPDATE`\n- `Desk.calls.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | Array containing the IDs of the entities to update. The maximum number of IDs allowed is 50. \n| fieldName (required) | &lt;string&gt;<br />max chars : 320 |  Name of the field&nbsp;to update \n| fieldValue  | &lt;string&gt;<br />max chars : 320 | Value in the field \n| isCustomField  | &lt;boolean&gt;<br /> | Key that denotes if the field is a user-defined field or not \n"
					},
					"response": [
						{
							"name": "Update many calls",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fieldName\" : \"mobile\",\n  \"isCustomField\" : false,\n  \"ids\" : [ \"1892000000093303\", \"1892000000085009\", \"1892000000050003\" ],\n  \"fieldValue\" : \"8508569875\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/calls/updateMany",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"calls",
										"updateMany"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : true,\n    \"id\" : \"1892000000093303\",\n    \"errors\" : null\n  }, {\n    \"success\" : true,\n    \"id\" : \"1892000000085009\",\n    \"errors\" : null\n  }, {\n    \"success\" : false,\n    \"id\" : \"1892000000050003\",\n    \"errors\" : {\n      \"errorMessage\" : \"Either the field is invalid or the field may be restricted to update\",\n      \"errorCode\" : \"UNPROCESSABLE_ENTITY\",\n      \"httpCode\" : \"422\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Delete spam calls",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/calls/emptySpam",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"calls",
								"emptySpam"
							]
						},
						"description": "This API deletes all spam calls.\n#### OAuth Scope\n- `Desk.activities.calls.DELETE`\n- `Desk.activities.DELETE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| departmentId (required) | &lt;long&gt;<br /> | ID of the department to which the activities belong \n"
					},
					"response": [
						{
							"name": "Delete spam calls",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"departmentId\" : \"4000000025121\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/calls/emptySpam",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"calls",
										"emptySpam"
									]
								}
							},
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Calls refer to the support-related calls your customers make to your help desk and vice versa. It is mandatory for each call to be mapped to a contact."
		},
		{
			"name": "Calls Comments",
			"item": [
				{
					"name": "Create a call comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/calls/:call_id/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"calls",
								":call_id",
								"comments"
							],
							"variable": [
								{
									"key": "call_id"
								}
							]
						},
						"description": "This API adds a comment to a call.\n#### OAuth Scope\n- `Desk.activities.calls.UPDATE`\n- `Desk.activities.UPDATE`\n- `Desk.tasks.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| content  | &lt;string&gt;<br />max chars : 32000 | Content of the comment. To retrieve or set user mentions, use this code format: <b>zsu[@user:{zuid}zsu</b>. \n| contentType  | &lt;string&gt;<br />max chars : 100 | Used to denote the content-type which maybe `html` or `plainText`. The default type is `html`. \n"
					},
					"response": [
						{
							"name": "Create a call comment",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contentType\" : \"html\",\n  \"content\" : \"First Call comment.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/calls/4000000530001/comments",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"calls",
										"4000000530001",
										"comments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : null,\n  \"attachments\" : [ {\n    \"size\" : \"12734\",\n    \"name\" : \"Attachment.png\",\n    \"id\" : \"4000000008994\",\n    \"href\" : \"https://desk.zoho.com/api/v1/calls/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n  } ],\n  \"commentedTime\" : \"2017-01-24T14:54:33.534Z\",\n  \"id\" : \"4000000530003\",\n  \"contentType\" : \"html\",\n  \"content\" : \"First Call comment.\",\n  \"commenterId\" : \"4000000008692\",\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/4000000008692/photo\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"LightAgent\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update a call comment",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/calls/:call_id/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"calls",
								":call_id",
								"comments",
								"{comment_id}"
							],
							"variable": [
								{
									"key": "call_id"
								}
							]
						},
						"description": "This API updates an existing call comment.\n#### OAuth Scope\n- `Desk.activities.calls.UPDATE`\n- `Desk.activities.UPDATE`\n- `Desk.tasks.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| content  | &lt;string&gt;<br />max chars : 32000 | Content of the comment. To retrieve or set user mentions, use this code format: <b>zsu[@user:{zuid}zsu</b>. \n| contentType  | &lt;string&gt;<br />max chars : 100 | Used to denote the content-type which maybe `html` or `plainText`. The default type is `html`. \n"
					},
					"response": [
						{
							"name": "Update a call comment",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\" : \"Edit Call comment\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/calls/4000000530001/comments/4000000530003",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"calls",
										"4000000530001",
										"comments",
										"4000000530003"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2017-01-24T14:56:20.447Z\",\n  \"attachments\" : [ {\n    \"size\" : \"12734\",\n    \"name\" : \"Attachment_edited.png\",\n    \"id\" : \"4000000008994\",\n    \"href\" : \"https://desk.zoho.com/api/v1/calls/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n  } ],\n  \"commentedTime\" : \"2017-01-24T14:54:33.000Z\",\n  \"id\" : \"4000000530003\",\n  \"contentType\" : \"plainText\",\n  \"commenterId\" : \"4000000008692\",\n  \"content\" : \"Edit Call comment\",\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/4000000008692/photo\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"CEO\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a call comment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/calls/:call_id/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"calls",
								":call_id",
								"comments",
								"{comment_id}"
							],
							"variable": [
								{
									"key": "call_id"
								}
							]
						},
						"description": "This API deletes an existing call comment.\n#### OAuth Scope\n- `Desk.activities.calls.UPDATE`\n- `Desk.activities.UPDATE`\n- `Desk.tasks.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Delete a call comment",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/calls/4000000530001/comments/4000000530003",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"calls",
										"4000000530001",
										"comments",
										"4000000530003"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a call comment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/calls/:call_id/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"calls",
								":call_id",
								"comments",
								"{comment_id}"
							],
							"query": [
								{
									"key": "include",
									"value": "<String>\n",
									"description": "Secondary information related to the comments. Value allowed is `mentions`, which returns the details of users mentioned in the comments.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "call_id"
								}
							]
						},
						"description": "This API fetches a call comment from the portal.\n#### OAuth Scope\n- `Desk.activities.calls.READ`\n- `Desk.activities.READ`\n- `Desk.tasks.READ`\n\n"
					},
					"response": [
						{
							"name": "Get a call comment",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/calls/4000000530001/comments/4000000530005",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"calls",
										"4000000530001",
										"comments",
										"4000000530005"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : null,\n  \"attachments\" : [ {\n    \"size\" : \"12734\",\n    \"name\" : \"Attachment_edited.png\",\n    \"id\" : \"4000000008994\",\n    \"href\" : \"https://desk.zoho.com/api/v1/calls/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n  } ],\n  \"commentedTime\" : \"2017-01-24T15:04:47.000Z\",\n  \"id\" : \"4000000530005\",\n  \"contentType\" : \"plainText\",\n  \"content\" : \"Second Call Comment......\",\n  \"commenterId\" : \"4000000008692\",\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/4000000008692/photo\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"LightAgent\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "List all call comments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/calls/:call_id/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"calls",
								":call_id",
								"comments"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\nrange : >=0",
									"description": "Index number starting from which the comments must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\ndefault : 50,",
									"description": "No. of comments to fetch",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort comments by the `commentedTime` attribute. The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<String>\n",
									"description": "Secondary information related to the comments. Value allowed is `mentions`, which returns the details of users mentioned in the comments.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "call_id"
								}
							]
						},
						"description": "This API lists a particular number of comments recorded on a call, based on the limit specified.\n#### OAuth Scope\n- `Desk.activities.calls.READ`\n- `Desk.activities.READ`\n- `Desk.tasks.READ`\n\n"
					},
					"response": [
						{
							"name": "List all call comments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/calls/4000000530001/comments?include=mentions",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"calls",
										"4000000530001",
										"comments"
									],
									"query": [
										{
											"key": "include",
											"value": "mentions"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : null,\n    \"commentedTime\" : \"2017-01-24T15:04:47.000Z\",\n    \"id\" : \"4000000530005\",\n    \"contentType\" : \"plainText\",\n    \"commenterId\" : \"4000000008692\",\n    \"content\" : \"Second Call Comment......\",\n    \"mention\" : [ ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/4000000008692/photo\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"LightAgent\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  }, {\n    \"modifiedTime\" : \"2017-01-24T14:56:20.000Z\",\n    \"attachments\" : [ {\n      \"size\" : \"12734\",\n      \"name\" : \"Attachment_list.png\",\n      \"id\" : \"4000000008994\",\n      \"href\" : \"https://desk.zoho.com/api/v1/calls/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n    } ],\n    \"commentedTime\" : \"2017-01-24T14:54:33.000Z\",\n    \"id\" : \"4000000530003\",\n    \"contentType\" : \"html\",\n    \"commenterId\" : \"4000000008692\",\n    \"content\" : \"Edit Call comment\",\n    \"mention\" : [ ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/portalUser/4000000008692/photo\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"PortalUser\",\n      \"type\" : \"END_USER\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  } ]\n}"
						}
					]
				}
			],
			"description": "Call comments refer to comments recorded on calls assigned to agents. We are introducing a new key called contentType in the responses to ticket comment APIs. This new key supports two values: html and plaintext. Both types of content will be delivered only in plain text in API responses and the contentType key only indicates the presence of html formatting in the original comment."
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "Get event",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/events/:event_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"events",
								":event_id"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Allowed values are : `contacts`, `assignee`,`tickets`,`teams`.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "event_id"
								}
							]
						},
						"description": "This API fetches the details of an event.\n#### OAuth Scope\n- `Desk.activities.events.READ`\n- `Desk.activities.READ`\n- `Desk.events.READ`\n\n"
					},
					"response": [
						{
							"name": "Get event",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/events/5000000065115?include=tickets?include",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"events",
										"5000000065115"
									],
									"query": [
										{
											"key": "include",
											"value": "tickets?include"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2019-04-30T14:22:13.000Z\",\n  \"subject\" : \"Zoholics 2019\",\n  \"completedTime\" : null,\n  \"departmentId\" : \"5000000012710\",\n  \"creatorId\" : \"5000000015911\",\n  \"description\" : null,\n  \"ownerId\" : \"5000000015911\",\n  \"secId\" : \"9d4883f2d94d59e4McKinsonf5d2f01bbb8bd4\",\n  \"duration\" : \"10980\",\n  \"contact\" : {\n    \"firstName\" : null,\n    \"lastName\" : \"Lawrence\",\n    \"phone\" : \"1 888 900 9646\",\n    \"mobile\" : null,\n    \"id\" : \"5000000016252\",\n    \"isSpam\" : false,\n    \"secId\" : \"9d4883f2d94d59e42b7cc45393ad8ff8\"\n  },\n  \"createdTime\" : \"2019-04-04T06:48:36.000Z\",\n  \"startTime\" : \"2019-04-18T06:30:00.000Z\",\n  \"modifiedBy\" : {\n    \"firstName\" : \"George\",\n    \"lastName\" : \"McKinson\",\n    \"photoURL\" : null,\n    \"id\" : \"5000000015911\"\n  },\n  \"id\" : \"5000000065115\",\n  \"cf\" : {\n  },\n  \"ticket\" : {\n    \"ticketNumber\" : \"101\",\n    \"phone\" : \"1 888 900 9646\",\n    \"subject\" : \"Here's your first ticket.\",\n    \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n    \"teamId\" : null,\n    \"id\" : \"5000000016294\",\n    \"assignee\" : {\n      \"photoURL\" : null,\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"status\" : \"Open\",\n    \"secId\" : \"9d4883f2d94d59e415b08d3d4c697d42\"\n  },\n  \"reminder\" : null,\n  \"contactId\" : \"5000000016252\",\n  \"team\" : null,\n  \"priority\" : \"High\",\n  \"layoutId\" : \"5000000013470\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Events/dv/9d4883f2d94d59e4McKinsonf5d2f01bbb8bd4\",\n  \"teamId\" : null,\n  \"assignee\" : {\n    \"firstName\" : \"George\",\n    \"lastName\" : \"McKinson\",\n    \"photoURL\" : null,\n    \"id\" : \"5000000015911\"\n  },\n  \"isSpam\" : false,\n  \"category\" : \"Meeting\",\n  \"ticketId\" : \"5000000016294\",\n  \"status\" : \"Not Started\"\n}"
						}
					]
				},
				{
					"name": "List events",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"events"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the event. Values allowed are: `contacts`, `assignee`,`tickets`,`teams`.",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the events must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of events to list",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "<string>\nmax chars : 100",
									"description": "Start time for completing the event. Values allowed are `Overdue`, `Tomorrow`, `CurrentWeek`, `CurrentMonth` and `Today`.You can pass multiple values by separating them with commas.",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the events must be fetched",
									"disabled": true
								},
								{
									"key": "departmentIds",
									"value": "<long>\n",
									"description": "Departments from which the events need to be queried",
									"disabled": true
								},
								{
									"key": "assignee",
									"value": "<long>\n",
									"description": " Key that filters tickets by assignee. Values allowed are any valid assignee ID or multiple assignee IDs separated by commas.",
									"disabled": true
								},
								{
									"key": "viewId",
									"value": "<long>\n",
									"description": "ID of the view to apply while fetching the resources",
									"disabled": true
								},
								{
									"key": "isCompleted",
									"value": "<boolean>\n",
									"description": "Key that denotes whether the event is completed or not",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Key that sorts the events by a specific attribute: `startTime` or `createdTime`.The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of events, based on the limit specified.\n#### OAuth Scope\n- `Desk.activities.events.READ`\n- `Desk.activities.READ`\n- `Desk.events.READ`\n\n"
					},
					"response": [
						{
							"name": "List events",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/events?include=assignee,tickets,contacts,teams",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"events"
									],
									"query": [
										{
											"key": "include",
											"value": "assignee,tickets,contacts,teams"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : null,\n      \"id\" : \"5000000016294\",\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"George\",\n        \"lastName\" : \"McKinson\",\n        \"id\" : \"5000000015911\"\n      },\n      \"isSpam\" : false,\n      \"status\" : \"Open\"\n    },\n    \"contactId\" : \"5000000016252\",\n    \"subject\" : \"Partner's conference'\",\n    \"completedTime\" : null,\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"team\" : null,\n    \"ownerId\" : \"5000000015911\",\n    \"priority\" : \"High\",\n    \"isCommented\" : true,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Events/dv/9d4883f2d94d59e4McKinsonf5d2f01bbb8bd4\",\n    \"contact\" : {\n      \"firstName\" : null,\n      \"lastName\" : \"Lawrence\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : null,\n      \"id\" : \"5000000016252\",\n      \"isSpam\" : false\n    },\n    \"createdTime\" : \"2019-04-04T06:48:36.000Z\",\n    \"startTime\" : \"2019-04-18T06:30:00.000Z\",\n    \"id\" : \"5000000065115\",\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : \"Meeting\",\n    \"activityType\" : \"Events\",\n    \"ticketId\" : \"5000000016294\",\n    \"status\" : \"Not Started\",\n    \"direction\" : \"inbound\"\n  }, {\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : null,\n      \"id\" : \"5000000016294\",\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"George\",\n        \"lastName\" : \"McKinson\",\n        \"id\" : \"5000000015911\"\n      },\n      \"isSpam\" : false,\n      \"status\" : \"Open\"\n    },\n    \"contactId\" : \"5000000016252\",\n    \"subject\" : \"Developers meet\",\n    \"completedTime\" : null,\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"team\" : null,\n    \"ownerId\" : \"5000000015911\",\n    \"priority\" : \"High\",\n    \"isCommented\" : true,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Events/dv/9d4883f2d94d59e41c8e46db1a43ba49\",\n    \"contact\" : {\n      \"firstName\" : null,\n      \"lastName\" : \"Lawrence\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : null,\n      \"id\" : \"5000000016252\",\n      \"isSpam\" : false\n    },\n    \"createdTime\" : \"2019-04-16T12:02:27.000Z\",\n    \"startTime\" : \"2019-04-25T06:30:00.000Z\",\n    \"id\" : \"5000000084070\",\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : \"Meeting\",\n    \"activityType\" : \"Events\",\n    \"ticketId\" : \"5000000016294\",\n    \"status\" : \"Not Started\",\n    \"direction\" : \"inbound\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Create event",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"events"
							]
						},
						"description": "This API adds an event entry to your help desk portal.\n#### OAuth Scope\n- `Desk.activities.events.CREATE`\n- `Desk.activities.CREATE`\n- `Desk.events.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| customFields  | &lt;list&gt;<br /> | User-defined fields related to the event \n| cf  | &lt;list&gt;<br /> | User-defined fields related to the event \n| departmentId (required) | &lt;long&gt;<br /> | ID of the department associated with the event and ticket \n| subject (required) | &lt;string&gt;<br />max chars : 300 | Subject of the event \n| startTime (required) | &lt;timestamp&gt;<br /> | Time when the event started. The value of this key must be recorded in the&nbsp;ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ. \n| duration (required) | &lt;integer&gt;<br /> | Duration of the event in seconds \n| status  | &lt;string&gt;<br />max chars : 120 | Completion status of the event \n| ownerId  | &lt;long&gt;<br /> | ID of the user to whom the event is assigned \n| priority  | &lt;string&gt;<br />max chars : 120 | Priority of the event \n| description  | &lt;string&gt;<br />max chars : 65535 | Description of the event \n| category  | &lt;string&gt;<br />max chars : 120 | Category of the event \n| ticketId  | &lt;long&gt;<br /> | ID of the ticket associated with the event \n| contactId (required) | &lt;long&gt;<br /> | ID of the contact associated with the event \n| reminder  | &lt;JSONArray&gt;<br /> | Details of the reminder associated with the event \n"
					},
					"response": [
						{
							"name": "Create event",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"duration\" : \"40\",\n  \"contactId\" : \"3000000001234\",\n  \"subject\" : \"Dubai startup meet\",\n  \"departmentId\" : \"3000000007043\",\n  \"startTime\" : \"2016-07-14T08:27:26.000Z\",\n  \"priority\" : \"High\",\n  \"category\" : \"Meeting\",\n  \"ticketId\" : \"3000000008753\",\n  \"status\" : \"In Progress\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/events",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"events"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"cf\" : {\n  },\n  \"contactId\" : \"3000000001234\",\n  \"subject\" : \"New Testing Event\",\n  \"departmentId\" : \"3000000007043\",\n  \"creatorId\" : \"3000000008692\",\n  \"description\" : null,\n  \"ownerId\" : null,\n  \"priority\" : \"High\",\n  \"duration\" : \"40\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Events/dv/51123033fe97b2f886f750280ded9c40\",\n  \"createdTime\" : \"2016-07-14T08:27:26.000Z\",\n  \"startTime\" : \"2016-07-14T08:27:26.000Z\",\n  \"id\" : \"3000000054002\",\n  \"isSpam\" : false,\n  \"category\" : \"Meeting\",\n  \"ticketId\" : \"3000000008753\",\n  \"status\" : \"In Progress\"\n}"
						}
					]
				},
				{
					"name": "Update event",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/events/:event_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"events",
								":event_id"
							],
							"variable": [
								{
									"key": "event_id"
								}
							]
						},
						"description": "This API updates the details of an event.\n#### OAuth Scope\n- `Desk.activities.events.UPDATE`\n- `Desk.activities.UPDATE`\n- `Desk.events.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| customFields  | &lt;list&gt;<br /> | User-defined fields related to the event \n| cf  | &lt;list&gt;<br /> | User-defined fields related to the event \n| departmentId  | &lt;long&gt;<br /> | ID of the department associated with the event and ticket \n| subject  | &lt;string&gt;<br />max chars : 300 | Subject of the event \n| startTime  | &lt;timestamp&gt;<br /> | Time when the event started. The value of this key must be recorded in the&nbsp;ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ. \n| duration  | &lt;integer&gt;<br /> | Duration of the event in seconds \n| status  | &lt;string&gt;<br />max chars : 120 | Completion status of the event \n| ownerId  | &lt;long&gt;<br /> | ID of the user to whom the event is assigned \n| priority  | &lt;string&gt;<br />max chars : 120 | Priority of the event \n| description  | &lt;string&gt;<br />max chars : 65535 | Description of the event \n| category  | &lt;string&gt;<br />max chars : 120 | Category of the event \n| ticketId  | &lt;long&gt;<br /> | ID of the ticket associated with the event \n| contactId  | &lt;long&gt;<br /> | ID of the contact associated with the event \n| reminder  | &lt;JSONArray&gt;<br /> | Details of the reminder associated with the event \n"
					},
					"response": [
						{
							"name": "Update event",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contactId\" : \"30000000088017\",\n  \"description\" : \"Event completed with a callback request\",\n  \"status\" : \"completed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/events/3000000054002",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"events",
										"3000000054002"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2016-07-14T08:47:26.000Z\",\n  \"cf\" : {\n  },\n  \"contactId\" : \"30000000088017\",\n  \"subject\" : \"Event camp at Finland\",\n  \"completedTime\" : \"2016-07-14T08:47:26.000Z\",\n  \"departmentId\" : \"3000000007043\",\n  \"creatorId\" : \"3000000008692\",\n  \"description\" : \"Event completed with a callback request\",\n  \"ownerId\" : null,\n  \"priority\" : \"High\",\n  \"duration\" : \"20\",\n  \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Events/dv/51123033fe97b2f886f750280ded9c40\",\n  \"createdTime\" : \"2016-07-14T08:27:26.000Z\",\n  \"modifiedBy\" : {\n    \"firstName\" : \"George\",\n    \"lastName\" : \"McKinson\",\n    \"photoURL\" : null,\n    \"id\" : \"5000000015911\"\n  },\n  \"startTime\" : \"2016-07-14T08:27:26.000Z\",\n  \"id\" : \"3000000054002\",\n  \"isSpam\" : false,\n  \"category\" : \"Meeting\",\n  \"ticketId\" : \"3000000008753\",\n  \"status\" : \"completed\"\n}"
						}
					]
				},
				{
					"name": "List events by ticket",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"events"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the events must be listed",
									"disabled": true
								},
								{
									"key": "isCompleted",
									"value": "<boolean>\n",
									"description": "Key that denotes if the event was completed or not",
									"disabled": true
								},
								{
									"key": "isSpam",
									"value": "<boolean>\n",
									"description": "Key that denotes whether to fetch spam events or not",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of events to list",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort by a specific attribute: `startTime` or `createdTime`.The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Allowed values are : contacts, assignee,tickets,teams.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "This API lists a particular number of events associated with a ticket, based on the limit specified.\n#### OAuth Scope\n- `Desk.activities.events.READ`\n- `Desk.activities.READ`\n- `Desk.tickets.READ`\n- `Desk.events.READ`\n\n"
					},
					"response": [
						{
							"name": "List events by ticket",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/tickets/5000000016294/events?include=assignee,tickets,contacts,teams",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"5000000016294",
										"events"
									],
									"query": [
										{
											"key": "include",
											"value": "assignee,tickets,contacts,teams"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"subject\" : \"Zoholics at Australia\",\n    \"completedTime\" : null,\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"ownerId\" : \"5000000015911\",\n    \"secId\" : \"9d4883f2d94d59e4McKinsonf5d2f01bbb8bd4\",\n    \"isCommented\" : true,\n    \"contact\" : {\n      \"firstName\" : null,\n      \"lastName\" : \"Lawrence\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : null,\n      \"id\" : \"5000000016252\",\n      \"secId\" : \"9d4883f2d94d59e42b7cc45393ad8ff8\"\n    },\n    \"createdTime\" : \"2019-04-04T06:48:36.000Z\",\n    \"startTime\" : \"2019-04-18T06:30:00.000Z\",\n    \"id\" : \"5000000065115\",\n    \"direction\" : \"inbound\",\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : null,\n      \"id\" : \"5000000016294\",\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"George\",\n        \"lastName\" : \"McKinson\",\n        \"id\" : \"5000000015911\"\n      },\n      \"status\" : \"Open\",\n      \"secId\" : \"9d4883f2d94d59e415b08d3d4c697d42\"\n    },\n    \"contactId\" : \"5000000016252\",\n    \"team\" : null,\n    \"priority\" : \"High\",\n    \"layoutId\" : \"5000000013470\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Events/dv/9d4883f2d94d59e4McKinsonf5d2f01bbb8bd4\",\n    \"teamId\" : null,\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : \"Meeting\",\n    \"activityType\" : \"Events\",\n    \"ticketId\" : \"5000000016294\",\n    \"status\" : \"Not Started\"\n  }, {\n    \"subject\" : \"sadfsadf\",\n    \"completedTime\" : null,\n    \"departmentId\" : \"5000000012710\",\n    \"dueDate\" : null,\n    \"creatorId\" : \"5000000015911\",\n    \"ownerId\" : \"5000000015911\",\n    \"secId\" : \"9d4883f2d94d59e41c8e46db1a43ba49\",\n    \"isCommented\" : true,\n    \"contact\" : {\n      \"firstName\" : null,\n      \"lastName\" : \"Lawrence\",\n      \"phone\" : \"1 888 900 9646\",\n      \"mobile\" : null,\n      \"id\" : \"5000000016252\",\n      \"secId\" : \"9d4883f2d94d59e42b7cc45393ad8ff8\"\n    },\n    \"createdTime\" : \"2019-04-16T12:02:27.000Z\",\n    \"startTime\" : \"2019-04-25T06:30:00.000Z\",\n    \"id\" : \"5000000084070\",\n    \"direction\" : \"inbound\",\n    \"ticket\" : {\n      \"ticketNumber\" : \"101\",\n      \"phone\" : \"1 888 900 9646\",\n      \"subject\" : \"Here's your first ticket.\",\n      \"dueDate\" : \"2019-03-29T09:51:26.000Z\",\n      \"teamId\" : null,\n      \"id\" : \"5000000016294\",\n      \"assignee\" : {\n        \"photoURL\" : null,\n        \"firstName\" : \"George\",\n        \"lastName\" : \"McKinson\",\n        \"id\" : \"5000000015911\"\n      },\n      \"status\" : \"Open\",\n      \"secId\" : \"9d4883f2d94d59e415b08d3d4c697d42\"\n    },\n    \"contactId\" : \"5000000016252\",\n    \"team\" : null,\n    \"priority\" : \"High\",\n    \"layoutId\" : \"5000000013470\",\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Events/dv/9d4883f2d94d59e41c8e46db1a43ba49\",\n    \"teamId\" : null,\n    \"assignee\" : {\n      \"firstName\" : \"George\",\n      \"lastName\" : \"McKinson\",\n      \"photoURL\" : null,\n      \"id\" : \"5000000015911\"\n    },\n    \"isSpam\" : false,\n    \"category\" : \"Meeting\",\n    \"activityType\" : \"Events\",\n    \"ticketId\" : \"5000000016294\",\n    \"status\" : \"Not Started\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Delete events",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/events/moveToTrash",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"events",
								"moveToTrash"
							]
						},
						"description": "This API moves event entries to the Recycle Bin of your help desk portal.\n#### OAuth Scope\n- `Desk.activities.events.DELETE`\n- `Desk.activities.DELETE`\n- `Desk.events.DELETE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| entityIds (required) | &lt;list&gt;<br /> | IDs of the activities to delete \n"
					},
					"response": [
						{
							"name": "Delete events",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityIds\" : [ \"3000000053002\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/events/moveToTrash",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"events",
										"moveToTrash"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update many events",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/events/updateMany",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"events",
								"updateMany"
							]
						},
						"description": "This API updates multiple events at once.\n#### OAuth Scope\n- `Desk.activities.events.UPDATE`\n- `Desk.activities.UPDATE`\n- `Desk.events.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | Array containing the IDs of the entities to update. The maximum number of IDs allowed is 50. \n| fieldName (required) | &lt;string&gt;<br />max chars : 320 |  Name of the field&nbsp;to update \n| fieldValue  | &lt;string&gt;<br />max chars : 320 | Value in the field \n| isCustomField  | &lt;boolean&gt;<br /> | Key that denotes if the field is a user-defined field or not \n"
					},
					"response": [
						{
							"name": "Update many events",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fieldName\" : \"mobile\",\n  \"isCustomField\" : false,\n  \"ids\" : [ \"1892000000093303\", \"1892000000085009\", \"1892000000050003\" ],\n  \"fieldValue\" : \"8508569875\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/events/updateMany",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"events",
										"updateMany"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : true,\n    \"id\" : \"1892000000093303\",\n    \"errors\" : null\n  }, {\n    \"success\" : true,\n    \"id\" : \"1892000000085009\",\n    \"errors\" : null\n  }, {\n    \"success\" : false,\n    \"id\" : \"1892000000050003\",\n    \"errors\" : {\n      \"errorMessage\" : \"Either the field is invalid or the field may be restricted to update\",\n      \"errorCode\" : \"UNPROCESSABLE_ENTITY\",\n      \"httpCode\" : \"422\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Delete spam events",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/events/emptySpam",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"events",
								"emptySpam"
							]
						},
						"description": "This API deletes all spam events.\n#### OAuth Scope\n- `Desk.activities.events.DELETE`\n- `Desk.activities.DELETE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| departmentId (required) | &lt;long&gt;<br /> | ID of the department to which the activities belong \n"
					},
					"response": [
						{
							"name": "Delete spam events",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"departmentId\" : \"4000000025121\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/events/emptySpam",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"events",
										"emptySpam"
									]
								}
							},
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Events refer to pre-planned, and most of the time, directly customer-facing activities aimed at ticket resolution. The different events supported in Zoho Desk are: meetings and demos."
		},
		{
			"name": "Events Comments",
			"item": [
				{
					"name": "Create a event comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/events/:event_id/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"events",
								":event_id",
								"comments"
							],
							"variable": [
								{
									"key": "event_id"
								}
							]
						},
						"description": "This API adds a comment to a event.\n#### OAuth Scope\n- `Desk.activities.events.UPDATE`\n- `Desk.activities.UPDATE`\n- `Desk.tasks.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| content  | &lt;string&gt;<br />max chars : 32000 | Content of the comment. To retrieve or set user mentions, use this code format: <b>zsu[@user:{zuid}zsu</b>. \n| contentType  | &lt;string&gt;<br />max chars : 100 | Used to denote the content-type which maybe `html` or `plainText`. The default type is `html`. \n"
					},
					"response": [
						{
							"name": "Create a event comment",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contentType\" : \"html\",\n  \"content\" : \"First Event comment.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/events/4000000530001/comments",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"events",
										"4000000530001",
										"comments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : null,\n  \"attachments\" : [ {\n    \"size\" : \"12734\",\n    \"name\" : \"Attachment.png\",\n    \"id\" : \"4000000008994\",\n    \"href\" : \"https://desk.zoho.com/api/v1/events/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n  } ],\n  \"commentedTime\" : \"2017-01-24T14:54:33.534Z\",\n  \"id\" : \"4000000530003\",\n  \"contentType\" : \"html\",\n  \"content\" : \"First Event comment.\",\n  \"commenterId\" : \"4000000008692\",\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/4000000008692/photo\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"LightAgent\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update a event comment",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/events/:event_id/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"events",
								":event_id",
								"comments",
								"{comment_id}"
							],
							"variable": [
								{
									"key": "event_id"
								}
							]
						},
						"description": "This API updates an existing event comment.\n#### OAuth Scope\n- `Desk.activities.events.UPDATE`\n- `Desk.activities.UPDATE`\n- `Desk.tasks.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| content  | &lt;string&gt;<br />max chars : 32000 | Content of the comment. To retrieve or set user mentions, use this code format: <b>zsu[@user:{zuid}zsu</b>. \n| contentType  | &lt;string&gt;<br />max chars : 100 | Used to denote the content-type which maybe `html` or `plainText`. The default type is `html`. \n"
					},
					"response": [
						{
							"name": "Update a event comment",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\" : \"Edit Event comment\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/events/4000000530001/comments/4000000530003",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"events",
										"4000000530001",
										"comments",
										"4000000530003"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2017-01-24T14:56:20.447Z\",\n  \"attachments\" : [ {\n    \"size\" : \"12734\",\n    \"name\" : \"Attachment_edited.png\",\n    \"id\" : \"4000000008994\",\n    \"href\" : \"https://desk.zoho.com/api/v1/events/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n  } ],\n  \"commentedTime\" : \"2017-01-24T14:54:33.000Z\",\n  \"id\" : \"4000000530003\",\n  \"contentType\" : \"plainText\",\n  \"commenterId\" : \"4000000008692\",\n  \"content\" : \"Edit Event comment\",\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/4000000008692/photo\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"LightAgent\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete a event comment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/events/:event_id/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"events",
								":event_id",
								"comments",
								"{comment_id}"
							],
							"variable": [
								{
									"key": "event_id"
								}
							]
						},
						"description": "This API deletes an existing event comment.\n#### OAuth Scope\n- `Desk.activities.events.UPDATE`\n- `Desk.activities.UPDATE`\n- `Desk.tasks.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Delete a event comment",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/events/4000000530001/comments/4000000530003",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"events",
										"4000000530001",
										"comments",
										"4000000530003"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a event comment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/events/:event_id/comments/{comment_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"events",
								":event_id",
								"comments",
								"{comment_id}"
							],
							"query": [
								{
									"key": "include",
									"value": "<String>\n",
									"description": "Secondary information related to the comments. Value allowed is `mentions`, which returns the details of users mentioned in the comments.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "event_id"
								}
							]
						},
						"description": "This API fetches a event comment from the portal.\n#### OAuth Scope\n- `Desk.activities.events.READ`\n- `Desk.activities.READ`\n- `Desk.tasks.READ`\n\n"
					},
					"response": [
						{
							"name": "Get a event comment",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/events/4000000530001/comments/4000000530005?include=mentions",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"events",
										"4000000530001",
										"comments",
										"4000000530005"
									],
									"query": [
										{
											"key": "include",
											"value": "mentions"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : null,\n  \"attachments\" : [ {\n    \"size\" : \"12734\",\n    \"name\" : \"Attachment_edited.png\",\n    \"id\" : \"4000000008994\",\n    \"href\" : \"https://desk.zoho.com/api/v1/events/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n  } ],\n  \"commentedTime\" : \"2017-01-24T15:04:47.000Z\",\n  \"id\" : \"4000000530005\",\n  \"contentType\" : \"plainText\",\n  \"content\" : \"Second Event Comment......\",\n  \"commenterId\" : \"4000000008692\",\n  \"mention\" : [ ],\n  \"commenter\" : {\n    \"firstName\" : \"Jade\",\n    \"lastName\" : \"Tywin\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/4000000008692/photo\",\n    \"name\" : \"Jade Tywin\",\n    \"roleName\" : \"CEO\",\n    \"type\" : \"AGENT\",\n    \"email\" : \"jade12tywin@zylker.com\"\n  }\n}"
						}
					]
				},
				{
					"name": "List all event comments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/events/:event_id/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"events",
								":event_id",
								"comments"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\nrange : >=0",
									"description": "Index number starting from which the comments must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\ndefault : 50,",
									"description": "No. of comments to fetch",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort comments by the `commentedTime` attribute. The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<String>\n",
									"description": "Secondary information related to the comments. Value allowed is `mentions`, which returns the details of users mentioned in the comments.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "event_id"
								}
							]
						},
						"description": "This API lists a particular number of comments recorded on a event, based on the limit specified.\n#### OAuth Scope\n- `Desk.activities.events.READ`\n- `Desk.activities.READ`\n- `Desk.tasks.READ`\n\n"
					},
					"response": [
						{
							"name": "List all event comments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/events/4000000530001/comments?include=mentions",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"events",
										"4000000530001",
										"comments"
									],
									"query": [
										{
											"key": "include",
											"value": "mentions"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : null,\n    \"commentedTime\" : \"2017-01-24T15:04:47.000Z\",\n    \"id\" : \"4000000530005\",\n    \"contentType\" : \"plainText\",\n    \"commenterId\" : \"4000000008692\",\n    \"content\" : \"Sample zsu[@user:55616589]zsu and zsu[@team:31138000001254025_new team]zsu testing\",\n    \"mention\" : [ {\n      \"firstName\" : \"\",\n      \"lastName\" : \"pandees\",\n      \"photoURL\" : null,\n      \"offSet\" : \"7\",\n      \"length\" : \"28\",\n      \"id\" : \"31138000000573164\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade15tywin@zylker.com\",\n      \"zuid\" : \"55616589\"\n    }, {\n      \"offSet\" : \"39\",\n      \"length\" : \"46\",\n      \"name\" : \"new team\",\n      \"id\" : \"31138000001254025\",\n      \"type\" : \"TEAM\"\n    } ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/4000000008692/photo\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"LightAgent\",\n      \"type\" : \"AGENT\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  }, {\n    \"modifiedTime\" : \"2017-01-24T14:56:20.000Z\",\n    \"attachments\" : [ {\n      \"size\" : \"12734\",\n      \"name\" : \"Attachment_list.png\",\n      \"id\" : \"4000000008994\",\n      \"href\" : \"https://desk.zoho.com/api/v1/events/4000000528005/comments/4000000529001/attachments/4000000008994/content\"\n    } ],\n    \"commentedTime\" : \"2017-01-24T14:54:33.000Z\",\n    \"id\" : \"4000000530003\",\n    \"contentType\" : \"html\",\n    \"commenterId\" : \"4000000008692\",\n    \"content\" : \"Edit Event comment\",\n    \"mention\" : [ ],\n    \"commenter\" : {\n      \"firstName\" : \"Jade\",\n      \"lastName\" : \"Tywin\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/portalUser/4000000008692/photo\",\n      \"name\" : \"Jade Tywin\",\n      \"roleName\" : \"PortalUser\",\n      \"type\" : \"END_USER\",\n      \"email\" : \"jade12tywin@zylker.com\"\n    }\n  } ]\n}"
						}
					]
				}
			],
			"description": "Event comments refer to comments recorded on events assigned to agents. We are introducing a new key called contentType in the responses to ticket comment APIs. This new key supports two values: html and plaintext. Both types of content will be delivered only in plain text in API responses and the contentType key only indicates the presence of html formatting in the original comment."
		},
		{
			"name": "Modules",
			"item": [
				{
					"name": "List All Modules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/modules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"modules"
							]
						},
						"description": "This API is to fetch the modules that are available for listing in Zoho Desk.\n#### OAuth Scope\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List All Modules",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/modules",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"modules"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modules\" : [ {\n    \"displayLabel\" : \"Contracts\",\n    \"apiKey\" : \"contracts\",\n    \"isEnabled\" : false,\n    \"pluralLabel\" : \"Contracts\",\n    \"id\" : \"127254000000000183\",\n    \"singularLabel\" : \"Contract\"\n  }, {\n    \"displayLabel\" : \"Topics\",\n    \"apiKey\" : \"category\",\n    \"isEnabled\" : false,\n    \"pluralLabel\" : \"Topics\",\n    \"id\" : \"127254000000000195\",\n    \"singularLabel\" : \"Topic\"\n  }, {\n    \"displayLabel\" : \"Time Entry1\",\n    \"apiKey\" : \"timeEntry\",\n    \"isEnabled\" : false,\n    \"pluralLabel\" : \"Time Entry1\",\n    \"id\" : \"127254000000000187\",\n    \"singularLabel\" : \"Time Entry\"\n  }, {\n    \"displayLabel\" : \"Help Center\",\n    \"apiKey\" : \"kbCategory\",\n    \"isEnabled\" : true,\n    \"pluralLabel\" : \"ArticleA\",\n    \"id\" : \"127254000000000181\",\n    \"singularLabel\" : \"Article\"\n  }, {\n    \"displayLabel\" : \"Social\",\n    \"apiKey\" : \"social\",\n    \"isEnabled\" : true,\n    \"pluralLabel\" : \"Social\",\n    \"id\" : \"127254000000024005\",\n    \"singularLabel\" : \"Social\"\n  }, {\n    \"displayLabel\" : \"Community\",\n    \"apiKey\" : \"community\",\n    \"isEnabled\" : true,\n    \"pluralLabel\" : \"Community\",\n    \"id\" : \"127254000000015001\",\n    \"singularLabel\" : \"Community\"\n  }, {\n    \"displayLabel\" : \"Tasks\",\n    \"apiKey\" : \"tasks\",\n    \"isEnabled\" : true,\n    \"pluralLabel\" : \"Tasks\",\n    \"id\" : \"127254000000000171\",\n    \"singularLabel\" : \"Task\"\n  }, {\n    \"displayLabel\" : \"Tickets\",\n    \"apiKey\" : \"tickets\",\n    \"isEnabled\" : true,\n    \"pluralLabel\" : \"Tickets\",\n    \"id\" : \"127254000000000177\",\n    \"singularLabel\" : \"Ticket\"\n  }, {\n    \"displayLabel\" : \"Contacts\",\n    \"apiKey\" : \"contacts\",\n    \"isEnabled\" : true,\n    \"pluralLabel\" : \"Contacts\",\n    \"id\" : \"127254000000000161\",\n    \"singularLabel\" : \"Contact\"\n  }, {\n    \"displayLabel\" : \"Products\",\n    \"apiKey\" : \"products\",\n    \"isEnabled\" : true,\n    \"pluralLabel\" : \"Products\",\n    \"id\" : \"127254000000000185\",\n    \"singularLabel\" : \"Product\"\n  }, {\n    \"displayLabel\" : \"zAccounts\",\n    \"apiKey\" : \"accounts\",\n    \"isEnabled\" : true,\n    \"pluralLabel\" : \"zAccounts\",\n    \"id\" : \"127254000000000159\",\n    \"singularLabel\" : \"Account\"\n  }, {\n    \"displayLabel\" : \"Chat\",\n    \"apiKey\" : \"chat\",\n    \"isEnabled\" : true,\n    \"pluralLabel\" : \"Chat\",\n    \"id\" : \"127254000000032011\",\n    \"singularLabel\" : \"Chat\"\n  }, {\n    \"displayLabel\" : \"Reports\",\n    \"apiKey\" : \"reports\",\n    \"isEnabled\" : true,\n    \"pluralLabel\" : \"Reports\",\n    \"id\" : \"127254000000000163\",\n    \"singularLabel\" : \"Report\"\n  }, {\n    \"displayLabel\" : \"Dashboards\",\n    \"apiKey\" : \"dashboards\",\n    \"isEnabled\" : true,\n    \"pluralLabel\" : \"Dashboards\",\n    \"id\" : \"127254000000000165\",\n    \"singularLabel\" : \"Dashboard\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List Modules accessible to me",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/myAccessibleModules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"myAccessibleModules"
							]
						},
						"description": "This API will fetch the list of modules that are accessible to the current user profile.\n#### OAuth Scope\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List Modules accessible to me",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/modules",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"modules"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modules\" : [ {\n    \"displayLabel\" : \"Contracts\",\n    \"apiKey\" : \"contracts\",\n    \"isEnabled\" : false,\n    \"pluralLabel\" : \"Contracts\",\n    \"id\" : \"127254000000000183\",\n    \"singularLabel\" : \"Contract\"\n  }, {\n    \"displayLabel\" : \"Topics\",\n    \"apiKey\" : \"category\",\n    \"isEnabled\" : false,\n    \"pluralLabel\" : \"Topics\",\n    \"id\" : \"127254000000000195\",\n    \"singularLabel\" : \"Topic\"\n  }, {\n    \"displayLabel\" : \"Time Entry1\",\n    \"apiKey\" : \"timeEntry\",\n    \"isEnabled\" : false,\n    \"pluralLabel\" : \"Time Entry1\",\n    \"id\" : \"127254000000000187\",\n    \"singularLabel\" : \"Time Entry\"\n  }, {\n    \"displayLabel\" : \"Help Center\",\n    \"apiKey\" : \"kbCategory\",\n    \"isEnabled\" : true,\n    \"pluralLabel\" : \"ArticleA\",\n    \"id\" : \"127254000000000181\",\n    \"singularLabel\" : \"Article\"\n  }, {\n    \"displayLabel\" : \"Social\",\n    \"apiKey\" : \"social\",\n    \"isEnabled\" : true,\n    \"pluralLabel\" : \"Social\",\n    \"id\" : \"127254000000024005\",\n    \"singularLabel\" : \"Social\"\n  }, {\n    \"displayLabel\" : \"Community\",\n    \"apiKey\" : \"community\",\n    \"isEnabled\" : true,\n    \"pluralLabel\" : \"Community\",\n    \"id\" : \"127254000000015001\",\n    \"singularLabel\" : \"Community\"\n  }, {\n    \"displayLabel\" : \"Tasks\",\n    \"apiKey\" : \"tasks\",\n    \"isEnabled\" : true,\n    \"pluralLabel\" : \"Tasks\",\n    \"id\" : \"127254000000000171\",\n    \"singularLabel\" : \"Task\"\n  }, {\n    \"displayLabel\" : \"Tickets\",\n    \"apiKey\" : \"tickets\",\n    \"isEnabled\" : true,\n    \"pluralLabel\" : \"Tickets\",\n    \"id\" : \"127254000000000177\",\n    \"singularLabel\" : \"Ticket\"\n  }, {\n    \"displayLabel\" : \"Contacts\",\n    \"apiKey\" : \"contacts\",\n    \"isEnabled\" : true,\n    \"pluralLabel\" : \"Contacts\",\n    \"id\" : \"127254000000000161\",\n    \"singularLabel\" : \"Contact\"\n  }, {\n    \"displayLabel\" : \"Products\",\n    \"apiKey\" : \"products\",\n    \"isEnabled\" : true,\n    \"pluralLabel\" : \"Products\",\n    \"id\" : \"127254000000000185\",\n    \"singularLabel\" : \"Product\"\n  }, {\n    \"displayLabel\" : \"zAccounts\",\n    \"apiKey\" : \"accounts\",\n    \"isEnabled\" : true,\n    \"pluralLabel\" : \"zAccounts\",\n    \"id\" : \"127254000000000159\",\n    \"singularLabel\" : \"Account\"\n  }, {\n    \"displayLabel\" : \"Chat\",\n    \"apiKey\" : \"chat\",\n    \"isEnabled\" : true,\n    \"pluralLabel\" : \"Chat\",\n    \"id\" : \"127254000000032011\",\n    \"singularLabel\" : \"Chat\"\n  }, {\n    \"displayLabel\" : \"Reports\",\n    \"apiKey\" : \"reports\",\n    \"isEnabled\" : true,\n    \"pluralLabel\" : \"Reports\",\n    \"id\" : \"127254000000000163\",\n    \"singularLabel\" : \"Report\"\n  }, {\n    \"displayLabel\" : \"Dashboards\",\n    \"apiKey\" : \"dashboards\",\n    \"isEnabled\" : true,\n    \"pluralLabel\" : \"Dashboards\",\n    \"id\" : \"127254000000000165\",\n    \"singularLabel\" : \"Dashboard\"\n  } ]\n}"
						}
					]
				}
			],
			"description": "The Modules Present in the helpdesk"
		},
		{
			"name": "OrganizationFields",
			"item": [
				{
					"name": "Get organization fields in a module",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/organizationFields?module=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizationFields"
							],
							"query": [
								{
									"key": "module",
									"value": "<String>\n",
									"description": "the module name with in which search to be done. Value may be tickets, contacts , accounts  ,tasks , calls , events, timeEntry,products, contracts"
								},
								{
									"key": "apiNames",
									"value": "<string>\nmax chars : 100",
									"description": "Key that fetches only the fields whose apiNames are given. Multiple values can be passed, with commas for separation.",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "Key that fetches only the fields for the given departmentId.",
									"disabled": true
								}
							]
						},
						"description": "This API fetches fields in a module\n#### OAuth Scope\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get organization fields in a module",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/organizationFields?module=tickets",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"organizationFields"
									],
									"query": [
										{
											"key": "module",
											"value": "tickets"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"displayLabel\" : \"Department\",\n    \"apiName\" : \"departmentId\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000353\",\n    \"type\" : \"LookUp\",\n    \"maxLength\" : 50,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Account Name\",\n    \"apiName\" : \"accountId\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000355\",\n    \"type\" : \"LookUp\",\n    \"maxLength\" : 300,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Contact Name\",\n    \"apiName\" : \"contactId\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000357\",\n    \"type\" : \"LookUp\",\n    \"maxLength\" : 300,\n    \"isMandatory\" : true\n  }, {\n    \"displayLabel\" : \"Email\",\n    \"apiName\" : \"email\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000359\",\n    \"type\" : \"Email\",\n    \"maxLength\" : 120,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Phone\",\n    \"apiName\" : \"phone\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000361\",\n    \"type\" : \"Phone\",\n    \"maxLength\" : 120,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Subject\",\n    \"apiName\" : \"subject\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000363\",\n    \"type\" : \"Text\",\n    \"maxLength\" : 255,\n    \"isMandatory\" : true\n  }, {\n    \"displayLabel\" : \"Description\",\n    \"apiName\" : \"description\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000365\",\n    \"type\" : \"Textarea\",\n    \"maxLength\" : 1000000,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Status\",\n    \"allowedValues\" : [ {\n      \"statusType\" : \"Open\",\n      \"value\" : \"Open\"\n    }, {\n      \"statusType\" : \"Open\",\n      \"value\" : \"Open_july\"\n    }, {\n      \"statusType\" : \"Open\",\n      \"value\" : \"Open_newDept\"\n    }, {\n      \"statusType\" : \"On Hold\",\n      \"value\" : \"On Hold\"\n    }, {\n      \"statusType\" : \"Open\",\n      \"value\" : \"Escalated\"\n    }, {\n      \"statusType\" : \"Closed\",\n      \"value\" : \"Closed1\"\n    }, {\n      \"statusType\" : \"Open\",\n      \"value\" : \"Closed\"\n    }, {\n      \"statusType\" : \"Closed\",\n      \"value\" : \"newDeptClosed\"\n    }, {\n      \"statusType\" : \"Closed\",\n      \"value\" : \"julyDeptClosed\"\n    }, {\n      \"statusType\" : \"Closed\",\n      \"value\" : \"julyDeptClosed1\"\n    } ],\n    \"apiName\" : \"status\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000367\",\n    \"type\" : \"Picklist\",\n    \"maxLength\" : 120,\n    \"isMandatory\" : true\n  }, {\n    \"displayLabel\" : \"Product Name\",\n    \"apiName\" : \"productId\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000369\",\n    \"type\" : \"LookUp\",\n    \"maxLength\" : 120,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Case Owner\",\n    \"apiName\" : \"assigneeId\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000371\",\n    \"type\" : \"LookUp\",\n    \"maxLength\" : 120,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Category\",\n    \"allowedValues\" : [ {\n      \"value\" : \"General\"\n    }, {\n      \"value\" : \"Defects\"\n    }, {\n      \"value\" : \"ManojKumar\"\n    } ],\n    \"apiName\" : \"category\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000421\",\n    \"type\" : \"Picklist\",\n    \"maxLength\" : 120,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Sub Category\",\n    \"allowedValues\" : [ {\n      \"value\" : \"Sub General\"\n    }, {\n      \"value\" : \"Sub Defects\"\n    }, {\n      \"value\" : \"Sub Defects1235\"\n    } ],\n    \"apiName\" : \"subCategory\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000423\",\n    \"type\" : \"Picklist\",\n    \"maxLength\" : 120,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Due Date\",\n    \"apiName\" : \"dueDate\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000405\",\n    \"type\" : \"DateTime\",\n    \"maxLength\" : 300,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Priority\",\n    \"allowedValues\" : [ {\n      \"value\" : \"-None-\"\n    }, {\n      \"value\" : \"High\"\n    }, {\n      \"value\" : \"Medium\"\n    }, {\n      \"value\" : \"Low\"\n    } ],\n    \"apiName\" : \"priority\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000407\",\n    \"type\" : \"Picklist\",\n    \"maxLength\" : 120,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Mode\",\n    \"allowedValues\" : [ {\n      \"value\" : \"Phone\"\n    }, {\n      \"value\" : \"Email\"\n    }, {\n      \"value\" : \"Web\"\n    }, {\n      \"value\" : \"Twitter\"\n    }, {\n      \"value\" : \"Facebook\"\n    }, {\n      \"value\" : \"Chat\"\n    }, {\n      \"value\" : \"Forums\"\n    }, {\n      \"value\" : \"Feedback Widget\"\n    } ],\n    \"apiName\" : \"channel\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000409\",\n    \"type\" : \"Picklist\",\n    \"maxLength\" : 120,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Is Overdue\",\n    \"apiName\" : \"Is Overdue\",\n    \"isCustomField\" : false,\n    \"defaultValue\" : \"true\",\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000411\",\n    \"type\" : \"Boolean\",\n    \"maxLength\" : 50,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Is Escalated\",\n    \"apiName\" : \"Is Escalated\",\n    \"isCustomField\" : false,\n    \"defaultValue\" : \"true\",\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000413\",\n    \"type\" : \"Boolean\",\n    \"maxLength\" : 50,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Classification\",\n    \"allowedValues\" : [ {\n      \"value\" : \"-None-\"\n    }, {\n      \"value\" : \"Question\"\n    }, {\n      \"value\" : \"Problem\"\n    }, {\n      \"value\" : \"Feature\"\n    }, {\n      \"value\" : \"Others\"\n    } ],\n    \"apiName\" : \"classification\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000415\",\n    \"type\" : \"Picklist\",\n    \"maxLength\" : 120,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Resolution\",\n    \"apiName\" : \"resolution\",\n    \"isCustomField\" : false,\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000417\",\n    \"type\" : \"Textarea\",\n    \"maxLength\" : 1000000,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Sample Text Field\",\n    \"apiName\" : \"cf_sample_text_field\",\n    \"isCustomField\" : false,\n    \"toolTipType\" : \"placeHolder\",\n    \"showToHelpCenter\" : true,\n    \"isEncryptedField\" : false,\n    \"toolTip\" : \"Sample Text Field\",\n    \"id\" : \"4000000000447\",\n    \"type\" : \"Textarea\",\n    \"maxLength\" : 1000000,\n    \"isMandatory\" : false\n  }, {\n    \"displayLabel\" : \"Large Text Field\",\n    \"apiName\" : \"cf_large_text_field\",\n    \"isCustomField\" : true,\n    \"i18NLabel\" : \"Large Text Field\",\n    \"name\" : \"LargeText field\",\n    \"isEncryptedField\" : false,\n    \"id\" : \"4000000000449\",\n    \"type\" : \"LargeText\",\n    \"maxLength\" : 16000000,\n    \"isMandatory\" : false,\n    \"properties\" : {\n      \"translatable\" : true\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Create Field",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/organizationFields?module=<String>\n&displayLabel=<string>\nmax chars : 200&type=<string>\nmax chars : 100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizationFields"
							],
							"query": [
								{
									"key": "module",
									"value": "<String>\n",
									"description": "Name of the module whose fields must be fetched. Values allowed are tickets, contacts, accounts, tasks, timeEntry, products , calls , events, and contracts."
								},
								{
									"key": "displayLabel",
									"value": "<string>\nmax chars : 200",
									"description": "Name of the field on the UI"
								},
								{
									"key": "name",
									"value": "<string>\nmax chars : 200",
									"description": "Name of the custom field",
									"disabled": true
								},
								{
									"key": "type",
									"value": "<string>\nmax chars : 100",
									"description": "Data type of the field. Values allowed are Text, Number, Percent, Decimal, Currency, Date, Date Time, Email, Phone, PickList, Website, Textarea, Checkbox, Multiselect, Boolean and LargeText"
								},
								{
									"key": "maxLength",
									"value": "<integer>\n",
									"description": "Maximum permissible length of the value in the field. Applicable for Text, Number, Decimal, and Currency fields",
									"disabled": true
								},
								{
									"key": "decimalPlaces",
									"value": "<integer>\n",
									"description": "Number of decimal places the value in a field can take. Applicable for Decimal and Currency fields",
									"disabled": true
								},
								{
									"key": "roundingPrecision",
									"value": "<integer>\n",
									"description": "Precision of the value in the field. Precision refers to the total number of digits in a decimal number. For example, the precision of 30.12 is 4. Applicable for Currency fields",
									"disabled": true
								},
								{
									"key": "roundingOption",
									"value": "<string>\nmax chars : 120",
									"description": "Option to round off complex decimal numbers to the nearest whole number or shorter decimal number. Values allowed are roundOff, roundDown, and roundUp",
									"disabled": true
								},
								{
									"key": "defaultValue",
									"value": "<string>\nmax chars : 120",
									"description": "Default value set for a field. Applicable for Checkbox fields",
									"disabled": true
								},
								{
									"key": "allowedValues",
									"value": "<list>\n",
									"description": "Values allowed in a field. Applicable for PickList fields",
									"disabled": true
								},
								{
									"key": "layoutIds",
									"value": "<list>\n",
									"description": "IDs of layouts configured for the module",
									"disabled": true
								},
								{
									"key": "isEncryptedField",
									"value": "<boolean>\n",
									"description": "Key that returns if the value in the field is encrypted or not. The field types are Text, Number, Percent, Decimal, Email, Phone, URL which supports encryption",
									"disabled": true
								},
								{
									"key": "toolTip",
									"value": "<string>\nmax chars : 200",
									"description": "the tool tip of the field",
									"disabled": true
								},
								{
									"key": "toolTipType",
									"value": "<string>\nmax chars : 200",
									"description": "the tool tip of the field",
									"disabled": true
								}
							]
						},
						"description": "This API creates a field\n#### OAuth Scope\n- `Desk.settings.CREATE`\n\n"
					},
					"response": [
						{
							"name": "Create Field",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayLabel\" : \"Sample Text Field\",\n  \"toolTipType\" : \"placeHolder\",\n  \"showToHelpCenter\" : true,\n  \"isEncryptedField\" : true,\n  \"toolTip\" : \"Sample Text Field\",\n  \"type\" : \"Text\",\n  \"maxLength\" : \"50\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/organizationFields?module=tickets",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"organizationFields"
									],
									"query": [
										{
											"key": "module",
											"value": "tickets"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"displayLabel\" : \"Sample Text Field\",\n  \"apiName\" : \"cf_sample_text_field\",\n  \"isCustomField\" : true,\n  \"toolTipType\" : \"placeHolder\",\n  \"showToHelpCenter\" : true,\n  \"isEncryptedField\" : true,\n  \"toolTip\" : \"Sample Text Field\",\n  \"id\" : \"4000000049001\",\n  \"type\" : \"Text\",\n  \"maxLength\" : 50,\n  \"isMandatory\" : false\n}"
						}
					]
				},
				{
					"name": "Edit Field",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/organizationFields/:field_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizationFields",
								":field_id"
							],
							"variable": [
								{
									"key": "field_id"
								}
							]
						},
						"description": "This API edits a field\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| displayLabel  | &lt;string&gt;<br />max chars : 200 | Name of the field on the UI \n| name  | &lt;string&gt;<br />max chars : 200 | Name of the custom field \n| type  | &lt;string&gt;<br />max chars : 100 | Data type of the field. Values allowed are Text, Number, Percent, Decimal, Currency, Date, Date Time, Email, Phone, PickList, Website, Textarea, Checkbox, Multiselect, Boolean and LargeText \n| maxLength  | &lt;integer&gt;<br /> | Maximum permissible length of the value in the field. Applicable for Text, Number, Decimal, and Currency fields \n| decimalPlaces  | &lt;integer&gt;<br /> | Number of decimal places the value in a field can take. Applicable for Decimal and Currency fields \n| roundingPrecision  | &lt;integer&gt;<br /> | Precision of the value in the field. Precision refers to the total number of digits in a decimal number. For example, the precision of 30.12 is 4. Applicable for Currency fields \n| roundingOption  | &lt;string&gt;<br />max chars : 120 | Option to round off complex decimal numbers to the nearest whole number or shorter decimal number. Values allowed are roundOff, roundDown, and roundUp \n| defaultValue  | &lt;string&gt;<br />max chars : 120 | Default value set for a field. Applicable for Checkbox fields \n| allowedValues  | &lt;list&gt;<br /> | Values allowed in a field. Applicable for PickList fields \n| layoutIds  | &lt;list&gt;<br /> | IDs of layouts configured for the module \n| isEncryptedField  | &lt;boolean&gt;<br /> | Key that returns if the value in the field is encrypted or not. The field types are Text, Number, Percent, Decimal, Email, Phone, URL which supports encryption \n| toolTip  | &lt;string&gt;<br />max chars : 200 | the tool tip of the field \n| toolTipType  | &lt;string&gt;<br />max chars : 200 | the tool tip of the field \n"
					},
					"response": [
						{
							"name": "Edit Field",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayLabel\" : \"Sample Text Field\",\n  \"toolTipType\" : \"placeHolder\",\n  \"showToHelpCenter\" : false,\n  \"toolTip\" : \"Sample Text Field\",\n  \"type\" : \"Text\",\n  \"maxLength\" : \"40\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/organizationFields/4000000049001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"organizationFields",
										"4000000049001"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"displayLabel\" : \"Sample Text Field\",\n  \"apiName\" : \"cf_sample_text_field\",\n  \"isCustomField\" : true,\n  \"toolTipType\" : \"placeHolder\",\n  \"showToHelpCenter\" : false,\n  \"isEncryptedField\" : true,\n  \"toolTip\" : \"Sample Text Field\",\n  \"id\" : \"4000000049001\",\n  \"type\" : \"Text\",\n  \"maxLength\" : 40,\n  \"isMandatory\" : false\n}"
						}
					]
				},
				{
					"name": "Get Field",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/organizationFields/:field_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizationFields",
								":field_id"
							],
							"variable": [
								{
									"key": "field_id"
								}
							]
						},
						"description": "This API get a field\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Field",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/organizationFields/4000000049001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"organizationFields",
										"4000000049001"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"displayLabel\" : \"Sample Text Field\",\n  \"apiName\" : \"cf_sample_text_field\",\n  \"isCustomField\" : true,\n  \"toolTipType\" : \"placeHolder\",\n  \"showToHelpCenter\" : false,\n  \"isEncryptedField\" : true,\n  \"toolTip\" : \"Sample Text Field\",\n  \"id\" : \"4000000049001\",\n  \"type\" : \"Text\",\n  \"maxLength\" : 40,\n  \"isMandatory\" : false\n}"
						}
					]
				},
				{
					"name": "Get Field Permissions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/organizationFields/:field_id/permissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizationFields",
								":field_id",
								"permissions"
							],
							"variable": [
								{
									"key": "field_id"
								}
							]
						},
						"description": "This API get a field permissions for all the profiles\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Field Permissions",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/organizationFields/4000000049001/permissions",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"organizationFields",
										"4000000049001",
										"permissions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"profileName\" : \"Administrator\",\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012339\",\n    \"isInVisibleAccess\" : false,\n    \"isReadAccess\" : false,\n    \"isInVisible\" : false,\n    \"isWriteOnly\" : true,\n    \"isWriteAccess\" : true,\n    \"isCustomProfile\" : false\n  }, {\n    \"profileName\" : \"Standard\",\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012342\",\n    \"isInVisibleAccess\" : false,\n    \"isReadAccess\" : false,\n    \"isInVisible\" : false,\n    \"isWriteOnly\" : true,\n    \"isWriteAccess\" : true,\n    \"isCustomProfile\" : false\n  }, {\n    \"profileName\" : \"Supervisor\",\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012348\",\n    \"isInVisibleAccess\" : false,\n    \"isReadAccess\" : false,\n    \"isInVisible\" : false,\n    \"isWriteOnly\" : true,\n    \"isWriteAccess\" : true,\n    \"isCustomProfile\" : false\n  }, {\n    \"profileName\" : \"Support Manager\",\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012351\",\n    \"isInVisibleAccess\" : false,\n    \"isReadAccess\" : false,\n    \"isInVisible\" : false,\n    \"isWriteOnly\" : true,\n    \"isWriteAccess\" : true,\n    \"isCustomProfile\" : false\n  }, {\n    \"profileName\" : \"Newbie Agent\",\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012354\",\n    \"isInVisibleAccess\" : false,\n    \"isReadAccess\" : false,\n    \"isInVisible\" : false,\n    \"isWriteOnly\" : true,\n    \"isWriteAccess\" : true,\n    \"isCustomProfile\" : false\n  }, {\n    \"profileName\" : \"Light Agent\",\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012357\",\n    \"isInVisibleAccess\" : false,\n    \"isReadAccess\" : false,\n    \"isInVisible\" : false,\n    \"isWriteOnly\" : true,\n    \"isWriteAccess\" : true,\n    \"isCustomProfile\" : false\n  } ]\n}"
						}
					]
				},
				{
					"name": "Update Field Permissions",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/organizationFields/:field_id/permissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizationFields",
								":field_id",
								"permissions"
							],
							"variable": [
								{
									"key": "field_id"
								}
							]
						},
						"description": "This API update field permissions\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| profiles  | &lt;list&gt;<br /> | null \n"
					},
					"response": [
						{
							"name": "Update Field Permissions",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"profiles\" : [ {\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012339\",\n    \"isWriteOnly\" : true\n  }, {\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012342\",\n    \"isWriteOnly\" : true\n  }, {\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012348\",\n    \"isWriteOnly\" : true\n  }, {\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012351\",\n    \"isWriteOnly\" : true\n  }, {\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012354\",\n    \"isWriteOnly\" : true\n  }, {\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012357\",\n    \"isWriteOnly\" : true\n  } ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/organizationFields/4000000049001/permissions",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"organizationFields",
										"4000000049001",
										"permissions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"profileName\" : \"Administrator\",\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012339\",\n    \"isInVisibleAccess\" : false,\n    \"isReadAccess\" : false,\n    \"isInVisible\" : false,\n    \"isWriteOnly\" : true,\n    \"isWriteAccess\" : true,\n    \"isCustomProfile\" : false\n  }, {\n    \"profileName\" : \"Standard\",\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012342\",\n    \"isInVisibleAccess\" : false,\n    \"isReadAccess\" : false,\n    \"isInVisible\" : false,\n    \"isWriteOnly\" : true,\n    \"isWriteAccess\" : true,\n    \"isCustomProfile\" : false\n  }, {\n    \"profileName\" : \"Supervisor\",\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012348\",\n    \"isInVisibleAccess\" : false,\n    \"isReadAccess\" : false,\n    \"isInVisible\" : false,\n    \"isWriteOnly\" : true,\n    \"isWriteAccess\" : true,\n    \"isCustomProfile\" : false\n  }, {\n    \"profileName\" : \"Support Manager\",\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012351\",\n    \"isInVisibleAccess\" : false,\n    \"isReadAccess\" : false,\n    \"isInVisible\" : false,\n    \"isWriteOnly\" : true,\n    \"isWriteAccess\" : true,\n    \"isCustomProfile\" : false\n  }, {\n    \"profileName\" : \"Newbie Agent\",\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012354\",\n    \"isInVisibleAccess\" : false,\n    \"isReadAccess\" : false,\n    \"isInVisible\" : false,\n    \"isWriteOnly\" : true,\n    \"isWriteAccess\" : true,\n    \"isCustomProfile\" : false\n  }, {\n    \"profileName\" : \"Light Agent\",\n    \"isReadOnly\" : false,\n    \"profileId\" : \"4000000012357\",\n    \"isInVisibleAccess\" : false,\n    \"isReadAccess\" : false,\n    \"isInVisible\" : false,\n    \"isWriteOnly\" : true,\n    \"isWriteAccess\" : true,\n    \"isCustomProfile\" : false\n  } ]\n}"
						}
					]
				},
				{
					"name": "Delete Field",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/organizationFields/:field_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizationFields",
								":field_id"
							],
							"variable": [
								{
									"key": "field_id"
								}
							]
						},
						"description": "This API delete a custom field\n#### OAuth Scope\n- `Desk.settings.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete Field",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/organizationFields/4000000049001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"organizationFields",
										"4000000049001"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get organization custom fields count in a module",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customFieldCount?module=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customFieldCount"
							],
							"query": [
								{
									"key": "module",
									"value": "<String>\n",
									"description": "Name of the module whose allowed and available custom fields must be fetched. Values allowed are tickets, contacts, accounts, tasks, calls, events, timeEntry, products, and contracts."
								}
							]
						},
						"description": "This API returns the custom field count allowed and available in a module.\n#### OAuth Scope\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get organization custom fields count in a module",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/customFieldCount?module=tickets",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"customFieldCount"
									],
									"query": [
										{
											"key": "module",
											"value": "tickets"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"customFieldCounts\" : [ {\n    \"types\" : [ \"Text\", \"PickList\", \"Email\", \"Phone\", \"Website\" ],\n    \"maximumLimit\" : 100,\n    \"available\" : 100,\n    \"type\" : \"Varchar\"\n  }, {\n    \"types\" : [ \"Textarea\", \"Multiselect\" ],\n    \"maximumLimit\" : 30,\n    \"available\" : 30,\n    \"type\" : \"Text\"\n  }, {\n    \"types\" : [ \"Number\" ],\n    \"maximumLimit\" : 20,\n    \"available\" : 20,\n    \"type\" : \"Integer\"\n  }, {\n    \"types\" : [ \"Percent\", \"Decimal\", \"Currency\" ],\n    \"maximumLimit\" : 20,\n    \"available\" : 20,\n    \"type\" : \"Double\"\n  }, {\n    \"types\" : [ \"Date\" ],\n    \"maximumLimit\" : 20,\n    \"available\" : 20,\n    \"type\" : \"Date\"\n  }, {\n    \"types\" : [ \"DateTime\" ],\n    \"maximumLimit\" : 20,\n    \"available\" : 20,\n    \"type\" : \"DateTime\"\n  }, {\n    \"types\" : [ \"Checkbox\" ],\n    \"maximumLimit\" : 20,\n    \"available\" : 20,\n    \"type\" : \"Boolean\"\n  }, {\n    \"types\" : [ \"Text\", \"Website\", \"Email\", \"Number\", \"Phone\", \"Percent\", \"Decimal\" ],\n    \"maximumLimit\" : 10,\n    \"available\" : 10,\n    \"type\" : \"DESK_SEARCHABLE_CTEXT_OEK\"\n  }, {\n    \"maximumLimit\" : 10,\n    \"available\" : 10,\n    \"type\" : \"Formula\"\n  } ],\n  \"totalAvailableCount\" : 230\n}"
						}
					]
				},
				{
					"name": "Get organization custom fields criteria references",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/organizationFields/:field_id/criteriaReferences?featureType=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizationFields",
								":field_id",
								"criteriaReferences"
							],
							"query": [
								{
									"key": "featureType",
									"value": "<String>\n",
									"description": "Feature name from which criteria references has to be fetched - DirectAssignment, RoundRobin, WorkFlow, SLA, Supervise, BluePrint, CustomView, Report, GameTrophy, GameBadge, LayoutRules, ValidationRules"
								},
								{
									"key": "from",
									"value": "<integer>\ndefault : 0,",
									"description": "Index number, starting from which the rules must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\ndefault : 50,",
									"description": "Number of references to fetch",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "field_id"
								}
							]
						},
						"description": "This API fetches criteria references of a custom field\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get organization custom fields criteria references",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "support.zoho.com/api/v1/organizationFields/4000000049001/criteriaReferences?featureType=DirectAssignment&from=0&limit30",
									"host": [
										"support",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"organizationFields",
										"4000000049001",
										"criteriaReferences"
									],
									"query": [
										{
											"key": "featureType",
											"value": "DirectAssignment"
										},
										{
											"key": "from",
											"value": "0"
										},
										{
											"key": "limit30"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"DirectAssignment\" : [ {\n    \"encryptedId\" : \"c50bd2066db398caace9491e3010e657\",\n    \"name\" : \"DA Rule1\",\n    \"id\" : 21000000057136\n  }, {\n    \"encryptedId\" : \"c50bd2066db398caace9491e789a5cb3\",\n    \"name\" : \"DA Rule2\",\n    \"id\" : 21000000067146\n  } ]\n}"
						}
					]
				}
			],
			"description": "Account refers to customer organizations that use your products or services. An account can have multiple contacts."
		},
		{
			"name": "Layouts",
			"item": [
				{
					"name": "List Layouts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts?module=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts"
							],
							"query": [
								{
									"key": "module",
									"value": "<String>\n",
									"description": " Name of the module whose layouts must be fetched. Values allowed are tickets, contacts, accounts , calls , events, tasks, timeEntry, products, and contracts."
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department in which the layouts are configured",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<String>\ndefault : active",
									"description": "Status of the layout Values allowed are active|inactive|all",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\ndefault : 0",
									"description": "from index",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\ndefault : 20",
									"description": "no of layouts to be fetched",
									"disabled": true
								},
								{
									"key": "layoutName",
									"value": "<string>\nmax chars : 200",
									"description": "Name of the layout used as the keyword for the search",
									"disabled": true
								}
							]
						},
						"description": "This API lists all the layouts configured for a module.\n#### OAuth Scope\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List Layouts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts?module=tickets",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts"
									],
									"query": [
										{
											"key": "module",
											"value": "tickets"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2019-05-09T06:24:10.000Z\",\n    \"departmentId\" : \"4000000012710\",\n    \"module\" : \"Cases\",\n    \"layoutDisplayName\" : \"New Layout For Tickets\",\n    \"layoutDesc\" : \"DESC\",\n    \"isDefaultLayout\" : true,\n    \"layoutName\" : \"New Layout For Tickets\",\n    \"skipDeptAccessValidation\" : false,\n    \"layoutProfiles\" : [ {\n      \"profileName\" : \"Support Administrator\",\n      \"isDefault\" : true,\n      \"id\" : \"4000000015183\",\n      \"type\" : \"ADMIN\"\n    }, {\n      \"profileName\" : \"Agent\",\n      \"isDefault\" : true,\n      \"id\" : \"4000000015186\",\n      \"type\" : \"STANDARD\"\n    }, {\n      \"profileName\" : \"Help Center\",\n      \"isDefault\" : true,\n      \"id\" : \"4000000015189\",\n      \"type\" : \"PORTAL\"\n    } ],\n    \"createdBy\" : \"4000000015894\",\n    \"createdTime\" : \"2019-05-03T06:36:33.000Z\",\n    \"modifiedBy\" : \"4000000015894\",\n    \"id\" : \"4000000013464\",\n    \"status\" : \"active\"\n  }, {\n    \"modifiedTime\" : \"2019-05-06T01:45:58.000Z\",\n    \"departmentId\" : \"4000000012710\",\n    \"module\" : \"Cases\",\n    \"layoutDisplayName\" : \"cloneLayout\",\n    \"layoutDesc\" : \"DESC\",\n    \"isDefaultLayout\" : false,\n    \"layoutName\" : \"cloneLayout\",\n    \"skipDeptAccessValidation\" : false,\n    \"layoutProfiles\" : [ {\n      \"profileName\" : \"Support Administrator\",\n      \"isDefault\" : true,\n      \"id\" : \"4000000015183\",\n      \"type\" : \"ADMIN\"\n    }, {\n      \"profileName\" : \"Agent\",\n      \"isDefault\" : true,\n      \"id\" : \"4000000015186\",\n      \"type\" : \"STANDARD\"\n    }, {\n      \"profileName\" : \"Help Center\",\n      \"isDefault\" : true,\n      \"id\" : \"4000000015189\",\n      \"type\" : \"PORTAL\"\n    }, {\n      \"profileName\" : \"Supervisor\",\n      \"isDefault\" : false,\n      \"id\" : \"4000000015192\",\n      \"type\" : \"CUSTOM\"\n    }, {\n      \"profileName\" : \"Support Manager\",\n      \"isDefault\" : false,\n      \"id\" : \"4000000015195\",\n      \"type\" : \"CUSTOM\"\n    }, {\n      \"profileName\" : \"Newbie Agent\",\n      \"isDefault\" : false,\n      \"id\" : \"4000000015198\",\n      \"type\" : \"CUSTOM\"\n    }, {\n      \"profileName\" : \"Light Agent\",\n      \"isDefault\" : true,\n      \"id\" : \"4000000015201\",\n      \"type\" : \"LIGHT\"\n    } ],\n    \"createdBy\" : \"4000000015894\",\n    \"createdTime\" : \"2019-05-06T01:45:58.000Z\",\n    \"modifiedBy\" : \"4000000015894\",\n    \"id\" : \"4000000017001\",\n    \"status\" : \"active\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get Layout",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts/:layout_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts",
								":layout_id"
							],
							"variable": [
								{
									"key": "layout_id"
								}
							]
						},
						"description": "This API fetches a layout configured for a module\n#### OAuth Scope\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Layout",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts/4000000007177",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts",
										"4000000007177"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2017-07-01T07:36:04.000Z\",\n  \"skipDeptAccessValidation\" : false,\n  \"createdBy\" : \"4000000009118\",\n  \"departmentId\" : \"4000000007175\",\n  \"layoutDisplayName\" : \"Default Ticket Layout\",\n  \"createdTime\" : \"2017-07-01T07:36:04.000Z\",\n  \"modifiedBy\" : \"\",\n  \"id\" : \"4000000007177\",\n  \"isDefaultLayout\" : true,\n  \"sections\" : [ {\n    \"name\" : \"Ticket Information\",\n    \"isCustomSection\" : false,\n    \"id\" : 1,\n    \"fields\" : [ {\n      \"displayLabel\" : \"Department\",\n      \"apiName\" : \"departmentId\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000353\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 50,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Contact Name\",\n      \"apiName\" : \"contactId\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000357\",\n      \"isSystemMandatory\" : true,\n      \"isRemovable\" : false,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Account Name\",\n      \"apiName\" : \"accountId\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000355\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Email\",\n      \"apiName\" : \"email\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000359\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Email\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Phone\",\n      \"apiName\" : \"phone\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000361\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"Phone\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Sub Category\",\n      \"allowedValues\" : [ \"Sub General\", \"Sub Defects\" ],\n      \"apiName\" : \"subCategory\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Sub General\",\n      \"isSystemMandatory\" : false,\n      \"type\" : \"Picklist\",\n      \"isEncryptedField\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000423\",\n      \"isRemovable\" : true,\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Category\",\n      \"allowedValues\" : [ \"General\", \"Defects\" ],\n      \"apiName\" : \"category\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"General\",\n      \"isSystemMandatory\" : false,\n      \"type\" : \"Picklist\",\n      \"isEncryptedField\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000421\",\n      \"isRemovable\" : true,\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Subject\",\n      \"apiName\" : \"subject\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000363\",\n      \"isSystemMandatory\" : true,\n      \"isRemovable\" : false,\n      \"type\" : \"Text\",\n      \"maxLength\" : 255,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Description\",\n      \"apiName\" : \"description\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000365\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Textarea\",\n      \"maxLength\" : 1000000,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Status\",\n      \"allowedValues\" : [ \"Open\", \"Open_july\", \"On Hold\", \"Escalated\", \"Closed1\", \"Closed\", \"newDeptClosed\" ],\n      \"apiName\" : \"status\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Open\",\n      \"isSystemMandatory\" : true,\n      \"type\" : \"Picklist\",\n      \"restoreOnReplyValues\" : [ \"Open_july\", \"newDeptClosed\", \"Escalated\", \"On Hold\", \"Closed\", \"Closed1\", \"Open\" ],\n      \"isEncryptedField\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000367\",\n      \"isRemovable\" : false,\n      \"maxLength\" : 120,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Case Owner\",\n      \"apiName\" : \"assigneeId\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000371\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Product Name\",\n      \"apiName\" : \"productId\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000369\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    } ]\n  }, {\n    \"name\" : \"Additional Information\",\n    \"isCustomSection\" : false,\n    \"id\" : 2,\n    \"fields\" : [ {\n      \"displayLabel\" : \"Due Date\",\n      \"apiName\" : \"dueDate\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000405\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"DateTime\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Priority\",\n      \"allowedValues\" : [ \"-None-\", \"High\", \"Medium\", \"Low\" ],\n      \"apiName\" : \"priority\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"-None-\",\n      \"isSystemMandatory\" : false,\n      \"type\" : \"Picklist\",\n      \"isEncryptedField\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000407\",\n      \"isRemovable\" : false,\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Mode\",\n      \"allowedValues\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"apiName\" : \"channel\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Phone\",\n      \"isSystemMandatory\" : false,\n      \"type\" : \"Picklist\",\n      \"isEncryptedField\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000409\",\n      \"isRemovable\" : false,\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Is Overdue\",\n      \"apiName\" : \"Is Overdue\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"true\",\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000411\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"Boolean\",\n      \"maxLength\" : 50,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Is Escalated\",\n      \"apiName\" : \"Is Escalated\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"true\",\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000413\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"Boolean\",\n      \"maxLength\" : 50,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Classification\",\n      \"allowedValues\" : [ \"-None-\", \"Question\", \"Problem\", \"Feature\", \"Others\" ],\n      \"apiName\" : \"classification\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"-None-\",\n      \"isSystemMandatory\" : false,\n      \"type\" : \"Picklist\",\n      \"isEncryptedField\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000415\",\n      \"isRemovable\" : true,\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Resolution\",\n      \"apiName\" : \"resolution\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000417\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Textarea\",\n      \"maxLength\" : 1000000,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Sample TextArea\",\n      \"apiName\" : \"cf_sample_textarea\",\n      \"isCustomField\" : true,\n      \"toolTipType\" : \"placeHolder\",\n      \"isEncryptedField\" : false,\n      \"toolTip\" : \"Sample Field\",\n      \"id\" : \"4000000000447\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Textarea\",\n      \"maxLength\" : 1000000,\n      \"isMandatory\" : false\n    } ]\n  } ],\n  \"layoutDesc\" : \"Default Layout of the Ticket\",\n  \"layoutName\" : \"Default Ticket Layout\"\n}"
						}
					]
				},
				{
					"name": "Clone Layout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts/:layout_id/clone",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts",
								":layout_id",
								"clone"
							],
							"variable": [
								{
									"key": "layout_id"
								}
							]
						},
						"description": "This API creates new Layout by cloning existing layout.\n#### OAuth Scope\n- `Desk.settings.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| layoutName (required) | &lt;string&gt;<br />max chars : 150 | Name of the layout \n| layoutDesc  | &lt;string&gt;<br />max chars : 500 | Description of the layout \n| layoutDisplayName (required) | &lt;string&gt;<br />max chars : 150 | Display Name of the layout in HelpCenter \n| isDefaultLayout (required) | &lt;boolean&gt;<br /> | Key that returns if the layout is the default layout in the module \n"
					},
					"response": [
						{
							"name": "Clone Layout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"skipDeptAccessValidation\" : false,\n  \"layoutDisplayName\" : \"Clonned Account Layout\",\n  \"layoutDesc\" : \"Layout of the accounts\",\n  \"layoutName\" : \"cloneAccLayout1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts/4000000013462/clone",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts",
										"4000000013462",
										"clone"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2019-05-08T02:21:34.000Z\",\n  \"module\" : \"Accounts\",\n  \"layoutDisplayName\" : \"Clonned Account Layout\",\n  \"layoutDesc\" : \"layout of the accounts\",\n  \"isDefaultLayout\" : false,\n  \"sections\" : [ {\n    \"name\" : \"Account Information\",\n    \"isCustomSection\" : true,\n    \"id\" : 1,\n    \"fields\" : [ {\n      \"displayLabel\" : \"Account Name\",\n      \"isCustomField\" : false,\n      \"name\" : \"accountName\",\n      \"id\" : \"4000000000404\",\n      \"isSystemMandatory\" : true,\n      \"isRemovable\" : false,\n      \"type\" : \"Text\",\n      \"maxLength\" : 200,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Email\",\n      \"isCustomField\" : false,\n      \"name\" : \"email\",\n      \"id\" : \"4000000000408\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"Email\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Phone\",\n      \"isCustomField\" : false,\n      \"name\" : \"phone\",\n      \"id\" : \"4000000000406\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"Phone\",\n      \"maxLength\" : 30,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Website\",\n      \"isCustomField\" : false,\n      \"name\" : \"website\",\n      \"id\" : \"4000000000410\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"URL\",\n      \"maxLength\" : 2083,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Country\",\n      \"isCustomField\" : false,\n      \"name\" : \"country\",\n      \"id\" : \"4000000000438\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"Text\",\n      \"maxLength\" : 30,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Account Owner\",\n      \"isCustomField\" : false,\n      \"name\" : \"ownerId\",\n      \"id\" : \"4000000000412\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    } ]\n  } ],\n  \"layoutName\" : \"cloneAccLayout1\",\n  \"skipDeptAccessValidation\" : false,\n  \"createdBy\" : \"4000000015894\",\n  \"createdTime\" : \"2019-05-08T02:21:34.000Z\",\n  \"modifiedBy\" : \"4000000015894\",\n  \"id\" : \"4000000039001\",\n  \"status\" : \"active\"\n}"
						}
					]
				},
				{
					"name": "Create Layout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts"
							]
						},
						"description": "This API creates the layout\n#### OAuth Scope\n- `Desk.settings.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| isDefaultLayout (required) | &lt;boolean&gt;<br /> | Key that returns if the layout is the default layout in the module \n| sections (required) | &lt;list&gt;<br /> | sections in the layout \n| module (required) | &lt;string&gt;<br />max chars : 100 | mdoule name \n"
					},
					"response": [
						{
							"name": "Create Layout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"skipDeptAccessValidation\" : false,\n  \"module\" : \"accounts\",\n  \"departmentId\" : \"4000000012710\",\n  \"layoutDisplayName\" : \"Clonned Account Layout\",\n  \"layoutDesc\" : \"DESC\",\n  \"sections\" : [ {\n    \"name\" : \"Account Information\",\n    \"i18NLabel\" : \"Account Information\",\n    \"isCustomSection\" : false,\n    \"id\" : 1,\n    \"fields\" : [ {\n      \"id\" : \"4000000000404\",\n      \"isMandatory\" : true\n    }, {\n      \"id\" : \"4000000000408\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000406\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000410\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000438\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000412\",\n      \"isMandatory\" : false\n    } ]\n  } ],\n  \"layoutName\" : \"accounts layout \"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2019-05-09T04:52:57.000Z\",\n  \"departmentId\" : \"4000000012710\",\n  \"module\" : \"Accounts\",\n  \"layoutDisplayName\" : \"Clonned Account Layout\",\n  \"layoutDesc\" : \"DESC\",\n  \"isDefaultLayout\" : false,\n  \"sections\" : [ {\n    \"name\" : \"Account Information\",\n    \"isCustomSection\" : true,\n    \"id\" : 1,\n    \"fields\" : [ {\n      \"displayLabel\" : \"Account Name\",\n      \"isCustomField\" : false,\n      \"name\" : \"accountName\",\n      \"id\" : \"4000000000404\",\n      \"isSystemMandatory\" : true,\n      \"isRemovable\" : false,\n      \"type\" : \"Text\",\n      \"maxLength\" : 200,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Email\",\n      \"isCustomField\" : false,\n      \"name\" : \"email\",\n      \"id\" : \"4000000000408\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"Email\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Phone\",\n      \"isCustomField\" : false,\n      \"name\" : \"phone\",\n      \"id\" : \"4000000000406\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"Phone\",\n      \"maxLength\" : 30,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Website\",\n      \"isCustomField\" : false,\n      \"name\" : \"website\",\n      \"id\" : \"4000000000410\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"URL\",\n      \"maxLength\" : 2083,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Country\",\n      \"isCustomField\" : false,\n      \"name\" : \"country\",\n      \"id\" : \"4000000000438\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"Text\",\n      \"maxLength\" : 30,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Account Owner\",\n      \"isCustomField\" : false,\n      \"name\" : \"ownerId\",\n      \"id\" : \"4000000000412\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    } ]\n  } ],\n  \"layoutName\" : \"accounts layout \",\n  \"skipDeptAccessValidation\" : false,\n  \"createdBy\" : \"4000000015894\",\n  \"createdTime\" : \"2019-05-09T04:52:57.000Z\",\n  \"modifiedBy\" : \"4000000015894\",\n  \"id\" : \"4000000043004\",\n  \"status\" : \"active\"\n}"
						}
					]
				},
				{
					"name": "Update Layout",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts/:layout_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts",
								":layout_id"
							],
							"variable": [
								{
									"key": "layout_id"
								}
							]
						},
						"description": "This API updates details of an existing layout.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| isDefaultLayout  | &lt;boolean&gt;<br /> | Key that returns if the layout is the default layout in the module \n| sections  | &lt;list&gt;<br /> | sections in the layout \n| module  | &lt;string&gt;<br />max chars : 100 | mdoule name \n"
					},
					"response": [
						{
							"name": "Update Layout",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"skipDeptAccessValidation\" : false,\n  \"layoutDisplayName\" : \"ClonedLayout\",\n  \"layoutDesc\" : \"Layout cloned from default layout\",\n  \"sections\" : [ {\n    \"name\" : \"Ticket Information\",\n    \"i18NLabel\" : \"Ticket Information\",\n    \"id\" : 1,\n    \"fields\" : [ {\n      \"id\" : \"4000000000353\",\n      \"isMandatory\" : true\n    }, {\n      \"id\" : \"4000000000357\",\n      \"isMandatory\" : true\n    }, {\n      \"id\" : \"4000000000355\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000359\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000361\",\n      \"isMandatory\" : false\n    }, {\n      \"allowedValues\" : [ \"Sub General\", \"Sub Defects\" ],\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000423\",\n      \"isMandatory\" : false\n    }, {\n      \"allowedValues\" : [ \"General\", \"Defects\" ],\n      \"id\" : \"4000000000421\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000363\",\n      \"isMandatory\" : true\n    }, {\n      \"id\" : \"4000000000365\",\n      \"isMandatory\" : false\n    }, {\n      \"allowedValues\" : [ \"Open\", \"Open_july\", \"On Hold\", \"Escalated\", \"Closed1\", \"Closed\", \"newDeptClosed\" ],\n      \"restoreOnReplyValues\" : [ \"Open_july\", \"newDeptClosed\", \"Escalated\", \"On Hold\", \"Closed\", \"Closed1\", \"Open\" ],\n      \"defaultValue\" : \"Open\",\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000367\",\n      \"isMandatory\" : true\n    }, {\n      \"id\" : \"4000000000371\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000369\",\n      \"isMandatory\" : false\n    } ]\n  }, {\n    \"name\" : \"Additional Information\",\n    \"i18NLabel\" : \"Additional Information\",\n    \"id\" : 2,\n    \"fields\" : [ {\n      \"id\" : \"4000000000405\",\n      \"isMandatory\" : false\n    }, {\n      \"allowedValues\" : [ \"-None-\", \"High\", \"Medium\", \"Low\" ],\n      \"defaultValue\" : \"-None-\",\n      \"id\" : \"4000000000407\",\n      \"isMandatory\" : false\n    }, {\n      \"allowedValues\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"defaultValue\" : \"Phone\",\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000409\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000411\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000413\",\n      \"isMandatory\" : false\n    }, {\n      \"allowedValues\" : [ \"-None-\", \"Question\", \"Problem\", \"Feature\", \"Others\" ],\n      \"defaultValue\" : \"-None-\",\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000415\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000417\",\n      \"isMandatory\" : false\n    }, {\n      \"id\" : \"4000000000447\",\n      \"isMandatory\" : false\n    } ]\n  } ],\n  \"layoutName\" : \"ClonedLayout\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts/4000000007177",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts",
										"4000000007177"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2017-07-01T07:36:04.000Z\",\n  \"skipDeptAccessValidation\" : false,\n  \"createdBy\" : \"4000000009118\",\n  \"departmentId\" : \"4000000007175\",\n  \"layoutDisplayName\" : \"ClonedLayout\",\n  \"createdTime\" : \"2017-07-01T07:36:04.000Z\",\n  \"modifiedBy\" : \"\",\n  \"id\" : \"4000000007177\",\n  \"isDefaultLayout\" : true,\n  \"sections\" : [ {\n    \"name\" : \"Ticket Information\",\n    \"isCustomSection\" : false,\n    \"id\" : 1,\n    \"fields\" : [ {\n      \"displayLabel\" : \"Department\",\n      \"apiName\" : \"departmentId\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000353\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 50,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Contact Name\",\n      \"apiName\" : \"contactId\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000357\",\n      \"isSystemMandatory\" : true,\n      \"isRemovable\" : false,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Account Name\",\n      \"apiName\" : \"accountId\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000355\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Email\",\n      \"apiName\" : \"email\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000359\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Email\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Phone\",\n      \"apiName\" : \"phone\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000361\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"Phone\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Sub Category\",\n      \"allowedValues\" : [ \"Sub General\", \"Sub Defects\" ],\n      \"apiName\" : \"subCategory\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Sub General\",\n      \"isSystemMandatory\" : false,\n      \"type\" : \"Picklist\",\n      \"isEncryptedField\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000423\",\n      \"isRemovable\" : true,\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Category\",\n      \"allowedValues\" : [ \"General\", \"Defects\" ],\n      \"apiName\" : \"category\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"General\",\n      \"isSystemMandatory\" : false,\n      \"type\" : \"Picklist\",\n      \"isEncryptedField\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000421\",\n      \"isRemovable\" : true,\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Subject\",\n      \"apiName\" : \"subject\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000363\",\n      \"isSystemMandatory\" : true,\n      \"isRemovable\" : false,\n      \"type\" : \"Text\",\n      \"maxLength\" : 255,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Description\",\n      \"apiName\" : \"description\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000365\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Textarea\",\n      \"maxLength\" : 1000000,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Status\",\n      \"allowedValues\" : [ \"Open\", \"Open_july\", \"On Hold\", \"Escalated\", \"Closed1\", \"Closed\", \"newDeptClosed\" ],\n      \"apiName\" : \"status\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Open\",\n      \"isSystemMandatory\" : true,\n      \"type\" : \"Picklist\",\n      \"restoreOnReplyValues\" : [ \"Open_july\", \"newDeptClosed\", \"Escalated\", \"On Hold\", \"Closed\", \"Closed1\", \"Open\" ],\n      \"isEncryptedField\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000367\",\n      \"isRemovable\" : false,\n      \"maxLength\" : 120,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Case Owner\",\n      \"apiName\" : \"assigneeId\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000371\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Product Name\",\n      \"apiName\" : \"productId\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000369\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    } ]\n  }, {\n    \"name\" : \"Additional Information\",\n    \"isCustomSection\" : false,\n    \"id\" : 2,\n    \"fields\" : [ {\n      \"displayLabel\" : \"Due Date\",\n      \"apiName\" : \"dueDate\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000405\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"DateTime\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Priority\",\n      \"allowedValues\" : [ \"-None-\", \"High\", \"Medium\", \"Low\" ],\n      \"apiName\" : \"priority\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"-None-\",\n      \"isSystemMandatory\" : false,\n      \"type\" : \"Picklist\",\n      \"isEncryptedField\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000407\",\n      \"isRemovable\" : false,\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Mode\",\n      \"allowedValues\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"apiName\" : \"channel\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Phone\",\n      \"isSystemMandatory\" : false,\n      \"type\" : \"Picklist\",\n      \"isEncryptedField\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000409\",\n      \"isRemovable\" : false,\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Is Overdue\",\n      \"apiName\" : \"Is Overdue\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"true\",\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000411\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"Boolean\",\n      \"maxLength\" : 50,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Is Escalated\",\n      \"apiName\" : \"Is Escalated\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"true\",\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000413\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"Boolean\",\n      \"maxLength\" : 50,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Classification\",\n      \"allowedValues\" : [ \"-None-\", \"Question\", \"Problem\", \"Feature\", \"Others\" ],\n      \"apiName\" : \"classification\",\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"-None-\",\n      \"isSystemMandatory\" : false,\n      \"type\" : \"Picklist\",\n      \"isEncryptedField\" : false,\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000415\",\n      \"isRemovable\" : true,\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Resolution\",\n      \"apiName\" : \"resolution\",\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000417\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Textarea\",\n      \"maxLength\" : 1000000,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Sample TextArea\",\n      \"apiName\" : \"cf_sample_textarea\",\n      \"isCustomField\" : true,\n      \"toolTipType\" : \"placeHolder\",\n      \"isEncryptedField\" : false,\n      \"toolTip\" : \"Sample Field\",\n      \"id\" : \"4000000000447\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Textarea\",\n      \"maxLength\" : 1000000,\n      \"isMandatory\" : false\n    } ]\n  } ],\n  \"layoutDesc\" : \"Layout cloned from default layout\",\n  \"layoutName\" : \"Default Ticket Layout\"\n}"
						}
					]
				},
				{
					"name": "Delete Layout",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts/:layout_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts",
								":layout_id"
							],
							"variable": [
								{
									"key": "layout_id"
								}
							]
						},
						"description": "This API deletes a layout\n#### OAuth Scope\n- `Desk.settings.DELETE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| transferToLayoutId (required) | &lt;long&gt;<br /> | The layout id to which the entities in the deleted layout to be transferred to \n"
					},
					"response": [
						{
							"name": "Delete Layout",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transferToLayoutId\" : \"4000000038039\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts/4000000038053",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts",
										"4000000038053"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "DeActivate Layout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts/:layout_id/deactivate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts",
								":layout_id",
								"deactivate"
							],
							"variable": [
								{
									"key": "layout_id"
								}
							]
						},
						"description": "This Api deactivates existing layout\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| transferToLayoutId (required) | &lt;long&gt;<br /> | The layout id to which the entities in the deleted layout to be transferred to \n"
					},
					"response": [
						{
							"name": "DeActivate Layout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"transferToLayoutId\" : \"4000000038039\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts/4000000038053/deactivate",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts",
										"4000000038053",
										"deactivate"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Activate Layout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts/:layout_id/activate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts",
								":layout_id",
								"activate"
							],
							"variable": [
								{
									"key": "layout_id"
								}
							]
						},
						"description": "This api activates the deactivated Layout.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Activate Layout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts/4000000038053/activate",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts",
										"4000000038053",
										"activate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2019-05-09T09:42:28.000Z\",\n  \"departmentId\" : \"4000000012710\",\n  \"module\" : \"Cases\",\n  \"layoutDisplayName\" : \"ClonedLayout\",\n  \"layoutDesc\" : \"DESC\",\n  \"isDefaultLayout\" : false,\n  \"sections\" : [ {\n    \"name\" : \"Case Information\",\n    \"isCustomSection\" : true,\n    \"id\" : 1,\n    \"fields\" : [ {\n      \"displayLabel\" : \"Department\",\n      \"isCustomField\" : false,\n      \"name\" : \"departmentId\",\n      \"id\" : \"4000000000556\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 50,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Contact Name\",\n      \"isCustomField\" : false,\n      \"name\" : \"contactId\",\n      \"id\" : \"4000000000560\",\n      \"isSystemMandatory\" : true,\n      \"isRemovable\" : false,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Account Name\",\n      \"isCustomField\" : false,\n      \"name\" : \"accountId\",\n      \"id\" : \"4000000000558\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Email\",\n      \"isCustomField\" : false,\n      \"name\" : \"email\",\n      \"id\" : \"4000000000562\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Email\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Phone\",\n      \"isCustomField\" : false,\n      \"name\" : \"phone\",\n      \"id\" : \"4000000000564\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"Phone\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Subject\",\n      \"isCustomField\" : false,\n      \"name\" : \"subject\",\n      \"id\" : \"4000000000566\",\n      \"isSystemMandatory\" : true,\n      \"isRemovable\" : false,\n      \"type\" : \"Text\",\n      \"maxLength\" : 255,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Description\",\n      \"isCustomField\" : false,\n      \"name\" : \"description\",\n      \"id\" : \"4000000000568\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Textarea\",\n      \"maxLength\" : 1000000,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Status\",\n      \"allowedValues\" : [ \"Open\", \"On Hold\", \"Escalated\", \"Closed\" ],\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Open\",\n      \"isSystemMandatory\" : true,\n      \"type\" : \"Picklist\",\n      \"restoreOnReplyValues\" : [ \"Open\", \"On Hold\", \"Escalated\", \"Closed\" ],\n      \"name\" : \"status\",\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000570\",\n      \"isRemovable\" : false,\n      \"maxLength\" : 120,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Ticket Owner\",\n      \"isCustomField\" : false,\n      \"name\" : \"assigneeId\",\n      \"id\" : \"4000000000574\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Product Name\",\n      \"isCustomField\" : false,\n      \"name\" : \"productId\",\n      \"id\" : \"4000000000572\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    } ]\n  }, {\n    \"name\" : \"Additional Information\",\n    \"isCustomSection\" : true,\n    \"id\" : 2,\n    \"fields\" : [ {\n      \"displayLabel\" : \"Due Date\",\n      \"isCustomField\" : false,\n      \"name\" : \"dueDate\",\n      \"id\" : \"4000000000610\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"DateTime\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Priority\",\n      \"allowedValues\" : [ \"-None-\", \"High\", \"Medium\", \"Low\" ],\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"-None-\",\n      \"name\" : \"priority\",\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000614\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Picklist\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Channel\",\n      \"allowedValues\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Phone\",\n      \"name\" : \"channel\",\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000616\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Picklist\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Classification\",\n      \"allowedValues\" : [ \"-None-\", \"Question\", \"Problem\", \"Feature\", \"Others\" ],\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"-None-\",\n      \"name\" : \"classification\",\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000622\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"Picklist\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Resolution\",\n      \"isCustomField\" : false,\n      \"name\" : \"resolution\",\n      \"id\" : \"4000000000624\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Textarea\",\n      \"maxLength\" : 1000000,\n      \"isMandatory\" : false\n    } ]\n  } ],\n  \"layoutName\" : \"Tickets New Layout 6\",\n  \"skipDeptAccessValidation\" : false,\n  \"createdBy\" : \"4000000015894\",\n  \"createdTime\" : \"2019-05-06T05:30:06.000Z\",\n  \"modifiedBy\" : \"4000000015894\",\n  \"id\" : \"4000000038033\",\n  \"status\" : \"active\"\n}"
						}
					]
				},
				{
					"name": "Get Layout Profiles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts/:layout_id/profiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts",
								":layout_id",
								"profiles"
							],
							"variable": [
								{
									"key": "layout_id"
								}
							]
						},
						"description": "This api returns the profiles associated with a layout\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Layout Profiles",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts/4000000038033/profiles",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts",
										"4000000038033",
										"profiles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"profileName\" : \"Support Administrator\",\n    \"isDefault\" : true,\n    \"id\" : \"4000000015183\",\n    \"type\" : \"ADMIN\"\n  }, {\n    \"profileName\" : \"Agent\",\n    \"isDefault\" : true,\n    \"id\" : \"4000000015186\",\n    \"type\" : \"STANDARD\"\n  }, {\n    \"profileName\" : \"Help Center\",\n    \"isDefault\" : true,\n    \"id\" : \"4000000015189\",\n    \"type\" : \"PORTAL\"\n  }, {\n    \"profileName\" : \"Supervisor\",\n    \"isDefault\" : false,\n    \"id\" : \"4000000015192\",\n    \"type\" : \"CUSTOM\"\n  }, {\n    \"profileName\" : \"Support Manager\",\n    \"isDefault\" : false,\n    \"id\" : \"4000000015195\",\n    \"type\" : \"CUSTOM\"\n  }, {\n    \"profileName\" : \"Newbie Agent\",\n    \"isDefault\" : false,\n    \"id\" : \"4000000015198\",\n    \"type\" : \"CUSTOM\"\n  }, {\n    \"profileName\" : \"Light Agent\",\n    \"isDefault\" : true,\n    \"id\" : \"4000000015201\",\n    \"type\" : \"LIGHT\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Associate Layout profiles",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts/:layout_id/profiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts",
								":layout_id",
								"profiles"
							],
							"variable": [
								{
									"key": "layout_id"
								}
							]
						},
						"description": "This api Associates the given profiles to the layout\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| layoutProfileIds  | &lt;list&gt;<br /> | The profile id to which the layout needs to be associated to \n"
					},
					"response": [
						{
							"name": "Associate Layout profiles",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"layoutProfileIds\" : [ 4000000015183, 4000000015186, 4000000015189 ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts/4000000013464/profiles",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts",
										"4000000013464",
										"profiles"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Standard Layout Format",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts/standardLayoutFormat?module=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts",
								"standardLayoutFormat"
							],
							"query": [
								{
									"key": "module",
									"value": "<String>\n",
									"description": " Name of the module whose layouts must be fetched. Values allowed are tickets, contacts, accounts , calls , events, tasks, timeEntry, products, and contracts."
								}
							]
						},
						"description": "This Api provides the standrd layout format for the given module with organisations fields that can be used for create layout\n#### OAuth Scope\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Standard Layout Format",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts/standardLayoutFormat?module=tickets",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts",
										"standardLayoutFormat"
									],
									"query": [
										{
											"key": "module",
											"value": "tickets"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"name\" : \"Case Information\",\n    \"id\" : 1,\n    \"fields\" : [ {\n      \"displayLabel\" : \"Department\",\n      \"isCustomField\" : false,\n      \"name\" : \"departmentId\",\n      \"id\" : \"4000000000556\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 50,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Account Name\",\n      \"isCustomField\" : false,\n      \"name\" : \"accountId\",\n      \"id\" : \"4000000000558\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Contact Name\",\n      \"isCustomField\" : false,\n      \"name\" : \"contactId\",\n      \"id\" : \"4000000000560\",\n      \"isSystemMandatory\" : true,\n      \"isRemovable\" : false,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Email\",\n      \"isCustomField\" : false,\n      \"name\" : \"email\",\n      \"id\" : \"4000000000562\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Email\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Phone\",\n      \"isCustomField\" : false,\n      \"name\" : \"phone\",\n      \"id\" : \"4000000000564\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"Phone\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Subject\",\n      \"isCustomField\" : false,\n      \"name\" : \"subject\",\n      \"id\" : \"4000000000566\",\n      \"isSystemMandatory\" : true,\n      \"isRemovable\" : false,\n      \"type\" : \"Text\",\n      \"maxLength\" : 255,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Description\",\n      \"isCustomField\" : false,\n      \"name\" : \"description\",\n      \"id\" : \"4000000000568\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Textarea\",\n      \"maxLength\" : 1000000,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Status\",\n      \"allowedValues\" : [ \"Open\", \"On Hold\", \"Escalated\", \"Closed\" ],\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Open\",\n      \"isSystemMandatory\" : true,\n      \"type\" : \"Picklist\",\n      \"restoreOnReplyValues\" : [ \"Open\", \"On Hold\", \"Escalated\", \"Closed\" ],\n      \"name\" : \"status\",\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000570\",\n      \"isRemovable\" : false,\n      \"maxLength\" : 120,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Product Name\",\n      \"isCustomField\" : false,\n      \"name\" : \"productId\",\n      \"id\" : \"4000000000572\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Ticket Owner\",\n      \"isCustomField\" : false,\n      \"name\" : \"assigneeId\",\n      \"id\" : \"4000000000574\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    } ]\n  }, {\n    \"name\" : \"Additional Information\",\n    \"id\" : 2,\n    \"fields\" : [ {\n      \"displayLabel\" : \"Due Date\",\n      \"isCustomField\" : false,\n      \"name\" : \"dueDate\",\n      \"id\" : \"4000000000610\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"DateTime\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Priority\",\n      \"allowedValues\" : [ \"-None-\", \"High\", \"Medium\", \"Low\" ],\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"-None-\",\n      \"name\" : \"priority\",\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000614\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Picklist\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Channel\",\n      \"allowedValues\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Phone\",\n      \"name\" : \"channel\",\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000616\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Picklist\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Classification\",\n      \"allowedValues\" : [ \"-None-\", \"Question\", \"Problem\", \"Feature\", \"Others\" ],\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"-None-\",\n      \"name\" : \"classification\",\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000622\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : true,\n      \"type\" : \"Picklist\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Resolution\",\n      \"isCustomField\" : false,\n      \"name\" : \"resolution\",\n      \"id\" : \"4000000000624\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Textarea\",\n      \"maxLength\" : 1000000,\n      \"isMandatory\" : false\n    } ]\n  }, {\n    \"name\" : \"Category Information\",\n    \"id\" : 3,\n    \"fields\" : [ ]\n  }, {\n    \"name\" : \"Related List Section\",\n    \"id\" : 4,\n    \"fields\" : [ ]\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get MyForm",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/myForm",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"myForm"
							],
							"query": [
								{
									"key": "layoutId",
									"value": "<long>\n",
									"description": "ID of the layout",
									"disabled": true
								}
							]
						},
						"description": "This API fetches details of a layout, based on the profile of the current user. Status mappings and dependency mappings are also included\n#### OAuth Scope\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get MyForm",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/myForm?layoutId=4000000007177",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"myForm"
									],
									"query": [
										{
											"key": "layoutId",
											"value": "4000000007177"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2017-07-10T10:32:11.000Z\",\n  \"createdBy\" : \"4000000009118\",\n  \"departmentId\" : \"4000000007175\",\n  \"createdTime\" : \"2017-07-01T07:36:04.000Z\",\n  \"modifiedBy\" : \"4000000009118\",\n  \"id\" : \"4000000007177\",\n  \"isDefaultLayout\" : true,\n  \"sections\" : [ {\n    \"name\" : \"Ticket Information\",\n    \"isCustomSection\" : false,\n    \"id\" : 1,\n    \"fields\" : [ {\n      \"displayLabel\" : \"Department\",\n      \"apiName\" : \"departmentId\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000353\",\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 50,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Contact Name\",\n      \"apiName\" : \"contactId\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000357\",\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Account Name\",\n      \"apiName\" : \"accountId\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000355\",\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Email\",\n      \"apiName\" : \"email\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000359\",\n      \"type\" : \"Email\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Phone\",\n      \"apiName\" : \"phone\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000361\",\n      \"type\" : \"Phone\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Sub Category\",\n      \"allowedValues\" : [ \"Sub General\", \"Sub Defects\" ],\n      \"apiName\" : \"subCategory\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Sub General\",\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000423\",\n      \"type\" : \"Picklist\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Category\",\n      \"allowedValues\" : [ \"General\", \"Defects\", \"ManojKumar\" ],\n      \"apiName\" : \"category\",\n      \"isCustomField\" : false,\n      \"isReadOnly\" : false,\n      \"defaultValue\" : \"General\",\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000421\",\n      \"type\" : \"Picklist\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Subject\",\n      \"apiName\" : \"subject\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000363\",\n      \"type\" : \"Text\",\n      \"maxLength\" : 255,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Description\",\n      \"apiName\" : \"description\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000365\",\n      \"type\" : \"Textarea\",\n      \"maxLength\" : 1000000,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Status\",\n      \"allowedValues\" : [ \"Open\", \"Open_july\", \"Open_newDept\", \"On Hold\", \"Escalated\", \"Closed1\", \"Closed\", \"newDeptClosed\", \"julyDeptClosed\", \"julyDeptClosed1\" ],\n      \"apiName\" : \"status\",\n      \"isCustomField\" : false,\n      \"isReadOnly\" : false,\n      \"restoreOnReplyValues\" : [ \"Open_july\", \"newDeptClosed\", \"Open_newDept\", \"Escalated\", \"On Hold\", \"Closed\", \"Closed1\", \"julyDeptClosed\", \"julyDeptClosed1\", \"Open\" ],\n      \"defaultValue\" : \"Open\",\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000367\",\n      \"type\" : \"Picklist\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : true\n    }, {\n      \"displayLabel\" : \"Case Owner\",\n      \"apiName\" : \"assigneeId\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000371\",\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Product Name\",\n      \"apiName\" : \"productId\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000369\",\n      \"type\" : \"LookUp\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    } ]\n  }, {\n    \"name\" : \"Additional Information\",\n    \"isCustomSection\" : false,\n    \"id\" : 2,\n    \"fields\" : [ {\n      \"displayLabel\" : \"Due Date\",\n      \"apiName\" : \"dueDate\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000405\",\n      \"type\" : \"DateTime\",\n      \"maxLength\" : 300,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Priority\",\n      \"allowedValues\" : [ \"-None-\", \"High\", \"Medium\", \"Low\" ],\n      \"apiName\" : \"priority\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"-None-\",\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000407\",\n      \"type\" : \"Picklist\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Mode\",\n      \"allowedValues\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"apiName\" : \"channel\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Phone\",\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000409\",\n      \"type\" : \"Picklist\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Is Overdue\",\n      \"apiName\" : \"Is Overdue\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"true\",\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000411\",\n      \"type\" : \"Boolean\",\n      \"maxLength\" : 50,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Is Escalated\",\n      \"apiName\" : \"Is Escalated\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"true\",\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000413\",\n      \"type\" : \"Boolean\",\n      \"maxLength\" : 50,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Classification\",\n      \"allowedValues\" : [ \"-None-\", \"Question\", \"Problem\", \"Feature\", \"Others\" ],\n      \"apiName\" : \"classification\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"-None-\",\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000415\",\n      \"type\" : \"Picklist\",\n      \"maxLength\" : 120,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Resolution\",\n      \"apiName\" : \"resolution\",\n      \"isReadOnly\" : false,\n      \"isCustomField\" : false,\n      \"isEncryptedField\" : false,\n      \"id\" : \"4000000000417\",\n      \"type\" : \"Textarea\",\n      \"maxLength\" : 1000000,\n      \"isMandatory\" : false\n    }, {\n      \"displayLabel\" : \"Sample TextArea\",\n      \"apiName\" : \"cf_sample_textarea\",\n      \"isCustomField\" : true,\n      \"toolTipType\" : \"placeHolder\",\n      \"isEncryptedField\" : false,\n      \"toolTip\" : \"Sample Field\",\n      \"id\" : \"4000000000447\",\n      \"isSystemMandatory\" : false,\n      \"isRemovable\" : false,\n      \"type\" : \"Textarea\",\n      \"maxLength\" : 1000000,\n      \"isMandatory\" : false\n    } ]\n  } ],\n  \"layoutName\" : \"Default Ticket Layout\"\n}"
						}
					]
				},
				{
					"name": "Replace value in PickList field",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts/:layout_id/replaceValues",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts",
								":layout_id",
								"replaceValues"
							],
							"variable": [
								{
									"key": "layout_id"
								}
							]
						},
						"description": "This API replaces an existing value in a PickList field with a new value\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| fieldId (required) | &lt;long&gt;<br /> | field Id \n| oldValue (required) | &lt;string&gt;<br />max chars : 100 | oldValue \n| newValue (required) | &lt;string&gt;<br />max chars : 100 | newValue \n"
					},
					"response": [
						{
							"name": "Replace value in PickList field",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"newValue\" : \"Sub Defects1235\",\n  \"oldValue\" : \"Sub Defects\",\n  \"fieldId\" : \"4000000000423\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts/4000000007177/replaceValues",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts",
										"4000000007177",
										"replaceValues"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Layout Field",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts/:layout_id/fields/{field_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts",
								":layout_id",
								"fields",
								"{field_id}"
							],
							"query": [
								{
									"key": "expression",
									"value": "<string>\nmax chars : 1500",
									"description": "Formula Expression",
									"disabled": true
								},
								{
									"key": "isMandatory",
									"value": "<boolean>\n",
									"description": "Key that returns if a field is mandatory in a layout or not",
									"disabled": true
								},
								{
									"key": "defaultValue",
									"value": "<string>\nmax chars : 120",
									"description": "Default value set for a field. Applicable for Checkbox fields and PickList fields",
									"disabled": true
								},
								{
									"key": "allowedValues",
									"value": "<list>\n",
									"description": "Values allowed in a field. Applicable for PickList fields",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Key that sorts values in a PickList field either alphabetically or by a user-defined order",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "layout_id"
								}
							]
						},
						"description": "This API updates details of a field in the layout.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Update Layout Field",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"allowedValues\" : [ \"option 1\", \"option 2\", \"option 3\", \"option 4\" ],\n  \"defaultValue\" : \"option 3\",\n  \"sortBy\" : \"userDefined\",\n  \"isMandatory\" : \"true\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts/4000000007177/fields/21000000023005",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts",
										"4000000007177",
										"fields",
										"21000000023005"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"displayLabel\" : \"Multiselect 1\",\n  \"allowedValues\" : [ \"option 3\", \"option 4\", \"option 1\", \"option 2\" ],\n  \"apiName\" : \"cf_multiselect_1\",\n  \"isCustomField\" : true,\n  \"defaultValue\" : \"option 3\",\n  \"i18NLabel\" : \"Multiselect 1\",\n  \"isSystemMandatory\" : false,\n  \"type\" : \"Multiselect\",\n  \"name\" : \"Multiselect 1\",\n  \"sortBy\" : \"userDefined\",\n  \"id\" : \"21000000023005\",\n  \"isRemovable\" : true,\n  \"maxLength\" : 120,\n  \"isMandatory\" : true\n}"
						}
					]
				},
				{
					"name": "Remove Field in Layout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts/:layout_id/fields/([0-9]+)/unassociate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts",
								":layout_id",
								"fields",
								"([0-9]+)",
								"unassociate"
							],
							"variable": [
								{
									"key": "layout_id"
								}
							]
						},
						"description": "This API is to remove fields from a layout.\n#### OAuth Scope\n- `Desk.settings.CREATE`\n\n"
					},
					"response": [
						{
							"name": "Remove Field in Layout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts/4000000007177/fields/4000000000353/unassociate",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts",
										"4000000007177",
										"fields",
										"4000000000353",
										"unassociate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Clone Fields to other Layout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts/:layout_id/fields/([0-9]+)/cloneFieldsInLayout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts",
								":layout_id",
								"fields",
								"([0-9]+)",
								"cloneFieldsInLayout"
							],
							"variable": [
								{
									"key": "layout_id"
								}
							]
						},
						"description": "This API is to clone a field to other layouts.\n#### OAuth Scope\n- `Desk.settings.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| layoutIds  | &lt;list&gt;<br /> | List of layout ids to which the field should be cloned. \n"
					},
					"response": [
						{
							"name": "Clone Fields to other Layout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"layoutIds\" : [ \"4000000007187\", \"4000000007197\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "support.zoho.com/api/v1/layouts/4000000007177/fields/4000000000353/cloneFieldsInLayout",
									"host": [
										"support",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts",
										"4000000007177",
										"fields",
										"4000000000353",
										"cloneFieldsInLayout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Layouts define the arrangement and necessity of fields in forms used to capture details of help desk resources: Tickets, Tasks, Contacts, and so on. Each department can have unique layouts with both default and custom fields. You can also determine the visibility settings for each field in a layout."
		},
		{
			"name": "LayoutRules",
			"item": [
				{
					"name": "Get Layout Rule",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts/:layout_id/layoutRules/{layoutRule_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts",
								":layout_id",
								"layoutRules",
								"{layoutRule_id}"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the rules. Values allowed are: creator and modifier.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "layout_id"
								}
							]
						},
						"description": "This API fetches a single rule from your help desk layout.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Layout Rule",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts/4000000007723/layoutRules/4000000020001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts",
										"4000000007723",
										"layoutRules",
										"4000000020001"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"fieldConditions\" : [ {\n    \"name\" : \"condition 1\",\n    \"pattern\" : \"(1and2)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"phone\",\n      \"value\" : [ \"9993292892\" ]\n    } ],\n    \"actions\" : {\n      \"showSections\" : [ \"Additional Information\" ],\n      \"showFields\" : [ \"subject\" ],\n      \"setMandatoryFields\" : [ \"priority\" ]\n    }\n  } ],\n  \"modifiedTime\" : \"2018-09-14T01:08:42.000Z\",\n  \"fieldName\" : \"email\",\n  \"description\" : \"Rule 1 for layout\",\n  \"systemGenerated\" : false,\n  \"layoutId\" : \"4000000007723\",\n  \"executeInHelpCentre\" : false,\n  \"createdBy\" : \"4000000015963\",\n  \"name\" : \"Rule 1\",\n  \"createdTime\" : \"2018-09-14T01:07:22.000Z\",\n  \"modifiedBy\" : \"4000000015963\",\n  \"id\" : \"4000000020001\",\n  \"status\" : \"active\"\n}"
						}
					]
				},
				{
					"name": "Get Layout Rules for department or layout",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layoutRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layoutRules"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "Get the rules of the department",
									"disabled": true
								},
								{
									"key": "layoutId",
									"value": "<long>\n",
									"description": "Get the rules of the layout",
									"disabled": true
								},
								{
									"key": "module",
									"value": "<String>\n",
									"description": "Name of the module for which you want to fetch the layout rules. Allowed values are tickets, contacts, accounts, tasks, timeEntry, contracts, products, calls, events",
									"disabled": true
								},
								{
									"key": "activeLayouts",
									"value": "<Boolean>\n",
									"description": "Get the rules for active layouts",
									"disabled": true
								},
								{
									"key": "activeRules",
									"value": "<Boolean>\n",
									"description": "Get the rules that are active in the layout",
									"disabled": true
								},
								{
									"key": "executeInHelpCentre",
									"value": "<Boolean>\n",
									"description": "Get the rules that can be executed in help centre",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\ndefault : 0,",
									"description": "Index number, starting from which the rules must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\ndefault : 50,",
									"description": "Number of rules to be fetched. Default is 50",
									"disabled": true
								},
								{
									"key": "searchString",
									"value": "<String>\n",
									"description": "Get the rules that have this search term",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the rules. Values allowed are: creator and modifier.",
									"disabled": true
								}
							]
						},
						"description": "This API lists all the rules configured for a department/layout.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Layout Rules for department or layout",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/layoutRules?layoutId=4000000007723&module=tickets&activeRules=true&from=0&limit=10&searchString=Rule",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layoutRules"
									],
									"query": [
										{
											"key": "layoutId",
											"value": "4000000007723"
										},
										{
											"key": "module",
											"value": "tickets"
										},
										{
											"key": "activeRules",
											"value": "true"
										},
										{
											"key": "from",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "searchString",
											"value": "Rule"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"fieldConditions\" : [ {\n      \"name\" : \"condition 1\",\n      \"pattern\" : \"(1and2)\",\n      \"conditions\" : [ {\n        \"condition\" : \"is\",\n        \"fieldName\" : \"email\",\n        \"value\" : [ \"carol@zylker.com\" ]\n      }, {\n        \"condition\" : \"is\",\n        \"fieldName\" : \"phone\",\n        \"value\" : [ \"9993292892\" ]\n      } ],\n      \"actions\" : {\n        \"showSections\" : [ \"Additional Information\" ],\n        \"showFields\" : [ \"subject\" ],\n        \"setMandatoryFields\" : [ \"priority\" ]\n      }\n    } ],\n    \"modifiedTime\" : \"2018-09-14T01:08:42.000Z\",\n    \"fieldName\" : \"email\",\n    \"description\" : \"Rule 1 for layout\",\n    \"systemGenerated\" : false,\n    \"layoutId\" : \"4000000007723\",\n    \"executeInHelpCentre\" : false,\n    \"createdBy\" : \"4000000015963\",\n    \"name\" : \"Rule 1\",\n    \"createdTime\" : \"2018-09-14T01:07:22.000Z\",\n    \"modifiedBy\" : \"4000000015963\",\n    \"id\" : \"4000000020001\",\n    \"status\" : \"active\"\n  }, {\n    \"fieldConditions\" : [ {\n      \"name\" : \"condition 2\",\n      \"pattern\" : \"(1or2)\",\n      \"conditions\" : [ {\n        \"condition\" : \"is\",\n        \"fieldName\" : \"phone\",\n        \"value\" : [ \"9993292892\" ]\n      }, {\n        \"condition\" : \"is\",\n        \"fieldName\" : \"email\",\n        \"value\" : [ \"carol@zylker.com\" ]\n      } ],\n      \"actions\" : {\n        \"showSections\" : [ \"Additional Information\" ],\n        \"showFields\" : [ \"subject\" ],\n        \"setMandatoryFields\" : [ \"priority\" ]\n      }\n    } ],\n    \"modifiedTime\" : \"2018-09-14T01:08:42.000Z\",\n    \"fieldName\" : \"phone\",\n    \"description\" : \"Rule 2 for layout\",\n    \"systemGenerated\" : false,\n    \"layoutId\" : \"4000000007723\",\n    \"executeInHelpCentre\" : false,\n    \"createdBy\" : \"4000000015963\",\n    \"name\" : \"Rule 2\",\n    \"createdTime\" : \"2018-09-14T01:07:22.000Z\",\n    \"modifiedBy\" : \"4000000015963\",\n    \"id\" : \"4000000021001\",\n    \"status\" : \"active\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Create Layout Rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts/:layout_id/layoutRules?name=<string>\nmax chars : 255&fieldName=<string>\nmax chars : 100&fieldConditions=<list>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts",
								":layout_id",
								"layoutRules"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the rules. Values allowed are: creator and modifier.",
									"disabled": true
								},
								{
									"key": "name",
									"value": "<string>\nmax chars : 255",
									"description": "Name of the rule"
								},
								{
									"key": "description",
									"value": "<string>\nmax chars : 255",
									"description": "A short description of the rule",
									"disabled": true
								},
								{
									"key": "fieldName",
									"value": "<string>\nmax chars : 100",
									"description": "Name of the primary field to be used for creating the rule"
								},
								{
									"key": "displayLabel",
									"value": "<string>\nmax chars : 100",
									"description": "Display Label of the primary field to be used for creating the rule",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<string>\nmax chars : 100",
									"description": "Activation status of the rule: ACTIVE or DEACTIVE",
									"disabled": true
								},
								{
									"key": "executeInHelpCentre",
									"value": "<boolean>\n",
									"description": "To execute the rule in help centre or not: true or false",
									"disabled": true
								},
								{
									"key": "fieldConditions",
									"value": "<list>\n",
									"description": "Conditions in the layout rule"
								}
							],
							"variable": [
								{
									"key": "layout_id"
								}
							]
						},
						"description": "This API creates a rule for a field in a layout.\n#### OAuth Scope\n- `Desk.settings.CREATE`\n\n"
					},
					"response": [
						{
							"name": "Create Layout Rule",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fieldConditions\" : [ {\n    \"name\" : \"condition 2\",\n    \"pattern\" : \"(1and2)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"phone\",\n      \"value\" : [ \"9993292892\" ]\n    } ],\n    \"actions\" : {\n      \"showSections\" : [ \"Additional Information\" ],\n      \"showFields\" : [ \"subject\" ],\n      \"setMandatoryFields\" : [ \"priority\" ]\n    }\n  } ],\n  \"fieldName\" : \"email\",\n  \"executeInHelpCentre\" : true,\n  \"name\" : \"Rule 1\",\n  \"description\" : \"Rule 1 for layout\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts/4000000007723/layoutRules",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts",
										"4000000007723",
										"layoutRules"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"fieldConditions\" : [ {\n    \"name\" : \"condition 2\",\n    \"pattern\" : \"(1and2)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"phone\",\n      \"value\" : [ \"9993292892\" ]\n    } ],\n    \"actions\" : {\n      \"showSections\" : [ \"Additional Information\" ],\n      \"showFields\" : [ \"subject\" ],\n      \"setMandatoryFields\" : [ \"priority\" ]\n    }\n  } ],\n  \"modifiedTime\" : \"2018-09-14T01:08:42.000Z\",\n  \"fieldName\" : \"email\",\n  \"description\" : \"Rule 2 for layout\",\n  \"systemGenerated\" : false,\n  \"layoutId\" : \"4000000007723\",\n  \"executeInHelpCentre\" : true,\n  \"createdBy\" : \"4000000015963\",\n  \"name\" : \"Rule 2\",\n  \"createdTime\" : \"2018-09-14T01:07:22.000Z\",\n  \"modifiedBy\" : \"4000000015963\",\n  \"id\" : \"4000000021001\",\n  \"status\" : \"active\"\n}"
						}
					]
				},
				{
					"name": "Update Layout Rule",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts/:layout_id/layoutRules/{layoutRule_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts",
								":layout_id",
								"layoutRules",
								"{layoutRule_id}"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the rules. Values allowed are: creator and modifier.",
									"disabled": true
								},
								{
									"key": "name",
									"value": "<string>\nmax chars : 255",
									"description": "Name of the rule",
									"disabled": true
								},
								{
									"key": "description",
									"value": "<string>\nmax chars : 255",
									"description": "A short description of the rule",
									"disabled": true
								},
								{
									"key": "fieldName",
									"value": "<string>\nmax chars : 100",
									"description": "Name of the primary field to be used for creating the rule",
									"disabled": true
								},
								{
									"key": "displayLabel",
									"value": "<string>\nmax chars : 100",
									"description": "Display Label of the primary field to be used for creating the rule",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<string>\nmax chars : 100",
									"description": "Activation status of the rule: ACTIVE or DEACTIVE",
									"disabled": true
								},
								{
									"key": "executeInHelpCentre",
									"value": "<boolean>\n",
									"description": "To execute the rule in help centre or not: true or false",
									"disabled": true
								},
								{
									"key": "fieldConditions",
									"value": "<list>\n",
									"description": "Conditions in the layout rule",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "layout_id"
								}
							]
						},
						"description": "This API updates the details of an existing layout rule in a particular layout.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Update Layout Rule",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fieldConditions\" : [ {\n    \"name\" : \"condition 1\",\n    \"pattern\" : \"(1and2)or3\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"accountId\",\n      \"value\" : [ \"Ramkumar\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"productId\",\n      \"value\" : [ \"Honda\" ]\n    } ],\n    \"actions\" : {\n      \"showSections\" : [ \"Additional Information\" ],\n      \"showFields\" : [ \"subject\" ],\n      \"setMandatoryFields\" : [ \"priority\" ]\n    }\n  }, {\n    \"name\" : \"condition 2\",\n    \"pattern\" : \"1 and (2 or 3)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"accountId\",\n      \"value\" : [ \"Sundar\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"productId\",\n      \"value\" : [ \"Maruthi\" ]\n    } ],\n    \"actions\" : {\n      \"showSections\" : [ ],\n      \"showFields\" : [ \"subject\" ],\n      \"setMandatoryFields\" : [ \"Description\" ]\n    }\n  } ],\n  \"fieldName\" : \"email\",\n  \"executeInHelpCentre\" : false,\n  \"name\" : \"Rule 11\",\n  \"description\" : \"Rule 1 for layout\",\n  \"layoutId\" : \"4000000007723\",\n  \"status\" : \"active\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts/4000000007723/layoutRules/4000000021001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts",
										"4000000007723",
										"layoutRules",
										"4000000021001"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"fieldConditions\" : [ {\n    \"name\" : \"condition 1\",\n    \"pattern\" : \"(1and2)or3\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"accountId\",\n      \"value\" : [ \"Ramkumar\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"productId\",\n      \"value\" : [ \"Honda\" ]\n    } ],\n    \"actions\" : {\n      \"showSections\" : [ \"Additional Information\" ],\n      \"showFields\" : [ \"subject\" ],\n      \"setMandatoryFields\" : [ \"priority\" ]\n    }\n  }, {\n    \"name\" : \"condition 2\",\n    \"pattern\" : \"1 and (2 or 3)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"accountId\",\n      \"value\" : [ \"Sundar\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"productId\",\n      \"value\" : [ \"Maruthi\" ]\n    } ],\n    \"actions\" : {\n      \"showSections\" : [ ],\n      \"showFields\" : [ \"subject\" ],\n      \"setMandatoryFields\" : [ \"Description\" ]\n    }\n  } ],\n  \"modifiedTime\" : \"2018-09-14T01:08:42.000Z\",\n  \"fieldName\" : \"email\",\n  \"description\" : \"Rule 1 for layout\",\n  \"systemGenerated\" : false,\n  \"layoutId\" : \"4000000007723\",\n  \"executeInHelpCentre\" : false,\n  \"createdBy\" : \"4000000015963\",\n  \"name\" : \"Rule 11\",\n  \"createdTime\" : \"2018-09-14T01:07:22.000Z\",\n  \"modifiedBy\" : \"4000000015963\",\n  \"id\" : \"4000000021001\",\n  \"status\" : \"active\"\n}"
						}
					]
				},
				{
					"name": "Delete Layout Rule",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts/:layout_id/layoutRules/{layoutRule_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts",
								":layout_id",
								"layoutRules",
								"{layoutRule_id}"
							],
							"variable": [
								{
									"key": "layout_id"
								}
							]
						},
						"description": "This API deletes a layout rule created for a field from a layout.\n#### OAuth Scope\n- `Desk.settings.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete Layout Rule",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts/4000000007723/layoutRules/4000000021001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts",
										"4000000007723",
										"layoutRules",
										"4000000021001"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Criteria Fields For Layout Rules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts/:layout_id/layoutRules/criteriaFields?category=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts",
								":layout_id",
								"layoutRules",
								"criteriaFields"
							],
							"query": [
								{
									"key": "category",
									"value": "<String>\n",
									"description": "Category for getting the field criteria for primary or secondary fields"
								}
							],
							"variable": [
								{
									"key": "layout_id"
								}
							]
						},
						"description": "This API lists the fields that can be used in criteria of a specified module in layout rules. Available pre-defined values may contain ${EMPTY}, ${NOTEMPTY}, ${OPEN}, ${CLOSED}, ${CURRENTTIME}. Available types are Text, Date, DateTime, Text, Boolean and Arithmetic.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List Criteria Fields For Layout Rules",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts/4000000013564/layoutRules/criteriaFields?category=primary",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts",
										"4000000013564",
										"layoutRules",
										"criteriaFields"
									],
									"query": [
										{
											"key": "category",
											"value": "primary"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"criteriaFields\" : [ {\n    \"displayLabel\" : \"Tickets\",\n    \"name\" : \"tickets\",\n    \"fieldDetails\" : [ {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"accountId\",\n      \"fieldLabel\" : \"Account Name\",\n      \"i18NLabel\" : \"Account Name\",\n      \"type\" : \"lookup\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"contactId\",\n      \"fieldLabel\" : \"Contact Name\",\n      \"i18NLabel\" : \"Contact Name\",\n      \"type\" : \"lookup\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"phone\",\n      \"fieldLabel\" : \"Phone\",\n      \"i18NLabel\" : \"Phone\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is OPEN\",\n        \"value\" : [ \"${OPEN}\" ]\n      }, {\n        \"condition\" : \"is CLOSED\",\n        \"value\" : [ \"${CLOSED}\" ]\n      }, {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"status\",\n      \"fieldLabel\" : \"Status\",\n      \"i18NLabel\" : \"Status\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"productId\",\n      \"fieldLabel\" : \"Product Name\",\n      \"i18NLabel\" : \"Product Name\",\n      \"type\" : \"lookup\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is after\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is before\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      }, {\n        \"condition\" : \"not between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"dueDate\",\n      \"fieldLabel\" : \"Due Date\",\n      \"i18NLabel\" : \"Due Date\",\n      \"type\" : \"dateTime\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"priority\",\n      \"fieldLabel\" : \"Priority\",\n      \"i18NLabel\" : \"Priority\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"channel\",\n      \"fieldLabel\" : \"Mode\",\n      \"i18NLabel\" : \"Mode\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"classification\",\n      \"fieldLabel\" : \"Classification\",\n      \"i18NLabel\" : \"Classification\",\n      \"type\" : \"text\"\n    } ]\n  } ]\n}"
						}
					]
				}
			],
			"description": "Layout rules enable you to configure a page layout to respond to a user's input as a record is created or edited. Depending on how you set it up, the rule can set mandatory fields, show or hide fields, and show or hide sections."
		},
		{
			"name": "ValidationRules",
			"item": [
				{
					"name": "Get Layout Validation Rule",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts/:layout_id/validationRules/{validationRule_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts",
								":layout_id",
								"validationRules",
								"{validationRule_id}"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to rules. Values allowed are:&nbsp;`creator`, `modifier`",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "layout_id"
								}
							]
						},
						"description": "This API fetches a validation rule configured for your layout.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Layout Validation Rule",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts/4000000007723/validationRules/4000000018001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts",
										"4000000007723",
										"validationRules",
										"4000000018001"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"fieldConditions\" : [ {\n    \"name\" : \"condition 1\",\n    \"pattern\" : \"(1and2)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"raj@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"phone\",\n      \"value\" : [ \"9994259718\" ]\n    } ],\n    \"actions\" : {\n      \"alert\" : \"Sample Alert\"\n    }\n  } ],\n  \"modifiedTime\" : \"2018-09-14T01:08:42.000Z\",\n  \"fieldName\" : \"email\",\n  \"executeInHelpCentre\" : false,\n  \"createdBy\" : \"4000000015963\",\n  \"createdTime\" : \"2018-09-14T01:07:22.000Z\",\n  \"modifiedBy\" : \"4000000015963\",\n  \"id\" : \"4000000018001\",\n  \"systemGenerated\" : false,\n  \"layoutId\" : \"4000000013564\",\n  \"status\" : \"active\"\n}"
						}
					]
				},
				{
					"name": "Get Layout Validation Rules for department or layout",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/validationRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"validationRules"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "Get the rules of the department",
									"disabled": true
								},
								{
									"key": "layoutId",
									"value": "<long>\n",
									"description": "Get the rules of the layout",
									"disabled": true
								},
								{
									"key": "module",
									"value": "<String>\n",
									"description": "Name of the module for which you want to fetch the layout rules. Allowed values are tickets, contacts, accounts, tasks, timeEntry, contracts, products, calls, events",
									"disabled": true
								},
								{
									"key": "activeLayouts",
									"value": "<Boolean>\n",
									"description": "Get the rules for active layouts",
									"disabled": true
								},
								{
									"key": "activeRules",
									"value": "<Boolean>\n",
									"description": "Get the rules that are active in the layout",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\ndefault : 0,",
									"description": "Index number, starting from which the rules must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\ndefault : 50,",
									"description": "Number of rules to be fetched. Default is 50",
									"disabled": true
								},
								{
									"key": "searchString",
									"value": "<String>\n",
									"description": "Get the rules that have this search term",
									"disabled": true
								},
								{
									"key": "executeInHelpCentre",
									"value": "<Boolean>\n",
									"description": "Get the rules that can be executed in help centre",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the rules. Values allowed are: creator and modifier.",
									"disabled": true
								}
							]
						},
						"description": "This API fetches all the validation rules configured for your department/layout.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Layout Validation Rules for department or layout",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/validationRules?layoutId=4000000007723&module=tickets&activeRules=true&from=0&limit=10&searchString=Rule",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"validationRules"
									],
									"query": [
										{
											"key": "layoutId",
											"value": "4000000007723"
										},
										{
											"key": "module",
											"value": "tickets"
										},
										{
											"key": "activeRules",
											"value": "true"
										},
										{
											"key": "from",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "searchString",
											"value": "Rule"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"fieldConditions\" : [ {\n      \"name\" : \"condition 2\",\n      \"pattern\" : \"(1and2)\",\n      \"conditions\" : [ {\n        \"condition\" : \"is\",\n        \"fieldName\" : \"email\",\n        \"value\" : [ \"carol@zylker.com\" ]\n      }, {\n        \"condition\" : \"is\",\n        \"fieldName\" : \"phone\",\n        \"value\" : [ \"9994259718\" ]\n      } ],\n      \"actions\" : {\n        \"alert\" : \"Sample Alert\"\n      }\n    } ],\n    \"modifiedTime\" : \"2018-09-14T01:08:42.000Z\",\n    \"fieldName\" : \"email\",\n    \"executeInHelpCentre\" : true,\n    \"createdBy\" : \"4000000015963\",\n    \"createdTime\" : \"2018-09-13T01:16:46.000Z\",\n    \"modifiedBy\" : \"4000000015963\",\n    \"id\" : \"4000000017001\",\n    \"systemGenerated\" : false,\n    \"layoutId\" : \"4000000013564\"\n  }, {\n    \"fieldConditions\" : [ {\n      \"name\" : \"condition 1\",\n      \"pattern\" : \"(1and2)\",\n      \"conditions\" : [ {\n        \"condition\" : \"is\",\n        \"fieldName\" : \"phone\",\n        \"value\" : [ \"9994259718\" ]\n      }, {\n        \"condition\" : \"is\",\n        \"fieldName\" : \"email\",\n        \"value\" : [ \"carol@zylker.com\" ]\n      } ],\n      \"actions\" : {\n        \"alert\" : \"Sample Alert\"\n      }\n    } ],\n    \"modifiedTime\" : \"2018-09-14T01:08:42.000Z\",\n    \"fieldName\" : \"phone\",\n    \"executeInHelpCentre\" : false,\n    \"createdBy\" : \"4000000015963\",\n    \"createdTime\" : \"2018-09-13T01:49:03.000Z\",\n    \"modifiedBy\" : \"4000000015963\",\n    \"id\" : \"4000000018001\",\n    \"systemGenerated\" : false,\n    \"layoutId\" : \"4000000013564\",\n    \"status\" : \"active\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Create Layout Validation Rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts/layout_id/validationRules?fieldName=<string>\nmax chars : 100&fieldConditions=<list>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts",
								"layout_id",
								"validationRules"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to rules. Values allowed are:&nbsp;`creator`, `modifier`",
									"disabled": true
								},
								{
									"key": "fieldName",
									"value": "<string>\nmax chars : 100",
									"description": "Name of the primary field to be used for creating the validation rule"
								},
								{
									"key": "displayLabel",
									"value": "<string>\nmax chars : 100",
									"description": "Display Label of the primary field to be used for creating the rule",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<string>\nmax chars : 100",
									"description": "Activation status of the validation rule: ACTIVE or DEACTIVE",
									"disabled": true
								},
								{
									"key": "executeInHelpCentre",
									"value": "<boolean>\n",
									"description": "To execute the rule in help centre or not: true or false",
									"disabled": true
								},
								{
									"key": "fieldConditions",
									"value": "<list>\n",
									"description": "Conditions in the validation rule"
								}
							]
						},
						"description": "This API creates a validation rule for a field in a layout.\n#### OAuth Scope\n- `Desk.settings.CREATE`\n\n"
					},
					"response": [
						{
							"name": "Create Layout Validation Rule",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fieldConditions\" : [ {\n    \"name\" : \"condition 2\",\n    \"pattern\" : \"(1and2)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"phone\",\n      \"value\" : [ \"9994219718\" ]\n    } ],\n    \"actions\" : {\n      \"alert\" : \"Sample Alert\"\n    }\n  } ],\n  \"executeInHelpCentre\" : true,\n  \"fieldName\" : \"email\",\n  \"name\" : \"Validation Rule 1\",\n  \"description\" : \"Rule 1 for layout\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts/4000000007723/validationRules",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts",
										"4000000007723",
										"validationRules"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"fieldConditions\" : [ {\n    \"name\" : \"condition 2\",\n    \"pattern\" : \"(1and2)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"phone\",\n      \"value\" : [ \"9994219718\" ]\n    } ],\n    \"actions\" : {\n      \"alert\" : \"Sample Alert\"\n    }\n  } ],\n  \"modifiedTime\" : \"2018-09-07T06:50:48.697Z\",\n  \"fieldName\" : \"email\",\n  \"executeInHelpCentre\" : true,\n  \"createdBy\" : \"4000000015963\",\n  \"createdTime\" : \"2018-09-07T06:50:48.697Z\",\n  \"modifiedBy\" : \"4000000015963\",\n  \"id\" : \"4000000018001\",\n  \"systemGenerated\" : false,\n  \"layoutId\" : \"4000000013564\",\n  \"status\" : \"active\"\n}"
						}
					]
				},
				{
					"name": "Update Layout Validation Rule",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts/:layout_id/validationRules/{validationRule_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts",
								":layout_id",
								"validationRules",
								"{validationRule_id}"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to rules. Values allowed are:&nbsp;`creator`, `modifier`",
									"disabled": true
								},
								{
									"key": "fieldName",
									"value": "<string>\nmax chars : 100",
									"description": "Name of the primary field to be used for creating the validation rule",
									"disabled": true
								},
								{
									"key": "displayLabel",
									"value": "<string>\nmax chars : 100",
									"description": "Display Label of the primary field to be used for creating the rule",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<string>\nmax chars : 100",
									"description": "Activation status of the validation rule: ACTIVE or DEACTIVE",
									"disabled": true
								},
								{
									"key": "executeInHelpCentre",
									"value": "<boolean>\n",
									"description": "To execute the rule in help centre or not: true or false",
									"disabled": true
								},
								{
									"key": "fieldConditions",
									"value": "<list>\n",
									"description": "Conditions in the validation rule",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "layout_id"
								}
							]
						},
						"description": "This API updates the details of an existing validation rule in a particular layout.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Update Layout Validation Rule",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fieldConditions\" : [ {\n    \"name\" : \"condition 2\",\n    \"pattern\" : \"(1and2)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"phone\",\n      \"value\" : [ \"9994219718\" ]\n    } ],\n    \"actions\" : {\n      \"alert\" : \"Sample Alert\"\n    }\n  }, {\n    \"name\" : \"condition 3\",\n    \"pattern\" : \"(1and2)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"phone\",\n      \"value\" : [ \"99922299922\" ]\n    } ],\n    \"actions\" : {\n      \"alert\" : \"Sample Alert1\"\n    }\n  } ],\n  \"fieldName\" : \"email\",\n  \"executeInHelpCentre\" : false,\n  \"name\" : \"Validation Rule 1\",\n  \"description\" : \"Rule 1 for layout\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts/4000000007723/validationRules/4000000021001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts",
										"4000000007723",
										"validationRules",
										"4000000021001"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"fieldConditions\" : [ {\n    \"name\" : \"condition 2\",\n    \"pattern\" : \"(1and2)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"phone\",\n      \"value\" : [ \"9994219718\" ]\n    } ],\n    \"actions\" : {\n      \"alert\" : \"Sample Alert\"\n    }\n  }, {\n    \"name\" : \"condition 3\",\n    \"pattern\" : \"(1and2)\",\n    \"conditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"email\",\n      \"value\" : [ \"carol@zylker.com\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"phone\",\n      \"value\" : [ \"99922299922\" ]\n    } ],\n    \"actions\" : {\n      \"alert\" : \"Sample Alert1\"\n    }\n  } ],\n  \"modifiedTime\" : \"2018-09-07T06:50:48.697Z\",\n  \"fieldName\" : \"email\",\n  \"description\" : \"Rule 1 for layout\",\n  \"systemGenerated\" : false,\n  \"layoutId\" : \"4000000007723\",\n  \"executeInHelpCentre\" : false,\n  \"createdBy\" : \"4000000015963\",\n  \"name\" : \"Rule 11\",\n  \"createdTime\" : \"2018-09-07T06:50:48.697Z\",\n  \"modifiedBy\" : \"4000000015963\",\n  \"id\" : \"4000000021001\",\n  \"status\" : \"active\"\n}"
						}
					]
				},
				{
					"name": "Delete Validation Rule",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts/:layout_id/validationRules/{validationRule_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts",
								":layout_id",
								"validationRules",
								"{validationRule_id}"
							],
							"variable": [
								{
									"key": "layout_id"
								}
							]
						},
						"description": "This API deletes a validation rule created for a field from a layout.\n#### OAuth Scope\n- `Desk.settings.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete Validation Rule",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts/4000000007723/validationRules/4000000021001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts",
										"4000000007723",
										"validationRules",
										"4000000021001"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Criteria Fields For Layout Validation Rules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/layouts/:layout_id/validationRules/criteriaFields?category=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"layouts",
								":layout_id",
								"validationRules",
								"criteriaFields"
							],
							"query": [
								{
									"key": "category",
									"value": "<String>\n",
									"description": "Category for getting the field criteria for primary or secondary fields"
								}
							],
							"variable": [
								{
									"key": "layout_id"
								}
							]
						},
						"description": "This API lists the fields that can be used in criteria of a specified module in validation rules. Available pre-defined values may contain ${EMPTY}, ${NOTEMPTY}, ${OPEN}, ${CLOSED}, ${CURRENTTIME}. Available types are Text, Date, DateTime, Text, Boolean and Arithmetic.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List Criteria Fields For Layout Validation Rules",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/layouts/4000000013564/validationRules/criteriaFields?category=primary",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"layouts",
										"4000000013564",
										"validationRules",
										"criteriaFields"
									],
									"query": [
										{
											"key": "category",
											"value": "primary"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"criteriaFields\" : [ {\n    \"displayLabel\" : \"Tickets\",\n    \"name\" : \"tickets\",\n    \"fieldDetails\" : [ {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"email\",\n      \"fieldLabel\" : \"Email\",\n      \"i18NLabel\" : \"Email\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"phone\",\n      \"fieldLabel\" : \"Phone\",\n      \"i18NLabel\" : \"Phone\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"subject\",\n      \"fieldLabel\" : \"Subject\",\n      \"i18NLabel\" : \"Subject\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is OPEN\",\n        \"value\" : [ \"${OPEN}\" ]\n      }, {\n        \"condition\" : \"is CLOSED\",\n        \"value\" : [ \"${CLOSED}\" ]\n      }, {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"status\",\n      \"fieldLabel\" : \"Status\",\n      \"i18NLabel\" : \"Status\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldName\" : \"classification\",\n      \"fieldLabel\" : \"Classification\",\n      \"i18NLabel\" : \"Classification\",\n      \"type\" : \"text\"\n    } ]\n  } ]\n}"
						}
					]
				}
			],
			"description": "Validation rules verify that the data an agent enters in a record meets the standards you specify before the agent can save the record."
		},
		{
			"name": "DependencyMappings",
			"item": [
				{
					"name": "List dependency mappings in a layout",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dependencyMappings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dependencyMappings"
							],
							"query": [
								{
									"key": "layoutId",
									"value": "<long>\n",
									"description": "ID of the layout in which the dependency is mapped",
									"disabled": true
								}
							]
						},
						"description": "This API lists the dependency mappings configured in a layout.\n#### OAuth Scope\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List dependency mappings in a layout",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/dependencyMappings?layoutId=4000000007177",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dependencyMappings"
									],
									"query": [
										{
											"key": "layoutId",
											"value": "4000000007177"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"parent\" : {\n      \"displayLabel\" : \"Category\",\n      \"allowedValues\" : [ \"General\", \"Defects\" ],\n      \"id\" : \"4000000000421\"\n    },\n    \"mappings\" : {\n      \"General\" : [ \"Sub General\" ],\n      \"Defects\" : [ \"Sub Defects\" ]\n    },\n    \"id\" : \"4000000007315\",\n    \"childId\" : \"4000000000423\",\n    \"layoutId\" : \"4000000007177\",\n    \"parentId\" : \"4000000000421\",\n    \"child\" : {\n      \"displayLabel\" : \"Sub Category\",\n      \"allowedValues\" : [ \"Sub General\", \"Sub Defects\" ],\n      \"id\" : \"4000000000423\"\n    }\n  }, {\n    \"parent\" : {\n      \"displayLabel\" : \"Category\",\n      \"allowedValues\" : [ \"General\", \"Defects\" ],\n      \"id\" : \"4000000000421\"\n    },\n    \"mappings\" : {\n      \"General\" : [ \"Open\", \"On Hold\", \"Escalated\", \"Closed\", \"Closed1\", \"newDeptClosed\", \"julyDeptClosed\", \"Open_july\", \"Open_newDept\" ],\n      \"Defects\" : [ \"Open\", \"On Hold\", \"Escalated\", \"Closed\", \"Closed1\", \"newDeptClosed\", \"julyDeptClosed\", \"Open_july\", \"Open_newDept\" ]\n    },\n    \"id\" : \"4000000031003\",\n    \"childId\" : \"4000000000367\",\n    \"layoutId\" : \"4000000007177\",\n    \"parentId\" : \"4000000000421\",\n    \"child\" : {\n      \"displayLabel\" : \"Status\",\n      \"allowedValues\" : [ \"Open\", \"On Hold\", \"Escalated\", \"Closed\", \"Closed1\", \"newDeptClosed\", \"julyDeptClosed\", \"Open_july\", \"Open_newDept\" ],\n      \"id\" : \"4000000000367\"\n    }\n  }, {\n    \"parent\" : {\n      \"displayLabel\" : \"Status\",\n      \"allowedValues\" : [ \"Open\", \"On Hold\", \"Escalated\", \"Closed\", \"Closed1\", \"newDeptClosed\", \"julyDeptClosed\", \"Open_july\", \"Open_newDept\" ],\n      \"id\" : \"4000000000367\"\n    },\n    \"mappings\" : {\n      \"newDeptClosed\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"Open_july\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"Escalated\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"Open_newDept\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"On Hold\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"Closed\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"Closed1\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"julyDeptClosed\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"Open\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ]\n    },\n    \"id\" : \"4000000032003\",\n    \"childId\" : \"4000000000409\",\n    \"layoutId\" : \"4000000007177\",\n    \"parentId\" : \"4000000000367\",\n    \"child\" : {\n      \"displayLabel\" : \"Mode\",\n      \"allowedValues\" : [ \"Phone\", \"Email\", \"Web\", \"Twitter\", \"Facebook\", \"Chat\", \"Forums\", \"Feedback Widget\" ],\n      \"id\" : \"4000000000409\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get possible dependency mappings in a layout",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/availableDependencyMappings?layoutId=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"availableDependencyMappings"
							],
							"query": [
								{
									"key": "layoutId",
									"value": "<long>\n",
									"description": "layout Id"
								}
							]
						},
						"description": "This API fetches the parent and child fields using which you can configure dependency mappings in a layout.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get possible dependency mappings in a layout",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/availableDependencyMappings?layoutId=4000000007179",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"availableDependencyMappings"
									],
									"query": [
										{
											"key": "layoutId",
											"value": "4000000007179"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"children\" : [ {\n    \"displayLabel\" : \"Category\",\n    \"allowedValues\" : [ \"-None-\", \"Call\", \"Meeting\", \"Demo\" ],\n    \"id\" : \"4000000000145\"\n  }, {\n    \"displayLabel\" : \"Status\",\n    \"allowedValues\" : [ \"Not Started\", \"Deferred\", \"In Progress\", \"Waiting on someone else\", \"Completed_july1\", \"Completed_newDept\" ],\n    \"id\" : \"4000000000147\"\n  }, {\n    \"displayLabel\" : \"Priority\",\n    \"allowedValues\" : [ \"High\", \"Highest\", \"Low\", \"Lowest\", \"Normal\" ],\n    \"id\" : \"4000000000149\"\n  } ],\n  \"parents\" : [ {\n    \"displayLabel\" : \"Category\",\n    \"allowedValues\" : [ \"-None-\", \"Call\", \"Meeting\", \"Demo\" ],\n    \"id\" : \"4000000000145\"\n  }, {\n    \"displayLabel\" : \"Status\",\n    \"allowedValues\" : [ \"Not Started\", \"Deferred\", \"In Progress\", \"Waiting on someone else\", \"Completed_july1\", \"Completed_newDept\" ],\n    \"id\" : \"4000000000147\"\n  }, {\n    \"displayLabel\" : \"Priority\",\n    \"allowedValues\" : [ \"High\", \"Highest\", \"Low\", \"Lowest\", \"Normal\" ],\n    \"id\" : \"4000000000149\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Create dependency mapping",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dependencyMappings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dependencyMappings"
							]
						},
						"description": "This API creates a dependency mapping between two fields.\n#### OAuth Scope\n- `Desk.settings.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| layoutId (required) | &lt;long&gt;<br /> | ID of the layout in which the dependency is mapped \n| parentId (required) | &lt;long&gt;<br /> | ID of the parent field \n| childId (required) | &lt;long&gt;<br /> | ID of the child field \n| mappings (required) | &lt;list&gt;<br /> | JSON object that shows the mapping configured \n"
					},
					"response": [
						{
							"name": "Create dependency mapping",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"mappings\" : {\n    \"General\" : [ \"Medium\", \"High\" ],\n    \"Defects\" : [ \"Low\" ]\n  },\n  \"childId\" : \"4000000000407\",\n  \"layoutId\" : \"4000000007177\",\n  \"parentId\" : \"4000000000421\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/dependencyMappings",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dependencyMappings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"parent\" : {\n    \"displayLabel\" : \"Category\",\n    \"allowedValues\" : [ \"General\", \"Defects\" ],\n    \"id\" : \"4000000000421\"\n  },\n  \"mappings\" : {\n    \"General\" : [ \"High\", \"Medium\" ],\n    \"Defects\" : [ \"Low\" ]\n  },\n  \"id\" : \"4000000047001\",\n  \"childId\" : \"4000000000407\",\n  \"layoutId\" : \"4000000007177\",\n  \"parentId\" : \"4000000000421\",\n  \"child\" : {\n    \"displayLabel\" : \"Priority\",\n    \"allowedValues\" : [ \"High\", \"Medium\", \"Low\" ],\n    \"id\" : \"4000000000407\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update dependency mapping",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dependencyMappings/:dependencymapping_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dependencyMappings",
								":dependencymapping_id"
							],
							"variable": [
								{
									"key": "dependencymapping_id"
								}
							]
						},
						"description": "This API updates details of an existing dependency mapping.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| mappings  | &lt;list&gt;<br /> |  a Json object which consist of elements which are inturn a json array \n"
					},
					"response": [
						{
							"name": "Update dependency mapping",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"mappings\" : {\n    \"General\" : [ \"Medium\", \"Low\" ],\n    \"Defects\" : [ \"Low\", \"Medium\" ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/dependencyMappings/4000000047001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dependencyMappings",
										"4000000047001"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"parent\" : {\n    \"displayLabel\" : \"Category\",\n    \"allowedValues\" : [ \"General\", \"Defects\" ],\n    \"id\" : \"4000000000421\"\n  },\n  \"mappings\" : {\n    \"General\" : [ \"Medium\", \"Low\" ],\n    \"Defects\" : [ \"Medium\", \"Low\" ]\n  },\n  \"id\" : \"4000000047001\",\n  \"childId\" : \"4000000000407\",\n  \"layoutId\" : \"4000000007177\",\n  \"parentId\" : \"4000000000421\",\n  \"child\" : {\n    \"displayLabel\" : \"Priority\",\n    \"allowedValues\" : [ \"High\", \"Medium\", \"Low\" ],\n    \"id\" : \"4000000000407\"\n  }\n}"
						}
					]
				},
				{
					"name": "Delete dependency mapping",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dependencyMappings/:dependencymapping_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dependencyMappings",
								":dependencymapping_id"
							],
							"variable": [
								{
									"key": "dependencymapping_id"
								}
							]
						},
						"description": "This API deletes a dependency mapping from a layout.\n#### OAuth Scope\n- `Desk.settings.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete dependency mapping",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/dependencyMappings/4000000047001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dependencyMappings",
										"4000000047001"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Dependency mapping is a function that is applicable only to PickList fields. Through this function, you can define a parent-child relationship between two fields. For example, let's say there are two fields - Country and State - in your Tickets module. The State field will display values, depending on the value you select in the Country field. If you choose India in the Country field, only the states of India will be displayed in the State field and the states of other countries will be hidden. If you choose a different country, only the states of that country will be displayed."
		},
		{
			"name": "MailReplyAddress",
			"item": [
				{
					"name": "Get details of a MailReplyAddress",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/mailReplyAddress/:mailReplyAddress_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"mailReplyAddress",
								":mailReplyAddress_id"
							],
							"variable": [
								{
									"key": "mailReplyAddress_id"
								}
							]
						},
						"description": "This API fetches the details of a MailReplyAddress.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get details of a MailReplyAddress",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/mailReplyAddress/4000000028003",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"mailReplyAddress",
										"4000000028003"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"address\" : \"techsupport@zylker.com\",\n  \"smtpDetails\" : {\n    \"port\" : \"465\",\n    \"host\" : \"smtp.zoho.com\",\n    \"userName\" : \"techsupport@zylker.com\",\n    \"connectionType\" : \"SSL\"\n  },\n  \"isVerified\" : true,\n  \"isSmtpEnabled\" : true,\n  \"displayName\" : \"Tech\",\n  \"departmentId\" : \"4000000007043\",\n  \"id\" : \"4000000028003\",\n  \"isActive\" : true,\n  \"serviceProviderType\" : \"ZohoSMTP|CustomSMTP\"\n}"
						}
					]
				},
				{
					"name": "List MailReplyAddresses",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/mailReplyAddress?departmentId=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"mailReplyAddress"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the Department from which the addresses need to be queried."
								},
								{
									"key": "isActive",
									"value": "<boolean>\n",
									"description": "Key that returns if the mailReplyAddress is active or not",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the mail addresses must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of mail addresses to fetch",
									"disabled": true
								}
							]
						},
						"description": "This API lists the mailReplyAddresses configured in your help desk portal.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List MailReplyAddresses",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/mailReplyAddress?departmentId=4000000007043",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"mailReplyAddress"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "4000000007043"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"address\" : \"support@zylker.com\",\n    \"smtpDetails\" : {\n      \"port\" : \"465\",\n      \"host\" : \"smtp.zoho.com\",\n      \"userName\" : \"support@zylker.com\",\n      \"connectionType\" : \"SSL\"\n    },\n    \"isVerified\" : true,\n    \"isSmtpEnabled\" : true,\n    \"displayName\" : \"Support\",\n    \"departmentId\" : \"4000000007043\",\n    \"id\" : \"4000000025003\",\n    \"isActive\" : true,\n    \"serviceProviderType\" : \"CustomSMTP\"\n  }, {\n    \"address\" : \"market@zylker.com\",\n    \"isVerified\" : true,\n    \"isSmtpEnabled\" : false,\n    \"displayName\" : \"Marketing\",\n    \"departmentId\" : \"4000000007043\",\n    \"id\" : \"4000000026001\",\n    \"isActive\" : false,\n    \"serviceProviderType\" : \"ZohoSMTP\"\n  }, {\n    \"address\" : \"techsupport@zylker.com\",\n    \"smtpDetails\" : {\n      \"port\" : \"465\",\n      \"host\" : \"smtp.zoho.com\",\n      \"userName\" : \"techsupport@zylker.com\",\n      \"connectionType\" : \"SSL\"\n    },\n    \"isVerified\" : true,\n    \"isSmtpEnabled\" : true,\n    \"displayName\" : \"Tech\",\n    \"departmentId\" : \"4000000007043\",\n    \"id\" : \"4000000028003\",\n    \"isActive\" : true,\n    \"serviceProviderType\" : \"CustomSMTP\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Add MailReplyAddress",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/mailReplyAddress",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"mailReplyAddress"
							]
						},
						"description": "This API adds a MailReplyAddress to your help desk.\n#### OAuth Scope\n- `Desk.settings.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| departmentId (required) | &lt;long&gt;<br /> | ID of the department in which the MailReplyAddress must be configured \n| address (required) | &lt;string&gt;<br />max chars : 100 | Email ID to add \n| displayName (required) | &lt;string&gt;<br />max chars : 100 | Display name for the MailReplyAddress \n| isSmtpEnabled (required) | &lt;boolean&gt;<br /> | Key that enables or disables SMTP authentication for the MailReplyAddress \n| smtpDetails  | &lt;JSONObject&gt;<br /> | Details related to the SMTP authentication for the MailReplyAddress \n| serviceProviderType  | &lt;string&gt;<br />max chars : 50 | MailService Provider name \n"
					},
					"response": [
						{
							"name": "Add MailReplyAddress",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"address\" : \"support@zylker.com\",\n  \"smtpDetails\" : {\n    \"port\" : \"465\",\n    \"host\" : \"smtp.zoho.com\",\n    \"password \" : \"lfijkrffr\",\n    \"userName\" : \"support@zylker.com\",\n    \"connectionType\" : \"SSL\"\n  },\n  \"isSmtpEnabled\" : true,\n  \"displayName\" : \"My address\",\n  \"departmentId\" : \"4000000007043\",\n  \"serviceProviderType\" : \"ZohoSMTP|CustomSMTP\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/mailReplyAddress",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"mailReplyAddress"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"address\" : \"support@zylker.com\",\n  \"smtpDetails\" : {\n    \"port\" : \"465\",\n    \"host\" : \"smtp.zoho.com\",\n    \"userName\" : \"support@zylker.com\",\n    \"connectionType\" : \"SSL\"\n  },\n  \"isVerified\" : false,\n  \"displayName\" : \"My address\",\n  \"departmentId\" : \"4000000007043\",\n  \"id\" : \"4000000028003\",\n  \"isActive\" : true,\n  \"url\" : \"https://login.microsoftonline.com/common/oauth2/v2.0/authorize?prompt=select_account&access_type=offline&scope=https://outlook.office.com/IMAP.AccessAsUser.All+https://outlook.office.com/POP.AccessAsUser.All+https://outlook.office.com/SMTP.Send+https://outlook.office.com/User.Read+https://outlook.office.com/Mail.ReadWrite.Shared+offline_access&response_type=code&redirect_uri=https://mail.zoho.com/api/accounts/Outlook/v2/redirect&state=dA700Cyn67320K8B8Ld0yRt9P3wc20Lli677&client_id=c12b-b8d1-860624b&login_hint=infotech@zylker.com\",\n  \"serviceProviderType\" : \"ZohoSMTP|CustomSMTP\"\n}"
						}
					]
				},
				{
					"name": "Update MailReplyAddress",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/mailReplyAddress/:mailReplyAddress_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"mailReplyAddress",
								":mailReplyAddress_id"
							],
							"variable": [
								{
									"key": "mailReplyAddress_id"
								}
							]
						},
						"description": "This API updates details of an existing MailReplyAddress.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| departmentId  | &lt;long&gt;<br /> | ID of the department(s) in which the MailReplyAddress is configured \n| displayName  | &lt;string&gt;<br />max chars : 100 | Display Name \n| isActive  | &lt;boolean&gt;<br /> | Key that returns if the MailReplyAddress is active or not \n| isSmtpEnabled  | &lt;boolean&gt;<br /> | Is SMTP Enabled \n| serviceProviderType  | &lt;string&gt;<br />max chars : 50 | MailService Provider name \n| smtpDetails  | &lt;JSONObject&gt;<br /> | Details related to the SMTP authentication for the MailReplyAddress \n"
					},
					"response": [
						{
							"name": "Update MailReplyAddress",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"smtpDetails\" : {\n    \"port\" : \"465\",\n    \"host\" : \"smtp.zoho.com\",\n    \"password \" : \"lfijk$&rffr**\",\n    \"userName\" : \"techsupport@zylker.com\",\n    \"connectionType\" : \"SSL\"\n  },\n  \"isSmtpEnabled\" : true,\n  \"displayName\" : \"TechSupport\",\n  \"departmentId\" : \"4000000007043\",\n  \"isActive\" : true,\n  \"serviceProviderType\" : \"ZohoSMTP|CustomSMTP\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/mailReplyAddress/4000000039003",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"mailReplyAddress",
										"4000000039003"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"address\" : \"techsupport@zylker.com\",\n  \"isVerified\" : true,\n  \"displayName\" : \"TechSupport\",\n  \"departmentId\" : \"4000000007043\",\n  \"id\" : \"4000000028003\",\n  \"isActive\" : true,\n  \"url\" : \"https://login.microsoftonline.com/common/oauth2/v2.0/authorize?prompt=select_account&access_type=offline&scope=https://outlook.office.com/IMAP.AccessAsUser.All+https://outlook.office.com/POP.AccessAsUser.All+https://outlook.office.com/SMTP.Send+https://outlook.office.com/User.Read+https://outlook.office.com/Mail.ReadWrite.Shared+offline_access&response_type=code&redirect_uri=https://mail.zoho.com/api/accounts/Outlook/v2/redirect&state=dA700Cyn67320K8B8Ld0yRt9P3wc20Lli677&client_id=c12b-b8d1-860624b&login_hint=infotech@zylker.com\",\n  \"serviceProviderType\" : \"ZohoSMTP|CustomSMTP\"\n}"
						}
					]
				},
				{
					"name": "Delete MailReplyAddress",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/mailReplyAddress/:mailReplyAddress_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"mailReplyAddress",
								":mailReplyAddress_id"
							],
							"variable": [
								{
									"key": "mailReplyAddress_id"
								}
							]
						},
						"description": "This API deletes a MailReplyAddress from your help desk.\n#### OAuth Scope\n- `Desk.settings.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete MailReplyAddress",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/mailReplyAddress/4000000039003",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"mailReplyAddress",
										"4000000039003"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Verify MailReplyAddress",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/mailReplyAddress/:mailReplyAddress_id/sendVerification",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"mailReplyAddress",
								":mailReplyAddress_id",
								"sendVerification"
							],
							"variable": [
								{
									"key": "mailReplyAddress_id"
								}
							]
						},
						"description": "This API sends a verification link to the MailReplyAddress configured in your help desk portal.\n#### OAuth Scope\n- `Desk.settings.CREATE`\n- `Desk.basic.CREATE`\n\n"
					},
					"response": [
						{
							"name": "Verify MailReplyAddress",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/mailReplyAddress/4000000039003/sendVerification",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"mailReplyAddress",
										"4000000039003",
										"sendVerification"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "MailReplyAddress refers to the email ID from which replies are sent to customers."
		},
		{
			"name": "SupportEmailAddress",
			"item": [
				{
					"name": "Get details of a SupportEmailAddress",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/supportEmailAddress/:supportEmailAddress_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"supportEmailAddress",
								":supportEmailAddress_id"
							],
							"variable": [
								{
									"key": "supportEmailAddress_id"
								}
							]
						},
						"description": "This API fetches the details of a SupportEmailAddress.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get details of a SupportEmailAddress",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/supportEmailAddress/4000000026003",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"supportEmailAddress",
										"4000000026003"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"address\" : \"support@zylker.com\",\n  \"departmentId\" : \"4000000007043\",\n  \"id\" : \"4000000026003\",\n  \"friendlyName\" : \"Tech\",\n  \"isMailFetching\" : true\n}"
						}
					]
				},
				{
					"name": "List SupportEmailAddresses",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/supportEmailAddress?departmentId=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"supportEmailAddress"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department(s) from which the SupportEmailAddresses must be fetched."
								},
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the mail addresses must be fetched",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of mail addresses to fetch",
									"disabled": true
								}
							]
						},
						"description": "This API lists the SupportEmailAddresses configured in your help desk.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List SupportEmailAddresses",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/supportEmailAddress?departmentId=4000000007043",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"supportEmailAddress"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "4000000007043"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"address\" : \"marketing@zylker.com\",\n    \"departmentId\" : \"4000000007043\",\n    \"id\" : \"4000000025003\",\n    \"friendlyName\" : \"Marketing\",\n    \"isMailFetching\" : true\n  }, {\n    \"address\" : \"sales@zylker.com\",\n    \"departmentId\" : \"4000000007043\",\n    \"id\" : \"4000000026001\",\n    \"friendlyName\" : \"Sales\",\n    \"isMailFetching\" : false\n  }, {\n    \"address\" : \"support@zylker.com\",\n    \"departmentId\" : \"4000000007043\",\n    \"id\" : \"4000000026003\",\n    \"friendlyName\" : \"Support\",\n    \"isMailFetching\" : true\n  } ]\n}"
						}
					]
				},
				{
					"name": "Add SupportEmailAddress",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/supportEmailAddress",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"supportEmailAddress"
							]
						},
						"description": "This API adds a SupportEmailAddress to your help desk.\n#### OAuth Scope\n- `Desk.settings.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| departmentId (required) | &lt;long&gt;<br /> | ID of the department in which the SupportEmailAddress must be configured \n| friendlyName (required) | &lt;string&gt;<br />max chars : 100 | Display name for the SupportEmailAddress \n| address (required) | &lt;string&gt;<br />max chars : 100 | Email ID to add \n"
					},
					"response": [
						{
							"name": "Add SupportEmailAddress",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"address\" : \"support@zylker.com\",\n  \"departmentId\" : \"4000000007043\",\n  \"friendlyName\" : \"Support\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/supportEmailAddress",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"supportEmailAddress"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"address\" : \"support@zylker.com\",\n  \"departmentId\" : \"4000000007043\",\n  \"id\" : \"4000000026003\",\n  \"friendlyName\" : \"Support\",\n  \"isMailFetching\" : true\n}"
						}
					]
				},
				{
					"name": "Update SupportEmailAddress",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/supportEmailAddress/:supportEmailAddress_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"supportEmailAddress",
								":supportEmailAddress_id"
							],
							"variable": [
								{
									"key": "supportEmailAddress_id"
								}
							]
						},
						"description": "This API updates details of an existing SupportEmailAddress.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| departmentId  | &lt;long&gt;<br /> | ID of the department in which the SupportEmailAddress is configured \n| friendlyName  | &lt;string&gt;<br />max chars : 100 | Display name for the SupportEmailAddress \n| isMailFetching  | &lt;boolean&gt;<br /> | Key that returns if the SupportEmailAddress fetches emails or not \n"
					},
					"response": [
						{
							"name": "Update SupportEmailAddress",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"departmentId\" : \"4000000007043\",\n  \"friendlyName\" : \"TechSupport\",\n  \"isMailFetching\" : true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/supportEmailAddress/4000000039003",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"supportEmailAddress",
										"4000000039003"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"address\" : \"support@zylker.com\",\n  \"departmentId\" : \"4000000007043\",\n  \"id\" : \"4000000026003\",\n  \"friendlyName\" : \"TechSupport\",\n  \"isMailFetching\" : true\n}"
						}
					]
				},
				{
					"name": "Delete SupportEmailAddress",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/supportEmailAddress/:supportEmailAddress_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"supportEmailAddress",
								":supportEmailAddress_id"
							],
							"variable": [
								{
									"key": "supportEmailAddress_id"
								}
							]
						},
						"description": "This API deletes a SupportEmailAddress from your help desk.\n#### OAuth Scope\n- `Desk.settings.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete SupportEmailAddress",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/supportEmailAddress/4000000039003",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"supportEmailAddress",
										"4000000039003"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "SupportEmailAddress refers to the email ID to which customer correspondences are forwarded."
		},
		{
			"name": "MailConfigurations",
			"item": [
				{
					"name": "List department-level MailConfigurations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/departments/:department_Id/mailConfigurations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"departments",
								":department_Id",
								"mailConfigurations"
							],
							"variable": [
								{
									"key": "department_Id"
								}
							]
						},
						"description": "This API lists the MailConfigurations set for a specific department.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List department-level MailConfigurations",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/departments/4000000007043/mailConfigurations",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"departments",
										"4000000007043",
										"mailConfigurations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"privateThreadConfig\" : true,\n  \"agentNameInTicketReply\" : true,\n  \"createContactWithReplyTo\" : false,\n  \"createTicketForOriginalSender\" : true,\n  \"autoCCToMailbox\" : true\n}"
						}
					]
				},
				{
					"name": "List organization-level MailConfigurations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/mailConfigurations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"mailConfigurations"
							]
						},
						"description": "This API lists the MailConfigurations set for the entire help desk portal.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List organization-level MailConfigurations",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/mailConfigurations",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"mailConfigurations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"privateThreadConfig\" : true,\n  \"agentNameInTicketReply\" : true,\n  \"createContactWithReplyTo\" : false,\n  \"createTicketForOriginalSender\" : true,\n  \"autoCCToMailbox\" : true\n}"
						}
					]
				},
				{
					"name": "Update department-level MailConfigurations",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/departments/:department_Id/mailConfigurations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"departments",
								":department_Id",
								"mailConfigurations"
							],
							"variable": [
								{
									"key": "department_Id"
								}
							]
						},
						"description": "This API updates the MailConfigurations set for a specific department.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| autoCCToMailbox  | &lt;boolean&gt;<br /> | Key that enables or disables auto CC of email replies to your&nbsp; \n| createContactWithReplyTo  | &lt;boolean&gt;<br /> | Key that enables or disables creation of contacts from 'Reply To' email addresses \n| agentNameInTicketReply  | &lt;boolean&gt;<br /> | Key that enables or disables display of the&nbsp;agent's name in replies to customers \n| createTicketForOriginalSender  | &lt;boolean&gt;<br /> | Key that enables or disables creation of tickets on behalf of the sender while forwarding emails \n| privateThreadConfig  | &lt;boolean&gt;<br /> | Key that enables or disables private thread handling \n"
					},
					"response": [
						{
							"name": "Update department-level MailConfigurations",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agentNameInTicketReply\" : true,\n  \"createContactWithReplyTo\" : false,\n  \"createTicketForOriginalSender\" : true,\n  \"autoCCToMailbox\" : true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/departments/4000000007043/mailConfigurations",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"departments",
										"4000000007043",
										"mailConfigurations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"privateThreadConfig\" : true,\n  \"agentNameInTicketReply\" : true,\n  \"createContactWithReplyTo\" : false,\n  \"createTicketForOriginalSender\" : true,\n  \"autoCCToMailbox\" : true\n}"
						}
					]
				},
				{
					"name": "Update organization-level MailConfigurations",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/mailConfigurations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"mailConfigurations"
							]
						},
						"description": "This API updates the MailConfigurations set for the entire help desk portal.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| autoCCToMailbox  | &lt;boolean&gt;<br /> | Key that enables or disables auto CC of email replies to your&nbsp; \n| createContactWithReplyTo  | &lt;boolean&gt;<br /> | Key that enables or disables creation of contacts from 'Reply To' email addresses \n| agentNameInTicketReply  | &lt;boolean&gt;<br /> | Key that enables or disables display of the&nbsp;agent's name in replies to customers \n| createTicketForOriginalSender  | &lt;boolean&gt;<br /> | Key that enables or disables creation of tickets on behalf of the sender while forwarding emails \n| privateThreadConfig  | &lt;boolean&gt;<br /> | Key that enables or disables private thread handling \n"
					},
					"response": [
						{
							"name": "Update organization-level MailConfigurations",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"privateThreadConfig\" : true,\n  \"agentNameInTicketReply\" : true,\n  \"createContactWithReplyTo\" : false,\n  \"createTicketForOriginalSender\" : true,\n  \"autoCCToMailbox\" : true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/mailConfigurations",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"mailConfigurations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"privateThreadConfig\" : true,\n  \"agentNameInTicketReply\" : true,\n  \"createContactWithReplyTo\" : false,\n  \"createTicketForOriginalSender\" : true,\n  \"autoCCToMailbox\" : true\n}"
						}
					]
				}
			],
			"description": "MailConfiguration refers to the secondary configurations related to the email addresses in your help desk portal."
		},
		{
			"name": "SupportEmailDomain",
			"item": [
				{
					"name": "Update SupportEmailAddress SubDomain",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/supportEmailDomain",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"supportEmailDomain"
							]
						},
						"description": "This API updates the subdomain (the &ldquo;mycompany&rdquo; part) of the support email address.<br/><br/>1. Only the primary contact of the organization can update the subdomain of the support email address.<br/>2. The new support email address will be support@zylker.com.<br/>3. The updated support email address will be used for fetching emails, henceforth. So make sure that you update the new address in the forwarding configurations of your mailbox.<br/>4. The new support email address is applicable only for the default department.<br/>5. All existing email aliases along with the old support email address will be permanently deleted from your account.<br/>6. Emails forwarded to the old support address will not be fetched in.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| supportEmailDomain  | &lt;string&gt;<br />max chars : 100 | Name of the new email subdomain \n"
					},
					"response": [
						{
							"name": "Update SupportEmailAddress SubDomain",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"supportEmailDomain\" : \"zylkernew\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/supportEmailDomain",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"supportEmailDomain"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"updatedTime\" : \"2013-11-04T11:21:07.000Z\",\n  \"updatedBy\" : \"4000000007089\",\n  \"supportEmailDomain\" : \"zylkernew.zohodesk.com\",\n  \"oldDomain\" : \"zylker.zohodesk.com\"\n}"
						}
					]
				},
				{
					"name": "Get SupportEmailAddress SubDomain",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/supportEmailDomain",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"supportEmailDomain"
							]
						},
						"description": "This API fetches the subdomain of the support email address.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get SupportEmailAddress SubDomain",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/supportEmailDomain",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"supportEmailDomain"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"updatedTime\" : \"2013-11-04T11:21:07.000Z\",\n  \"updatedBy\" : \"4000000007089\",\n  \"supportEmailDomain\" : \"zylkernew.zohodesk.com\",\n  \"oldDomain\" : \"zylker.zohodesk.com\"\n}"
						}
					]
				}
			],
			"description": "When you sign up for Zoho Desk, you are provided with one default support email address: support@mycompany.zohodesk.com. The &ldquo;mycompany&rdquo; part of the email address represents the portal name that you initially signed up with.Emails received at this address become tickets. This address is also used as the &ldquo;From&rdquo; address in replies to users."
		},
		{
			"name": "Locales",
			"item": [
				{
					"name": "List all countries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/countries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"countries"
							]
						},
						"description": "This API lists the countries that can be set in the locale field in Zoho Desk. Keep in mind that the countries object will be deprecated soon. Therefore, make sure to use the data object instead, wherever needed.\n#### OAuth Scope\n- ``\n\n"
					},
					"response": [
						{
							"name": "List all countries",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/countries",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"countries"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"name\" : \"Puerto Rico\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"PR\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Palestinian Territories\",\n    \"currencySymbol\" : \"ILS\",\n    \"id\" : \"PS\",\n    \"currencyCode\" : \"ILS\"\n  }, {\n    \"name\" : \"Portugal\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"PT\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Palau\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"PW\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Paraguay\",\n    \"currencySymbol\" : \"PYG\",\n    \"id\" : \"PY\",\n    \"currencyCode\" : \"PYG\"\n  }, {\n    \"name\" : \"Qatar\",\n    \"currencySymbol\" : \"QAR\",\n    \"id\" : \"QA\",\n    \"currencyCode\" : \"QAR\"\n  }, {\n    \"name\" : \"Andorra\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"AD\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"United Arab Emirates\",\n    \"currencySymbol\" : \"AED\",\n    \"id\" : \"AE\",\n    \"currencyCode\" : \"AED\"\n  }, {\n    \"name\" : \"Afghanistan\",\n    \"currencySymbol\" : \"AFN\",\n    \"id\" : \"AF\",\n    \"currencyCode\" : \"AFN\"\n  }, {\n    \"name\" : \"Antigua & Barbuda\",\n    \"currencySymbol\" : \"XCD\",\n    \"id\" : \"AG\",\n    \"currencyCode\" : \"XCD\"\n  }, {\n    \"name\" : \"Anguilla\",\n    \"currencySymbol\" : \"XCD\",\n    \"id\" : \"AI\",\n    \"currencyCode\" : \"XCD\"\n  }, {\n    \"name\" : \"Albania\",\n    \"currencySymbol\" : \"ALL\",\n    \"id\" : \"AL\",\n    \"currencyCode\" : \"ALL\"\n  }, {\n    \"name\" : \"Armenia\",\n    \"currencySymbol\" : \"AMD\",\n    \"id\" : \"AM\",\n    \"currencyCode\" : \"AMD\"\n  }, {\n    \"name\" : \"Netherlands Antilles\",\n    \"currencySymbol\" : \"ANG\",\n    \"id\" : \"AN\",\n    \"currencyCode\" : \"ANG\"\n  }, {\n    \"name\" : \"Angola\",\n    \"currencySymbol\" : \"AOA\",\n    \"id\" : \"AO\",\n    \"currencyCode\" : \"AOA\"\n  }, {\n    \"name\" : \"Antarctica\",\n    \"currencySymbol\" : \"XXX\",\n    \"id\" : \"AQ\",\n    \"currencyCode\" : \"-\"\n  }, {\n    \"name\" : \"Argentina\",\n    \"currencySymbol\" : \"ARS\",\n    \"id\" : \"AR\",\n    \"currencyCode\" : \"ARS\"\n  }, {\n    \"name\" : \"American Samoa\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"AS\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Austria\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"AT\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Réunion\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"RE\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Australia\",\n    \"currencySymbol\" : \"$\",\n    \"id\" : \"AU\",\n    \"currencyCode\" : \"AUD\"\n  }, {\n    \"name\" : \"Aruba\",\n    \"currencySymbol\" : \"AWG\",\n    \"id\" : \"AW\",\n    \"currencyCode\" : \"AWG\"\n  }, {\n    \"name\" : \"Åland Islands\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"AX\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Azerbaijan\",\n    \"currencySymbol\" : \"AZN\",\n    \"id\" : \"AZ\",\n    \"currencyCode\" : \"AZN\"\n  }, {\n    \"name\" : \"Romania\",\n    \"currencySymbol\" : \"RON\",\n    \"id\" : \"RO\",\n    \"currencyCode\" : \"RON\"\n  }, {\n    \"name\" : \"Bosnia & Herzegovina\",\n    \"currencySymbol\" : \"BAM\",\n    \"id\" : \"BA\",\n    \"currencyCode\" : \"BAM\"\n  }, {\n    \"name\" : \"Barbados\",\n    \"currencySymbol\" : \"BBD\",\n    \"id\" : \"BB\",\n    \"currencyCode\" : \"BBD\"\n  }, {\n    \"name\" : \"Serbia\",\n    \"currencySymbol\" : \"RSD\",\n    \"id\" : \"RS\",\n    \"currencyCode\" : \"RSD\"\n  }, {\n    \"name\" : \"Bangladesh\",\n    \"currencySymbol\" : \"BDT\",\n    \"id\" : \"BD\",\n    \"currencyCode\" : \"BDT\"\n  }, {\n    \"name\" : \"Belgium\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"BE\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Russia\",\n    \"currencySymbol\" : \"RUB\",\n    \"id\" : \"RU\",\n    \"currencyCode\" : \"RUB\"\n  }, {\n    \"name\" : \"Burkina Faso\",\n    \"currencySymbol\" : \"XOF\",\n    \"id\" : \"BF\",\n    \"currencyCode\" : \"XOF\"\n  }, {\n    \"name\" : \"Bulgaria\",\n    \"currencySymbol\" : \"BGN\",\n    \"id\" : \"BG\",\n    \"currencyCode\" : \"BGN\"\n  }, {\n    \"name\" : \"Rwanda\",\n    \"currencySymbol\" : \"RWF\",\n    \"id\" : \"RW\",\n    \"currencyCode\" : \"RWF\"\n  }, {\n    \"name\" : \"Bahrain\",\n    \"currencySymbol\" : \"BHD\",\n    \"id\" : \"BH\",\n    \"currencyCode\" : \"BHD\"\n  }, {\n    \"name\" : \"Burundi\",\n    \"currencySymbol\" : \"BIF\",\n    \"id\" : \"BI\",\n    \"currencyCode\" : \"BIF\"\n  }, {\n    \"name\" : \"Benin\",\n    \"currencySymbol\" : \"XOF\",\n    \"id\" : \"BJ\",\n    \"currencyCode\" : \"XOF\"\n  }, {\n    \"name\" : \"St. Barthélemy\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"BL\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Bermuda\",\n    \"currencySymbol\" : \"BMD\",\n    \"id\" : \"BM\",\n    \"currencyCode\" : \"BMD\"\n  }, {\n    \"name\" : \"Brunei\",\n    \"currencySymbol\" : \"BND\",\n    \"id\" : \"BN\",\n    \"currencyCode\" : \"BND\"\n  }, {\n    \"name\" : \"Bolivia\",\n    \"currencySymbol\" : \"BOB\",\n    \"id\" : \"BO\",\n    \"currencyCode\" : \"BOB\"\n  }, {\n    \"name\" : \"Saudi Arabia\",\n    \"currencySymbol\" : \"SAR\",\n    \"id\" : \"SA\",\n    \"currencyCode\" : \"SAR\"\n  }, {\n    \"name\" : \"Caribbean Netherlands\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"BQ\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Solomon Islands\",\n    \"currencySymbol\" : \"SBD\",\n    \"id\" : \"SB\",\n    \"currencyCode\" : \"SBD\"\n  }, {\n    \"name\" : \"Brazil\",\n    \"currencySymbol\" : \"BRL\",\n    \"id\" : \"BR\",\n    \"currencyCode\" : \"BRL\"\n  }, {\n    \"name\" : \"Seychelles\",\n    \"currencySymbol\" : \"SCR\",\n    \"id\" : \"SC\",\n    \"currencyCode\" : \"SCR\"\n  }, {\n    \"name\" : \"Bahamas\",\n    \"currencySymbol\" : \"BSD\",\n    \"id\" : \"BS\",\n    \"currencyCode\" : \"BSD\"\n  }, {\n    \"name\" : \"Sudan\",\n    \"currencySymbol\" : \"SDG\",\n    \"id\" : \"SD\",\n    \"currencyCode\" : \"SDG\"\n  }, {\n    \"name\" : \"Bhutan\",\n    \"currencySymbol\" : \"BTN\",\n    \"id\" : \"BT\",\n    \"currencyCode\" : \"BTN\"\n  }, {\n    \"name\" : \"Sweden\",\n    \"currencySymbol\" : \"SEK\",\n    \"id\" : \"SE\",\n    \"currencyCode\" : \"SEK\"\n  }, {\n    \"name\" : \"Bouvet Island\",\n    \"currencySymbol\" : \"NOK\",\n    \"id\" : \"BV\",\n    \"currencyCode\" : \"NOK\"\n  }, {\n    \"name\" : \"Singapore\",\n    \"currencySymbol\" : \"$\",\n    \"id\" : \"SG\",\n    \"currencyCode\" : \"SGD\"\n  }, {\n    \"name\" : \"Botswana\",\n    \"currencySymbol\" : \"BWP\",\n    \"id\" : \"BW\",\n    \"currencyCode\" : \"BWP\"\n  }, {\n    \"name\" : \"St. Helena\",\n    \"currencySymbol\" : \"SHP\",\n    \"id\" : \"SH\",\n    \"currencyCode\" : \"SHP\"\n  }, {\n    \"name\" : \"Slovenia\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"SI\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Belarus\",\n    \"currencySymbol\" : \"BYN\",\n    \"id\" : \"BY\",\n    \"currencyCode\" : \"BYN\"\n  }, {\n    \"name\" : \"Svalbard & Jan Mayen\",\n    \"currencySymbol\" : \"NOK\",\n    \"id\" : \"SJ\",\n    \"currencyCode\" : \"NOK\"\n  }, {\n    \"name\" : \"Belize\",\n    \"currencySymbol\" : \"BZD\",\n    \"id\" : \"BZ\",\n    \"currencyCode\" : \"BZD\"\n  }, {\n    \"name\" : \"Slovakia\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"SK\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Sierra Leone\",\n    \"currencySymbol\" : \"SLL\",\n    \"id\" : \"SL\",\n    \"currencyCode\" : \"SLL\"\n  }, {\n    \"name\" : \"San Marino\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"SM\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Senegal\",\n    \"currencySymbol\" : \"XOF\",\n    \"id\" : \"SN\",\n    \"currencyCode\" : \"XOF\"\n  }, {\n    \"name\" : \"Somalia\",\n    \"currencySymbol\" : \"SOS\",\n    \"id\" : \"SO\",\n    \"currencyCode\" : \"SOS\"\n  }, {\n    \"name\" : \"Canada\",\n    \"currencySymbol\" : \"$\",\n    \"id\" : \"CA\",\n    \"currencyCode\" : \"CAD\"\n  }, {\n    \"name\" : \"Suriname\",\n    \"currencySymbol\" : \"SRD\",\n    \"id\" : \"SR\",\n    \"currencyCode\" : \"SRD\"\n  }, {\n    \"name\" : \"Cocos (Keeling) Islands\",\n    \"currencySymbol\" : \"AUD\",\n    \"id\" : \"CC\",\n    \"currencyCode\" : \"AUD\"\n  }, {\n    \"name\" : \"South Sudan\",\n    \"currencySymbol\" : \"SSP\",\n    \"id\" : \"SS\",\n    \"currencyCode\" : \"SSP\"\n  }, {\n    \"name\" : \"Congo - Kinshasa\",\n    \"currencySymbol\" : \"CDF\",\n    \"id\" : \"CD\",\n    \"currencyCode\" : \"CDF\"\n  }, {\n    \"name\" : \"São Tomé & Príncipe\",\n    \"currencySymbol\" : \"STN\",\n    \"id\" : \"ST\",\n    \"currencyCode\" : \"STN\"\n  }, {\n    \"name\" : \"Central African Republic\",\n    \"currencySymbol\" : \"XAF\",\n    \"id\" : \"CF\",\n    \"currencyCode\" : \"XAF\"\n  }, {\n    \"name\" : \"El Salvador\",\n    \"currencySymbol\" : \"SVC\",\n    \"id\" : \"SV\",\n    \"currencyCode\" : \"SVC\"\n  }, {\n    \"name\" : \"Congo - Brazzaville\",\n    \"currencySymbol\" : \"XAF\",\n    \"id\" : \"CG\",\n    \"currencyCode\" : \"XAF\"\n  }, {\n    \"name\" : \"Switzerland\",\n    \"currencySymbol\" : \"CHF\",\n    \"id\" : \"CH\",\n    \"currencyCode\" : \"CHF\"\n  }, {\n    \"name\" : \"Sint Maarten\",\n    \"currencySymbol\" : \"ANG\",\n    \"id\" : \"SX\",\n    \"currencyCode\" : \"ANG\"\n  }, {\n    \"name\" : \"Côte d’Ivoire\",\n    \"currencySymbol\" : \"XOF\",\n    \"id\" : \"CI\",\n    \"currencyCode\" : \"XOF\"\n  }, {\n    \"name\" : \"Syria\",\n    \"currencySymbol\" : \"SYP\",\n    \"id\" : \"SY\",\n    \"currencyCode\" : \"SYP\"\n  }, {\n    \"name\" : \"Eswatini\",\n    \"currencySymbol\" : \"SZL\",\n    \"id\" : \"SZ\",\n    \"currencyCode\" : \"SZL\"\n  }, {\n    \"name\" : \"Cook Islands\",\n    \"currencySymbol\" : \"NZD\",\n    \"id\" : \"CK\",\n    \"currencyCode\" : \"NZD\"\n  }, {\n    \"name\" : \"Chile\",\n    \"currencySymbol\" : \"CLP\",\n    \"id\" : \"CL\",\n    \"currencyCode\" : \"CLP\"\n  }, {\n    \"name\" : \"Cameroon\",\n    \"currencySymbol\" : \"XAF\",\n    \"id\" : \"CM\",\n    \"currencyCode\" : \"XAF\"\n  }, {\n    \"name\" : \"China\",\n    \"currencySymbol\" : \"CNY\",\n    \"id\" : \"CN\",\n    \"currencyCode\" : \"CNY\"\n  }, {\n    \"name\" : \"Colombia\",\n    \"currencySymbol\" : \"COP\",\n    \"id\" : \"CO\",\n    \"currencyCode\" : \"COP\"\n  }, {\n    \"name\" : \"Costa Rica\",\n    \"currencySymbol\" : \"CRC\",\n    \"id\" : \"CR\",\n    \"currencyCode\" : \"CRC\"\n  }, {\n    \"name\" : \"Turks & Caicos Islands\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"TC\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Chad\",\n    \"currencySymbol\" : \"XAF\",\n    \"id\" : \"TD\",\n    \"currencyCode\" : \"XAF\"\n  }, {\n    \"name\" : \"Cuba\",\n    \"currencySymbol\" : \"CUP\",\n    \"id\" : \"CU\",\n    \"currencyCode\" : \"CUP\"\n  }, {\n    \"name\" : \"French Southern Territories\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"TF\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Cape Verde\",\n    \"currencySymbol\" : \"CVE\",\n    \"id\" : \"CV\",\n    \"currencyCode\" : \"CVE\"\n  }, {\n    \"name\" : \"Togo\",\n    \"currencySymbol\" : \"XOF\",\n    \"id\" : \"TG\",\n    \"currencyCode\" : \"XOF\"\n  }, {\n    \"name\" : \"Curaçao\",\n    \"currencySymbol\" : \"ANG\",\n    \"id\" : \"CW\",\n    \"currencyCode\" : \"ANG\"\n  }, {\n    \"name\" : \"Thailand\",\n    \"currencySymbol\" : \"THB\",\n    \"id\" : \"TH\",\n    \"currencyCode\" : \"THB\"\n  }, {\n    \"name\" : \"Christmas Island\",\n    \"currencySymbol\" : \"AUD\",\n    \"id\" : \"CX\",\n    \"currencyCode\" : \"AUD\"\n  }, {\n    \"name\" : \"Cyprus\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"CY\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Tajikistan\",\n    \"currencySymbol\" : \"TJS\",\n    \"id\" : \"TJ\",\n    \"currencyCode\" : \"TJS\"\n  }, {\n    \"name\" : \"Czechia\",\n    \"currencySymbol\" : \"CZK\",\n    \"id\" : \"CZ\",\n    \"currencyCode\" : \"CZK\"\n  }, {\n    \"name\" : \"Tokelau\",\n    \"currencySymbol\" : \"NZD\",\n    \"id\" : \"TK\",\n    \"currencyCode\" : \"NZD\"\n  }, {\n    \"name\" : \"Timor-Leste\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"TL\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Turkmenistan\",\n    \"currencySymbol\" : \"TMT\",\n    \"id\" : \"TM\",\n    \"currencyCode\" : \"TMT\"\n  }, {\n    \"name\" : \"Tunisia\",\n    \"currencySymbol\" : \"TND\",\n    \"id\" : \"TN\",\n    \"currencyCode\" : \"TND\"\n  }, {\n    \"name\" : \"Tonga\",\n    \"currencySymbol\" : \"TOP\",\n    \"id\" : \"TO\",\n    \"currencyCode\" : \"TOP\"\n  }, {\n    \"name\" : \"Turkey\",\n    \"currencySymbol\" : \"TRY\",\n    \"id\" : \"TR\",\n    \"currencyCode\" : \"TRY\"\n  }, {\n    \"name\" : \"Trinidad & Tobago\",\n    \"currencySymbol\" : \"TTD\",\n    \"id\" : \"TT\",\n    \"currencyCode\" : \"TTD\"\n  }, {\n    \"name\" : \"Germany\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"DE\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Tuvalu\",\n    \"currencySymbol\" : \"AUD\",\n    \"id\" : \"TV\",\n    \"currencyCode\" : \"AUD\"\n  }, {\n    \"name\" : \"Taiwan\",\n    \"currencySymbol\" : \"TWD\",\n    \"id\" : \"TW\",\n    \"currencyCode\" : \"TWD\"\n  }, {\n    \"name\" : \"Djibouti\",\n    \"currencySymbol\" : \"DJF\",\n    \"id\" : \"DJ\",\n    \"currencyCode\" : \"DJF\"\n  }, {\n    \"name\" : \"Tanzania\",\n    \"currencySymbol\" : \"TZS\",\n    \"id\" : \"TZ\",\n    \"currencyCode\" : \"TZS\"\n  }, {\n    \"name\" : \"Denmark\",\n    \"currencySymbol\" : \"DKK\",\n    \"id\" : \"DK\",\n    \"currencyCode\" : \"DKK\"\n  }, {\n    \"name\" : \"Dominica\",\n    \"currencySymbol\" : \"XCD\",\n    \"id\" : \"DM\",\n    \"currencyCode\" : \"XCD\"\n  }, {\n    \"name\" : \"Dominican Republic\",\n    \"currencySymbol\" : \"DOP\",\n    \"id\" : \"DO\",\n    \"currencyCode\" : \"DOP\"\n  }, {\n    \"name\" : \"Ukraine\",\n    \"currencySymbol\" : \"UAH\",\n    \"id\" : \"UA\",\n    \"currencyCode\" : \"UAH\"\n  }, {\n    \"name\" : \"Uganda\",\n    \"currencySymbol\" : \"UGX\",\n    \"id\" : \"UG\",\n    \"currencyCode\" : \"UGX\"\n  }, {\n    \"name\" : \"Algeria\",\n    \"currencySymbol\" : \"DZD\",\n    \"id\" : \"DZ\",\n    \"currencyCode\" : \"DZD\"\n  }, {\n    \"name\" : \"U.S. Outlying Islands\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"UM\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Ecuador\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"EC\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"United States\",\n    \"currencySymbol\" : \"$\",\n    \"id\" : \"US\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Estonia\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"EE\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Egypt\",\n    \"currencySymbol\" : \"EGP\",\n    \"id\" : \"EG\",\n    \"currencyCode\" : \"EGP\"\n  }, {\n    \"name\" : \"Western Sahara\",\n    \"currencySymbol\" : \"MAD\",\n    \"id\" : \"EH\",\n    \"currencyCode\" : \"MAD\"\n  }, {\n    \"name\" : \"Uruguay\",\n    \"currencySymbol\" : \"UYU\",\n    \"id\" : \"UY\",\n    \"currencyCode\" : \"UYU\"\n  }, {\n    \"name\" : \"Uzbekistan\",\n    \"currencySymbol\" : \"UZS\",\n    \"id\" : \"UZ\",\n    \"currencyCode\" : \"UZS\"\n  }, {\n    \"name\" : \"Vatican City\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"VA\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Eritrea\",\n    \"currencySymbol\" : \"ERN\",\n    \"id\" : \"ER\",\n    \"currencyCode\" : \"ERN\"\n  }, {\n    \"name\" : \"St. Vincent & Grenadines\",\n    \"currencySymbol\" : \"XCD\",\n    \"id\" : \"VC\",\n    \"currencyCode\" : \"XCD\"\n  }, {\n    \"name\" : \"Spain\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"ES\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Ethiopia\",\n    \"currencySymbol\" : \"ETB\",\n    \"id\" : \"ET\",\n    \"currencyCode\" : \"ETB\"\n  }, {\n    \"name\" : \"Venezuela\",\n    \"currencySymbol\" : \"VES\",\n    \"id\" : \"VE\",\n    \"currencyCode\" : \"VES\"\n  }, {\n    \"name\" : \"British Virgin Islands\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"VG\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"U.S. Virgin Islands\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"VI\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Vietnam\",\n    \"currencySymbol\" : \"VND\",\n    \"id\" : \"VN\",\n    \"currencyCode\" : \"VND\"\n  }, {\n    \"name\" : \"Vanuatu\",\n    \"currencySymbol\" : \"VUV\",\n    \"id\" : \"VU\",\n    \"currencyCode\" : \"VUV\"\n  }, {\n    \"name\" : \"Finland\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"FI\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Fiji\",\n    \"currencySymbol\" : \"FJD\",\n    \"id\" : \"FJ\",\n    \"currencyCode\" : \"FJD\"\n  }, {\n    \"name\" : \"Falkland Islands\",\n    \"currencySymbol\" : \"FKP\",\n    \"id\" : \"FK\",\n    \"currencyCode\" : \"FKP\"\n  }, {\n    \"name\" : \"Micronesia\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"FM\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Faroe Islands\",\n    \"currencySymbol\" : \"DKK\",\n    \"id\" : \"FO\",\n    \"currencyCode\" : \"DKK\"\n  }, {\n    \"name\" : \"France\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"FR\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Wallis & Futuna\",\n    \"currencySymbol\" : \"XPF\",\n    \"id\" : \"WF\",\n    \"currencyCode\" : \"XPF\"\n  }, {\n    \"name\" : \"Gabon\",\n    \"currencySymbol\" : \"XAF\",\n    \"id\" : \"GA\",\n    \"currencyCode\" : \"XAF\"\n  }, {\n    \"name\" : \"United Kingdom\",\n    \"currencySymbol\" : \"£\",\n    \"id\" : \"GB\",\n    \"currencyCode\" : \"GBP\"\n  }, {\n    \"name\" : \"Samoa\",\n    \"currencySymbol\" : \"WST\",\n    \"id\" : \"WS\",\n    \"currencyCode\" : \"WST\"\n  }, {\n    \"name\" : \"Grenada\",\n    \"currencySymbol\" : \"XCD\",\n    \"id\" : \"GD\",\n    \"currencyCode\" : \"XCD\"\n  }, {\n    \"name\" : \"Georgia\",\n    \"currencySymbol\" : \"GEL\",\n    \"id\" : \"GE\",\n    \"currencyCode\" : \"GEL\"\n  }, {\n    \"name\" : \"French Guiana\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"GF\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Guernsey\",\n    \"currencySymbol\" : \"GBP\",\n    \"id\" : \"GG\",\n    \"currencyCode\" : \"GBP\"\n  }, {\n    \"name\" : \"Ghana\",\n    \"currencySymbol\" : \"GHS\",\n    \"id\" : \"GH\",\n    \"currencyCode\" : \"GHS\"\n  }, {\n    \"name\" : \"Gibraltar\",\n    \"currencySymbol\" : \"GIP\",\n    \"id\" : \"GI\",\n    \"currencyCode\" : \"GIP\"\n  }, {\n    \"name\" : \"Greenland\",\n    \"currencySymbol\" : \"DKK\",\n    \"id\" : \"GL\",\n    \"currencyCode\" : \"DKK\"\n  }, {\n    \"name\" : \"Gambia\",\n    \"currencySymbol\" : \"GMD\",\n    \"id\" : \"GM\",\n    \"currencyCode\" : \"GMD\"\n  }, {\n    \"name\" : \"Guinea\",\n    \"currencySymbol\" : \"GNF\",\n    \"id\" : \"GN\",\n    \"currencyCode\" : \"GNF\"\n  }, {\n    \"name\" : \"Guadeloupe\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"GP\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Equatorial Guinea\",\n    \"currencySymbol\" : \"XAF\",\n    \"id\" : \"GQ\",\n    \"currencyCode\" : \"XAF\"\n  }, {\n    \"name\" : \"Greece\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"GR\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"South Georgia & South Sandwich Islands\",\n    \"currencySymbol\" : \"GBP\",\n    \"id\" : \"GS\",\n    \"currencyCode\" : \"GBP\"\n  }, {\n    \"name\" : \"Guatemala\",\n    \"currencySymbol\" : \"GTQ\",\n    \"id\" : \"GT\",\n    \"currencyCode\" : \"GTQ\"\n  }, {\n    \"name\" : \"Guam\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"GU\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Guinea-Bissau\",\n    \"currencySymbol\" : \"XOF\",\n    \"id\" : \"GW\",\n    \"currencyCode\" : \"XOF\"\n  }, {\n    \"name\" : \"Guyana\",\n    \"currencySymbol\" : \"GYD\",\n    \"id\" : \"GY\",\n    \"currencyCode\" : \"GYD\"\n  }, {\n    \"name\" : \"Kosovo\",\n    \"currencySymbol\" : \"XXX\",\n    \"id\" : \"XK\",\n    \"currencyCode\" : \"-\"\n  }, {\n    \"name\" : \"Hong Kong SAR China\",\n    \"currencySymbol\" : \"HKD\",\n    \"id\" : \"HK\",\n    \"currencyCode\" : \"HKD\"\n  }, {\n    \"name\" : \"Heard & McDonald Islands\",\n    \"currencySymbol\" : \"AUD\",\n    \"id\" : \"HM\",\n    \"currencyCode\" : \"AUD\"\n  }, {\n    \"name\" : \"Honduras\",\n    \"currencySymbol\" : \"HNL\",\n    \"id\" : \"HN\",\n    \"currencyCode\" : \"HNL\"\n  }, {\n    \"name\" : \"Croatia\",\n    \"currencySymbol\" : \"HRK\",\n    \"id\" : \"HR\",\n    \"currencyCode\" : \"HRK\"\n  }, {\n    \"name\" : \"Haiti\",\n    \"currencySymbol\" : \"HTG\",\n    \"id\" : \"HT\",\n    \"currencyCode\" : \"HTG\"\n  }, {\n    \"name\" : \"Yemen\",\n    \"currencySymbol\" : \"YER\",\n    \"id\" : \"YE\",\n    \"currencyCode\" : \"YER\"\n  }, {\n    \"name\" : \"Hungary\",\n    \"currencySymbol\" : \"HUF\",\n    \"id\" : \"HU\",\n    \"currencyCode\" : \"HUF\"\n  }, {\n    \"name\" : \"Indonesia\",\n    \"currencySymbol\" : \"IDR\",\n    \"id\" : \"ID\",\n    \"currencyCode\" : \"IDR\"\n  }, {\n    \"name\" : \"Mayotte\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"YT\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Ireland\",\n    \"currencySymbol\" : \"€\",\n    \"id\" : \"IE\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Israel\",\n    \"currencySymbol\" : \"ILS\",\n    \"id\" : \"IL\",\n    \"currencyCode\" : \"ILS\"\n  }, {\n    \"name\" : \"Isle of Man\",\n    \"currencySymbol\" : \"GBP\",\n    \"id\" : \"IM\",\n    \"currencyCode\" : \"GBP\"\n  }, {\n    \"name\" : \"India\",\n    \"currencySymbol\" : \"Rs.\",\n    \"id\" : \"IN\",\n    \"currencyCode\" : \"INR\"\n  }, {\n    \"name\" : \"British Indian Ocean Territory\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"IO\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"South Africa\",\n    \"currencySymbol\" : \"R\",\n    \"id\" : \"ZA\",\n    \"currencyCode\" : \"ZAR\"\n  }, {\n    \"name\" : \"Iraq\",\n    \"currencySymbol\" : \"IQD\",\n    \"id\" : \"IQ\",\n    \"currencyCode\" : \"IQD\"\n  }, {\n    \"name\" : \"Iran\",\n    \"currencySymbol\" : \"IRR\",\n    \"id\" : \"IR\",\n    \"currencyCode\" : \"IRR\"\n  }, {\n    \"name\" : \"Iceland\",\n    \"currencySymbol\" : \"ISK\",\n    \"id\" : \"IS\",\n    \"currencyCode\" : \"ISK\"\n  }, {\n    \"name\" : \"Italy\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"IT\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Zambia\",\n    \"currencySymbol\" : \"ZMW\",\n    \"id\" : \"ZM\",\n    \"currencyCode\" : \"ZMW\"\n  }, {\n    \"name\" : \"Jersey\",\n    \"currencySymbol\" : \"GBP\",\n    \"id\" : \"JE\",\n    \"currencyCode\" : \"GBP\"\n  }, {\n    \"name\" : \"Zimbabwe\",\n    \"currencySymbol\" : \"ZWL\",\n    \"id\" : \"ZW\",\n    \"currencyCode\" : \"ZWL\"\n  }, {\n    \"name\" : \"Jamaica\",\n    \"currencySymbol\" : \"JMD\",\n    \"id\" : \"JM\",\n    \"currencyCode\" : \"JMD\"\n  }, {\n    \"name\" : \"Jordan\",\n    \"currencySymbol\" : \"JOD\",\n    \"id\" : \"JO\",\n    \"currencyCode\" : \"JOD\"\n  }, {\n    \"name\" : \"Japan\",\n    \"currencySymbol\" : \"JPY\",\n    \"id\" : \"JP\",\n    \"currencyCode\" : \"JPY\"\n  }, {\n    \"name\" : \"Kenya\",\n    \"currencySymbol\" : \"KES\",\n    \"id\" : \"KE\",\n    \"currencyCode\" : \"KES\"\n  }, {\n    \"name\" : \"Kyrgyzstan\",\n    \"currencySymbol\" : \"KGS\",\n    \"id\" : \"KG\",\n    \"currencyCode\" : \"KGS\"\n  }, {\n    \"name\" : \"Cambodia\",\n    \"currencySymbol\" : \"KHR\",\n    \"id\" : \"KH\",\n    \"currencyCode\" : \"KHR\"\n  }, {\n    \"name\" : \"Kiribati\",\n    \"currencySymbol\" : \"AUD\",\n    \"id\" : \"KI\",\n    \"currencyCode\" : \"AUD\"\n  }, {\n    \"name\" : \"Comoros\",\n    \"currencySymbol\" : \"KMF\",\n    \"id\" : \"KM\",\n    \"currencyCode\" : \"KMF\"\n  }, {\n    \"name\" : \"St. Kitts & Nevis\",\n    \"currencySymbol\" : \"XCD\",\n    \"id\" : \"KN\",\n    \"currencyCode\" : \"XCD\"\n  }, {\n    \"name\" : \"North Korea\",\n    \"currencySymbol\" : \"KPW\",\n    \"id\" : \"KP\",\n    \"currencyCode\" : \"KPW\"\n  }, {\n    \"name\" : \"South Korea\",\n    \"currencySymbol\" : \"KRW\",\n    \"id\" : \"KR\",\n    \"currencyCode\" : \"KRW\"\n  }, {\n    \"name\" : \"Kuwait\",\n    \"currencySymbol\" : \"KWD\",\n    \"id\" : \"KW\",\n    \"currencyCode\" : \"KWD\"\n  }, {\n    \"name\" : \"Cayman Islands\",\n    \"currencySymbol\" : \"KYD\",\n    \"id\" : \"KY\",\n    \"currencyCode\" : \"KYD\"\n  }, {\n    \"name\" : \"Kazakhstan\",\n    \"currencySymbol\" : \"KZT\",\n    \"id\" : \"KZ\",\n    \"currencyCode\" : \"KZT\"\n  }, {\n    \"name\" : \"Laos\",\n    \"currencySymbol\" : \"LAK\",\n    \"id\" : \"LA\",\n    \"currencyCode\" : \"LAK\"\n  }, {\n    \"name\" : \"Lebanon\",\n    \"currencySymbol\" : \"LBP\",\n    \"id\" : \"LB\",\n    \"currencyCode\" : \"LBP\"\n  }, {\n    \"name\" : \"St. Lucia\",\n    \"currencySymbol\" : \"XCD\",\n    \"id\" : \"LC\",\n    \"currencyCode\" : \"XCD\"\n  }, {\n    \"name\" : \"Liechtenstein\",\n    \"currencySymbol\" : \"CHF\",\n    \"id\" : \"LI\",\n    \"currencyCode\" : \"CHF\"\n  }, {\n    \"name\" : \"Sri Lanka\",\n    \"currencySymbol\" : \"LKR\",\n    \"id\" : \"LK\",\n    \"currencyCode\" : \"LKR\"\n  }, {\n    \"name\" : \"Liberia\",\n    \"currencySymbol\" : \"LRD\",\n    \"id\" : \"LR\",\n    \"currencyCode\" : \"LRD\"\n  }, {\n    \"name\" : \"Lesotho\",\n    \"currencySymbol\" : \"LSL\",\n    \"id\" : \"LS\",\n    \"currencyCode\" : \"LSL\"\n  }, {\n    \"name\" : \"Lithuania\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"LT\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Luxembourg\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"LU\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Latvia\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"LV\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Libya\",\n    \"currencySymbol\" : \"LYD\",\n    \"id\" : \"LY\",\n    \"currencyCode\" : \"LYD\"\n  }, {\n    \"name\" : \"Morocco\",\n    \"currencySymbol\" : \"MAD\",\n    \"id\" : \"MA\",\n    \"currencyCode\" : \"MAD\"\n  }, {\n    \"name\" : \"Monaco\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"MC\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Moldova\",\n    \"currencySymbol\" : \"MDL\",\n    \"id\" : \"MD\",\n    \"currencyCode\" : \"MDL\"\n  }, {\n    \"name\" : \"Montenegro\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"ME\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"St. Martin\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"MF\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Madagascar\",\n    \"currencySymbol\" : \"MGA\",\n    \"id\" : \"MG\",\n    \"currencyCode\" : \"MGA\"\n  }, {\n    \"name\" : \"Marshall Islands\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"MH\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"North Macedonia\",\n    \"currencySymbol\" : \"MKD\",\n    \"id\" : \"MK\",\n    \"currencyCode\" : \"MKD\"\n  }, {\n    \"name\" : \"Mali\",\n    \"currencySymbol\" : \"XOF\",\n    \"id\" : \"ML\",\n    \"currencyCode\" : \"XOF\"\n  }, {\n    \"name\" : \"Myanmar (Burma)\",\n    \"currencySymbol\" : \"MMK\",\n    \"id\" : \"MM\",\n    \"currencyCode\" : \"MMK\"\n  }, {\n    \"name\" : \"Mongolia\",\n    \"currencySymbol\" : \"MNT\",\n    \"id\" : \"MN\",\n    \"currencyCode\" : \"MNT\"\n  }, {\n    \"name\" : \"Macao SAR China\",\n    \"currencySymbol\" : \"MOP\",\n    \"id\" : \"MO\",\n    \"currencyCode\" : \"MOP\"\n  }, {\n    \"name\" : \"Northern Mariana Islands\",\n    \"currencySymbol\" : \"USD\",\n    \"id\" : \"MP\",\n    \"currencyCode\" : \"USD\"\n  }, {\n    \"name\" : \"Martinique\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"MQ\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Mauritania\",\n    \"currencySymbol\" : \"MRU\",\n    \"id\" : \"MR\",\n    \"currencyCode\" : \"MRU\"\n  }, {\n    \"name\" : \"Montserrat\",\n    \"currencySymbol\" : \"XCD\",\n    \"id\" : \"MS\",\n    \"currencyCode\" : \"XCD\"\n  }, {\n    \"name\" : \"Malta\",\n    \"currencySymbol\" : \"€\",\n    \"id\" : \"MT\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Mauritius\",\n    \"currencySymbol\" : \"MUR\",\n    \"id\" : \"MU\",\n    \"currencyCode\" : \"MUR\"\n  }, {\n    \"name\" : \"Maldives\",\n    \"currencySymbol\" : \"MVR\",\n    \"id\" : \"MV\",\n    \"currencyCode\" : \"MVR\"\n  }, {\n    \"name\" : \"Malawi\",\n    \"currencySymbol\" : \"MWK\",\n    \"id\" : \"MW\",\n    \"currencyCode\" : \"MWK\"\n  }, {\n    \"name\" : \"Mexico\",\n    \"currencySymbol\" : \"MXN\",\n    \"id\" : \"MX\",\n    \"currencyCode\" : \"MXN\"\n  }, {\n    \"name\" : \"Malaysia\",\n    \"currencySymbol\" : \"MYR\",\n    \"id\" : \"MY\",\n    \"currencyCode\" : \"MYR\"\n  }, {\n    \"name\" : \"Mozambique\",\n    \"currencySymbol\" : \"MZN\",\n    \"id\" : \"MZ\",\n    \"currencyCode\" : \"MZN\"\n  }, {\n    \"name\" : \"Namibia\",\n    \"currencySymbol\" : \"NAD\",\n    \"id\" : \"NA\",\n    \"currencyCode\" : \"NAD\"\n  }, {\n    \"name\" : \"New Caledonia\",\n    \"currencySymbol\" : \"XPF\",\n    \"id\" : \"NC\",\n    \"currencyCode\" : \"XPF\"\n  }, {\n    \"name\" : \"Niger\",\n    \"currencySymbol\" : \"XOF\",\n    \"id\" : \"NE\",\n    \"currencyCode\" : \"XOF\"\n  }, {\n    \"name\" : \"Norfolk Island\",\n    \"currencySymbol\" : \"AUD\",\n    \"id\" : \"NF\",\n    \"currencyCode\" : \"AUD\"\n  }, {\n    \"name\" : \"Nigeria\",\n    \"currencySymbol\" : \"NGN\",\n    \"id\" : \"NG\",\n    \"currencyCode\" : \"NGN\"\n  }, {\n    \"name\" : \"Nicaragua\",\n    \"currencySymbol\" : \"NIO\",\n    \"id\" : \"NI\",\n    \"currencyCode\" : \"NIO\"\n  }, {\n    \"name\" : \"Netherlands\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"NL\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Norway\",\n    \"currencySymbol\" : \"NOK\",\n    \"id\" : \"NO\",\n    \"currencyCode\" : \"NOK\"\n  }, {\n    \"name\" : \"Nepal\",\n    \"currencySymbol\" : \"NPR\",\n    \"id\" : \"NP\",\n    \"currencyCode\" : \"NPR\"\n  }, {\n    \"name\" : \"Nauru\",\n    \"currencySymbol\" : \"AUD\",\n    \"id\" : \"NR\",\n    \"currencyCode\" : \"AUD\"\n  }, {\n    \"name\" : \"Niue\",\n    \"currencySymbol\" : \"NZD\",\n    \"id\" : \"NU\",\n    \"currencyCode\" : \"NZD\"\n  }, {\n    \"name\" : \"New Zealand\",\n    \"currencySymbol\" : \"$\",\n    \"id\" : \"NZ\",\n    \"currencyCode\" : \"NZD\"\n  }, {\n    \"name\" : \"Oman\",\n    \"currencySymbol\" : \"OMR\",\n    \"id\" : \"OM\",\n    \"currencyCode\" : \"OMR\"\n  }, {\n    \"name\" : \"Panama\",\n    \"currencySymbol\" : \"PAB\",\n    \"id\" : \"PA\",\n    \"currencyCode\" : \"PAB\"\n  }, {\n    \"name\" : \"Peru\",\n    \"currencySymbol\" : \"PEN\",\n    \"id\" : \"PE\",\n    \"currencyCode\" : \"PEN\"\n  }, {\n    \"name\" : \"French Polynesia\",\n    \"currencySymbol\" : \"XPF\",\n    \"id\" : \"PF\",\n    \"currencyCode\" : \"XPF\"\n  }, {\n    \"name\" : \"Papua New Guinea\",\n    \"currencySymbol\" : \"PGK\",\n    \"id\" : \"PG\",\n    \"currencyCode\" : \"PGK\"\n  }, {\n    \"name\" : \"Philippines\",\n    \"currencySymbol\" : \"Php\",\n    \"id\" : \"PH\",\n    \"currencyCode\" : \"PHP\"\n  }, {\n    \"name\" : \"Pakistan\",\n    \"currencySymbol\" : \"PKR\",\n    \"id\" : \"PK\",\n    \"currencyCode\" : \"PKR\"\n  }, {\n    \"name\" : \"Poland\",\n    \"currencySymbol\" : \"PLN\",\n    \"id\" : \"PL\",\n    \"currencyCode\" : \"PLN\"\n  }, {\n    \"name\" : \"St. Pierre & Miquelon\",\n    \"currencySymbol\" : \"EUR\",\n    \"id\" : \"PM\",\n    \"currencyCode\" : \"EUR\"\n  }, {\n    \"name\" : \"Pitcairn Islands\",\n    \"currencySymbol\" : \"NZD\",\n    \"id\" : \"PN\",\n    \"currencyCode\" : \"NZD\"\n  } ],\n  \"countries\" : {\n    \"Papua New Guinea\" : \"en_PG\",\n    \"Cambodia\" : \"km_KH\",\n    \"Kazakhstan\" : \"ru_KZ\",\n    \"Paraguay\" : \"es_PY\",\n    \"Syria\" : \"ar_SY\",\n    \"Bahamas\" : \"en_BS\",\n    \"Solomon Islands\" : \"en_SB\",\n    \"Montserrat\" : \"en_MS\",\n    \"Mali\" : \"fr_ML\",\n    \"Marshall Islands\" : \"en_MH\",\n    \"Guadeloupe\" : \"fr_GP\",\n    \"Panama\" : \"es_PA\",\n    \"Laos\" : \"lo_LA\",\n    \"Vatican\" : \"it_VA\",\n    \"Argentina\" : \"es_AR\",\n    \"Falkland Islands\" : \"en_FK\",\n    \"Virgin Islands\" : \"en_VI\",\n    \"Seychelles\" : \"en_SC\",\n    \"Belize\" : \"en_BZ\",\n    \"Zambia\" : \"en_ZM\",\n    \"Bahrain\" : \"ar_BH\",\n    \"Congo\" : \"fr_CG\",\n    \"Namibia\" : \"en_NA\",\n    \"Comoros\" : \"fr_KM\",\n    \"Faroe Islands\" : \"fo_FO\",\n    \"Finland\" : \"fi_FI\",\n    \"Netherlands Antilles\" : \"nl_AN\",\n    \"Georgia\" : \"ka_GE\",\n    \"Yemen\" : \"ar_YE\",\n    \"Eritrea\" : \"en_ER\",\n    \"Puerto Rico\" : \"es_PR\",\n    \"Aruba\" : \"nl_AW\",\n    \"Madagascar\" : \"en_MG\",\n    \"Libya\" : \"ar_LY\",\n    \"Sweden\" : \"sv_SE\",\n    \"Malawi\" : \"en_MW\",\n    \"Andorra\" : \"ca_AD\",\n    \"Liechtenstein\" : \"de_LI\",\n    \"Algerian\" : \"ar_DZ\",\n    \"Poland\" : \"pl_PL\",\n    \"Bulgaria\" : \"bg_BG\",\n    \"Jordan\" : \"ar_JO\",\n    \"Tunisia\" : \"ar_TN\",\n    \"Tuvalu\" : \"en_TV\",\n    \"United Arab Emirates\" : \"ar_AE\",\n    \"Kenya\" : \"sw_KE\",\n    \"French Polynesia\" : \"fr_PF\",\n    \"Brunei\" : \"ms_BN\",\n    \"Djibouti\" : \"ar_DJ\",\n    \"Lebanon\" : \"ar_LB\",\n    \"Azerbaijan\" : \"az_AZ\",\n    \"Cuba\" : \"es_CU\",\n    \"Czech Republic\" : \"cs_CZ\",\n    \"Mauritania\" : \"ar_MR\",\n    \"Saint Lucia\" : \"en_LC\",\n    \"Mayotte\" : \"fr_YT\",\n    \"Israel\" : \"iw_IL\",\n    \"San Marino\" : \"it_SM\",\n    \"Australia\" : \"en_AU\",\n    \"Tajikistan\" : \"fa_TJ\",\n    \"Myanmar\" : \"my_MM\",\n    \"Cameroon\" : \"fr_CM\",\n    \"Gibraltar\" : \"en_GI\",\n    \"Cyprus\" : \"el_CY\",\n    \"Northern Mariana Islands\" : \"en_MP\",\n    \"Malaysia\" : \"ms_MY\",\n    \"BelgiumFrench\" : \"fr_BE\",\n    \"dIvoire\" : \"fr_CI\",\n    \"Iceland\" : \"is_IS\",\n    \"Oman\" : \"ar_OM\",\n    \"Armenia\" : \"hy_AM\",\n    \"Gabon\" : \"fr_GA\",\n    \"CanadaFrench\" : \"fr_CA\",\n    \"Brazil\" : \"pt_BR\",\n    \"Slovenia\" : \"sl_SI\",\n    \"LuxembourgFrench\" : \"fr_LU\",\n    \"Antigua and Barbuda\" : \"en_AG\",\n    \"Colombia\" : \"es_CO\",\n    \"Ecuador\" : \"es_EC\",\n    \"Moldova\" : \"ro_MD\",\n    \"Vanuatu\" : \"bi_VU\",\n    \"United States Minor Outlying Islands\" : \"en_UM\",\n    \"Cocos Islands\" : \"en_CC\",\n    \"Honduras\" : \"es_HN\",\n    \"Italy\" : \"it_IT\",\n    \"Antarctica\" : \"en_AQ\",\n    \"Nauru\" : \"en_NR\",\n    \"SwitzerlandFrench\" : \"fr_CH\",\n    \"Haiti\" : \"fr_HT\",\n    \"Afghanistan\" : \"ps_AF\",\n    \"Burundi\" : \"fr_BI\",\n    \"CanadaEnglish\" : \"en_CA\",\n    \"Singapore\" : \"en_SG\",\n    \"French Guiana\" : \"fr_GF\",\n    \"GuineaBissau\" : \"pt_GW\",\n    \"American Samoa\" : \"en_AS\",\n    \"Christmas Island\" : \"en_CX\",\n    \"Russia\" : \"ru_RU\",\n    \"Netherlands\" : \"nl_NL\",\n    \"China\" : \"zh_CN\",\n    \"Martinique\" : \"fr_MQ\",\n    \"The Democratic Republic Of Congo\" : \"fr_CD\",\n    \"Kyrgyzstan\" : \"uz_KG\",\n    \"Wallis And Futuna\" : \"fr_WF\",\n    \"Reunion\" : \"fr_RE\",\n    \"Saint Pierre And Miquelon\" : \"fr_PM\",\n    \"Bhutan\" : \"en_BT\",\n    \"Romania\" : \"ro_RO\",\n    \"Togo\" : \"fr_TG\",\n    \"Philippines\" : \"en_PH\",\n    \"Uzbekistan\" : \"uz_UZ\",\n    \"Pitcairn\" : \"en_PN\",\n    \"British Virgin Islands\" : \"en_VG\",\n    \"Zimbabwe\" : \"en_ZW\",\n    \"British Indian Ocean Territory\" : \"en_IO\",\n    \"Dominica\" : \"en_DM\",\n    \"Indonesia\" : \"id_ID\",\n    \"Benin\" : \"fr_BJ\",\n    \"Angola\" : \"pt_AO\",\n    \"Sudan\" : \"ar_SD\",\n    \"Portugal\" : \"pt_PT\",\n    \"New Caledonia\" : \"fr_NC\",\n    \"Grenada\" : \"en_GD\",\n    \"North Korea\" : \"ko_KP\",\n    \"Cayman Islands\" : \"en_KY\",\n    \"Greece\" : \"el_GR\",\n    \"Latvia\" : \"lv_LV\",\n    \"Mongolia\" : \"mn_MN\",\n    \"Iran\" : \"fa_IR\",\n    \"Morocco\" : \"ar_MA\",\n    \"Guatemala\" : \"es_GT\",\n    \"Guyana\" : \"en_GY\",\n    \"Iraq\" : \"ar_IQ\",\n    \"Chile\" : \"es_CL\",\n    \"Nepal\" : \"ne_NP\",\n    \"SpainCatalan\" : \"ca_ES\",\n    \"Tanzania\" : \"sw_TZ\",\n    \"Ukraine\" : \"uk_UA\",\n    \"Ghana\" : \"en_GH\",\n    \"Anguilla\" : \"en_AI\",\n    \"Saint Vincent And The Grenadines\" : \"en_VC\",\n    \"SwitzerlandItalian\" : \"it_CH\",\n    \"India\" : \"en_IN\",\n    \"Maldives\" : \"dv_MV\",\n    \"Turkey\" : \"tr_TR\",\n    \"Taiwan\" : \"zh_TW\",\n    \"South Africa\" : \"en_ZA\",\n    \"Trinidad and Tobago\" : \"en_TT\",\n    \"Bermuda\" : \"en_BM\",\n    \"Central African Republic\" : \"fr_CF\",\n    \"Jamaica\" : \"en_JM\",\n    \"Peru\" : \"es_PE\",\n    \"Turkmenistan\" : \"tk_TM\",\n    \"Germany\" : \"de_DE\",\n    \"Fiji\" : \"fj_FJ\",\n    \"Tokelau\" : \"en_TK\",\n    \"Hong Kong\" : \"zh_HK\",\n    \"Guinea\" : \"fr_GN\",\n    \"United States\" : \"en_US\",\n    \"Chad\" : \"ar_TD\",\n    \"Somalia\" : \"so_SO\",\n    \"Thailand\" : \"th_TH\",\n    \"Equatorial Guinea\" : \"es_GQ\",\n    \"Kiribati\" : \"en_KI\",\n    \"Costa Rica\" : \"es_CR\",\n    \"Vietnam\" : \"vi_VN\",\n    \"Kuwait\" : \"ar_KW\",\n    \"Nigeria\" : \"en_NG\",\n    \"Croatia\" : \"hr_HR\",\n    \"Sao Tome And Principe\" : \"pt_ST\",\n    \"Cook Islands\" : \"en_CK\",\n    \"Sri Lanka\" : \"si_LK\",\n    \"Uruguay\" : \"es_UY\",\n    \"United Kingdom\" : \"en_GB\",\n    \"Samoa\" : \"en_WS\",\n    \"Palestine\" : \"ar_PS\",\n    \"Liberia\" : \"en_LR\",\n    \"Venezuela\" : \"es_VE\",\n    \"Burkina Faso\" : \"fr_BF\",\n    \"Swaziland\" : \"en_SZ\",\n    \"Palau\" : \"en_PW\",\n    \"Turks And Caicos Islands\" : \"en_TC\",\n    \"Estonia\" : \"et_EE\",\n    \"Niue\" : \"en_NU\",\n    \"Heard Island And McDonald Islands\" : \"en_HM\",\n    \"Svalbard And Jan Mayen\" : \"no_SJ\",\n    \"BelgiumDutch\" : \"nl_BE\",\n    \"SpainSpanish\" : \"es_ES\",\n    \"Austria\" : \"de_AT\",\n    \"South Korea\" : \"ko_KR\",\n    \"Mozambique\" : \"pt_MZ\",\n    \"El Salvador\" : \"es_SV\",\n    \"Monaco\" : \"fr_MC\",\n    \"Guam\" : \"en_GU\",\n    \"Lesotho\" : \"en_LS\",\n    \"Tonga\" : \"to_TO\",\n    \"Western Sahara\" : \"ar_EH\",\n    \"Hungary\" : \"hu_HU\",\n    \"land Islands\" : \"sv_AX\",\n    \"Japan\" : \"ja_JP\",\n    \"Belarus\" : \"be_BY\",\n    \"SwitzerlandGerman\" : \"de_CH\",\n    \"Mauritius\" : \"en_MU\",\n    \"Bouvet Island\" : \"no_BV\",\n    \"Norfolk Island\" : \"en_NF\",\n    \"New Zealand\" : \"en_NZ\",\n    \"Senegal\" : \"fr_SN\",\n    \"TimorLeste\" : \"pt_TL\",\n    \"Macedonia\" : \"mk_MK\",\n    \"Ethiopia\" : \"am_ET\",\n    \"Egypt\" : \"ar_EG\",\n    \"Sierra Leone\" : \"en_SL\",\n    \"Bolivia\" : \"es_BO\",\n    \"LuxembourgGerman\" : \"de_LU\",\n    \"Malta\" : \"mt_MT\",\n    \"Saudi Arabia\" : \"ar_SA\",\n    \"Cape Verde\" : \"pt_CV\",\n    \"South Georgia And The South Sandwich Islands\" : \"en_GS\",\n    \"Pakistan\" : \"en_PK\",\n    \"Kosovo\" : \"en_XK\",\n    \"Gambia\" : \"en_GM\",\n    \"Ireland\" : \"en_IE\",\n    \"Qatar\" : \"ar_QA\",\n    \"Serbia and Montenegro\" : \"sr_CS\",\n    \"Slovakia\" : \"sk_SK\",\n    \"France\" : \"fr_FR\",\n    \"Lithuania\" : \"lt_LT\",\n    \"Bosnia and Herzegovina\" : \"bs_BA\",\n    \"Albanian\" : \"sq_AL\",\n    \"Niger\" : \"fr_NE\",\n    \"Rwanda\" : \"rw_RW\",\n    \"Saint Kitts And Nevis\" : \"en_KN\",\n    \"French Southern Territories\" : \"fr_TF\",\n    \"Bangladesh\" : \"bn_BD\",\n    \"Barbados\" : \"en_BB\",\n    \"Nicaragua\" : \"es_NI\",\n    \"Norway\" : \"no_NO\",\n    \"Botswana\" : \"en_BW\",\n    \"Macao\" : \"zh_MO\",\n    \"Denmark\" : \"da_DK\",\n    \"Dominican Republic\" : \"es_DO\",\n    \"Mexico\" : \"es_MX\",\n    \"Uganda\" : \"en_UG\",\n    \"Micronesia\" : \"en_FM\",\n    \"Suriname\" : \"nl_SR\",\n    \"Greenland\" : \"kl_GL\",\n    \"Saint Helena\" : \"en_SH\"\n  }\n}"
						}
					]
				},
				{
					"name": "List all languages",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/languages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"languages"
							]
						},
						"description": "This API lists the languages that are available for listing in Zoho Desk.\n#### OAuth Scope\n- ``\n\n"
					},
					"response": [
						{
							"name": "List all languages",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/languages",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"languages"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"languages\" : {\n    \"Italian\" : \"it_IT\",\n    \"French\" : \"fr_FR\",\n    \"Russian\" : \"ru_RU\",\n    \"English (United States)\" : \"en_US\",\n    \"Chinese\" : \"zh_CN\",\n    \"Danish\" : \"da_DK\",\n    \"Spanish\" : \"es_ES\",\n    \"German\" : \"de_DE\",\n    \"Japanese\" : \"ja_JP\",\n    \"Dutch\" : \"nl_NL\",\n    \"Turkish\" : \"tr_TR\",\n    \"Portuguese (Brazil)\" : \"pt_BR\"\n  }\n}"
						}
					]
				},
				{
					"name": "List all time zones",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/timeZones",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"timeZones"
							]
						},
						"description": "This API lists the time zones that are available for listing in Zoho Desk.\n#### OAuth Scope\n- ``\n\n"
					},
					"response": [
						{
							"name": "List all time zones",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/timeZones",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"timeZones"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Africa/Abidjan )\",\n    \"id\" : \"Africa/Abidjan\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Ghana Mean Time( Africa/Accra )\",\n    \"id\" : \"Africa/Accra\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( Africa/Addis_Ababa )\",\n    \"id\" : \"Africa/Addis_Ababa\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Central European Time( Africa/Algiers )\",\n    \"id\" : \"Africa/Algiers\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( Africa/Asmara )\",\n    \"id\" : \"Africa/Asmara\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( Africa/Asmera )\",\n    \"id\" : \"Africa/Asmera\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Africa/Bamako )\",\n    \"id\" : \"Africa/Bamako\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western African Time( Africa/Bangui )\",\n    \"id\" : \"Africa/Bangui\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Africa/Banjul )\",\n    \"id\" : \"Africa/Banjul\"\n  }, {\n    \"name\" : \"( GMT -1:00 ) Greenwich Mean Time( Africa/Bissau )\",\n    \"id\" : \"Africa/Bissau\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Central African Time( Africa/Blantyre )\",\n    \"id\" : \"Africa/Blantyre\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western African Time( Africa/Brazzaville )\",\n    \"id\" : \"Africa/Brazzaville\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Central African Time( Africa/Bujumbura )\",\n    \"id\" : \"Africa/Bujumbura\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Time( Africa/Cairo )\",\n    \"id\" : \"Africa/Cairo\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Western European Summer Time( Africa/Casablanca )\",\n    \"id\" : \"Africa/Casablanca\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Central European Summer Time( Africa/Ceuta )\",\n    \"id\" : \"Africa/Ceuta\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Africa/Conakry )\",\n    \"id\" : \"Africa/Conakry\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Africa/Dakar )\",\n    \"id\" : \"Africa/Dakar\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( Africa/Dar_es_Salaam )\",\n    \"id\" : \"Africa/Dar_es_Salaam\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( Africa/Djibouti )\",\n    \"id\" : \"Africa/Djibouti\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western African Time( Africa/Douala )\",\n    \"id\" : \"Africa/Douala\"\n  }, {\n    \"name\" : \"( GMT -1:00 ) Western European Summer Time( Africa/El_Aaiun )\",\n    \"id\" : \"Africa/El_Aaiun\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Africa/Freetown )\",\n    \"id\" : \"Africa/Freetown\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Central African Time( Africa/Gaborone )\",\n    \"id\" : \"Africa/Gaborone\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Central African Time( Africa/Harare )\",\n    \"id\" : \"Africa/Harare\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) South Africa Standard Time( Africa/Johannesburg )\",\n    \"id\" : \"Africa/Johannesburg\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern African Time( Africa/Juba )\",\n    \"id\" : \"Africa/Juba\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( Africa/Kampala )\",\n    \"id\" : \"Africa/Kampala\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern African Time( Africa/Khartoum )\",\n    \"id\" : \"Africa/Khartoum\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Central African Time( Africa/Kigali )\",\n    \"id\" : \"Africa/Kigali\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western African Time( Africa/Kinshasa )\",\n    \"id\" : \"Africa/Kinshasa\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western African Time( Africa/Lagos )\",\n    \"id\" : \"Africa/Lagos\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western African Time( Africa/Libreville )\",\n    \"id\" : \"Africa/Libreville\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Africa/Lome )\",\n    \"id\" : \"Africa/Lome\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western African Time( Africa/Luanda )\",\n    \"id\" : \"Africa/Luanda\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Central African Time( Africa/Lubumbashi )\",\n    \"id\" : \"Africa/Lubumbashi\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Central African Time( Africa/Lusaka )\",\n    \"id\" : \"Africa/Lusaka\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western African Time( Africa/Malabo )\",\n    \"id\" : \"Africa/Malabo\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Central African Time( Africa/Maputo )\",\n    \"id\" : \"Africa/Maputo\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) South Africa Standard Time( Africa/Maseru )\",\n    \"id\" : \"Africa/Maseru\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) South Africa Standard Time( Africa/Mbabane )\",\n    \"id\" : \"Africa/Mbabane\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( Africa/Mogadishu )\",\n    \"id\" : \"Africa/Mogadishu\"\n  }, {\n    \"name\" : \"( GMT 0:44 ) Greenwich Mean Time( Africa/Monrovia )\",\n    \"id\" : \"Africa/Monrovia\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( Africa/Nairobi )\",\n    \"id\" : \"Africa/Nairobi\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western African Time( Africa/Ndjamena )\",\n    \"id\" : \"Africa/Ndjamena\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western African Time( Africa/Niamey )\",\n    \"id\" : \"Africa/Niamey\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Africa/Nouakchott )\",\n    \"id\" : \"Africa/Nouakchott\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Africa/Ouagadougou )\",\n    \"id\" : \"Africa/Ouagadougou\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western African Time( Africa/Porto-Novo )\",\n    \"id\" : \"Africa/Porto-Novo\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Africa/Sao_Tome )\",\n    \"id\" : \"Africa/Sao_Tome\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Africa/Timbuktu )\",\n    \"id\" : \"Africa/Timbuktu\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Time( Africa/Tripoli )\",\n    \"id\" : \"Africa/Tripoli\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Time( Africa/Tunis )\",\n    \"id\" : \"Africa/Tunis\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Western African Summer Time( Africa/Windhoek )\",\n    \"id\" : \"Africa/Windhoek\"\n  }, {\n    \"name\" : \"( GMT -11:00 ) Hawaii Daylight Time( America/Adak )\",\n    \"id\" : \"America/Adak\"\n  }, {\n    \"name\" : \"( GMT -10:00 ) Alaska Daylight Time( America/Anchorage )\",\n    \"id\" : \"America/Anchorage\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Anguilla )\",\n    \"id\" : \"America/Anguilla\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Antigua )\",\n    \"id\" : \"America/Antigua\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Brasilia Time( America/Araguaina )\",\n    \"id\" : \"America/Araguaina\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/Buenos_Aires )\",\n    \"id\" : \"America/Argentina/Buenos_Aires\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/Catamarca )\",\n    \"id\" : \"America/Argentina/Catamarca\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/ComodRivadavia )\",\n    \"id\" : \"America/Argentina/ComodRivadavia\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/Cordoba )\",\n    \"id\" : \"America/Argentina/Cordoba\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/Jujuy )\",\n    \"id\" : \"America/Argentina/Jujuy\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/La_Rioja )\",\n    \"id\" : \"America/Argentina/La_Rioja\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/Mendoza )\",\n    \"id\" : \"America/Argentina/Mendoza\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/Rio_Gallegos )\",\n    \"id\" : \"America/Argentina/Rio_Gallegos\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/Salta )\",\n    \"id\" : \"America/Argentina/Salta\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/San_Juan )\",\n    \"id\" : \"America/Argentina/San_Juan\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/San_Luis )\",\n    \"id\" : \"America/Argentina/San_Luis\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/Tucuman )\",\n    \"id\" : \"America/Argentina/Tucuman\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Argentina/Ushuaia )\",\n    \"id\" : \"America/Argentina/Ushuaia\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Aruba )\",\n    \"id\" : \"America/Aruba\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Paraguay Summer Time( America/Asuncion )\",\n    \"id\" : \"America/Asuncion\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Standard Time( America/Atikokan )\",\n    \"id\" : \"America/Atikokan\"\n  }, {\n    \"name\" : \"( GMT -11:00 ) Hawaii Daylight Time( America/Atka )\",\n    \"id\" : \"America/Atka\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Brasilia Time( America/Bahia )\",\n    \"id\" : \"America/Bahia\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Central Daylight Time( America/Bahia_Banderas )\",\n    \"id\" : \"America/Bahia_Banderas\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Barbados )\",\n    \"id\" : \"America/Barbados\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Brasilia Time( America/Belem )\",\n    \"id\" : \"America/Belem\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Standard Time( America/Belize )\",\n    \"id\" : \"America/Belize\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Blanc-Sablon )\",\n    \"id\" : \"America/Blanc-Sablon\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Amazon Time( America/Boa_Vista )\",\n    \"id\" : \"America/Boa_Vista\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Colombia Time( America/Bogota )\",\n    \"id\" : \"America/Bogota\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Daylight Time( America/Boise )\",\n    \"id\" : \"America/Boise\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Buenos_Aires )\",\n    \"id\" : \"America/Buenos_Aires\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Daylight Time( America/Cambridge_Bay )\",\n    \"id\" : \"America/Cambridge_Bay\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Amazon Summer Time( America/Campo_Grande )\",\n    \"id\" : \"America/Campo_Grande\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Eastern Standard Time( America/Cancun )\",\n    \"id\" : \"America/Cancun\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Venezuela Time( America/Caracas )\",\n    \"id\" : \"America/Caracas\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Catamarca )\",\n    \"id\" : \"America/Catamarca\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) French Guiana Time( America/Cayenne )\",\n    \"id\" : \"America/Cayenne\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Cayman )\",\n    \"id\" : \"America/Cayman\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( America/Chicago )\",\n    \"id\" : \"America/Chicago\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Mountain Daylight Time( America/Chihuahua )\",\n    \"id\" : \"America/Chihuahua\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Standard Time( America/Coral_Harbour )\",\n    \"id\" : \"America/Coral_Harbour\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Cordoba )\",\n    \"id\" : \"America/Cordoba\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Standard Time( America/Costa_Rica )\",\n    \"id\" : \"America/Costa_Rica\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Standard Time( America/Creston )\",\n    \"id\" : \"America/Creston\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Amazon Summer Time( America/Cuiaba )\",\n    \"id\" : \"America/Cuiaba\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Curacao )\",\n    \"id\" : \"America/Curacao\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Greenwich Mean Time( America/Danmarkshavn )\",\n    \"id\" : \"America/Danmarkshavn\"\n  }, {\n    \"name\" : \"( GMT -9:00 ) Pacific Daylight Time( America/Dawson )\",\n    \"id\" : \"America/Dawson\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Mountain Standard Time( America/Dawson_Creek )\",\n    \"id\" : \"America/Dawson_Creek\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Daylight Time( America/Denver )\",\n    \"id\" : \"America/Denver\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Detroit )\",\n    \"id\" : \"America/Detroit\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Dominica )\",\n    \"id\" : \"America/Dominica\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Daylight Time( America/Edmonton )\",\n    \"id\" : \"America/Edmonton\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Acre Time( America/Eirunepe )\",\n    \"id\" : \"America/Eirunepe\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Standard Time( America/El_Salvador )\",\n    \"id\" : \"America/El_Salvador\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( America/Ensenada )\",\n    \"id\" : \"America/Ensenada\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Standard Time( America/Fort_Nelson )\",\n    \"id\" : \"America/Fort_Nelson\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Fort_Wayne )\",\n    \"id\" : \"America/Fort_Wayne\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Brasilia Time( America/Fortaleza )\",\n    \"id\" : \"America/Fortaleza\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Daylight Time( America/Glace_Bay )\",\n    \"id\" : \"America/Glace_Bay\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Western Greenland Summer Time( America/Godthab )\",\n    \"id\" : \"America/Godthab\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Daylight Time( America/Goose_Bay )\",\n    \"id\" : \"America/Goose_Bay\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Atlantic Standard Time( America/Grand_Turk )\",\n    \"id\" : \"America/Grand_Turk\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Grenada )\",\n    \"id\" : \"America/Grenada\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Guadeloupe )\",\n    \"id\" : \"America/Guadeloupe\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Standard Time( America/Guatemala )\",\n    \"id\" : \"America/Guatemala\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Ecuador Time( America/Guayaquil )\",\n    \"id\" : \"America/Guayaquil\"\n  }, {\n    \"name\" : \"( GMT -3:45 ) Guyana Time( America/Guyana )\",\n    \"id\" : \"America/Guyana\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Daylight Time( America/Halifax )\",\n    \"id\" : \"America/Halifax\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Cuba Daylight Time( America/Havana )\",\n    \"id\" : \"America/Havana\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Mountain Standard Time( America/Hermosillo )\",\n    \"id\" : \"America/Hermosillo\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Indiana/Indianapolis )\",\n    \"id\" : \"America/Indiana/Indianapolis\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( America/Indiana/Knox )\",\n    \"id\" : \"America/Indiana/Knox\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Indiana/Marengo )\",\n    \"id\" : \"America/Indiana/Marengo\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Eastern Daylight Time( America/Indiana/Petersburg )\",\n    \"id\" : \"America/Indiana/Petersburg\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Central Daylight Time( America/Indiana/Tell_City )\",\n    \"id\" : \"America/Indiana/Tell_City\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Indiana/Vevay )\",\n    \"id\" : \"America/Indiana/Vevay\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Indiana/Vincennes )\",\n    \"id\" : \"America/Indiana/Vincennes\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Indiana/Winamac )\",\n    \"id\" : \"America/Indiana/Winamac\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Indianapolis )\",\n    \"id\" : \"America/Indianapolis\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Mountain Daylight Time( America/Inuvik )\",\n    \"id\" : \"America/Inuvik\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Iqaluit )\",\n    \"id\" : \"America/Iqaluit\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Standard Time( America/Jamaica )\",\n    \"id\" : \"America/Jamaica\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Jujuy )\",\n    \"id\" : \"America/Jujuy\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Alaska Daylight Time( America/Juneau )\",\n    \"id\" : \"America/Juneau\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Kentucky/Louisville )\",\n    \"id\" : \"America/Kentucky/Louisville\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Eastern Daylight Time( America/Kentucky/Monticello )\",\n    \"id\" : \"America/Kentucky/Monticello\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( America/Knox_IN )\",\n    \"id\" : \"America/Knox_IN\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Kralendijk )\",\n    \"id\" : \"America/Kralendijk\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Bolivia Time( America/La_Paz )\",\n    \"id\" : \"America/La_Paz\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Peru Time( America/Lima )\",\n    \"id\" : \"America/Lima\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( America/Los_Angeles )\",\n    \"id\" : \"America/Los_Angeles\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Louisville )\",\n    \"id\" : \"America/Louisville\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Lower_Princes )\",\n    \"id\" : \"America/Lower_Princes\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Brasilia Time( America/Maceio )\",\n    \"id\" : \"America/Maceio\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Standard Time( America/Managua )\",\n    \"id\" : \"America/Managua\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Amazon Time( America/Manaus )\",\n    \"id\" : \"America/Manaus\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Marigot )\",\n    \"id\" : \"America/Marigot\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Martinique )\",\n    \"id\" : \"America/Martinique\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( America/Matamoros )\",\n    \"id\" : \"America/Matamoros\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Mountain Daylight Time( America/Mazatlan )\",\n    \"id\" : \"America/Mazatlan\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Mendoza )\",\n    \"id\" : \"America/Mendoza\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Central Daylight Time( America/Menominee )\",\n    \"id\" : \"America/Menominee\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( America/Merida )\",\n    \"id\" : \"America/Merida\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Standard Time( America/Metlakatla )\",\n    \"id\" : \"America/Metlakatla\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( America/Mexico_City )\",\n    \"id\" : \"America/Mexico_City\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Pierre & Miquelon Daylight Time( America/Miquelon )\",\n    \"id\" : \"America/Miquelon\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Daylight Time( America/Moncton )\",\n    \"id\" : \"America/Moncton\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( America/Monterrey )\",\n    \"id\" : \"America/Monterrey\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Uruguay Time( America/Montevideo )\",\n    \"id\" : \"America/Montevideo\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Montreal )\",\n    \"id\" : \"America/Montreal\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Montserrat )\",\n    \"id\" : \"America/Montserrat\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Nassau )\",\n    \"id\" : \"America/Nassau\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/New_York )\",\n    \"id\" : \"America/New_York\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Nipigon )\",\n    \"id\" : \"America/Nipigon\"\n  }, {\n    \"name\" : \"( GMT -11:00 ) Alaska Daylight Time( America/Nome )\",\n    \"id\" : \"America/Nome\"\n  }, {\n    \"name\" : \"( GMT -2:00 ) Fernando de Noronha Time( America/Noronha )\",\n    \"id\" : \"America/Noronha\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Central Daylight Time( America/North_Dakota/Beulah )\",\n    \"id\" : \"America/North_Dakota/Beulah\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Central Daylight Time( America/North_Dakota/Center )\",\n    \"id\" : \"America/North_Dakota/Center\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Central Daylight Time( America/North_Dakota/New_Salem )\",\n    \"id\" : \"America/North_Dakota/New_Salem\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Mountain Daylight Time( America/Ojinaga )\",\n    \"id\" : \"America/Ojinaga\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Standard Time( America/Panama )\",\n    \"id\" : \"America/Panama\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Eastern Daylight Time( America/Pangnirtung )\",\n    \"id\" : \"America/Pangnirtung\"\n  }, {\n    \"name\" : \"( GMT -3:30 ) Suriname Time( America/Paramaribo )\",\n    \"id\" : \"America/Paramaribo\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Standard Time( America/Phoenix )\",\n    \"id\" : \"America/Phoenix\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Port-au-Prince )\",\n    \"id\" : \"America/Port-au-Prince\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Port_of_Spain )\",\n    \"id\" : \"America/Port_of_Spain\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Acre Time( America/Porto_Acre )\",\n    \"id\" : \"America/Porto_Acre\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Amazon Time( America/Porto_Velho )\",\n    \"id\" : \"America/Porto_Velho\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Puerto_Rico )\",\n    \"id\" : \"America/Puerto_Rico\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( America/Rainy_River )\",\n    \"id\" : \"America/Rainy_River\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( America/Rankin_Inlet )\",\n    \"id\" : \"America/Rankin_Inlet\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Brasilia Time( America/Recife )\",\n    \"id\" : \"America/Recife\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Standard Time( America/Regina )\",\n    \"id\" : \"America/Regina\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( America/Resolute )\",\n    \"id\" : \"America/Resolute\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Acre Time( America/Rio_Branco )\",\n    \"id\" : \"America/Rio_Branco\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( America/Rosario )\",\n    \"id\" : \"America/Rosario\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( America/Santa_Isabel )\",\n    \"id\" : \"America/Santa_Isabel\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Brasilia Time( America/Santarem )\",\n    \"id\" : \"America/Santarem\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Chile Time( America/Santiago )\",\n    \"id\" : \"America/Santiago\"\n  }, {\n    \"name\" : \"( GMT -4:30 ) Atlantic Standard Time( America/Santo_Domingo )\",\n    \"id\" : \"America/Santo_Domingo\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Brasilia Summer Time( America/Sao_Paulo )\",\n    \"id\" : \"America/Sao_Paulo\"\n  }, {\n    \"name\" : \"( GMT -2:00 ) Eastern Greenland Summer Time( America/Scoresbysund )\",\n    \"id\" : \"America/Scoresbysund\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Daylight Time( America/Shiprock )\",\n    \"id\" : \"America/Shiprock\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Alaska Daylight Time( America/Sitka )\",\n    \"id\" : \"America/Sitka\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/St_Barthelemy )\",\n    \"id\" : \"America/St_Barthelemy\"\n  }, {\n    \"name\" : \"( GMT -3:30 ) Newfoundland Daylight Time( America/St_Johns )\",\n    \"id\" : \"America/St_Johns\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/St_Kitts )\",\n    \"id\" : \"America/St_Kitts\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/St_Lucia )\",\n    \"id\" : \"America/St_Lucia\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/St_Thomas )\",\n    \"id\" : \"America/St_Thomas\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/St_Vincent )\",\n    \"id\" : \"America/St_Vincent\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Central Standard Time( America/Swift_Current )\",\n    \"id\" : \"America/Swift_Current\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Standard Time( America/Tegucigalpa )\",\n    \"id\" : \"America/Tegucigalpa\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Daylight Time( America/Thule )\",\n    \"id\" : \"America/Thule\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Thunder_Bay )\",\n    \"id\" : \"America/Thunder_Bay\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( America/Tijuana )\",\n    \"id\" : \"America/Tijuana\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( America/Toronto )\",\n    \"id\" : \"America/Toronto\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Tortola )\",\n    \"id\" : \"America/Tortola\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( America/Vancouver )\",\n    \"id\" : \"America/Vancouver\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( America/Virgin )\",\n    \"id\" : \"America/Virgin\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( America/Whitehorse )\",\n    \"id\" : \"America/Whitehorse\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( America/Winnipeg )\",\n    \"id\" : \"America/Winnipeg\"\n  }, {\n    \"name\" : \"( GMT -9:00 ) Alaska Daylight Time( America/Yakutat )\",\n    \"id\" : \"America/Yakutat\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Daylight Time( America/Yellowknife )\",\n    \"id\" : \"America/Yellowknife\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Australian Western Standard Time( Antarctica/Casey )\",\n    \"id\" : \"Antarctica/Casey\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Davis Time( Antarctica/Davis )\",\n    \"id\" : \"Antarctica/Davis\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Dumont-d'Urville Time( Antarctica/DumontDUrville )\",\n    \"id\" : \"Antarctica/DumontDUrville\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Macquarie Island Standard Time( Antarctica/Macquarie )\",\n    \"id\" : \"Antarctica/Macquarie\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Mawson Time( Antarctica/Mawson )\",\n    \"id\" : \"Antarctica/Mawson\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) New Zealand Daylight Time( Antarctica/McMurdo )\",\n    \"id\" : \"Antarctica/McMurdo\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Chile Time( Antarctica/Palmer )\",\n    \"id\" : \"Antarctica/Palmer\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Rothera Time( Antarctica/Rothera )\",\n    \"id\" : \"Antarctica/Rothera\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) New Zealand Daylight Time( Antarctica/South_Pole )\",\n    \"id\" : \"Antarctica/South_Pole\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Syowa Time( Antarctica/Syowa )\",\n    \"id\" : \"Antarctica/Syowa\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Central European Summer Time( Antarctica/Troll )\",\n    \"id\" : \"Antarctica/Troll\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Vostok Time( Antarctica/Vostok )\",\n    \"id\" : \"Antarctica/Vostok\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Arctic/Longyearbyen )\",\n    \"id\" : \"Arctic/Longyearbyen\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Arabia Standard Time( Asia/Aden )\",\n    \"id\" : \"Asia/Aden\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Alma-Ata Time( Asia/Almaty )\",\n    \"id\" : \"Asia/Almaty\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Asia/Amman )\",\n    \"id\" : \"Asia/Amman\"\n  }, {\n    \"name\" : \"( GMT 13:00 ) Anadyr Time( Asia/Anadyr )\",\n    \"id\" : \"Asia/Anadyr\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Aqtau Time( Asia/Aqtau )\",\n    \"id\" : \"Asia/Aqtau\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Aqtobe Time( Asia/Aqtobe )\",\n    \"id\" : \"Asia/Aqtobe\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Turkmenistan Time( Asia/Ashgabat )\",\n    \"id\" : \"Asia/Ashgabat\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Turkmenistan Time( Asia/Ashkhabad )\",\n    \"id\" : \"Asia/Ashkhabad\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Arabia Standard Time( Asia/Baghdad )\",\n    \"id\" : \"Asia/Baghdad\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Arabia Standard Time( Asia/Bahrain )\",\n    \"id\" : \"Asia/Bahrain\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Azerbaijan Summer Time( Asia/Baku )\",\n    \"id\" : \"Asia/Baku\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Indochina Time( Asia/Bangkok )\",\n    \"id\" : \"Asia/Bangkok\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Asia/Beirut )\",\n    \"id\" : \"Asia/Beirut\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Kirgizstan Time( Asia/Bishkek )\",\n    \"id\" : \"Asia/Bishkek\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Brunei Time( Asia/Brunei )\",\n    \"id\" : \"Asia/Brunei\"\n  }, {\n    \"name\" : \"( GMT 5:30 ) India Standard Time( Asia/Calcutta )\",\n    \"id\" : \"Asia/Calcutta\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Irkutsk Time( Asia/Chita )\",\n    \"id\" : \"Asia/Chita\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Choibalsan Summer Time( Asia/Choibalsan )\",\n    \"id\" : \"Asia/Choibalsan\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) China Standard Time( Asia/Chongqing )\",\n    \"id\" : \"Asia/Chongqing\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) China Standard Time( Asia/Chungking )\",\n    \"id\" : \"Asia/Chungking\"\n  }, {\n    \"name\" : \"( GMT 5:30 ) India Standard Time( Asia/Colombo )\",\n    \"id\" : \"Asia/Colombo\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Bangladesh Time( Asia/Dacca )\",\n    \"id\" : \"Asia/Dacca\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Asia/Damascus )\",\n    \"id\" : \"Asia/Damascus\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Bangladesh Time( Asia/Dhaka )\",\n    \"id\" : \"Asia/Dhaka\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) Timor-Leste Time( Asia/Dili )\",\n    \"id\" : \"Asia/Dili\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Gulf Standard Time( Asia/Dubai )\",\n    \"id\" : \"Asia/Dubai\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Tajikistan Time( Asia/Dushanbe )\",\n    \"id\" : \"Asia/Dushanbe\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Asia/Gaza )\",\n    \"id\" : \"Asia/Gaza\"\n  }, {\n    \"name\" : \"( GMT 8:30 ) China Standard Time( Asia/Harbin )\",\n    \"id\" : \"Asia/Harbin\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Asia/Hebron )\",\n    \"id\" : \"Asia/Hebron\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Indochina Time( Asia/Ho_Chi_Minh )\",\n    \"id\" : \"Asia/Ho_Chi_Minh\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Hong Kong Time( Asia/Hong_Kong )\",\n    \"id\" : \"Asia/Hong_Kong\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Hovd Summer Time( Asia/Hovd )\",\n    \"id\" : \"Asia/Hovd\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Irkutsk Time( Asia/Irkutsk )\",\n    \"id\" : \"Asia/Irkutsk\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Asia/Istanbul )\",\n    \"id\" : \"Asia/Istanbul\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) West Indonesia Time( Asia/Jakarta )\",\n    \"id\" : \"Asia/Jakarta\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) East Indonesia Time( Asia/Jayapura )\",\n    \"id\" : \"Asia/Jayapura\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Israel Daylight Time( Asia/Jerusalem )\",\n    \"id\" : \"Asia/Jerusalem\"\n  }, {\n    \"name\" : \"( GMT 4:30 ) Afghanistan Time( Asia/Kabul )\",\n    \"id\" : \"Asia/Kabul\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) Petropavlovsk-Kamchatski Time( Asia/Kamchatka )\",\n    \"id\" : \"Asia/Kamchatka\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Pakistan Time( Asia/Karachi )\",\n    \"id\" : \"Asia/Karachi\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Xinjiang Standard Time( Asia/Kashgar )\",\n    \"id\" : \"Asia/Kashgar\"\n  }, {\n    \"name\" : \"( GMT 5:30 ) Nepal Time( Asia/Kathmandu )\",\n    \"id\" : \"Asia/Kathmandu\"\n  }, {\n    \"name\" : \"( GMT 5:30 ) Nepal Time( Asia/Katmandu )\",\n    \"id\" : \"Asia/Katmandu\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) Khandyga Time( Asia/Khandyga )\",\n    \"id\" : \"Asia/Khandyga\"\n  }, {\n    \"name\" : \"( GMT 5:30 ) India Standard Time( Asia/Kolkata )\",\n    \"id\" : \"Asia/Kolkata\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Krasnoyarsk Time( Asia/Krasnoyarsk )\",\n    \"id\" : \"Asia/Krasnoyarsk\"\n  }, {\n    \"name\" : \"( GMT 7:30 ) Malaysia Time( Asia/Kuala_Lumpur )\",\n    \"id\" : \"Asia/Kuala_Lumpur\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Malaysia Time( Asia/Kuching )\",\n    \"id\" : \"Asia/Kuching\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Arabia Standard Time( Asia/Kuwait )\",\n    \"id\" : \"Asia/Kuwait\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) China Standard Time( Asia/Macao )\",\n    \"id\" : \"Asia/Macao\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) China Standard Time( Asia/Macau )\",\n    \"id\" : \"Asia/Macau\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Magadan Time( Asia/Magadan )\",\n    \"id\" : \"Asia/Magadan\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Central Indonesia Time( Asia/Makassar )\",\n    \"id\" : \"Asia/Makassar\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Philippines Time( Asia/Manila )\",\n    \"id\" : \"Asia/Manila\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Gulf Standard Time( Asia/Muscat )\",\n    \"id\" : \"Asia/Muscat\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Asia/Nicosia )\",\n    \"id\" : \"Asia/Nicosia\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Krasnoyarsk Time( Asia/Novokuznetsk )\",\n    \"id\" : \"Asia/Novokuznetsk\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Novosibirsk Time( Asia/Novosibirsk )\",\n    \"id\" : \"Asia/Novosibirsk\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Omsk Time( Asia/Omsk )\",\n    \"id\" : \"Asia/Omsk\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Oral Time( Asia/Oral )\",\n    \"id\" : \"Asia/Oral\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Indochina Time( Asia/Phnom_Penh )\",\n    \"id\" : \"Asia/Phnom_Penh\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) West Indonesia Time( Asia/Pontianak )\",\n    \"id\" : \"Asia/Pontianak\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) Korea Standard Time( Asia/Pyongyang )\",\n    \"id\" : \"Asia/Pyongyang\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Arabia Standard Time( Asia/Qatar )\",\n    \"id\" : \"Asia/Qatar\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Qyzylorda Time( Asia/Qyzylorda )\",\n    \"id\" : \"Asia/Qyzylorda\"\n  }, {\n    \"name\" : \"( GMT 6:30 ) Myanmar Time( Asia/Rangoon )\",\n    \"id\" : \"Asia/Rangoon\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Arabia Standard Time( Asia/Riyadh )\",\n    \"id\" : \"Asia/Riyadh\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Indochina Time( Asia/Saigon )\",\n    \"id\" : \"Asia/Saigon\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Sakhalin Time( Asia/Sakhalin )\",\n    \"id\" : \"Asia/Sakhalin\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Uzbekistan Time( Asia/Samarkand )\",\n    \"id\" : \"Asia/Samarkand\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) Korea Standard Time( Asia/Seoul )\",\n    \"id\" : \"Asia/Seoul\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) China Standard Time( Asia/Shanghai )\",\n    \"id\" : \"Asia/Shanghai\"\n  }, {\n    \"name\" : \"( GMT 7:30 ) Singapore Time( Asia/Singapore )\",\n    \"id\" : \"Asia/Singapore\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Srednekolymsk Time( Asia/Srednekolymsk )\",\n    \"id\" : \"Asia/Srednekolymsk\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) China Standard Time( Asia/Taipei )\",\n    \"id\" : \"Asia/Taipei\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Uzbekistan Time( Asia/Tashkent )\",\n    \"id\" : \"Asia/Tashkent\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Georgia Time( Asia/Tbilisi )\",\n    \"id\" : \"Asia/Tbilisi\"\n  }, {\n    \"name\" : \"( GMT 3:30 ) Iran Daylight Time( Asia/Tehran )\",\n    \"id\" : \"Asia/Tehran\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Israel Daylight Time( Asia/Tel_Aviv )\",\n    \"id\" : \"Asia/Tel_Aviv\"\n  }, {\n    \"name\" : \"( GMT 5:30 ) Bhutan Time( Asia/Thimbu )\",\n    \"id\" : \"Asia/Thimbu\"\n  }, {\n    \"name\" : \"( GMT 5:30 ) Bhutan Time( Asia/Thimphu )\",\n    \"id\" : \"Asia/Thimphu\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) Japan Standard Time( Asia/Tokyo )\",\n    \"id\" : \"Asia/Tokyo\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Central Indonesia Time( Asia/Ujung_Pandang )\",\n    \"id\" : \"Asia/Ujung_Pandang\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Ulaanbaatar Summer Time( Asia/Ulaanbaatar )\",\n    \"id\" : \"Asia/Ulaanbaatar\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Ulaanbaatar Summer Time( Asia/Ulan_Bator )\",\n    \"id\" : \"Asia/Ulan_Bator\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Xinjiang Standard Time( Asia/Urumqi )\",\n    \"id\" : \"Asia/Urumqi\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Ust-Nera Time( Asia/Ust-Nera )\",\n    \"id\" : \"Asia/Ust-Nera\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Indochina Time( Asia/Vientiane )\",\n    \"id\" : \"Asia/Vientiane\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Vladivostok Time( Asia/Vladivostok )\",\n    \"id\" : \"Asia/Vladivostok\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) Yakutsk Time( Asia/Yakutsk )\",\n    \"id\" : \"Asia/Yakutsk\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Yekaterinburg Time( Asia/Yekaterinburg )\",\n    \"id\" : \"Asia/Yekaterinburg\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Armenia Time( Asia/Yerevan )\",\n    \"id\" : \"Asia/Yerevan\"\n  }, {\n    \"name\" : \"( GMT -1:00 ) Azores Summer Time( Atlantic/Azores )\",\n    \"id\" : \"Atlantic/Azores\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Daylight Time( Atlantic/Bermuda )\",\n    \"id\" : \"Atlantic/Bermuda\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Western European Summer Time( Atlantic/Canary )\",\n    \"id\" : \"Atlantic/Canary\"\n  }, {\n    \"name\" : \"( GMT -2:00 ) Cape Verde Time( Atlantic/Cape_Verde )\",\n    \"id\" : \"Atlantic/Cape_Verde\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Western European Summer Time( Atlantic/Faeroe )\",\n    \"id\" : \"Atlantic/Faeroe\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Western European Summer Time( Atlantic/Faroe )\",\n    \"id\" : \"Atlantic/Faroe\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Atlantic/Jan_Mayen )\",\n    \"id\" : \"Atlantic/Jan_Mayen\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Western European Summer Time( Atlantic/Madeira )\",\n    \"id\" : \"Atlantic/Madeira\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Atlantic/Reykjavik )\",\n    \"id\" : \"Atlantic/Reykjavik\"\n  }, {\n    \"name\" : \"( GMT -2:00 ) South Georgia Standard Time( Atlantic/South_Georgia )\",\n    \"id\" : \"Atlantic/South_Georgia\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Atlantic/St_Helena )\",\n    \"id\" : \"Atlantic/St_Helena\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Falkland Is. Time( Atlantic/Stanley )\",\n    \"id\" : \"Atlantic/Stanley\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Australian Eastern Daylight Time (New South Wales)( Australia/ACT )\",\n    \"id\" : \"Australia/ACT\"\n  }, {\n    \"name\" : \"( GMT 9:30 ) Australian Central Daylight Time (South Australia)( Australia/Adelaide )\",\n    \"id\" : \"Australia/Adelaide\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Australian Eastern Standard Time (Queensland)( Australia/Brisbane )\",\n    \"id\" : \"Australia/Brisbane\"\n  }, {\n    \"name\" : \"( GMT 9:30 ) Australian Central Daylight Time (South Australia/New South Wales)( Australia/Broken_Hill )\",\n    \"id\" : \"Australia/Broken_Hill\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Australian Eastern Daylight Time (New South Wales)( Australia/Canberra )\",\n    \"id\" : \"Australia/Canberra\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Australian Eastern Daylight Time (New South Wales)( Australia/Currie )\",\n    \"id\" : \"Australia/Currie\"\n  }, {\n    \"name\" : \"( GMT 9:30 ) Australian Central Standard Time (Northern Territory)( Australia/Darwin )\",\n    \"id\" : \"Australia/Darwin\"\n  }, {\n    \"name\" : \"( GMT 8:45 ) Australian Central Western Standard Time( Australia/Eucla )\",\n    \"id\" : \"Australia/Eucla\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Australian Eastern Daylight Time (Tasmania)( Australia/Hobart )\",\n    \"id\" : \"Australia/Hobart\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Lord Howe Daylight Time( Australia/LHI )\",\n    \"id\" : \"Australia/LHI\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Australian Eastern Standard Time (Queensland)( Australia/Lindeman )\",\n    \"id\" : \"Australia/Lindeman\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Lord Howe Daylight Time( Australia/Lord_Howe )\",\n    \"id\" : \"Australia/Lord_Howe\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Australian Eastern Daylight Time (Victoria)( Australia/Melbourne )\",\n    \"id\" : \"Australia/Melbourne\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Australian Eastern Daylight Time (New South Wales)( Australia/NSW )\",\n    \"id\" : \"Australia/NSW\"\n  }, {\n    \"name\" : \"( GMT 9:30 ) Australian Central Standard Time (Northern Territory)( Australia/North )\",\n    \"id\" : \"Australia/North\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Australian Western Standard Time( Australia/Perth )\",\n    \"id\" : \"Australia/Perth\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Australian Eastern Standard Time (Queensland)( Australia/Queensland )\",\n    \"id\" : \"Australia/Queensland\"\n  }, {\n    \"name\" : \"( GMT 9:30 ) Australian Central Daylight Time (South Australia)( Australia/South )\",\n    \"id\" : \"Australia/South\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Australian Eastern Daylight Time (New South Wales)( Australia/Sydney )\",\n    \"id\" : \"Australia/Sydney\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Australian Eastern Daylight Time (Tasmania)( Australia/Tasmania )\",\n    \"id\" : \"Australia/Tasmania\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Australian Eastern Daylight Time (Victoria)( Australia/Victoria )\",\n    \"id\" : \"Australia/Victoria\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Australian Western Standard Time( Australia/West )\",\n    \"id\" : \"Australia/West\"\n  }, {\n    \"name\" : \"( GMT 9:30 ) Australian Central Daylight Time (South Australia/New South Wales)( Australia/Yancowinna )\",\n    \"id\" : \"Australia/Yancowinna\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Acre Time( Brazil/Acre )\",\n    \"id\" : \"Brazil/Acre\"\n  }, {\n    \"name\" : \"( GMT -2:00 ) Fernando de Noronha Time( Brazil/DeNoronha )\",\n    \"id\" : \"Brazil/DeNoronha\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Brasilia Summer Time( Brazil/East )\",\n    \"id\" : \"Brazil/East\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Amazon Time( Brazil/West )\",\n    \"id\" : \"Brazil/West\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( CET )\",\n    \"id\" : \"CET\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( CST6CDT )\",\n    \"id\" : \"CST6CDT\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Daylight Time( Canada/Atlantic )\",\n    \"id\" : \"Canada/Atlantic\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( Canada/Central )\",\n    \"id\" : \"Canada/Central\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Standard Time( Canada/East-Saskatchewan )\",\n    \"id\" : \"Canada/East-Saskatchewan\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( Canada/Eastern )\",\n    \"id\" : \"Canada/Eastern\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Daylight Time( Canada/Mountain )\",\n    \"id\" : \"Canada/Mountain\"\n  }, {\n    \"name\" : \"( GMT -3:30 ) Newfoundland Daylight Time( Canada/Newfoundland )\",\n    \"id\" : \"Canada/Newfoundland\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( Canada/Pacific )\",\n    \"id\" : \"Canada/Pacific\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Standard Time( Canada/Saskatchewan )\",\n    \"id\" : \"Canada/Saskatchewan\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( Canada/Yukon )\",\n    \"id\" : \"Canada/Yukon\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Chile Time( Chile/Continental )\",\n    \"id\" : \"Chile/Continental\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Easter Is. Time( Chile/EasterIsland )\",\n    \"id\" : \"Chile/EasterIsland\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Cuba Daylight Time( Cuba )\",\n    \"id\" : \"Cuba\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( EET )\",\n    \"id\" : \"EET\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( EST5EDT )\",\n    \"id\" : \"EST5EDT\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Time( Egypt )\",\n    \"id\" : \"Egypt\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Irish Summer Time( Eire )\",\n    \"id\" : \"Eire\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Etc/GMT )\",\n    \"id\" : \"Etc/GMT\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Etc/GMT+0 )\",\n    \"id\" : \"Etc/GMT+0\"\n  }, {\n    \"name\" : \"( GMT -1:00 ) GMT-01:00( Etc/GMT+1 )\",\n    \"id\" : \"Etc/GMT+1\"\n  }, {\n    \"name\" : \"( GMT -10:00 ) GMT-10:00( Etc/GMT+10 )\",\n    \"id\" : \"Etc/GMT+10\"\n  }, {\n    \"name\" : \"( GMT -11:00 ) GMT-11:00( Etc/GMT+11 )\",\n    \"id\" : \"Etc/GMT+11\"\n  }, {\n    \"name\" : \"( GMT -12:00 ) GMT-12:00( Etc/GMT+12 )\",\n    \"id\" : \"Etc/GMT+12\"\n  }, {\n    \"name\" : \"( GMT -2:00 ) GMT-02:00( Etc/GMT+2 )\",\n    \"id\" : \"Etc/GMT+2\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) GMT-03:00( Etc/GMT+3 )\",\n    \"id\" : \"Etc/GMT+3\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) GMT-04:00( Etc/GMT+4 )\",\n    \"id\" : \"Etc/GMT+4\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) GMT-05:00( Etc/GMT+5 )\",\n    \"id\" : \"Etc/GMT+5\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) GMT-06:00( Etc/GMT+6 )\",\n    \"id\" : \"Etc/GMT+6\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) GMT-07:00( Etc/GMT+7 )\",\n    \"id\" : \"Etc/GMT+7\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) GMT-08:00( Etc/GMT+8 )\",\n    \"id\" : \"Etc/GMT+8\"\n  }, {\n    \"name\" : \"( GMT -9:00 ) GMT-09:00( Etc/GMT+9 )\",\n    \"id\" : \"Etc/GMT+9\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Etc/GMT-0 )\",\n    \"id\" : \"Etc/GMT-0\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) GMT+01:00( Etc/GMT-1 )\",\n    \"id\" : \"Etc/GMT-1\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) GMT+10:00( Etc/GMT-10 )\",\n    \"id\" : \"Etc/GMT-10\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) GMT+11:00( Etc/GMT-11 )\",\n    \"id\" : \"Etc/GMT-11\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) GMT+12:00( Etc/GMT-12 )\",\n    \"id\" : \"Etc/GMT-12\"\n  }, {\n    \"name\" : \"( GMT 13:00 ) GMT+13:00( Etc/GMT-13 )\",\n    \"id\" : \"Etc/GMT-13\"\n  }, {\n    \"name\" : \"( GMT 14:00 ) GMT+14:00( Etc/GMT-14 )\",\n    \"id\" : \"Etc/GMT-14\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) GMT+02:00( Etc/GMT-2 )\",\n    \"id\" : \"Etc/GMT-2\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) GMT+03:00( Etc/GMT-3 )\",\n    \"id\" : \"Etc/GMT-3\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) GMT+04:00( Etc/GMT-4 )\",\n    \"id\" : \"Etc/GMT-4\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) GMT+05:00( Etc/GMT-5 )\",\n    \"id\" : \"Etc/GMT-5\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) GMT+06:00( Etc/GMT-6 )\",\n    \"id\" : \"Etc/GMT-6\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) GMT+07:00( Etc/GMT-7 )\",\n    \"id\" : \"Etc/GMT-7\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) GMT+08:00( Etc/GMT-8 )\",\n    \"id\" : \"Etc/GMT-8\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) GMT+09:00( Etc/GMT-9 )\",\n    \"id\" : \"Etc/GMT-9\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Etc/GMT0 )\",\n    \"id\" : \"Etc/GMT0\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Etc/Greenwich )\",\n    \"id\" : \"Etc/Greenwich\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Coordinated Universal Time( Etc/UCT )\",\n    \"id\" : \"Etc/UCT\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Coordinated Universal Time( Etc/UTC )\",\n    \"id\" : \"Etc/UTC\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Coordinated Universal Time( Etc/Universal )\",\n    \"id\" : \"Etc/Universal\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Coordinated Universal Time( Etc/Zulu )\",\n    \"id\" : \"Etc/Zulu\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Amsterdam )\",\n    \"id\" : \"Europe/Amsterdam\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Andorra )\",\n    \"id\" : \"Europe/Andorra\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Europe/Athens )\",\n    \"id\" : \"Europe/Athens\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) British Summer Time( Europe/Belfast )\",\n    \"id\" : \"Europe/Belfast\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Belgrade )\",\n    \"id\" : \"Europe/Belgrade\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Berlin )\",\n    \"id\" : \"Europe/Berlin\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Bratislava )\",\n    \"id\" : \"Europe/Bratislava\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Brussels )\",\n    \"id\" : \"Europe/Brussels\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Europe/Bucharest )\",\n    \"id\" : \"Europe/Bucharest\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Budapest )\",\n    \"id\" : \"Europe/Budapest\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Busingen )\",\n    \"id\" : \"Europe/Busingen\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern European Summer Time( Europe/Chisinau )\",\n    \"id\" : \"Europe/Chisinau\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Copenhagen )\",\n    \"id\" : \"Europe/Copenhagen\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Irish Summer Time( Europe/Dublin )\",\n    \"id\" : \"Europe/Dublin\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Gibraltar )\",\n    \"id\" : \"Europe/Gibraltar\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) British Summer Time( Europe/Guernsey )\",\n    \"id\" : \"Europe/Guernsey\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Europe/Helsinki )\",\n    \"id\" : \"Europe/Helsinki\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) British Summer Time( Europe/Isle_of_Man )\",\n    \"id\" : \"Europe/Isle_of_Man\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Europe/Istanbul )\",\n    \"id\" : \"Europe/Istanbul\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) British Summer Time( Europe/Jersey )\",\n    \"id\" : \"Europe/Jersey\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern European Time( Europe/Kaliningrad )\",\n    \"id\" : \"Europe/Kaliningrad\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern European Summer Time( Europe/Kiev )\",\n    \"id\" : \"Europe/Kiev\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western European Summer Time( Europe/Lisbon )\",\n    \"id\" : \"Europe/Lisbon\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Ljubljana )\",\n    \"id\" : \"Europe/Ljubljana\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) British Summer Time( Europe/London )\",\n    \"id\" : \"Europe/London\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Luxembourg )\",\n    \"id\" : \"Europe/Luxembourg\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Madrid )\",\n    \"id\" : \"Europe/Madrid\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Malta )\",\n    \"id\" : \"Europe/Malta\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Europe/Mariehamn )\",\n    \"id\" : \"Europe/Mariehamn\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Moscow Standard Time( Europe/Minsk )\",\n    \"id\" : \"Europe/Minsk\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Monaco )\",\n    \"id\" : \"Europe/Monaco\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Moscow Standard Time( Europe/Moscow )\",\n    \"id\" : \"Europe/Moscow\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Europe/Nicosia )\",\n    \"id\" : \"Europe/Nicosia\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Oslo )\",\n    \"id\" : \"Europe/Oslo\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Paris )\",\n    \"id\" : \"Europe/Paris\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Podgorica )\",\n    \"id\" : \"Europe/Podgorica\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Prague )\",\n    \"id\" : \"Europe/Prague\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern European Summer Time( Europe/Riga )\",\n    \"id\" : \"Europe/Riga\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Rome )\",\n    \"id\" : \"Europe/Rome\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Samara Time( Europe/Samara )\",\n    \"id\" : \"Europe/Samara\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/San_Marino )\",\n    \"id\" : \"Europe/San_Marino\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Sarajevo )\",\n    \"id\" : \"Europe/Sarajevo\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Moscow Standard Time( Europe/Simferopol )\",\n    \"id\" : \"Europe/Simferopol\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Skopje )\",\n    \"id\" : \"Europe/Skopje\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Europe/Sofia )\",\n    \"id\" : \"Europe/Sofia\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Stockholm )\",\n    \"id\" : \"Europe/Stockholm\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern European Summer Time( Europe/Tallinn )\",\n    \"id\" : \"Europe/Tallinn\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Tirane )\",\n    \"id\" : \"Europe/Tirane\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern European Summer Time( Europe/Tiraspol )\",\n    \"id\" : \"Europe/Tiraspol\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern European Summer Time( Europe/Uzhgorod )\",\n    \"id\" : \"Europe/Uzhgorod\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Vaduz )\",\n    \"id\" : \"Europe/Vaduz\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Vatican )\",\n    \"id\" : \"Europe/Vatican\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Vienna )\",\n    \"id\" : \"Europe/Vienna\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern European Summer Time( Europe/Vilnius )\",\n    \"id\" : \"Europe/Vilnius\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Moscow Standard Time( Europe/Volgograd )\",\n    \"id\" : \"Europe/Volgograd\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Warsaw )\",\n    \"id\" : \"Europe/Warsaw\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Zagreb )\",\n    \"id\" : \"Europe/Zagreb\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern European Summer Time( Europe/Zaporozhye )\",\n    \"id\" : \"Europe/Zaporozhye\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Europe/Zurich )\",\n    \"id\" : \"Europe/Zurich\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) British Summer Time( GB )\",\n    \"id\" : \"GB\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) British Summer Time( GB-Eire )\",\n    \"id\" : \"GB-Eire\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( GMT )\",\n    \"id\" : \"GMT\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( GMT0 )\",\n    \"id\" : \"GMT0\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Greenwich )\",\n    \"id\" : \"Greenwich\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) Hong Kong Time( Hongkong )\",\n    \"id\" : \"Hongkong\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( Iceland )\",\n    \"id\" : \"Iceland\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( Indian/Antananarivo )\",\n    \"id\" : \"Indian/Antananarivo\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Indian Ocean Territory Time( Indian/Chagos )\",\n    \"id\" : \"Indian/Chagos\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Christmas Island Time( Indian/Christmas )\",\n    \"id\" : \"Indian/Christmas\"\n  }, {\n    \"name\" : \"( GMT 6:30 ) Cocos Islands Time( Indian/Cocos )\",\n    \"id\" : \"Indian/Cocos\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( Indian/Comoro )\",\n    \"id\" : \"Indian/Comoro\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) French Southern & Antarctic Lands Time( Indian/Kerguelen )\",\n    \"id\" : \"Indian/Kerguelen\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Seychelles Time( Indian/Mahe )\",\n    \"id\" : \"Indian/Mahe\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Maldives Time( Indian/Maldives )\",\n    \"id\" : \"Indian/Maldives\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Mauritius Time( Indian/Mauritius )\",\n    \"id\" : \"Indian/Mauritius\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( Indian/Mayotte )\",\n    \"id\" : \"Indian/Mayotte\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Reunion Time( Indian/Reunion )\",\n    \"id\" : \"Indian/Reunion\"\n  }, {\n    \"name\" : \"( GMT 3:30 ) Iran Daylight Time( Iran )\",\n    \"id\" : \"Iran\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Israel Daylight Time( Israel )\",\n    \"id\" : \"Israel\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Standard Time( Jamaica )\",\n    \"id\" : \"Jamaica\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) Japan Standard Time( Japan )\",\n    \"id\" : \"Japan\"\n  }, {\n    \"name\" : \"( GMT -12:00 ) Marshall Islands Time( Kwajalein )\",\n    \"id\" : \"Kwajalein\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Time( Libya )\",\n    \"id\" : \"Libya\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Middle Europe Summer Time( MET )\",\n    \"id\" : \"MET\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Daylight Time( MST7MDT )\",\n    \"id\" : \"MST7MDT\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( Mexico/BajaNorte )\",\n    \"id\" : \"Mexico/BajaNorte\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Mountain Daylight Time( Mexico/BajaSur )\",\n    \"id\" : \"Mexico/BajaSur\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( Mexico/General )\",\n    \"id\" : \"Mexico/General\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) New Zealand Daylight Time( NZ )\",\n    \"id\" : \"NZ\"\n  }, {\n    \"name\" : \"( GMT 12:45 ) Chatham Daylight Time( NZ-CHAT )\",\n    \"id\" : \"NZ-CHAT\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Daylight Time( Navajo )\",\n    \"id\" : \"Navajo\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) China Standard Time( PRC )\",\n    \"id\" : \"PRC\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( PST8PDT )\",\n    \"id\" : \"PST8PDT\"\n  }, {\n    \"name\" : \"( GMT -11:00 ) West Samoa Daylight Time( Pacific/Apia )\",\n    \"id\" : \"Pacific/Apia\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) New Zealand Daylight Time( Pacific/Auckland )\",\n    \"id\" : \"Pacific/Auckland\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Bougainville Standard Time( Pacific/Bougainville )\",\n    \"id\" : \"Pacific/Bougainville\"\n  }, {\n    \"name\" : \"( GMT 12:45 ) Chatham Daylight Time( Pacific/Chatham )\",\n    \"id\" : \"Pacific/Chatham\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Chuuk Time( Pacific/Chuuk )\",\n    \"id\" : \"Pacific/Chuuk\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Easter Is. Time( Pacific/Easter )\",\n    \"id\" : \"Pacific/Easter\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Vanuatu Time( Pacific/Efate )\",\n    \"id\" : \"Pacific/Efate\"\n  }, {\n    \"name\" : \"( GMT -12:00 ) Phoenix Is. Time( Pacific/Enderbury )\",\n    \"id\" : \"Pacific/Enderbury\"\n  }, {\n    \"name\" : \"( GMT -10:00 ) Tokelau Time( Pacific/Fakaofo )\",\n    \"id\" : \"Pacific/Fakaofo\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) Fiji Summer Time( Pacific/Fiji )\",\n    \"id\" : \"Pacific/Fiji\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) Tuvalu Time( Pacific/Funafuti )\",\n    \"id\" : \"Pacific/Funafuti\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Galapagos Time( Pacific/Galapagos )\",\n    \"id\" : \"Pacific/Galapagos\"\n  }, {\n    \"name\" : \"( GMT -9:00 ) Gambier Time( Pacific/Gambier )\",\n    \"id\" : \"Pacific/Gambier\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Solomon Is. Time( Pacific/Guadalcanal )\",\n    \"id\" : \"Pacific/Guadalcanal\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Chamorro Standard Time( Pacific/Guam )\",\n    \"id\" : \"Pacific/Guam\"\n  }, {\n    \"name\" : \"( GMT -10:00 ) Hawaii Standard Time( Pacific/Honolulu )\",\n    \"id\" : \"Pacific/Honolulu\"\n  }, {\n    \"name\" : \"( GMT -10:00 ) Hawaii Standard Time( Pacific/Johnston )\",\n    \"id\" : \"Pacific/Johnston\"\n  }, {\n    \"name\" : \"( GMT -10:40 ) Line Is. Time( Pacific/Kiritimati )\",\n    \"id\" : \"Pacific/Kiritimati\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) Kosrae Time( Pacific/Kosrae )\",\n    \"id\" : \"Pacific/Kosrae\"\n  }, {\n    \"name\" : \"( GMT -12:00 ) Marshall Islands Time( Pacific/Kwajalein )\",\n    \"id\" : \"Pacific/Kwajalein\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) Marshall Islands Time( Pacific/Majuro )\",\n    \"id\" : \"Pacific/Majuro\"\n  }, {\n    \"name\" : \"( GMT -9:30 ) Marquesas Time( Pacific/Marquesas )\",\n    \"id\" : \"Pacific/Marquesas\"\n  }, {\n    \"name\" : \"( GMT -11:00 ) Samoa Standard Time( Pacific/Midway )\",\n    \"id\" : \"Pacific/Midway\"\n  }, {\n    \"name\" : \"( GMT 11:30 ) Nauru Time( Pacific/Nauru )\",\n    \"id\" : \"Pacific/Nauru\"\n  }, {\n    \"name\" : \"( GMT -11:30 ) Niue Time( Pacific/Niue )\",\n    \"id\" : \"Pacific/Niue\"\n  }, {\n    \"name\" : \"( GMT 11:30 ) Norfolk Time( Pacific/Norfolk )\",\n    \"id\" : \"Pacific/Norfolk\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) New Caledonia Time( Pacific/Noumea )\",\n    \"id\" : \"Pacific/Noumea\"\n  }, {\n    \"name\" : \"( GMT -11:00 ) Samoa Standard Time( Pacific/Pago_Pago )\",\n    \"id\" : \"Pacific/Pago_Pago\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) Palau Time( Pacific/Palau )\",\n    \"id\" : \"Pacific/Palau\"\n  }, {\n    \"name\" : \"( GMT -8:30 ) Pitcairn Standard Time( Pacific/Pitcairn )\",\n    \"id\" : \"Pacific/Pitcairn\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Pohnpei Time( Pacific/Pohnpei )\",\n    \"id\" : \"Pacific/Pohnpei\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Pohnpei Time( Pacific/Ponape )\",\n    \"id\" : \"Pacific/Ponape\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Papua New Guinea Time( Pacific/Port_Moresby )\",\n    \"id\" : \"Pacific/Port_Moresby\"\n  }, {\n    \"name\" : \"( GMT -10:30 ) Cook Is. Time( Pacific/Rarotonga )\",\n    \"id\" : \"Pacific/Rarotonga\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Chamorro Standard Time( Pacific/Saipan )\",\n    \"id\" : \"Pacific/Saipan\"\n  }, {\n    \"name\" : \"( GMT -11:00 ) Samoa Standard Time( Pacific/Samoa )\",\n    \"id\" : \"Pacific/Samoa\"\n  }, {\n    \"name\" : \"( GMT -10:00 ) Tahiti Time( Pacific/Tahiti )\",\n    \"id\" : \"Pacific/Tahiti\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) Gilbert Is. Time( Pacific/Tarawa )\",\n    \"id\" : \"Pacific/Tarawa\"\n  }, {\n    \"name\" : \"( GMT 13:00 ) Tonga Time( Pacific/Tongatapu )\",\n    \"id\" : \"Pacific/Tongatapu\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Chuuk Time( Pacific/Truk )\",\n    \"id\" : \"Pacific/Truk\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) Wake Time( Pacific/Wake )\",\n    \"id\" : \"Pacific/Wake\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) Wallis & Futuna Time( Pacific/Wallis )\",\n    \"id\" : \"Pacific/Wallis\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Chuuk Time( Pacific/Yap )\",\n    \"id\" : \"Pacific/Yap\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( Poland )\",\n    \"id\" : \"Poland\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Western European Summer Time( Portugal )\",\n    \"id\" : \"Portugal\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) Korea Standard Time( ROK )\",\n    \"id\" : \"ROK\"\n  }, {\n    \"name\" : \"( GMT 7:30 ) Singapore Time( Singapore )\",\n    \"id\" : \"Singapore\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( SystemV/AST4 )\",\n    \"id\" : \"SystemV/AST4\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Daylight Time( SystemV/AST4ADT )\",\n    \"id\" : \"SystemV/AST4ADT\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Standard Time( SystemV/CST6 )\",\n    \"id\" : \"SystemV/CST6\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( SystemV/CST6CDT )\",\n    \"id\" : \"SystemV/CST6CDT\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Standard Time( SystemV/EST5 )\",\n    \"id\" : \"SystemV/EST5\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( SystemV/EST5EDT )\",\n    \"id\" : \"SystemV/EST5EDT\"\n  }, {\n    \"name\" : \"( GMT -10:00 ) Hawaii Standard Time( SystemV/HST10 )\",\n    \"id\" : \"SystemV/HST10\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Standard Time( SystemV/MST7 )\",\n    \"id\" : \"SystemV/MST7\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Daylight Time( SystemV/MST7MDT )\",\n    \"id\" : \"SystemV/MST7MDT\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Standard Time( SystemV/PST8 )\",\n    \"id\" : \"SystemV/PST8\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( SystemV/PST8PDT )\",\n    \"id\" : \"SystemV/PST8PDT\"\n  }, {\n    \"name\" : \"( GMT -9:00 ) Alaska Standard Time( SystemV/YST9 )\",\n    \"id\" : \"SystemV/YST9\"\n  }, {\n    \"name\" : \"( GMT -9:00 ) Alaska Daylight Time( SystemV/YST9YDT )\",\n    \"id\" : \"SystemV/YST9YDT\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Summer Time( Turkey )\",\n    \"id\" : \"Turkey\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Coordinated Universal Time( UCT )\",\n    \"id\" : \"UCT\"\n  }, {\n    \"name\" : \"( GMT -10:00 ) Alaska Daylight Time( US/Alaska )\",\n    \"id\" : \"US/Alaska\"\n  }, {\n    \"name\" : \"( GMT -11:00 ) Hawaii Daylight Time( US/Aleutian )\",\n    \"id\" : \"US/Aleutian\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Standard Time( US/Arizona )\",\n    \"id\" : \"US/Arizona\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( US/Central )\",\n    \"id\" : \"US/Central\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( US/East-Indiana )\",\n    \"id\" : \"US/East-Indiana\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( US/Eastern )\",\n    \"id\" : \"US/Eastern\"\n  }, {\n    \"name\" : \"( GMT -10:00 ) Hawaii Standard Time( US/Hawaii )\",\n    \"id\" : \"US/Hawaii\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( US/Indiana-Starke )\",\n    \"id\" : \"US/Indiana-Starke\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( US/Michigan )\",\n    \"id\" : \"US/Michigan\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Daylight Time( US/Mountain )\",\n    \"id\" : \"US/Mountain\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( US/Pacific )\",\n    \"id\" : \"US/Pacific\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( US/Pacific-New )\",\n    \"id\" : \"US/Pacific-New\"\n  }, {\n    \"name\" : \"( GMT -11:00 ) Samoa Standard Time( US/Samoa )\",\n    \"id\" : \"US/Samoa\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Coordinated Universal Time( UTC )\",\n    \"id\" : \"UTC\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Coordinated Universal Time( Universal )\",\n    \"id\" : \"Universal\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Moscow Standard Time( W-SU )\",\n    \"id\" : \"W-SU\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Western European Summer Time( WET )\",\n    \"id\" : \"WET\"\n  }, {\n    \"name\" : \"( GMT 0:00 ) Coordinated Universal Time( Zulu )\",\n    \"id\" : \"Zulu\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Standard Time( EST )\",\n    \"id\" : \"EST\"\n  }, {\n    \"name\" : \"( GMT -10:00 ) Hawaii Standard Time( HST )\",\n    \"id\" : \"HST\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Standard Time( MST )\",\n    \"id\" : \"MST\"\n  }, {\n    \"name\" : \"( GMT 9:30 ) Australian Central Standard Time (Northern Territory)( ACT )\",\n    \"id\" : \"ACT\"\n  }, {\n    \"name\" : \"( GMT 10:00 ) Australian Eastern Daylight Time (New South Wales)( AET )\",\n    \"id\" : \"AET\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Argentine Time( AGT )\",\n    \"id\" : \"AGT\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Eastern European Time( ART )\",\n    \"id\" : \"ART\"\n  }, {\n    \"name\" : \"( GMT -9:00 ) Alaska Daylight Time( AST )\",\n    \"id\" : \"AST\"\n  }, {\n    \"name\" : \"( GMT -3:00 ) Brasilia Summer Time( BET )\",\n    \"id\" : \"BET\"\n  }, {\n    \"name\" : \"( GMT 6:00 ) Bangladesh Time( BST )\",\n    \"id\" : \"BST\"\n  }, {\n    \"name\" : \"( GMT 2:00 ) Central African Time( CAT )\",\n    \"id\" : \"CAT\"\n  }, {\n    \"name\" : \"( GMT -3:30 ) Newfoundland Daylight Time( CNT )\",\n    \"id\" : \"CNT\"\n  }, {\n    \"name\" : \"( GMT -6:00 ) Central Daylight Time( CST )\",\n    \"id\" : \"CST\"\n  }, {\n    \"name\" : \"( GMT 8:00 ) China Standard Time( CTT )\",\n    \"id\" : \"CTT\"\n  }, {\n    \"name\" : \"( GMT 3:00 ) Eastern African Time( EAT )\",\n    \"id\" : \"EAT\"\n  }, {\n    \"name\" : \"( GMT 1:00 ) Central European Summer Time( ECT )\",\n    \"id\" : \"ECT\"\n  }, {\n    \"name\" : \"( GMT -5:00 ) Eastern Daylight Time( IET )\",\n    \"id\" : \"IET\"\n  }, {\n    \"name\" : \"( GMT 5:30 ) India Standard Time( IST )\",\n    \"id\" : \"IST\"\n  }, {\n    \"name\" : \"( GMT 9:00 ) Japan Standard Time( JST )\",\n    \"id\" : \"JST\"\n  }, {\n    \"name\" : \"( GMT 13:00 ) West Samoa Daylight Time( MIT )\",\n    \"id\" : \"MIT\"\n  }, {\n    \"name\" : \"( GMT 4:00 ) Armenia Time( NET )\",\n    \"id\" : \"NET\"\n  }, {\n    \"name\" : \"( GMT 12:00 ) New Zealand Daylight Time( NST )\",\n    \"id\" : \"NST\"\n  }, {\n    \"name\" : \"( GMT 5:00 ) Pakistan Time( PLT )\",\n    \"id\" : \"PLT\"\n  }, {\n    \"name\" : \"( GMT -7:00 ) Mountain Standard Time( PNT )\",\n    \"id\" : \"PNT\"\n  }, {\n    \"name\" : \"( GMT -4:00 ) Atlantic Standard Time( PRT )\",\n    \"id\" : \"PRT\"\n  }, {\n    \"name\" : \"( GMT -8:00 ) Pacific Daylight Time( PST )\",\n    \"id\" : \"PST\"\n  }, {\n    \"name\" : \"( GMT 11:00 ) Solomon Is. Time( SST )\",\n    \"id\" : \"SST\"\n  }, {\n    \"name\" : \"( GMT 7:00 ) Indochina Time( VST )\",\n    \"id\" : \"VST\"\n  } ]\n}"
						}
					]
				}
			],
			"description": "These public APIs help access details of the countries,languages and time zones supported in Zoho Desk."
		},
		{
			"name": "Agent Signatures",
			"item": [
				{
					"name": "Get signatures of agent",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agents/:agent_id/signatures",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								":agent_id",
								"signatures"
							],
							"variable": [
								{
									"key": "agent_id"
								}
							]
						},
						"description": "This API fetches the different signatures configured by an agent.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get signatures of agent",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/agents/4000000012902/signatures",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agents",
										"4000000012902",
										"signatures"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"customizedSignatures\" : [ {\n    \"signature\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Bonnie Runolfsson<br /></div><div><b>Manager</b><br /></div><div><b>Sales &amp; Marketing</b><br /></div><div><b>@Surface Sureve</b><br /></div></div></div></div><div><div><br /></div></div><div><br /></div></div><div><br /></div></div><div><br /></div></div>\",\n    \"departmentId\" : 4000000015063\n  }, {\n    \"signature\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Bonnie Runolfsson<br /></div><div><b>User Onboarding</b><br /></div><div><b>@Surface Sureve</b><br /></div></div></div></div><div><div><br /></div></div><div><br /></div></div></div><div><br /></div></div>\",\n    \"departmentId\" : 4000000027042\n  } ],\n  \"agentId\" : 4000000012902,\n  \"defaultSignature\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Bonnie Runolfsson<br /></div><div><b>@Surface Sureve</b><br /></div></div></div></div></div><div><br /></div></div>\",\n  \"id\" : \"4000000012902\",\n  \"isActive\" : true\n}"
						}
					]
				},
				{
					"name": "Update signatures of agent",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agents/:agent_id/signatures",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								":agent_id",
								"signatures"
							],
							"variable": [
								{
									"key": "agent_id"
								}
							]
						},
						"description": "This API updates the existing signatures of an agent.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| isActive  | &lt;boolean&gt;<br /> | Status of the signature \n| defaultSignature  | &lt;string&gt;<br />max chars : 65000 | Default signature of the agent \n| customizedSignatures  | &lt;list&gt;<br /> | Department-specific, customized signatures of the agent \n"
					},
					"response": [
						{
							"name": "Update signatures of agent",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customizedSignatures\" : [ {\n    \"signature\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Bonnie Runolfsson<br /></div><div><b>Manager</b><br /></div><div><b>Sales &amp; Marketing</b><br /></div><div><b>@Surface Sureve Inc.</b><br /></div></div></div></div><div><div><br /></div></div><div><br /></div></div><div><br /></div></div><div><br /></div></div>\",\n    \"departmentId\" : 4000000015063\n  } ],\n  \"defaultSignature\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Bonnie Runolfsson<br /></div><div><b>@Surface Sureve Inc.</b><br /></div></div></div></div></div><div><br /></div></div>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/agents/4000000012902/signatures",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agents",
										"4000000012902",
										"signatures"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"customizedSignatures\" : [ {\n    \"signature\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Bonnie Runolfsson<br /></div><div><b>Manager</b><br /></div><div><b>Sales &amp; Marketing</b><br /></div><div><b>@Surface Sureve Inc.</b><br /></div></div></div></div><div><div><br /></div></div><div><br /></div></div><div><br /></div></div><div><br /></div></div>\",\n    \"departmentId\" : 4000000015063\n  } ],\n  \"agentId\" : 4000000012902,\n  \"defaultSignature\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Bonnie Runolfsson<br /></div><div><b>@Surface Sureve Inc.</b><br /></div></div></div></div></div><div><br /></div></div>\",\n  \"id\" : \"4000000012902\",\n  \"isActive\" : true\n}"
						}
					]
				},
				{
					"name": "Update customized signatures of agent",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agents/:agent_id/updateCustomizedSignature",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								":agent_id",
								"updateCustomizedSignature"
							],
							"variable": [
								{
									"key": "agent_id"
								}
							]
						},
						"description": "This API updates the customized signatures of an agent.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| departmentId (required) | &lt;long&gt;<br /> | ID of the department in which the signature exists \n| signature (required) | &lt;string&gt;<br />max chars : 65000 | Signature of the agent in that department \n"
					},
					"response": [
						{
							"name": "Update customized signatures of agent",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signature\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Bonnie Runolfsson<br /></div><div><b>Manager</b><br /></div><div>Sales &amp; Marketing<br /></div><div><b>@Surface Sureve Inc.</b><br /></div></div></div></div><div><div><br /></div></div><div><br /></div></div><div><br /></div></div><div><br /></div></div>\",\n  \"departmentId\" : 4000000015063\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/agents/4000000012902/updateCustomizedSignature",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agents",
										"4000000012902",
										"updateCustomizedSignature"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"customizedSignatures\" : [ {\n    \"signature\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Bonnie Runolfsson<br /></div><div><b>Manager</b><br /></div><div>Sales &amp; Marketing<br /></div><div><b>@Surface Sureve Inc.</b><br /></div></div></div></div><div><div><br /></div></div><div><br /></div></div><div><br /></div></div><div><br /></div></div>\",\n    \"departmentId\" : 4000000015063\n  } ],\n  \"agentId\" : 4000000012902,\n  \"defaultSignature\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Bonnie Runolfsson<br /></div><div><b>@Surface Sureve Inc.</b><br /></div></div></div></div></div><div><br /></div></div>\",\n  \"id\" : \"4000000012902\",\n  \"isActive\" : true\n}"
						}
					]
				}
			],
			"description": "Signature refers to the self-identifying/self-referencing details that agents include at the end of their responses to customers."
		},
		{
			"name": "Businesshours",
			"item": [
				{
					"name": "Create business hours set",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/businessHours",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"businessHours"
							]
						},
						"description": "This API creates a business hours set in your help desk portal\n#### OAuth Scope\n- `Desk.settings.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name (required) | &lt;String&gt;<br /> | Name of the business hours set \n| status (required) | &lt;String&gt;<br /> | Activation status of the business hours set. Values allowed are `ACTIVE` and `INACTIVE` \n| type (required) | &lt;String&gt;<br /> | Type of the business hours set. Values allowed are `24X7` (available anytime throughout the week), `SPECIFIC` (available during specific hours on the days selected),and `CUSTOM` (available during different hours on different days \n| holidayListId  | &lt;long&gt;<br /> | ID of the holiday list to associate with the business hours set \n| timeZoneId  | &lt;string&gt;<br />max chars : 100 | ID of the time zone to associate with the business hours set \n| businessTimes  | &lt;list&gt;<br /> | Business hours for the week \n"
					},
					"response": [
						{
							"name": "Create business hours set",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"timeZoneId\" : \"PLT\",\n  \"name\" : \"BusinssHour Pakistan Shift\",\n  \"businessTimes\" : [ {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"MONDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"TUESDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"WEDNESDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"THURSDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"FRIDAY\"\n  } ],\n  \"type\" : \"SPECIFIC\",\n  \"status\" : \"ACTIVE\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/businessHours",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"businessHours"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2018-12-10T07:18:39.796Z\",\n  \"createdBy\" : \"4000000016079\",\n  \"associatedHolidayList\" : null,\n  \"name\" : \"BusinssHour Pakistan Shift\",\n  \"businessTimes\" : [ {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"MONDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"TUESDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"WEDNESDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"THURSDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"FRIDAY\"\n  }, {\n    \"startTime\" : \"00:00\",\n    \"endTime\" : \"00:00\",\n    \"day\" : \"SATURDAY\"\n  }, {\n    \"startTime\" : \"00:00\",\n    \"endTime\" : \"00:00\",\n    \"day\" : \"SUNDAY\"\n  } ],\n  \"timeZone\" : {\n    \"name\" : \"( GMT 5:00 ) Pakistan Time( PLT )\",\n    \"id\" : \"PLT\"\n  },\n  \"createdTime\" : \"2018-12-10T07:18:39.796Z\",\n  \"modifiedBy\" : \"4000000016079\",\n  \"id\" : \"4000000186010\",\n  \"type\" : \"SPECIFIC\",\n  \"status\" : \"ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "Get business hours set",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/businessHours/:businessHourId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"businessHours",
								":businessHourId"
							],
							"variable": [
								{
									"key": "businessHourId"
								}
							]
						},
						"description": "This API fetches the details of a business hours set configured in your help desk portal\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get business hours set",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/businessHours/4000000186010",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"businessHours",
										"4000000186010"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2018-12-10T07:18:39.796Z\",\n  \"createdBy\" : \"4000000016079\",\n  \"associatedHolidayList\" : null,\n  \"name\" : \"BusinssHour Pakistan Shift\",\n  \"businessTimes\" : [ {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"MONDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"TUESDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"WEDNESDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"THURSDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"FRIDAY\"\n  }, {\n    \"startTime\" : \"00:00\",\n    \"endTime\" : \"00:00\",\n    \"day\" : \"SATURDAY\"\n  }, {\n    \"startTime\" : \"00:00\",\n    \"endTime\" : \"00:00\",\n    \"day\" : \"SUNDAY\"\n  } ],\n  \"timeZone\" : {\n    \"name\" : \"( GMT 5:00 ) Pakistan Time( PLT )\",\n    \"id\" : \"PLT\"\n  },\n  \"createdTime\" : \"2018-12-10T07:18:39.796Z\",\n  \"modifiedBy\" : \"4000000016079\",\n  \"id\" : \"4000000186010\",\n  \"type\" : \"SPECIFIC\",\n  \"status\" : \"ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "Update business hours set",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/businessHours/:businessHourId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"businessHours",
								":businessHourId"
							],
							"variable": [
								{
									"key": "businessHourId"
								}
							]
						},
						"description": "TThis API updates the details of a business hours set configured in your help desk portal\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name  | &lt;String&gt;<br /> | Name of the business hours set \n| status  | &lt;String&gt;<br /> | Activation status of the business hours set. Values allowed are `ACTIVE` and `INACTIVE` \n| type  | &lt;String&gt;<br /> | Type of the business hours set. Values allowed are `24X7` (available anytime throughout the week), `SPECIFIC` (available during specific hours on the days selected),and `CUSTOM` (available during different hours on different days \n| holidayListId  | &lt;long&gt;<br /> | ID of the holiday list to associate with the business hours set \n| timeZoneId  | &lt;string&gt;<br />max chars : 100 | ID of the time zone to associate with the business hours set \n| businessTimes  | &lt;list&gt;<br /> | Business hours for the week \n"
					},
					"response": [
						{
							"name": "Update business hours set",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"holidayListId\" : \"4000000105030\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/businessHours/6000000045001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"businessHours",
										"6000000045001"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2018-12-10T09:46:28.750Z\",\n  \"createdBy\" : \"4000000016079\",\n  \"associatedHolidayList\" : {\n    \"holidayListStatus\" : \"INACTIVE\",\n    \"holidayListId\" : \"4000000105030\",\n    \"holidayListName\" : \"General HolidayList\"\n  },\n  \"name\" : \"BusinssHour Pakistan Shift-with Holidays\",\n  \"businessTimes\" : [ {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"MONDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"TUESDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"WEDNESDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"THURSDAY\"\n  }, {\n    \"startTime\" : \"10:00\",\n    \"endTime\" : \"16:00\",\n    \"day\" : \"FRIDAY\"\n  }, {\n    \"startTime\" : \"00:00\",\n    \"endTime\" : \"00:00\",\n    \"day\" : \"SATURDAY\"\n  }, {\n    \"startTime\" : \"00:00\",\n    \"endTime\" : \"00:00\",\n    \"day\" : \"SUNDAY\"\n  } ],\n  \"timeZone\" : {\n    \"name\" : \"( GMT 5:00 ) Pakistan Time( PLT )\",\n    \"id\" : \"PLT\"\n  },\n  \"createdTime\" : \"2018-12-10T07:18:39.796Z\",\n  \"modifiedBy\" : \"4000000016079\",\n  \"id\" : \"4000000186010\",\n  \"type\" : \"SPECIFIC\",\n  \"status\" : \"ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "Delete business hours set",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/businessHours/:businessHourId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"businessHours",
								":businessHourId"
							],
							"variable": [
								{
									"key": "businessHourId"
								}
							]
						},
						"description": "This API deletes a business hours set from your help desk portal\n#### OAuth Scope\n- `Desk.settings.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete business hours set",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/businessHours/6000000033001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"businessHours",
										"6000000033001"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List business hour sets",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/businessHours",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"businessHours"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the business hour sets must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-50",
									"description": "Number of business hour sets to list",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<String>\n",
									"description": "Activation status of the business hour sets. Values allowed are `ACTIVE` and `INACTIVE`",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of business hour sets, based on the limit specified\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List business hour sets",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/businessHours",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"businessHours"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2018-12-10T07:09:51.265Z\",\n    \"createdBy\" : \"4000000016079\",\n    \"associatedHolidayList\" : null,\n    \"name\" : \"BusinssHour Pak Shift\",\n    \"businessTimes\" : [ {\n      \"startTime\" : \"10:00\",\n      \"endTime\" : \"16:00\",\n      \"day\" : \"MONDAY\"\n    }, {\n      \"startTime\" : \"10:00\",\n      \"endTime\" : \"16:00\",\n      \"day\" : \"TUESDAY\"\n    }, {\n      \"startTime\" : \"10:00\",\n      \"endTime\" : \"16:00\",\n      \"day\" : \"WEDNESDAY\"\n    }, {\n      \"startTime\" : \"10:00\",\n      \"endTime\" : \"16:00\",\n      \"day\" : \"THURSDAY\"\n    }, {\n      \"startTime\" : \"10:00\",\n      \"endTime\" : \"16:00\",\n      \"day\" : \"FRIDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"00:00\",\n      \"day\" : \"SATURDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"00:00\",\n      \"day\" : \"SUNDAY\"\n    } ],\n    \"timeZone\" : {\n      \"name\" : \"( GMT 5:00 ) Pakistan Time( PLT )\",\n      \"id\" : \"PLT\"\n    },\n    \"createdTime\" : \"2018-12-10T07:09:51.265Z\",\n    \"modifiedBy\" : \"4000000016079\",\n    \"id\" : \"4000000185071\",\n    \"type\" : \"SPECIFIC\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2018-12-04T10:44:24.258Z\",\n    \"createdBy\" : \"4000000016079\",\n    \"associatedHolidayList\" : null,\n    \"name\" : \"Specific BH\",\n    \"businessTimes\" : [ {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"MONDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"TUESDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"WEDNESDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"THURSDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"FRIDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"SATURDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"SUNDAY\"\n    } ],\n    \"timeZone\" : {\n      \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( GMT )\",\n      \"id\" : \"GMT\"\n    },\n    \"createdTime\" : \"2018-11-28T11:25:45.082Z\",\n    \"modifiedBy\" : \"4000000016079\",\n    \"id\" : \"4000000101003\",\n    \"type\" : \"SPECIFIC\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2018-12-04T06:48:44.595Z\",\n    \"createdBy\" : \"4000000016079\",\n    \"associatedHolidayList\" : {\n      \"holidayListStatus\" : \"INACTIVE\",\n      \"holidayListId\" : \"4000000117001\",\n      \"holidayListName\" : \"Overlapping Holidays\"\n    },\n    \"name\" : \"24X7 BusinessHour\",\n    \"businessTimes\" : [ {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"MONDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"TUESDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"WEDNESDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"THURSDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"FRIDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"SATURDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"SUNDAY\"\n    } ],\n    \"timeZone\" : {\n      \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( GMT )\",\n      \"id\" : \"GMT\"\n    },\n    \"createdTime\" : \"2018-11-28T11:25:45.082Z\",\n    \"modifiedBy\" : \"4000000016079\",\n    \"id\" : \"4000000103001\",\n    \"type\" : \"24X7\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2018-12-03T07:16:59.198Z\",\n    \"createdBy\" : \"4000000016079\",\n    \"associatedHolidayList\" : null,\n    \"name\" : \"Indian Shift 2\",\n    \"businessTimes\" : [ {\n      \"startTime\" : \"09:00\",\n      \"endTime\" : \"18:00\",\n      \"day\" : \"MONDAY\"\n    }, {\n      \"startTime\" : \"09:00\",\n      \"endTime\" : \"18:00\",\n      \"day\" : \"TUESDAY\"\n    }, {\n      \"startTime\" : \"09:00\",\n      \"endTime\" : \"18:00\",\n      \"day\" : \"WEDNESDAY\"\n    }, {\n      \"startTime\" : \"09:00\",\n      \"endTime\" : \"18:00\",\n      \"day\" : \"THURSDAY\"\n    }, {\n      \"startTime\" : \"09:00\",\n      \"endTime\" : \"18:00\",\n      \"day\" : \"FRIDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"00:00\",\n      \"day\" : \"SATURDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"00:00\",\n      \"day\" : \"SUNDAY\"\n    } ],\n    \"timeZone\" : {\n      \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( GMT )\",\n      \"id\" : \"GMT\"\n    },\n    \"createdTime\" : \"2018-11-28T12:36:11.781Z\",\n    \"modifiedBy\" : \"4000000016079\",\n    \"id\" : \"4000000104068\",\n    \"type\" : \"SPECIFIC\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2018-12-03T07:16:59.198Z\",\n    \"createdBy\" : \"4000000016079\",\n    \"associatedHolidayList\" : {\n      \"holidayListStatus\" : \"INACTIVE\",\n      \"holidayListId\" : \"4000000105030\",\n      \"holidayListName\" : \"General HolidayList\"\n    },\n    \"name\" : \"UK 24X7 Shift\",\n    \"businessTimes\" : [ {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"MONDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"TUESDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"WEDNESDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"THURSDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"FRIDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"SATURDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"23:59\",\n      \"day\" : \"SUNDAY\"\n    } ],\n    \"timeZone\" : {\n      \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( GMT )\",\n      \"id\" : \"GMT\"\n    },\n    \"createdTime\" : \"2018-11-28T11:25:45.082Z\",\n    \"modifiedBy\" : \"4000000016079\",\n    \"id\" : \"4000000101005\",\n    \"type\" : \"24X7\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2018-12-03T07:16:59.198Z\",\n    \"createdBy\" : \"4000000016079\",\n    \"associatedHolidayList\" : {\n      \"holidayListStatus\" : \"INACTIVE\",\n      \"holidayListId\" : \"4000000105030\",\n      \"holidayListName\" : \"General HolidayList\"\n    },\n    \"name\" : \"UK Shift\",\n    \"businessTimes\" : [ {\n      \"startTime\" : \"09:00\",\n      \"endTime\" : \"18:00\",\n      \"day\" : \"MONDAY\"\n    }, {\n      \"startTime\" : \"09:00\",\n      \"endTime\" : \"18:00\",\n      \"day\" : \"TUESDAY\"\n    }, {\n      \"startTime\" : \"09:00\",\n      \"endTime\" : \"18:00\",\n      \"day\" : \"WEDNESDAY\"\n    }, {\n      \"startTime\" : \"09:00\",\n      \"endTime\" : \"18:00\",\n      \"day\" : \"THURSDAY\"\n    }, {\n      \"startTime\" : \"09:00\",\n      \"endTime\" : \"18:00\",\n      \"day\" : \"FRIDAY\"\n    }, {\n      \"startTime\" : \"09:00\",\n      \"endTime\" : \"18:00\",\n      \"day\" : \"SATURDAY\"\n    }, {\n      \"startTime\" : \"00:00\",\n      \"endTime\" : \"00:00\",\n      \"day\" : \"SUNDAY\"\n    } ],\n    \"timeZone\" : {\n      \"name\" : \"( GMT 0:00 ) Greenwich Mean Time( GMT )\",\n      \"id\" : \"GMT\"\n    },\n    \"createdTime\" : \"2018-11-28T11:25:45.082Z\",\n    \"modifiedBy\" : \"4000000016079\",\n    \"id\" : \"4000000101009\",\n    \"type\" : \"CUSTOM\",\n    \"status\" : \"INACTIVE\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List associated automation rules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/businessHours/:businessHourId/relatedRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"businessHours",
								":businessHourId",
								"relatedRules"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the rules must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-50",
									"description": "Number of rules to list",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "businessHourId"
								}
							]
						},
						"description": "This API lists a particular number of automation rules that include a business hours set,based on the limit specified\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List associated automation rules",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/businessHours/10000000317019/relatedRules",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"businessHours",
										"10000000317019",
										"relatedRules"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ruleType\" : \"SUPERVISE\",\n    \"ruleName\" : \"TBA1\",\n    \"ruleId\" : \"6000000019012\"\n  }, {\n    \"ruleType\" : \"SLA\",\n    \"ruleName\" : \"Priority-based SLAs\",\n    \"ruleId\" : \"6000000013508\"\n  }, {\n    \"ruleType\" : \"SLA\",\n    \"ruleName\" : \"Bronze SLAs\",\n    \"ruleId\" : \"6000000013514\"\n  }, {\n    \"ruleType\" : \"BLUEPRINT\",\n    \"ruleName\" : \"Default Blueprint\",\n    \"ruleId\" : \"6000000016083\"\n  }, {\n    \"ruleType\" : \"BLUEPRINT\",\n    \"ruleName\" : \"BH BP\",\n    \"ruleId\" : \"6000000018143\"\n  }, {\n    \"ruleType\" : \"BLUEPRINT\",\n    \"ruleName\" : \"Third Bp\",\n    \"ruleId\" : \"6000000023018\"\n  } ]\n}"
						}
					]
				}
			],
			"description": "Business hours are the working hours of your help desk. In Zoho Desk, you can configure multiple business hour sets, based on factors, such as the shift times of your agents, and time zones of the regions you cater to. Defining business hours is important because the due time for responding to and resolving tickets are calculated based on these hours. They play a critical role in time tracking and SLAs"
		},
		{
			"name": "Blueprints",
			"item": [
				{
					"name": "Get Blueprint Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/blueprints/:blueprint_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"blueprints",
								":blueprint_id"
							],
							"variable": [
								{
									"key": "blueprint_id"
								}
							]
						},
						"description": "To get a specific blueprint details\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Blueprint Details",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "support.zoho.com/api/v1/blueprints/4000000019017",
									"host": [
										"support",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"blueprints",
										"4000000019017"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"criteria\" : {\n    \"fieldConditions\" : [ {\n      \"condition\" : \"is open\",\n      \"fieldName\" : \"Status\",\n      \"fieldModule\" : \"tickets\",\n      \"value\" : [ \"${OPEN}\" ]\n    } ],\n    \"pattern\" : \"(1)\"\n  },\n  \"departmentId\" : \"4000000007235\",\n  \"module\" : \"Cases\",\n  \"isDraft\" : false,\n  \"description\" : \"Automates Private Threading Handling\",\n  \"type\" : \"NON_CONTINUOUS\",\n  \"transitions\" : [ {\n    \"isAutoTransition\" : false,\n    \"before\" : {\n      \"accessors\" : {\n        \"actionId\" : 4000000007723,\n        \"owners\" : {\n          \"agentIds\" : [ 4000000009158 ],\n          \"otherRecpts\" : [ \"RECORD_OWNER\" ],\n          \"teamIds\" : [ 4000000009158 ]\n        },\n        \"sharedDeptAccessors\" : [ {\n          \"accessors\" : {\n            \"agentIds\" : [ 4000000009158 ],\n            \"teamIds\" : [ 4000000009158 ]\n          },\n          \"deptId\" : 4000000009158,\n          \"sharingType\" : \"READ_ONLY\"\n        } ]\n      },\n      \"criteriaDetails\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        },\n        \"actionId\" : 4000000007723\n      }\n    },\n    \"name\" : \"Feedbacks need to be monitored\",\n    \"description\" : \"Lack of instruments to repair\",\n    \"id\" : 4000000007723,\n    \"during\" : [ {\n      \"actionId\" : 4000000007723,\n      \"message\" : \"Add comment here\"\n    }, {\n      \"fieldUpdates\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        },\n        \"fieldId\" : 4000000009158,\n        \"errorMsg\" : \"Enter a valid Priority\"\n      },\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : true\n    }, {\n      \"otherActions\" : \"BUG\",\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : false\n    }, {\n      \"otherActions\" : \"COMMENT\",\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : true\n    } ],\n    \"after\" : {\n      \"fieldUpdate\" : {\n        \"ids\" : [ {\n          \"name\" : \"Update Sensitive fields\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"task\" : {\n        \"ids\" : [ {\n          \"name\" : \"Create followup task\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"customFunction\" : {\n        \"ids\" : [ {\n          \"name\" : \"Update Associated time entries\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"alert\" : {\n        \"ids\" : [ {\n          \"name\" : \"Trigger Closed Alert\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      }\n    },\n    \"autoTransitionActions\" : {\n      \"feedback\" : \"SURVEY_ALL\",\n      \"reply\" : \"REPLY_ALL\"\n    },\n    \"isCommonTransition\" : false\n  }, {\n    \"isAutoTransition\" : false,\n    \"before\" : {\n      \"accessors\" : {\n        \"actionId\" : 4000000007723,\n        \"owners\" : {\n          \"agentIds\" : [ 4000000009158 ],\n          \"otherRecpts\" : [ \"RECORD_OWNER\" ],\n          \"teamIds\" : [ 4000000009158 ]\n        },\n        \"sharedDeptAccessors\" : [ {\n          \"accessors\" : {\n            \"agentIds\" : [ 4000000009158 ],\n            \"teamIds\" : [ 4000000009158 ]\n          },\n          \"deptId\" : 4000000009158,\n          \"sharingType\" : \"READ_ONLY\"\n        } ]\n      },\n      \"criteriaDetails\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        },\n        \"actionId\" : 4000000007723\n      }\n    },\n    \"name\" : \"Common Handling\",\n    \"description\" : \"Its common transition\",\n    \"commonStates\" : [ \"Open\" ],\n    \"id\" : 4000000007723,\n    \"during\" : [ {\n      \"actionId\" : 4000000007723,\n      \"message\" : \"Add comment here\"\n    }, {\n      \"fieldUpdates\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        },\n        \"fieldId\" : 4000000009158,\n        \"errorMsg\" : \"Enter a valid Priority\"\n      },\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : true\n    }, {\n      \"otherActions\" : \"BUG\",\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : false\n    }, {\n      \"otherActions\" : \"COMMENT\",\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : true\n    } ],\n    \"after\" : {\n      \"fieldUpdate\" : {\n        \"ids\" : [ {\n          \"name\" : \"Update Sensitive fields\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"task\" : {\n        \"ids\" : [ {\n          \"name\" : \"Create followup task\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"customFunction\" : {\n        \"ids\" : [ {\n          \"name\" : \"Update Associated time entries\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"alert\" : {\n        \"ids\" : [ {\n          \"name\" : \"Trigger Closed Alert\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      }\n    },\n    \"autoTransitionActions\" : {\n      \"feedback\" : \"SURVEY_ALL\",\n      \"reply\" : \"REPLY_ALL\"\n    },\n    \"isCommonTransition\" : true\n  } ],\n  \"layoutId\" : 4000000007723,\n  \"states\" : [ {\n    \"timeInMins\" : 90,\n    \"escalations\" : [ {\n      \"escalationRecipients\" : {\n        \"agentIds\" : [ 4000000009158 ],\n        \"otherRecpts\" : [ \"RECORD_OWNER\" ]\n      },\n      \"templateId\" : 4000000007355,\n      \"escalationLevel\" : 1,\n      \"whenToEscalate\" : 15\n    } ],\n    \"transitionsOrder\" : [ \"Common Handling\", \"Feedbacks need to be monitored\" ],\n    \"businessHrId\" : 4000000007355,\n    \"name\" : \"Open\",\n    \"id\" : 4000000007723,\n    \"type\" : \"START\"\n  }, {\n    \"timeInMins\" : 30,\n    \"name\" : \"Escalated\",\n    \"id\" : 4000000007723,\n    \"type\" : \"INTERMEDIATE\"\n  }, {\n    \"timeInMins\" : 30,\n    \"name\" : \"Closed\",\n    \"id\" : 4000000007723,\n    \"type\" : \"END\"\n  } ],\n  \"chartData\" : {\n    \"canvasPosition\" : {\n      \"top\" : -29,\n      \"left\" : -127\n    },\n    \"connectionDetails\" : [ {\n      \"toUuid\" : \"Closed2\",\n      \"transName\" : \"Check3\",\n      \"isCommTrans\" : true,\n      \"fromUuid\" : \"Escalated1\",\n      \"usedStates\" : [ \"On Hold\", \"Open\" ],\n      \"isAuto\" : false\n    }, {\n      \"toUuid\" : \"Closed3\",\n      \"transName\" : \"Check3\",\n      \"isCommTrans\" : false,\n      \"fromUuid\" : \"OnHold2\",\n      \"isAuto\" : false\n    }, {\n      \"toUuid\" : \"OnHold3\",\n      \"transName\" : \"Check3\",\n      \"isCommTrans\" : false,\n      \"fromUuid\" : \"Open2\",\n      \"isAuto\" : false\n    } ],\n    \"stateDetails\" : [ {\n      \"lastModifiedStateName\" : \"Closed\",\n      \"stateName\" : \"Closed\",\n      \"displayName\" : \"Closed\",\n      \"stateId\" : \"4000000007723\",\n      \"position\" : {\n        \"top\" : 316,\n        \"left\" : 225\n      }\n    }, {\n      \"lastModifiedStateName\" : \"Escalated\",\n      \"stateName\" : \"Escalated\",\n      \"displayName\" : \"Escalated\",\n      \"stateId\" : \"4000000007723\",\n      \"position\" : {\n        \"top\" : 316,\n        \"left\" : 225\n      }\n    }, {\n      \"lastModifiedStateName\" : \"Open\",\n      \"stateName\" : \"Open\",\n      \"displayName\" : \"Open\",\n      \"stateId\" : \"4000000007723\",\n      \"position\" : {\n        \"top\" : 316,\n        \"left\" : 225\n      }\n    } ]\n  },\n  \"name\" : \"Private Threading Handling\",\n  \"id\" : \"4000000007723\",\n  \"connections\" : [ {\n    \"fromState\" : {\n      \"name\" : \"Open\",\n      \"id\" : 4000000324027\n    },\n    \"toState\" : {\n      \"name\" : \"Escalated\",\n      \"id\" : 4000000324027\n    },\n    \"transition\" : [ {\n      \"name\" : \"Feedbacks need to be monitored\",\n      \"id\" : 4000000324027\n    } ]\n  }, {\n    \"fromState\" : {\n      \"name\" : \"Escalated\",\n      \"id\" : 4000000324027\n    },\n    \"toState\" : {\n      \"name\" : \"Closed\",\n      \"id\" : 4000000324027\n    },\n    \"transition\" : [ {\n      \"name\" : \"Feedbacks need to be monitored\",\n      \"id\" : 4000000324027\n    } ]\n  } ],\n  \"fieldId\" : 4000000000377\n}"
						}
					]
				},
				{
					"name": "List all blueprints in a department",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/blueprints?module=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"blueprints"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "Department for which the blueprints are listed",
									"disabled": true
								},
								{
									"key": "module",
									"value": "<String>\n",
									"description": "module of the blueprints to be listed"
								},
								{
									"key": "status",
									"value": "<String>\n",
									"description": "To get blueprints by status, allowed values are `ACTIVE` ,`INACTIVE` and `DRAFT`",
									"disabled": true
								}
							]
						},
						"description": "To get all blueprints in a specific department\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List all blueprints in a department",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "support.zoho.com/api/v1/blueprints?departmentId=4000000007245",
									"host": [
										"support",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"blueprints"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "4000000007245"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2018-05-04 08:07:57.0\",\n    \"orderNumber\" : \"3\",\n    \"createdUserZUID\" : \"5263696\",\n    \"departmentId\" : \"1000000010712\",\n    \"module\" : \"tickets\",\n    \"isDraft\" : false,\n    \"description\" : \"\",\n    \"modifiedUserZUID\" : \"5263696\",\n    \"active\" : true,\n    \"type\" : \"NON_CONTINUOUS\",\n    \"transitions\" : [ {\n      \"name\" : \"Issue fixed\",\n      \"id\" : \"1000000309105\"\n    } ],\n    \"layoutId\" : \"1000000011200\",\n    \"states\" : [ {\n      \"name\" : \"Open\",\n      \"id\" : 1000000309101\n    }, {\n      \"name\" : \"Closed\",\n      \"id\" : 1000000309119\n    } ],\n    \"i18nFieldLabel\" : \"Status\",\n    \"fieldLabel\" : \"Status\",\n    \"name\" : \"Automate QA process\",\n    \"createdTime\" : \"2018-05-02 13:39:30.0\",\n    \"id\" : \"1000000309097\",\n    \"connections\" : [ {\n      \"fromState\" : {\n        \"name\" : \"Open\",\n        \"id\" : \"1000000309101\"\n      },\n      \"toState\" : {\n        \"name\" : \"Closed\",\n        \"id\" : \"1000000309119\"\n      },\n      \"transitions\" : [ {\n        \"name\" : \"Issue fixed\",\n        \"id\" : \"1000000309105\"\n      } ]\n    } ],\n    \"fieldId\" : \"1000000000506\"\n  }, {\n    \"modifiedTime\" : \"2018-04-24 05:53:28.0\",\n    \"orderNumber\" : \"4\",\n    \"createdUserZUID\" : \"5263696\",\n    \"departmentId\" : \"1000000010712\",\n    \"module\" : \"tickets\",\n    \"isDraft\" : true,\n    \"description\" : \"\",\n    \"modifiedUserZUID\" : \"5263696\",\n    \"active\" : true,\n    \"type\" : \"NON_CONTINUOUS\",\n    \"transitions\" : [ {\n      \"name\" : \"before\",\n      \"id\" : \"1000000232199\"\n    }, {\n      \"name\" : \"after\",\n      \"id\" : \"1000000232197\"\n    }, {\n      \"name\" : \"during\",\n      \"id\" : \"1000000232201\"\n    } ],\n    \"layoutId\" : \"1000000011200\",\n    \"states\" : [ {\n      \"name\" : \"Closed\",\n      \"id\" : 1000000232189\n    }, {\n      \"name\" : \"On Hold\",\n      \"id\" : 1000000232191\n    }, {\n      \"name\" : \"Open\",\n      \"id\" : 1000000232193\n    }, {\n      \"name\" : \"Escalated\",\n      \"id\" : 1000000232195\n    } ],\n    \"i18nFieldLabel\" : \"Status\",\n    \"fieldLabel\" : \"Status\",\n    \"name\" : \"AUtomate HR process\",\n    \"createdTime\" : \"2018-04-10 15:43:54.0\",\n    \"id\" : \"1000000232187\",\n    \"connections\" : [ {\n      \"fromState\" : {\n        \"name\" : \"On Hold\",\n        \"id\" : \"1000000232191\"\n      },\n      \"toState\" : {\n        \"name\" : \"Escalated\",\n        \"id\" : \"1000000232195\"\n      },\n      \"transitions\" : [ {\n        \"name\" : \"before\",\n        \"id\" : \"1000000232199\"\n      } ]\n    }, {\n      \"fromState\" : {\n        \"name\" : \"Open\",\n        \"id\" : \"1000000232193\"\n      },\n      \"toState\" : {\n        \"name\" : \"On Hold\",\n        \"id\" : \"1000000232191\"\n      },\n      \"transitions\" : [ {\n        \"name\" : \"after\",\n        \"id\" : \"1000000232197\"\n      } ]\n    }, {\n      \"fromState\" : {\n        \"name\" : \"Escalated\",\n        \"id\" : \"1000000232195\"\n      },\n      \"toState\" : {\n        \"name\" : \"Closed\",\n        \"id\" : \"1000000232189\"\n      },\n      \"transitions\" : [ {\n        \"name\" : \"during\",\n        \"id\" : \"1000000232201\"\n      } ]\n    } ],\n    \"fieldId\" : \"1000000000506\"\n  }, {\n    \"modifiedTime\" : \"2018-04-03 13:34:08.0\",\n    \"orderNumber\" : \"5\",\n    \"createdUserZUID\" : \"5263696\",\n    \"departmentId\" : \"1000000010712\",\n    \"module\" : \"tickets\",\n    \"isDraft\" : false,\n    \"description\" : \"\",\n    \"modifiedUserZUID\" : \"5263696\",\n    \"active\" : true,\n    \"type\" : \"NON_CONTINUOUS\",\n    \"transitions\" : [ {\n      \"name\" : \"to onhold\",\n      \"id\" : \"1000000173011\"\n    }, {\n      \"name\" : \"To close\",\n      \"id\" : \"1000000173009\"\n    } ],\n    \"layoutId\" : \"1000000011200\",\n    \"states\" : [ {\n      \"name\" : \"Closed\",\n      \"id\" : 1000000173003\n    }, {\n      \"name\" : \"Open\",\n      \"id\" : 1000000173005\n    }, {\n      \"name\" : \"On Hold\",\n      \"id\" : 1000000173007\n    } ],\n    \"i18nFieldLabel\" : \"Status\",\n    \"fieldLabel\" : \"Status\",\n    \"name\" : \"Shipping process\",\n    \"createdTime\" : \"2018-03-28 12:29:11.0\",\n    \"id\" : \"1000000173001\",\n    \"connections\" : [ {\n      \"fromState\" : {\n        \"name\" : \"Open\",\n        \"id\" : \"1000000173005\"\n      },\n      \"toState\" : {\n        \"name\" : \"On Hold\",\n        \"id\" : \"1000000173007\"\n      },\n      \"transitions\" : [ {\n        \"name\" : \"to onhold\",\n        \"id\" : \"1000000173011\"\n      } ]\n    }, {\n      \"fromState\" : {\n        \"name\" : \"On Hold\",\n        \"id\" : \"1000000173007\"\n      },\n      \"toState\" : {\n        \"name\" : \"Closed\",\n        \"id\" : \"1000000173003\"\n      },\n      \"transitions\" : [ {\n        \"name\" : \"To close\",\n        \"id\" : \"1000000173009\"\n      } ]\n    } ],\n    \"fieldId\" : \"1000000000506\"\n  }, {\n    \"modifiedTime\" : \"2018-05-03 13:18:24.0\",\n    \"orderNumber\" : \"5\",\n    \"createdUserZUID\" : \"5263696\",\n    \"departmentId\" : \"1000000010712\",\n    \"module\" : \"tickets\",\n    \"isDraft\" : false,\n    \"description\" : \"\",\n    \"modifiedUserZUID\" : \"5263696\",\n    \"active\" : true,\n    \"type\" : \"NON_CONTINUOUS\",\n    \"transitions\" : [ {\n      \"name\" : \"t1\",\n      \"id\" : \"1000000313281\"\n    } ],\n    \"layoutId\" : \"1000000011200\",\n    \"states\" : [ {\n      \"name\" : \"Approval 2\",\n      \"id\" : 1000000313277\n    }, {\n      \"name\" : \"Approval 2 approved\",\n      \"id\" : 1000000313279\n    } ],\n    \"i18nFieldLabel\" : \"Status\",\n    \"fieldLabel\" : \"Status\",\n    \"name\" : \"Ticket Support process\",\n    \"createdTime\" : \"2018-05-03 13:18:24.0\",\n    \"id\" : \"1000000313275\",\n    \"connections\" : [ {\n      \"fromState\" : {\n        \"name\" : \"Approval 2 approved\",\n        \"id\" : \"1000000313279\"\n      },\n      \"toState\" : {\n        \"name\" : \"Approval 2\",\n        \"id\" : \"1000000313277\"\n      },\n      \"transitions\" : [ {\n        \"name\" : \"t1\",\n        \"id\" : \"1000000313281\"\n      } ]\n    } ],\n    \"fieldId\" : \"1000000000506\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Create Blueprint",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/blueprints",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"blueprints"
							]
						},
						"description": "To create a blueprint\n#### OAuth Scope\n- `Desk.settings.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name (required) | &lt;String&gt;<br /> | Name of the blueprint \n| description  | &lt;String&gt;<br /> | Description of blueprint \n| active  | &lt;Boolean&gt;<br /> | Active Status of blueprint \n| dynamicTransOwnerType  | &lt;String&gt;<br /> | Dynamic Trans Owner type \n| module (required) | &lt;String&gt;<br /> | Module of the Blueprint \n| departmentId (required) | &lt;Long&gt;<br /> | Department of the Blueprint \n| layoutId (required) | &lt;Long&gt;<br /> | Layout of Blueprint \n| type (required) | &lt;String&gt;<br /> | Type of blueprint \n| fieldId (required) | &lt;Long&gt;<br /> | Field mapped for Blueprint \n| criteria  | &lt;list&gt;<br /> | The criteria details for the blueprint \n| chartData (required) | &lt;object&gt;<br /> | Blueprint Chart Data \n| states (required) | &lt;list&gt;<br /> | State Details \n| transitions (required) | &lt;list&gt;<br /> | Transition Details \n| connections (required) | &lt;list&gt;<br /> | Transition Connections \n"
					},
					"response": [
						{
							"name": "Create Blueprint",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"chartData\" : {\n    \"canvasPosition\" : {\n      \"top\" : -29,\n      \"left\" : -127\n    },\n    \"connectionDetails\" : [ {\n      \"toUuid\" : \"Closed2\",\n      \"transName\" : \"Check3\",\n      \"isCommTrans\" : true,\n      \"fromUuid\" : \"Escalated1\",\n      \"usedStates\" : [ \"On Hold\", \"Open\" ],\n      \"isAuto\" : false\n    }, {\n      \"toUuid\" : \"Closed3\",\n      \"transName\" : \"Check3\",\n      \"isCommTrans\" : false,\n      \"fromUuid\" : \"OnHold2\",\n      \"isAuto\" : false\n    }, {\n      \"toUuid\" : \"OnHold3\",\n      \"transName\" : \"Check3\",\n      \"isCommTrans\" : false,\n      \"fromUuid\" : \"Open2\",\n      \"isAuto\" : false\n    } ],\n    \"stateDetails\" : [ {\n      \"stateName\" : \"Closed\",\n      \"position\" : {\n        \"top\" : 316,\n        \"left\" : 225\n      }\n    }, {\n      \"stateName\" : \"Escalated\",\n      \"position\" : {\n        \"top\" : 316,\n        \"left\" : 225\n      }\n    }, {\n      \"stateName\" : \"Open\",\n      \"position\" : {\n        \"top\" : 316,\n        \"left\" : 225\n      }\n    } ]\n  },\n  \"criteria\" : {\n    \"fieldConditions\" : [ {\n      \"condition\" : \"is open\",\n      \"fieldName\" : \"Status\",\n      \"fieldModule\" : \"tickets\",\n      \"value\" : [ \"${OPEN}\" ]\n    } ],\n    \"pattern\" : \"(1)\"\n  },\n  \"departmentId\" : \"4000000007235\",\n  \"module\" : \"Cases\",\n  \"name\" : \"Private Threading Handling\",\n  \"description\" : \"Automates Private Threading Handling\",\n  \"type\" : \"NON_CONTINUOUS\",\n  \"transitions\" : [ {\n    \"isAutoTransition\" : false,\n    \"before\" : {\n      \"accessors\" : {\n        \"owners\" : {\n          \"agentIds\" : [ 4000000009158 ],\n          \"otherRecpts\" : [ \"RECORD_OWNER\" ],\n          \"teamIds\" : [ 4000000009158 ]\n        },\n        \"sharedDeptAccessors\" : [ {\n          \"accessors\" : {\n            \"agentIds\" : [ 4000000009158 ],\n            \"teamIds\" : [ 4000000009158 ]\n          },\n          \"deptId\" : 4000000009158,\n          \"sharingType\" : \"READ_ONLY\"\n        } ]\n      },\n      \"criteriaDetails\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"fieldModule\" : \"tickets\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        }\n      }\n    },\n    \"name\" : \"Feedbacks need to be monitored\",\n    \"description\" : \"Lack of instruments to repair\",\n    \"during\" : [ {\n      \"message\" : \"Add comment here\"\n    }, {\n      \"fieldUpdates\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"fieldModule\" : \"tickets\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        },\n        \"fieldId\" : 4000000009158,\n        \"errorMsg\" : \"Enter a valid Priority\"\n      },\n      \"isMandatory\" : true\n    }, {\n      \"otherActions\" : \"BUG\",\n      \"isMandatory\" : false\n    }, {\n      \"otherActions\" : \"COMMENT\",\n      \"isMandatory\" : true\n    } ],\n    \"after\" : {\n      \"fieldUpdate\" : {\n        \"ids\" : [ 4000000307007 ]\n      },\n      \"task\" : {\n        \"ids\" : [ 4000000307007 ]\n      },\n      \"customFunction\" : {\n        \"ids\" : [ 4000000307007 ]\n      },\n      \"alert\" : {\n        \"ids\" : [ 4000000307007 ]\n      }\n    },\n    \"autoTransitionActions\" : {\n      \"feedback\" : \"SURVEY_ALL\",\n      \"reply\" : \"REPLY_ALL\"\n    },\n    \"isCommonTransition\" : false\n  }, {\n    \"isAutoTransition\" : false,\n    \"before\" : {\n      \"accessors\" : {\n        \"owners\" : {\n          \"agentIds\" : [ 4000000009158 ],\n          \"otherRecpts\" : [ \"RECORD_OWNER\" ],\n          \"teamIds\" : [ 4000000009158 ]\n        },\n        \"sharedDeptAccessors\" : [ {\n          \"accessors\" : {\n            \"agentIds\" : [ 4000000009158 ],\n            \"teamIds\" : [ 4000000009158 ]\n          },\n          \"deptId\" : 4000000009158,\n          \"sharingType\" : \"READ_ONLY\"\n        } ]\n      },\n      \"criteriaDetails\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"fieldModule\" : \"tickets\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        }\n      }\n    },\n    \"name\" : \"Common Handling\",\n    \"description\" : \"Its common transition\",\n    \"commonStates\" : [ \"Open\" ],\n    \"during\" : [ {\n      \"message\" : \"Add comment here\"\n    }, {\n      \"fieldUpdates\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"fieldModule\" : \"tickets\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        },\n        \"fieldId\" : 4000000009158,\n        \"errorMsg\" : \"Enter a valid Priority\"\n      },\n      \"isMandatory\" : true\n    }, {\n      \"otherActions\" : \"BUG\",\n      \"isMandatory\" : false\n    }, {\n      \"otherActions\" : \"COMMENT\",\n      \"isMandatory\" : true\n    } ],\n    \"after\" : {\n      \"fieldUpdate\" : {\n        \"ids\" : [ 4000000307007 ]\n      },\n      \"task\" : {\n        \"ids\" : [ 4000000307007 ]\n      },\n      \"customFunction\" : {\n        \"ids\" : [ 4000000307007 ]\n      },\n      \"alert\" : {\n        \"ids\" : [ 4000000307007 ]\n      }\n    },\n    \"autoTransitionActions\" : {\n      \"feedback\" : \"SURVEY_ALL\",\n      \"reply\" : \"REPLY_ALL\"\n    },\n    \"isCommonTransition\" : true\n  } ],\n  \"layoutId\" : 4000000007723,\n  \"connections\" : [ {\n    \"fromState\" : \"Open\",\n    \"toState\" : \"Escalated\",\n    \"transition\" : [ \"Common Handling\" ]\n  }, {\n    \"fromState\" : \"Escalated\",\n    \"toState\" : \"Closed\",\n    \"transition\" : [ \"Common Handling\" ]\n  } ],\n  \"fieldId\" : 4000000000377,\n  \"states\" : [ {\n    \"timeInMins\" : 90,\n    \"escalations\" : [ {\n      \"escalationRecipients\" : {\n        \"agentIds\" : [ 4000000009158 ],\n        \"otherRecpts\" : [ \"RECORD_OWNER\" ]\n      },\n      \"templateId\" : 4000000007355,\n      \"escalationLevel\" : 1,\n      \"whenToEscalate\" : 15\n    } ],\n    \"transitionsOrder\" : [ \"Common Handling\", \"Feedbacks need to be monitored\" ],\n    \"businessHrId\" : 4000000007355,\n    \"name\" : \"Open\",\n    \"type\" : \"START\"\n  }, {\n    \"timeInMins\" : 30,\n    \"name\" : \"Escalated\",\n    \"type\" : \"INTERMEDIATE\"\n  }, {\n    \"timeInMins\" : 30,\n    \"name\" : \"Closed\",\n    \"type\" : \"END\"\n  } ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "support.zoho.com/api/v1/blueprints",
									"host": [
										"support",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"blueprints"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"criteria\" : {\n    \"fieldConditions\" : [ {\n      \"condition\" : \"is open\",\n      \"fieldName\" : \"Status\",\n      \"fieldModule\" : \"tickets\",\n      \"value\" : [ \"${OPEN}\" ]\n    } ],\n    \"pattern\" : \"(1)\"\n  },\n  \"departmentId\" : \"4000000007235\",\n  \"module\" : \"Cases\",\n  \"description\" : \"Automates Private Threading Handling\",\n  \"type\" : \"NON_CONTINUOUS\",\n  \"transitions\" : [ {\n    \"isAutoTransition\" : false,\n    \"before\" : {\n      \"accessors\" : {\n        \"actionId\" : 4000000007723,\n        \"owners\" : {\n          \"agentIds\" : [ 4000000009158 ],\n          \"otherRecpts\" : [ \"RECORD_OWNER\" ],\n          \"teamIds\" : [ 4000000009158 ]\n        },\n        \"sharedDeptAccessors\" : [ {\n          \"accessors\" : {\n            \"agentIds\" : [ 4000000009158 ],\n            \"teamIds\" : [ 4000000009158 ]\n          },\n          \"deptId\" : 4000000009158,\n          \"sharingType\" : \"READ_ONLY\"\n        } ]\n      },\n      \"criteriaDetails\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"fieldModule\" : \"tickets\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        },\n        \"actionId\" : 4000000007723\n      }\n    },\n    \"name\" : \"Feedbacks need to be monitored\",\n    \"description\" : \"Lack of instruments to repair\",\n    \"id\" : 4000000007723,\n    \"during\" : [ {\n      \"actionId\" : 4000000007723,\n      \"message\" : \"Add comment here\"\n    }, {\n      \"fieldUpdates\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        },\n        \"fieldId\" : 4000000009158,\n        \"errorMsg\" : \"Enter a valid Priority\"\n      },\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : true\n    }, {\n      \"otherActions\" : \"BUG\",\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : false\n    }, {\n      \"otherActions\" : \"COMMENT\",\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : true\n    } ],\n    \"after\" : {\n      \"fieldUpdate\" : {\n        \"ids\" : [ {\n          \"name\" : \"Update Sensitive fields\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"task\" : {\n        \"ids\" : [ {\n          \"name\" : \"Create followup task\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"customFunction\" : {\n        \"ids\" : [ {\n          \"name\" : \"Update Associated time entries\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"alert\" : {\n        \"ids\" : [ {\n          \"name\" : \"Trigger Closed Alert\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      }\n    },\n    \"autoTransitionActions\" : {\n      \"feedback\" : \"SURVEY_ALL\",\n      \"reply\" : \"REPLY_ALL\"\n    },\n    \"isCommonTransition\" : false\n  }, {\n    \"isAutoTransition\" : false,\n    \"before\" : {\n      \"accessors\" : {\n        \"actionId\" : 4000000007723,\n        \"owners\" : {\n          \"agentIds\" : [ 4000000009158 ],\n          \"otherRecpts\" : [ \"RECORD_OWNER\" ],\n          \"teamIds\" : [ 4000000009158 ]\n        },\n        \"sharedDeptAccessors\" : [ {\n          \"accessors\" : {\n            \"agentIds\" : [ 4000000009158 ],\n            \"teamIds\" : [ 4000000009158 ]\n          },\n          \"deptId\" : 4000000009158,\n          \"sharingType\" : \"READ_ONLY\"\n        } ]\n      },\n      \"criteriaDetails\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"fieldModule\" : \"tickets\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        },\n        \"actionId\" : 4000000007723\n      }\n    },\n    \"name\" : \"Common Handling\",\n    \"description\" : \"Its common transition\",\n    \"commonStates\" : [ \"Open\" ],\n    \"id\" : 4000000007723,\n    \"during\" : [ {\n      \"actionId\" : 4000000007723,\n      \"message\" : \"Add comment here\"\n    }, {\n      \"fieldUpdates\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"fieldModule\" : \"tickets\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        },\n        \"fieldId\" : 4000000009158,\n        \"errorMsg\" : \"Enter a valid Priority\"\n      },\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : true\n    }, {\n      \"otherActions\" : \"BUG\",\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : false\n    }, {\n      \"otherActions\" : \"COMMENT\",\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : true\n    } ],\n    \"after\" : {\n      \"fieldUpdate\" : {\n        \"ids\" : [ {\n          \"name\" : \"Update Sensitive fields\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"task\" : {\n        \"ids\" : [ {\n          \"name\" : \"Create followup task\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"customFunction\" : {\n        \"ids\" : [ {\n          \"name\" : \"Update Associated time entries\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"alert\" : {\n        \"ids\" : [ {\n          \"name\" : \"Trigger Closed Alert\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      }\n    },\n    \"autoTransitionActions\" : {\n      \"feedback\" : \"SURVEY_ALL\",\n      \"reply\" : \"REPLY_ALL\"\n    },\n    \"isCommonTransition\" : true\n  } ],\n  \"layoutId\" : 4000000007723,\n  \"states\" : [ {\n    \"timeInMins\" : 90,\n    \"escalations\" : [ {\n      \"escalationRecipients\" : {\n        \"agentIds\" : [ 4000000009158 ],\n        \"otherRecpts\" : [ \"RECORD_OWNER\" ]\n      },\n      \"templateId\" : 4000000007355,\n      \"escalationLevel\" : 1,\n      \"whenToEscalate\" : 15\n    } ],\n    \"transitionsOrder\" : [ \"Common Handling\", \"Feedbacks need to be monitored\" ],\n    \"businessHrId\" : 4000000007355,\n    \"name\" : \"Open\",\n    \"id\" : 4000000007723,\n    \"type\" : \"START\"\n  }, {\n    \"timeInMins\" : 30,\n    \"name\" : \"Escalated\",\n    \"id\" : 4000000007723,\n    \"type\" : \"INTERMEDIATE\"\n  }, {\n    \"timeInMins\" : 30,\n    \"name\" : \"Closed\",\n    \"id\" : 4000000007723,\n    \"type\" : \"END\"\n  } ],\n  \"chartData\" : {\n    \"canvasPosition\" : {\n      \"top\" : -29,\n      \"left\" : -127\n    },\n    \"connectionDetails\" : [ {\n      \"toUuid\" : \"Closed2\",\n      \"transName\" : \"Check3\",\n      \"isCommTrans\" : true,\n      \"fromUuid\" : \"Escalated1\",\n      \"usedStates\" : [ \"On Hold\", \"Open\" ],\n      \"isAuto\" : false\n    }, {\n      \"toUuid\" : \"Closed3\",\n      \"transName\" : \"Check3\",\n      \"isCommTrans\" : false,\n      \"fromUuid\" : \"OnHold2\",\n      \"isAuto\" : false\n    }, {\n      \"toUuid\" : \"OnHold3\",\n      \"transName\" : \"Check3\",\n      \"isCommTrans\" : false,\n      \"fromUuid\" : \"Open2\",\n      \"isAuto\" : false\n    } ],\n    \"stateDetails\" : [ {\n      \"lastModifiedStateName\" : \"Closed\",\n      \"stateName\" : \"Closed\",\n      \"displayName\" : \"Closed\",\n      \"stateId\" : \"4000000007723\",\n      \"position\" : {\n        \"top\" : 316,\n        \"left\" : 225\n      }\n    }, {\n      \"lastModifiedStateName\" : \"Escalated\",\n      \"stateName\" : \"Escalated\",\n      \"displayName\" : \"Escalated\",\n      \"stateId\" : \"4000000007723\",\n      \"position\" : {\n        \"top\" : 316,\n        \"left\" : 225\n      }\n    }, {\n      \"lastModifiedStateName\" : \"Open\",\n      \"stateName\" : \"Open\",\n      \"displayName\" : \"Open\",\n      \"stateId\" : \"4000000007723\",\n      \"position\" : {\n        \"top\" : 316,\n        \"left\" : 225\n      }\n    } ]\n  },\n  \"name\" : \"Private Threading Handling\",\n  \"id\" : \"4000000007723\",\n  \"connections\" : [ {\n    \"fromState\" : {\n      \"name\" : \"Open\",\n      \"id\" : 4000000324027\n    },\n    \"toState\" : {\n      \"name\" : \"Escalated\",\n      \"id\" : 4000000324027\n    },\n    \"transition\" : [ {\n      \"name\" : \"Feedbacks need to be monitored\",\n      \"id\" : 4000000324027\n    } ]\n  }, {\n    \"fromState\" : {\n      \"name\" : \"Escalated\",\n      \"id\" : 4000000324027\n    },\n    \"toState\" : {\n      \"name\" : \"Closed\",\n      \"id\" : 4000000324027\n    },\n    \"transition\" : [ {\n      \"name\" : \"Feedbacks need to be monitored\",\n      \"id\" : 4000000324027\n    } ]\n  } ],\n  \"fieldId\" : 4000000000377\n}"
						}
					]
				},
				{
					"name": "Update a blueprint",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/blueprints/:blueprint_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"blueprints",
								":blueprint_id"
							],
							"variable": [
								{
									"key": "blueprint_id"
								}
							]
						},
						"description": "To update an existing blueprint\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name  | &lt;String&gt;<br /> | Name of the blueprint \n| description  | &lt;String&gt;<br /> | Description of blueprint \n| active  | &lt;Boolean&gt;<br /> | Active Status of blueprint \n| dynamicTransOwnerType  | &lt;String&gt;<br /> | Dynamic Trans Owner type \n| module  | &lt;String&gt;<br /> | Module of the Blueprint \n| departmentId  | &lt;Long&gt;<br /> | Department of the Blueprint \n| layoutId  | &lt;Long&gt;<br /> | Layout of Blueprint \n| type  | &lt;String&gt;<br /> | Type of blueprint \n| fieldId  | &lt;Long&gt;<br /> | Field mapped for Blueprint \n| criteria  | &lt;list&gt;<br /> | The criteria details for the blueprint \n| chartData  | &lt;object&gt;<br /> | Blueprint Chart Data \n| states  | &lt;list&gt;<br /> | State Details \n| transitions  | &lt;list&gt;<br /> | Transition Details \n| connections  | &lt;list&gt;<br /> | Transition Connections \n"
					},
					"response": [
						{
							"name": "Update a blueprint",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\" : \"NON_CONTINUOUS\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/blueprints/4000000019017",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"blueprints",
										"4000000019017"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"criteria\" : {\n    \"fieldConditions\" : [ {\n      \"condition\" : \"is open\",\n      \"fieldName\" : \"Status\",\n      \"value\" : [ \"${OPEN}\" ]\n    } ],\n    \"pattern\" : \"(1)\"\n  },\n  \"departmentId\" : \"4000000007235\",\n  \"module\" : \"Cases\",\n  \"description\" : \"Automates Private Threading Handling\",\n  \"type\" : \"NON_CONTINUOUS\",\n  \"transitions\" : [ {\n    \"isAutoTransition\" : false,\n    \"before\" : {\n      \"accessors\" : {\n        \"actionId\" : 4000000007723,\n        \"owners\" : {\n          \"agentIds\" : [ 4000000009158 ],\n          \"otherRecpts\" : [ \"RECORD_OWNER\" ],\n          \"teamIds\" : [ 4000000009158 ]\n        },\n        \"sharedDeptAccessors\" : [ {\n          \"accessors\" : {\n            \"agentIds\" : [ 4000000009158 ],\n            \"teamIds\" : [ 4000000009158 ]\n          },\n          \"deptId\" : 4000000009158,\n          \"sharingType\" : \"READ_ONLY\"\n        } ]\n      },\n      \"criteriaDetails\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        },\n        \"actionId\" : 4000000007723\n      }\n    },\n    \"name\" : \"Feedbacks need to be monitored\",\n    \"description\" : \"Lack of instruments to repair\",\n    \"id\" : 4000000007723,\n    \"during\" : [ {\n      \"actionId\" : 4000000007723,\n      \"message\" : \"Add comment here\"\n    }, {\n      \"fieldUpdates\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        },\n        \"fieldId\" : 4000000009158,\n        \"errorMsg\" : \"Enter a valid Priority\"\n      },\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : true\n    }, {\n      \"otherActions\" : \"BUG\",\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : false\n    }, {\n      \"otherActions\" : \"COMMENT\",\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : true\n    } ],\n    \"after\" : {\n      \"fieldUpdate\" : {\n        \"ids\" : [ {\n          \"name\" : \"Update Sensitive fields\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"task\" : {\n        \"ids\" : [ {\n          \"name\" : \"Create followup task\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"customFunction\" : {\n        \"ids\" : [ {\n          \"name\" : \"Update Associated time entries\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"alert\" : {\n        \"ids\" : [ {\n          \"name\" : \"Trigger Closed Alert\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      }\n    },\n    \"autoTransitionActions\" : {\n      \"feedback\" : \"SURVEY_ALL\",\n      \"reply\" : \"REPLY_ALL\"\n    },\n    \"isCommonTransition\" : false\n  }, {\n    \"isAutoTransition\" : false,\n    \"before\" : {\n      \"accessors\" : {\n        \"actionId\" : 4000000007723,\n        \"owners\" : {\n          \"agentIds\" : [ 4000000009158 ],\n          \"otherRecpts\" : [ \"RECORD_OWNER\" ],\n          \"teamIds\" : [ 4000000009158 ]\n        },\n        \"sharedDeptAccessors\" : [ {\n          \"accessors\" : {\n            \"agentIds\" : [ 4000000009158 ],\n            \"teamIds\" : [ 4000000009158 ]\n          },\n          \"deptId\" : 4000000009158,\n          \"sharingType\" : \"READ_ONLY\"\n        } ]\n      },\n      \"criteriaDetails\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        },\n        \"actionId\" : 4000000007723\n      }\n    },\n    \"name\" : \"Common Handling\",\n    \"description\" : \"Its common transition\",\n    \"commonStates\" : [ \"Open\" ],\n    \"id\" : 4000000007723,\n    \"during\" : [ {\n      \"actionId\" : 4000000007723,\n      \"message\" : \"Add comment here\"\n    }, {\n      \"fieldUpdates\" : {\n        \"criteria\" : {\n          \"fieldConditions\" : [ {\n            \"condition\" : \"is open\",\n            \"fieldName\" : \"Status\",\n            \"value\" : [ \"${OPEN}\" ]\n          } ],\n          \"pattern\" : \"(1)\"\n        },\n        \"fieldId\" : 4000000009158,\n        \"errorMsg\" : \"Enter a valid Priority\"\n      },\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : true\n    }, {\n      \"otherActions\" : \"BUG\",\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : false\n    }, {\n      \"otherActions\" : \"COMMENT\",\n      \"actionId\" : 4000000007723,\n      \"isMandatory\" : true\n    } ],\n    \"after\" : {\n      \"fieldUpdate\" : {\n        \"ids\" : [ {\n          \"name\" : \"Update Sensitive fields\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"task\" : {\n        \"ids\" : [ {\n          \"name\" : \"Create followup task\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"customFunction\" : {\n        \"ids\" : [ {\n          \"name\" : \"Update Associated time entries\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      },\n      \"alert\" : {\n        \"ids\" : [ {\n          \"name\" : \"Trigger Closed Alert\",\n          \"id\" : 4000000007723\n        } ],\n        \"actionId\" : 4000000007723\n      }\n    },\n    \"autoTransitionActions\" : {\n      \"feedback\" : \"SURVEY_ALL\",\n      \"reply\" : \"REPLY_ALL\"\n    },\n    \"isCommonTransition\" : true\n  } ],\n  \"layoutId\" : 4000000007723,\n  \"states\" : [ {\n    \"timeInMins\" : 90,\n    \"escalations\" : [ {\n      \"escalationRecipients\" : {\n        \"agentIds\" : [ 4000000009158 ],\n        \"otherRecpts\" : [ \"RECORD_OWNER\" ]\n      },\n      \"templateId\" : 4000000007355,\n      \"escalationLevel\" : 1,\n      \"whenToEscalate\" : 15\n    } ],\n    \"transitionsOrder\" : [ \"Common Handling\", \"Feedbacks need to be monitored\" ],\n    \"businessHrId\" : 4000000007355,\n    \"name\" : \"Open\",\n    \"id\" : 4000000007723,\n    \"type\" : \"START\"\n  }, {\n    \"timeInMins\" : 30,\n    \"name\" : \"Escalated\",\n    \"id\" : 4000000007723,\n    \"type\" : \"INTERMEDIATE\"\n  }, {\n    \"timeInMins\" : 30,\n    \"name\" : \"Closed\",\n    \"id\" : 4000000007723,\n    \"type\" : \"END\"\n  } ],\n  \"chartData\" : {\n    \"canvasPosition\" : {\n      \"top\" : -29,\n      \"left\" : -127\n    },\n    \"connectionDetails\" : [ {\n      \"toUuid\" : \"Closed2\",\n      \"transName\" : \"Check3\",\n      \"isCommTrans\" : true,\n      \"fromUuid\" : \"Escalated1\",\n      \"usedStates\" : [ \"On Hold\", \"Open\" ],\n      \"isAuto\" : false\n    }, {\n      \"toUuid\" : \"Closed3\",\n      \"transName\" : \"Check3\",\n      \"isCommTrans\" : false,\n      \"fromUuid\" : \"OnHold2\",\n      \"isAuto\" : false\n    }, {\n      \"toUuid\" : \"OnHold3\",\n      \"transName\" : \"Check3\",\n      \"isCommTrans\" : false,\n      \"fromUuid\" : \"Open2\",\n      \"isAuto\" : false\n    } ],\n    \"stateDetails\" : [ {\n      \"lastModifiedStateName\" : \"Closed\",\n      \"stateName\" : \"Closed\",\n      \"displayName\" : \"Closed\",\n      \"stateId\" : \"4000000007723\",\n      \"position\" : {\n        \"top\" : 316,\n        \"left\" : 225\n      }\n    }, {\n      \"lastModifiedStateName\" : \"Escalated\",\n      \"stateName\" : \"Escalated\",\n      \"displayName\" : \"Escalated\",\n      \"stateId\" : \"4000000007723\",\n      \"position\" : {\n        \"top\" : 316,\n        \"left\" : 225\n      }\n    }, {\n      \"lastModifiedStateName\" : \"Open\",\n      \"stateName\" : \"Open\",\n      \"displayName\" : \"Open\",\n      \"stateId\" : \"4000000007723\",\n      \"position\" : {\n        \"top\" : 316,\n        \"left\" : 225\n      }\n    } ]\n  },\n  \"name\" : \"Private Threading Handling\",\n  \"id\" : \"4000000007723\",\n  \"connections\" : [ {\n    \"fromState\" : {\n      \"name\" : \"Open\",\n      \"id\" : 4000000324027\n    },\n    \"toState\" : {\n      \"name\" : \"Escalated\",\n      \"id\" : 4000000324027\n    },\n    \"transition\" : [ {\n      \"name\" : \"Feedbacks need to be monitored\",\n      \"id\" : 4000000324027\n    } ]\n  }, {\n    \"fromState\" : {\n      \"name\" : \"Escalated\",\n      \"id\" : 4000000324027\n    },\n    \"toState\" : {\n      \"name\" : \"Closed\",\n      \"id\" : 4000000324027\n    },\n    \"transition\" : [ {\n      \"name\" : \"Feedbacks need to be monitored\",\n      \"id\" : 4000000324027\n    } ]\n  } ],\n  \"fieldId\" : 4000000000377\n}"
						}
					]
				},
				{
					"name": "Delete Blueprint",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/blueprints/:blueprint_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"blueprints",
								":blueprint_id"
							],
							"variable": [
								{
									"key": "blueprint_id"
								}
							]
						},
						"description": "To delete a specific blueprint\n#### OAuth Scope\n- `Desk.settings.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete Blueprint",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "support.zoho.com/api/v1/blueprints/4000000019017",
									"host": [
										"support",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"blueprints",
										"4000000019017"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Reorder blueprints",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/blueprints/reorder?departmentId=<long>\n&module=<String>\n&ids=<list>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"blueprints",
								"reorder"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "Department for which blueprints have to be reordered"
								},
								{
									"key": "module",
									"value": "<String>\n",
									"description": "module for which blueprints have to be reordered"
								},
								{
									"key": "ids",
									"value": "<list>\n",
									"description": "Blueprint Ids"
								}
							]
						},
						"description": "To reorder blueprints in a specific department\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Reorder blueprints",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[ \"4000000019017\", \"4000000019019\", \"4000000019023\", \"4000000019021\" ]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "support.zoho.com/api/v1/blueprints/reorder?departmentId=4000000007245",
									"host": [
										"support",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"blueprints",
										"reorder"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "4000000007245"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Applied Blueprint details of ticket for an user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/blueprint",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"blueprint"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Meta information related to the transition owners. Values allowed are:&nbsp;`transitionOwnerAgents`, `transitionOwnerTeams`,&nbsp;`transitionOwnerDept` to include agents,teams,department under owners. You can pass multiple values by separating them with commas in the API request.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "To get the applied blueprint details of a ticket\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Applied Blueprint details of ticket for an user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "support.zoho.com/api/v1/tickets/4000000159817/blueprint",
									"host": [
										"support",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000159817",
										"blueprint"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"name\" : \"Automate QA Process\",\n  \"id\" : 1000000087001,\n  \"state\" : {\n    \"dueDate\" : \"2018-02-27T20:49:00.000Z\",\n    \"id\" : \"1000000087003\",\n    \"type\" : \"START\"\n  },\n  \"transitions\" : [ {\n    \"fromState\" : \"Open\",\n    \"toState\" : \"Escalated\",\n    \"criteria\" : {\n      \"fieldConditions\" : [ {\n        \"condition\" : \"is open\",\n        \"fieldName\" : \"Status\",\n        \"value\" : [ \"${OPEN}\" ]\n      } ],\n      \"pattern\" : \"(1)\"\n    },\n    \"name\" : \"Escalate to developers\",\n    \"owners\" : [ {\n      \"agentIds\" : [ \"1000000012635\" ],\n      \"teams\" : [ {\n        \"name\" : \"Sales Representatives\",\n        \"id\" : \"1000000012435\"\n      } ],\n      \"departmentId\" : \"1000000010712\",\n      \"department\" : {\n        \"name\" : \"Zylker\",\n        \"id\" : \"1000000010712\"\n      },\n      \"teamIds\" : [ \"1000000012435\" ],\n      \"agents\" : [ {\n        \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/1000000012635/photo\",\n        \"firstName\" : \"Lucas\",\n        \"lastName\" : \"Carol\",\n        \"id\" : \"1000000012635\",\n        \"email\" : \"carol@zylker.com\"\n      } ]\n    } ],\n    \"id\" : \"1000000087011\",\n    \"canUserPerformTransition\" : true,\n    \"isCriteriaSatisfied\" : true,\n    \"draftDetails\" : {\n      \"totalNoOfDraftActions\" : \"12\",\n      \"totalNoOfActions\" : \"24\",\n      \"draftBy\" : {\n        \"name\" : \"Sandeep Ghemire\",\n        \"id\" : \"8000000000053\"\n      },\n      \"draftAt\" : \"2020-11-13 16:05:31.0\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get During transition form",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/transitions/{transitionId}/form",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"transitions",
								"{transitionId}",
								"form"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "To get During transition form details for the given transition\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get During transition form",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "support.zoho.com/api/v1/tickets/4000000159817/transitions/4000000152217/form",
									"host": [
										"support",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000159817",
										"transitions",
										"4000000152217",
										"form"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"formActions\" : [ {\n    \"actionType\" : \"FIELD_UPDATE\",\n    \"draftContent\" : {\n      \"FIELD_UPDATE\" : {\n        \"status\" : \"Open_july\"\n      }\n    },\n    \"fieldDetails\" : {\n      \"displayLabel\" : \"Status\",\n      \"allowedValues\" : [ \"Open\", \"Open_july\", \"On Hold\", \"Escalated\", \"Closed1\", \"Closed\", \"newDeptClosed\" ],\n      \"isCustomField\" : false,\n      \"defaultValue\" : \"Open\",\n      \"isSystemMandatory\" : true,\n      \"type\" : \"Picklist\",\n      \"restoreOnReplyValues\" : [ \"Open_july\", \"newDeptClosed\", \"Escalated\", \"On Hold\", \"Closed\", \"Closed1\", \"Open\" ],\n      \"name\" : \"status\",\n      \"sortBy\" : \"userDefined\",\n      \"id\" : \"4000000000367\",\n      \"isRemovable\" : false,\n      \"maxLength\" : 120,\n      \"isMandatory\" : true\n    },\n    \"isMandatory\" : true\n  }, {\n    \"actionType\" : \"MESSAGE\",\n    \"content\" : \"Post your reply here\"\n  }, {\n    \"actionType\" : \"REPLY\",\n    \"draftContent\" : {\n      \"REPLY\" : {\n        \"cc\" : \"blueprintbranchdept@zylker.com,BlueprintBranchDept<blueprintbranchdept@zylker.com>\",\n        \"inReplyToThreadId\" : \"38512000003329195\",\n        \"bcc\" : \"\",\n        \"attachments\" : [ {\n          \"size\" : \"1822318\",\n          \"name\" : \"Screenshot 2020-12-09 at 5.44.34 PM.png\",\n          \"fileId\" : \"aaa0b3eec64915077fe3f38a1de2ad14f290eefb25930d93\"\n        } ],\n        \"channel\" : \"EMAIL\",\n        \"to\" : \"carol@zylker.com\",\n        \"isPrivate\" : false,\n        \"fromEmailAddress\" : \"BlueprintBranchDept<blueprintbranchdept@zylker.com>\",\n        \"contentType\" : \"\",\n        \"content\" : \"<div style='font-size:13.0px;font-family: Arial , Helvetica , Verdana , sans-serif;'><div>Hellei</div><div>---- On &nbsp;Tue, 8 Dec 2020 10:49:54 +0530<b>&nbsp;BlueprintBranchDept&lt;blueprintbranchdept@zylker.com&gt;&nbsp;</b> wrote ---- <br></div><div title=\\\"beforequote:::\\\"><br></div><div><blockquote style=\\\"border-left: 1px dotted #e5e5e5;margin-left:5px;padding-left: 5px;\\\"><div style=\\\"padding-top: 10px;\\\"><div><div style=\\\"font-size :  13px; font-family :  Arial,  Helvetica,  Verdana,  sans-serif; \\\"><div>Hello buddy&nbsp;<br></div><div title=\\\"beforequote:::\\\"><br></div><div><br></div></div></div><blockquote style=\\\"border-left :  1px dotted rgb(229, 229, 229); margin-left :  5px; padding-left :  5px; \\\"><div style=\\\"padding-top :  10px; \\\"><br></div></blockquote></div></blockquote></div><div><br></div></div>\"\n      }\n    },\n    \"isMandatory\" : true\n  }, {\n    \"actionType\" : \"COMMENT\",\n    \"draftContent\" : {\n      \"COMMENT\" : {\n        \"isPublicComment\" : false,\n        \"content\" : \"Comment is to test transition Draft\",\n        \"uploads\" : [ 1000000096035 ]\n      }\n    },\n    \"isMandatory\" : false\n  }, {\n    \"actionType\" : \"RESOLUTION\",\n    \"draftContent\" : {\n      \"RESOLUTION\" : {\n        \"toNotifyContactForResolution\" : true,\n        \"content\" : \"This ticket has to be solved\"\n      }\n    },\n    \"isMandatory\" : true\n  }, {\n    \"actionType\" : \"APPROVAL\",\n    \"draftContent\" : {\n      \"APPROVAL\" : {\n        \"subject\" : \"Hello Approvers\",\n        \"description\" : \"Hello Approvers  ,do approve it\",\n        \"approvers\" : [ {\n          \"approverId\" : 8000000000053,\n          \"approverName\" : \"Sandeep Ghemire\"\n        }, {\n          \"approverId\" : 8000000057263,\n          \"approverName\" : \"Subodh Ghemire\"\n        } ]\n      }\n    },\n    \"isMandatory\" : true\n  }, {\n    \"actionType\" : \"BUG\",\n    \"isMandatory\" : false\n  }, {\n    \"actionType\" : \"ATTACHMENTS\",\n    \"draftContent\" : {\n      \"ATTACHMENT\" : {\n        \"uploads\" : [ {\n          \"isPublic\" : false,\n          \"id\" : \"38512000003341108\"\n        } ]\n      }\n    },\n    \"isMandatory\" : true\n  } ],\n  \"transitionId\" : \"4000000152217\",\n  \"continuousTransitions\" : [ {\n    \"transitionId\" : \"4000000152219\",\n    \"transtionName\" : \"Close\"\n  }, {\n    \"transitionId\" : \"4000000152221\",\n    \"transtionName\" : \"Solve\"\n  } ],\n  \"isContinuousTransition\" : true,\n  \"draftDetails\" : {\n    \"draftBy\" : {\n      \"name\" : \"Sandeep Ghemire\",\n      \"id\" : \"8000000000053\"\n    },\n    \"draftAt\" : \"2020-11-13 16:05:31.0\"\n  }\n}"
						}
					]
				},
				{
					"name": "Revoke Blueprint at Entity Level",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/revokeBlueprint",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"revokeBlueprint"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "To revoke blueprint from an entity\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Revoke Blueprint at Entity Level",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "support.zoho.com/api/v1/tickets/4000000159817/revokeBlueprint",
									"host": [
										"support",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000159817",
										"revokeBlueprint"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"message\" : \"Blueprint has been revoked from this ticket\"\n}"
						}
					]
				},
				{
					"name": "Revoke Blueprint from Blueprint Level",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/blueprints/([0-9]+)/revoke",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"blueprints",
								"([0-9]+)",
								"revoke"
							]
						},
						"description": "To revoke all entities from a particular blueprint\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Revoke Blueprint from Blueprint Level",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "support.zoho.com/api/v1/blueprints/4000000159817/revoke",
									"host": [
										"support",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"blueprints",
										"4000000159817",
										"revoke"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"message\" : \"Blueprint revoke scheduled\"\n}"
						}
					]
				},
				{
					"name": "Validate transition field updates",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/transitions/{transitionId}/validateFieldUpdates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"transitions",
								"{transitionId}",
								"validateFieldUpdates"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "To validate field updates for the given transition\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| customFields  | &lt;object&gt;<br /> | null \n| cleartextpattern  | &lt;string&gt;<br />max chars : 65535 | null \n"
					},
					"response": [
						{
							"name": "Validate transition field updates",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customFields\" : {\n    \"customEmail\" : \"zdesk@zylker.com\"\n  },\n  \"channel\" : \"Facebook\",\n  \"priority\" : \"Medium\",\n  \"assigneeId\" : 1000000012635\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "support.zoho.com/api/v1/tickets/4000000159817/transitions/4000000152217/validateFieldUpdates",
									"host": [
										"support",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000159817",
										"transitions",
										"4000000152217",
										"validateFieldUpdates"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"invalidFieldUpdates\" : [ {\n    \"fieldName\" : \"priority\",\n    \"fieldId\" : 4000000159817,\n    \"errorMsg\" : \"Priority can't be high\"\n  }, {\n    \"fieldName\" : \"customEmail\",\n    \"fieldId\" : 4000000159819,\n    \"errorMsg\" : \"Email is invalid\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Perform transition",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/transitions/{transitionId}/perform",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"transitions",
								"{transitionId}",
								"perform"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "To perform transition for an entity\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| APPROVAL  | &lt;JSONObject&gt;<br /> | Approval details \n| RESOLUTION  | &lt;JSONObject&gt;<br /> | Resolution details \n| ATTACHMENT  | &lt;JSONObject&gt;<br /> | Attachment Details \n| REPLY  | &lt;JSONObject&gt;<br /> | Reply Content details \n| COMMENT  | &lt;JSONObject&gt;<br /> | Comment Details \n| SHARING  | &lt;JSONObject&gt;<br /> | Sharing Details \n| FIELD_UPDATE  | &lt;JSONObject&gt;<br /> | Fields To Update \n"
					},
					"response": [
						{
							"name": "Perform transition",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ATTACHMENT\" : {\n    \"uploads\" : [ {\n      \"isPublic\" : false,\n      \"id\" : 1000000096035\n    } ]\n  },\n  \"FIELD_UPDATE\" : {\n    \"channel\" : \"Facebook\"\n  },\n  \"RESOLUTION\" : {\n    \"toNotifyContactForResolution\" : true,\n    \"content\" : \"This ticket has to be solved\"\n  },\n  \"APPROVAL\" : {\n    \"approverIds\" : [ 1000000012635 ],\n    \"subject\" : \"Has to be sent for approval\"\n  },\n  \"REPLY\" : {\n    \"channel\" : \"EMAIL\",\n    \"to\" : \"carol@zylker.com\",\n    \"isPrivate\" : false,\n    \"fromEmailAddress\" : \"support@zylker.com\",\n    \"contentType\" : \"plainText\",\n    \"content\" : \"Hi I m Nancy replying.. \",\n    \"isForward\" : false,\n    \"uploads\" : [ 1000000096035 ]\n  },\n  \"COMMENT\" : {\n    \"isPublicComment\" : false,\n    \"content\" : \"Comment is to test blueprint\",\n    \"uploads\" : [ 1000000096035 ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "support.zoho.com/api/v1/tickets/4000000159817/transitions/4000000152217/perform",
									"host": [
										"support",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000159817",
										"transitions",
										"4000000152217",
										"perform"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"message\" : \"Transition has been completed\"\n}"
						}
					]
				},
				{
					"name": "Delete the during actions transition draft",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/transitions/{transitionId}/discardDraft",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"transitions",
								"{transitionId}",
								"discardDraft"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "To delete the during actions transition draft\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Delete the during actions transition draft",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "support.zoho.com/api/v1/tickets/4000000159823/transitions/4000000152297/discardDraft",
									"host": [
										"support",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000159823",
										"transitions",
										"4000000152297",
										"discardDraft"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Save the during actions transition draft",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticket_id/transitions/{transitionId}/saveDraft",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticket_id",
								"transitions",
								"{transitionId}",
								"saveDraft"
							],
							"variable": [
								{
									"key": "ticket_id"
								}
							]
						},
						"description": "To save the during actions transition draft\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| APPROVAL  | &lt;JSONObject&gt;<br /> | Drafted Approval details \n| RESOLUTION  | &lt;JSONObject&gt;<br /> | Drafted Resolution details \n| ATTACHMENT  | &lt;JSONObject&gt;<br /> | Drafted Attachment Details \n| REPLY  | &lt;JSONObject&gt;<br /> | Drafted Reply Content details \n| COMMENT  | &lt;JSONObject&gt;<br /> | Drafted Comment Details \n| SHARING  | &lt;JSONObject&gt;<br /> | Sharing Details \n| FIELD_UPDATE  | &lt;JSONObject&gt;<br /> | Drafted Fields To Update \n"
					},
					"response": [
						{
							"name": "Save the during actions transition draft",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ATTACHMENT\" : {\n    \"uploads\" : [ {\n      \"isPublic\" : false,\n      \"id\" : 1000000096035\n    } ]\n  },\n  \"FIELD_UPDATE\" : {\n    \"customFields\" : {\n      \"cf_cffdate_time\" : \"2020-11-23T06:30:00.000Z\",\n      \"cf_cfphone\" : \"9999456789\",\n      \"cf_cfinteger\" : \"19\",\n      \"cf_cfemail\" : \"carol@zylker.com\",\n      \"cf_cfpicklist\" : \"Option 1\",\n      \"cf_cffdate\" : \"2020-11-25\",\n      \"cf_cfpercent\" : \"32\",\n      \"cf_cfmultiselect\" : \";Option 1\",\n      \"cf_cfcheckbox\" : true,\n      \"cf_cfsingle_line\" : \"Hi Sandeep here!\",\n      \"cf_cfcurrency\" : \"134\",\n      \"cf_cfmulti_line\" : \"adad\\nasdd\",\n      \"cf_cfdecimal\" : \"23.0\",\n      \"cf_cfurl\" : \"www.desk.zoho.com\"\n    },\n    \"channel\" : \"Email\"\n  },\n  \"RESOLUTION\" : {\n    \"toNotifyContactForResolution\" : true,\n    \"content\" : \"This ticket has to be solved\"\n  },\n  \"APPROVAL\" : {\n    \"approverIds\" : [ 1000000012635 ],\n    \"subject\" : \"Has to be sent for approval\"\n  },\n  \"REPLY\" : {\n    \"channel\" : \"EMAIL\",\n    \"to\" : \"carol@zylker.com\",\n    \"isPrivate\" : false,\n    \"fromEmailAddress\" : \"support@zylker.com\",\n    \"contentType\" : \"plainText\",\n    \"content\" : \"Hi Sandeep here!\",\n    \"isForward\" : false,\n    \"uploads\" : [ 1000000096035 ]\n  },\n  \"COMMENT\" : {\n    \"isPublicComment\" : false,\n    \"content\" : \"Comment is to test transition Draft\",\n    \"uploads\" : [ 1000000096035 ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "support.zoho.com/api/v1/tickets/4000000159823/transitions/4000000152297/saveDraft",
									"host": [
										"support",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										"4000000159823",
										"transitions",
										"4000000152297",
										"saveDraft"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"draftBy\" : {\n    \"name\" : \"Sandeep Ghemire\",\n    \"id\" : \"8000000000053\"\n  },\n  \"draftAt\" : \"2020-11-13 16:18:40.0\"\n}"
						}
					]
				}
			],
			"description": "Blueprints define the entire business process model that ensures your data is streamlined and adhere to your team's work style"
		},
		{
			"name": "Dashboards",
			"item": [
				{
					"name": "Get created tickets count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboards/createdTickets?groupBy=<string>\nmax chars : 100&duration=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboards",
								"createdTickets"
							],
							"query": [
								{
									"key": "groupBy",
									"value": "<string>\nmax chars : 100",
									"description": "Key that groups the ticket count according to a particular attribute.This value can be `date` `channel` `agent` | `hour`"
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID(s) of the department(s) from which the stats must be fetched",
									"disabled": true
								},
								{
									"key": "agentId",
									"value": "<long>\n",
									"description": "ID(s) of the agent(s) whose stats must be fetched",
									"disabled": true
								},
								{
									"key": "teamId",
									"value": "<long>\n",
									"description": "ID(s) of the team(s) from which the stats must be fetched",
									"disabled": true
								},
								{
									"key": "duration",
									"value": "<String>\n",
									"description": "Predefined time range from which the stats must be fetched"
								},
								{
									"key": "startDate",
									"value": "<string>\nmax chars : 100",
									"description": "Starting date for defining custom time range",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "<string>\nmax chars : 100",
									"description": "Ending date for defining custom time range",
									"disabled": true
								},
								{
									"key": "channel",
									"value": "<string>\nmax chars : 120",
									"description": "Channel through which the tickets were received",
									"disabled": true
								}
							]
						},
						"description": "This API fetches the number of tickets created in a particular duration.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get created tickets count",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.comhttp/support.zoho.com/api/v1/dashboards/createdTickets?departmentId=4000000010712&agentId=5000000010712,5000000010713&duration=LAST_7_DAYS&groupBy=date",
									"host": [
										"desk",
										"zoho",
										"comhttp"
									],
									"path": [
										"support.zoho.com",
										"api",
										"v1",
										"dashboards",
										"createdTickets"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "4000000010712"
										},
										{
											"key": "agentId",
											"value": "5000000010712,5000000010713"
										},
										{
											"key": "duration",
											"value": "LAST_7_DAYS"
										},
										{
											"key": "groupBy",
											"value": "date"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"totalTicketCount\" : \"1\",\n  \"avg\" : \"0.1\",\n  \"ticketCount\" : [ {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-01\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-02\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-03\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-04\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-05\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"1\",\n    \"value\" : \"2018-04-06\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-07\",\n    \"referenceValue\" : null\n  } ],\n  \"groupedBy\" : \"date\"\n}"
						}
					]
				},
				{
					"name": "Get on hold tickets count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboards/onholdTickets?groupBy=<string>\nmax chars : 100&duration=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboards",
								"onholdTickets"
							],
							"query": [
								{
									"key": "groupBy",
									"value": "<string>\nmax chars : 100",
									"description": "Key that groups the ticket count according to a particular attribute.This value can be `date` `channel` `agent` | `hour`"
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID(s) of the department(s) from which the stats must be fetched",
									"disabled": true
								},
								{
									"key": "agentId",
									"value": "<long>\n",
									"description": "ID(s) of the agent(s) whose stats must be fetched",
									"disabled": true
								},
								{
									"key": "teamId",
									"value": "<long>\n",
									"description": "ID(s) of the team(s) from which the stats must be fetched",
									"disabled": true
								},
								{
									"key": "duration",
									"value": "<String>\n",
									"description": "Predefined time range from which the stats must be fetched"
								},
								{
									"key": "startDate",
									"value": "<string>\nmax chars : 100",
									"description": "Starting date for defining custom time range",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "<string>\nmax chars : 100",
									"description": "Ending date for defining custom time range",
									"disabled": true
								},
								{
									"key": "channel",
									"value": "<string>\nmax chars : 120",
									"description": "Channel through which the tickets were received",
									"disabled": true
								}
							]
						},
						"description": "This API fetches the number of tickets that are in the on hold status.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get on hold tickets count",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.comhttp/support.zoho.com/api/v1/dashboards/onholdTickets?departmentId=4000000010712&agentId=5000000010712,5000000010713&duration=LAST_7_DAYS&groupBy=date",
									"host": [
										"desk",
										"zoho",
										"comhttp"
									],
									"path": [
										"support.zoho.com",
										"api",
										"v1",
										"dashboards",
										"onholdTickets"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "4000000010712"
										},
										{
											"key": "agentId",
											"value": "5000000010712,5000000010713"
										},
										{
											"key": "duration",
											"value": "LAST_7_DAYS"
										},
										{
											"key": "groupBy",
											"value": "date"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"totalTicketCount\" : \"1\",\n  \"avg\" : \"0.1\",\n  \"ticketCount\" : [ {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-01\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-02\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-03\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-04\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-05\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"1\",\n    \"value\" : \"2018-04-06\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-07\",\n    \"referenceValue\" : null\n  } ],\n  \"groupedBy\" : \"date\"\n}"
						}
					]
				},
				{
					"name": "Get closed tickets count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboards/solvedTickets?groupBy=<string>\nmax chars : 100&duration=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboards",
								"solvedTickets"
							],
							"query": [
								{
									"key": "groupBy",
									"value": "<string>\nmax chars : 100",
									"description": "Key that groups the ticket count according to a particular attribute.This value can be `date` `channel` `agent` | `hour`"
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID(s) of the department(s) from which the stats must be fetched",
									"disabled": true
								},
								{
									"key": "agentId",
									"value": "<long>\n",
									"description": "ID(s) of the agent(s) whose stats must be fetched",
									"disabled": true
								},
								{
									"key": "teamId",
									"value": "<long>\n",
									"description": "ID(s) of the team(s) from which the stats must be fetched",
									"disabled": true
								},
								{
									"key": "duration",
									"value": "<String>\n",
									"description": "Predefined time range from which the stats must be fetched"
								},
								{
									"key": "startDate",
									"value": "<string>\nmax chars : 100",
									"description": "Starting date for defining custom time range",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "<string>\nmax chars : 100",
									"description": "Ending date for defining custom time range",
									"disabled": true
								},
								{
									"key": "channel",
									"value": "<string>\nmax chars : 120",
									"description": "Channel through which the tickets were received",
									"disabled": true
								}
							]
						},
						"description": "This API fetches the number of tickets that are resolved.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get closed tickets count",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.comhttp/support.zoho.com/api/v1/dashboards/solvedTickets?departmentId=4000000010712&agentId=5000000010712,5000000010713&duration=LAST_7_DAYS&groupBy=channel",
									"host": [
										"desk",
										"zoho",
										"comhttp"
									],
									"path": [
										"support.zoho.com",
										"api",
										"v1",
										"dashboards",
										"solvedTickets"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "4000000010712"
										},
										{
											"key": "agentId",
											"value": "5000000010712,5000000010713"
										},
										{
											"key": "duration",
											"value": "LAST_7_DAYS"
										},
										{
											"key": "groupBy",
											"value": "channel"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"totalTicketCount\" : \"1\",\n  \"ticketCount\" : [ {\n    \"count\" : \"0\",\n    \"value\" : \"Feedback Widget\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"Email\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"Web\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"1\",\n    \"value\" : \"Phone\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"Forums\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"Chat\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"Twitter\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"Facebook\",\n    \"referenceValue\" : null\n  } ],\n  \"avg\" : \"0.12\",\n  \"groupedBy\" : \"channel\"\n}"
						}
					]
				},
				{
					"name": "Get unresolved tickets count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboards/backlogTickets?groupBy=<string>\nmax chars : 100&duration=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboards",
								"backlogTickets"
							],
							"query": [
								{
									"key": "groupBy",
									"value": "<string>\nmax chars : 100",
									"description": "Key that groups the ticket count according to a particular attribute.This value can be `date` `channel` `agent`"
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID(s) of the department(s) from which the stats must be fetched",
									"disabled": true
								},
								{
									"key": "agentId",
									"value": "<long>\n",
									"description": "ID(s) of the agent(s) whose stats must be fetched",
									"disabled": true
								},
								{
									"key": "duration",
									"value": "<String>\n",
									"description": "Predefined time range from which the stats must be fetched"
								},
								{
									"key": "startDate",
									"value": "<string>\nmax chars : 100",
									"description": "Starting date for defining custom time range",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "<string>\nmax chars : 100",
									"description": "Ending date for defining custom time range",
									"disabled": true
								},
								{
									"key": "channel",
									"value": "<string>\nmax chars : 120",
									"description": "Channel through which the tickets were received",
									"disabled": true
								}
							]
						},
						"description": "This API fetches the number of tickets that have remained unresolved over a particular period.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get unresolved tickets count",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.comhttp/support.zoho.com/api/v1/dashboards/backlogTickets?departmentId=4000000010712&agentId=5000000010712,5000000010713&duration=LAST_7_DAYS&groupBy=agent",
									"host": [
										"desk",
										"zoho",
										"comhttp"
									],
									"path": [
										"support.zoho.com",
										"api",
										"v1",
										"dashboards",
										"backlogTickets"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "4000000010712"
										},
										{
											"key": "agentId",
											"value": "5000000010712,5000000010713"
										},
										{
											"key": "duration",
											"value": "LAST_7_DAYS"
										},
										{
											"key": "groupBy",
											"value": "agent"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"totalTicketCount\" : \"102\",\n  \"ticketCount\" : [ {\n    \"count\" : \"54\",\n    \"value\" : \"Unassigned\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"48\",\n    \"value\" : \"Priyanka\",\n    \"referenceValue\" : \"4000000012629\"\n  } ],\n  \"avg\" : \"51.0\"\n}"
						}
					]
				},
				{
					"name": "List resolution times",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboards/ticketsResolutionTime?groupBy=<string>\nmax chars : 100&duration=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboards",
								"ticketsResolutionTime"
							],
							"query": [
								{
									"key": "groupBy",
									"value": "<string>\nmax chars : 100",
									"description": "Key that groups stats according to a specific attribute: date, channel, agent, or hour"
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID(s) of the department(s) from which the stats must be fetched",
									"disabled": true
								},
								{
									"key": "agentId",
									"value": "<long>\n",
									"description": "ID(s) of the agent(s) whose stats must be fetched",
									"disabled": true
								},
								{
									"key": "teamId",
									"value": "<long>\n",
									"description": "ID(s) of the team(s) from which the stats must be fetched",
									"disabled": true
								},
								{
									"key": "duration",
									"value": "<String>\n",
									"description": "Predefined time range from which the stats must be fetched"
								},
								{
									"key": "startDate",
									"value": "<string>\nmax chars : 100",
									"description": "Starting date for defining custom time range",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "<string>\nmax chars : 100",
									"description": "Ending date for defining custom time range",
									"disabled": true
								},
								{
									"key": "channel",
									"value": "<string>\nmax chars : 120",
									"description": "Channel through which the tickets were received",
									"disabled": true
								}
							]
						},
						"description": "This API lists the durations taken to resolve tickets.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "List resolution times",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.comhttp/support.zoho.com/api/v1/dashboards/ticketsResolutionTime?departmentId=4000000010712&agentId=5000000010712,5000000010713&duration=LAST_7_DAYS&groupBy=agent",
									"host": [
										"desk",
										"zoho",
										"comhttp"
									],
									"path": [
										"support.zoho.com",
										"api",
										"v1",
										"dashboards",
										"ticketsResolutionTime"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "4000000010712"
										},
										{
											"key": "agentId",
											"value": "5000000010712,5000000010713"
										},
										{
											"key": "duration",
											"value": "LAST_7_DAYS"
										},
										{
											"key": "groupBy",
											"value": "agent"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"totalAvgAgentTime\" : \"41:50 hrs\",\n  \"timeData\" : [ {\n    \"avgSystemTime\" : \"41:50 hrs\",\n    \"ticketCount\" : \"1\",\n    \"avgAgentTime\" : \"41:50 hrs\",\n    \"value\" : \"Priyanka\",\n    \"referenceValue\" : \"4000000012629\"\n  } ],\n  \"totalTicketCount\" : \"1\",\n  \"totalAvgSystemTime\" : \"41:50 hrs\",\n  \"groupedBy\" : \"agent\"\n}"
						}
					]
				},
				{
					"name": "List response times",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboards/responseTime?groupBy=<string>\nmax chars : 100&isFirstResponse=<boolean>\n&duration=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboards",
								"responseTime"
							],
							"query": [
								{
									"key": "groupBy",
									"value": "<string>\nmax chars : 100",
									"description": "Key that groups stats according to a specific attribute: date, channel, agent, or hour"
								},
								{
									"key": "isFirstResponse",
									"value": "<boolean>\n",
									"description": "Key that specifies if the response is the first response to the customer question"
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID(s) of the department(s) from which the stats must be fetched",
									"disabled": true
								},
								{
									"key": "agentId",
									"value": "<long>\n",
									"description": "ID(s) of the agent(s) whose stats must be fetched",
									"disabled": true
								},
								{
									"key": "teamId",
									"value": "<long>\n",
									"description": "ID(s) of the team(s) from which the stats must be fetched",
									"disabled": true
								},
								{
									"key": "duration",
									"value": "<String>\n",
									"description": "Predefined time range from which the stats must be fetched"
								},
								{
									"key": "startDate",
									"value": "<string>\nmax chars : 100",
									"description": "Starting date for defining custom time range",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "<string>\nmax chars : 100",
									"description": "Ending date for defining custom time range",
									"disabled": true
								},
								{
									"key": "channel",
									"value": "<string>\nmax chars : 120",
									"description": "Channel through which the tickets were received",
									"disabled": true
								}
							]
						},
						"description": "This API lists the durations taken to respond to tickets.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "List response times",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.comhttp/support.zoho.com/api/v1/dashboards/responseTime?departmentId=4000000010712&agentId=5000000010712,5000000010713&duration=CUSTOM_IN_DATE&startDate=01-04-2018&endDate=10-04-2018&groupBy=channel",
									"host": [
										"desk",
										"zoho",
										"comhttp"
									],
									"path": [
										"support.zoho.com",
										"api",
										"v1",
										"dashboards",
										"responseTime"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "4000000010712"
										},
										{
											"key": "agentId",
											"value": "5000000010712,5000000010713"
										},
										{
											"key": "duration",
											"value": "CUSTOM_IN_DATE"
										},
										{
											"key": "startDate",
											"value": "01-04-2018"
										},
										{
											"key": "endDate",
											"value": "10-04-2018"
										},
										{
											"key": "groupBy",
											"value": "channel"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"totalAvgAgentTime\" : \"41:50 hrs\",\n  \"timeData\" : [ {\n    \"avgSystemTime\" : \"00:00 hrs\",\n    \"avgAgentTime\" : \"00:00 hrs\",\n    \"responseCount\" : \"0\",\n    \"value\" : \"Feedback Widget\",\n    \"referenceValue\" : null\n  }, {\n    \"avgSystemTime\" : \"00:00 hrs\",\n    \"avgAgentTime\" : \"00:00 hrs\",\n    \"responseCount\" : \"0\",\n    \"value\" : \"Email\",\n    \"referenceValue\" : null\n  }, {\n    \"avgSystemTime\" : \"00:00 hrs\",\n    \"avgAgentTime\" : \"00:00 hrs\",\n    \"responseCount\" : \"0\",\n    \"value\" : \"Web\",\n    \"referenceValue\" : null\n  }, {\n    \"avgSystemTime\" : \"41:50 hrs\",\n    \"avgAgentTime\" : \"41:50 hrs\",\n    \"responseCount\" : \"1\",\n    \"value\" : \"Phone\",\n    \"referenceValue\" : null\n  }, {\n    \"avgSystemTime\" : \"00:00 hrs\",\n    \"avgAgentTime\" : \"00:00 hrs\",\n    \"responseCount\" : \"0\",\n    \"value\" : \"Forums\",\n    \"referenceValue\" : null\n  }, {\n    \"avgSystemTime\" : \"00:00 hrs\",\n    \"avgAgentTime\" : \"00:00 hrs\",\n    \"responseCount\" : \"0\",\n    \"value\" : \"Chat\",\n    \"referenceValue\" : null\n  }, {\n    \"avgSystemTime\" : \"00:00 hrs\",\n    \"avgAgentTime\" : \"00:00 hrs\",\n    \"responseCount\" : \"0\",\n    \"value\" : \"Twitter\",\n    \"referenceValue\" : null\n  }, {\n    \"avgSystemTime\" : \"00:00 hrs\",\n    \"avgAgentTime\" : \"00:00 hrs\",\n    \"responseCount\" : \"0\",\n    \"value\" : \"Facebook\",\n    \"referenceValue\" : null\n  } ],\n  \"totalAvgSystemTime\" : \"41:50 hrs\",\n  \"groupedBy\" : \"channel\",\n  \"totalResponseCount\" : \"1\"\n}"
						}
					]
				},
				{
					"name": "Get total response count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboards/responseCount?groupBy=<string>\nmax chars : 100&duration=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboards",
								"responseCount"
							],
							"query": [
								{
									"key": "groupBy",
									"value": "<string>\nmax chars : 100",
									"description": "Key that groups the thread count according to a particular attribute.This value can be `date` `channel` `agent` | `hour`"
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID(s) of the department(s) from which the stats must be fetched",
									"disabled": true
								},
								{
									"key": "agentId",
									"value": "<long>\n",
									"description": "ID(s) of the agent(s) whose stats must be fetched",
									"disabled": true
								},
								{
									"key": "teamId",
									"value": "<long>\n",
									"description": "ID(s) of the team(s) from which the stats must be fetched",
									"disabled": true
								},
								{
									"key": "duration",
									"value": "<String>\n",
									"description": "Predefined time range from which the stats must be fetched"
								},
								{
									"key": "startDate",
									"value": "<string>\nmax chars : 100",
									"description": "Starting date for defining custom time range",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "<string>\nmax chars : 100",
									"description": "Ending date for defining custom time range",
									"disabled": true
								},
								{
									"key": "channel",
									"value": "<string>\nmax chars : 120",
									"description": "Channel through which the tickets were received",
									"disabled": true
								}
							]
						},
						"description": "This API fetches the total number of responses sent/made by your agents.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get total response count",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.comhttp/support.zoho.com/api/v1/dashboards/responseCount?departmentId=4000000010712&agentId=5000000010712,5000000010713&duration=LAST_7_DAYS&groupBy=date",
									"host": [
										"desk",
										"zoho",
										"comhttp"
									],
									"path": [
										"support.zoho.com",
										"api",
										"v1",
										"dashboards",
										"responseCount"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "4000000010712"
										},
										{
											"key": "agentId",
											"value": "5000000010712,5000000010713"
										},
										{
											"key": "duration",
											"value": "LAST_7_DAYS"
										},
										{
											"key": "groupBy",
											"value": "date"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"avg\" : \"0.0\",\n  \"groupedBy\" : \"date\",\n  \"totalResponseCount\" : \"0\",\n  \"responseCount\" : [ {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-06\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-07\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-08\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-09\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-10\",\n    \"referenceValue\" : null\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get reopened tickets count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dashboards/reopenedTickets?groupBy=<string>\nmax chars : 100&duration=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dashboards",
								"reopenedTickets"
							],
							"query": [
								{
									"key": "groupBy",
									"value": "<string>\nmax chars : 100",
									"description": "Key that groups the thread count according to a particular attribute.This value can be `date` `channel` `agent` | `hour`"
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID(s) of the department(s) from which the stats must be fetched",
									"disabled": true
								},
								{
									"key": "agentId",
									"value": "<long>\n",
									"description": "ID(s) of the agent(s) whose stats must be fetched",
									"disabled": true
								},
								{
									"key": "teamId",
									"value": "<long>\n",
									"description": "ID(s) of the team(s) from which the stats must be fetched",
									"disabled": true
								},
								{
									"key": "duration",
									"value": "<String>\n",
									"description": "Predefined time range from which the stats must be fetched"
								},
								{
									"key": "startDate",
									"value": "<string>\nmax chars : 100",
									"description": "Starting date for defining custom time range",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "<string>\nmax chars : 100",
									"description": "Ending date for defining custom time range",
									"disabled": true
								},
								{
									"key": "channel",
									"value": "<string>\nmax chars : 120",
									"description": "Channel through which the tickets were received",
									"disabled": true
								}
							]
						},
						"description": "This API fetches the number of tickets that were reopened in your help desk portal.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get reopened tickets count",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.comhttp/support.zoho.com/api/v1/dashboards/reopenedTickets?departmentId=4000000010712&agentId=5000000010712,5000000010713&duration=LAST_7_DAYS&groupBy=date",
									"host": [
										"desk",
										"zoho",
										"comhttp"
									],
									"path": [
										"support.zoho.com",
										"api",
										"v1",
										"dashboards",
										"reopenedTickets"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "4000000010712"
										},
										{
											"key": "agentId",
											"value": "5000000010712,5000000010713"
										},
										{
											"key": "duration",
											"value": "LAST_7_DAYS"
										},
										{
											"key": "groupBy",
											"value": "date"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"totalTicketCount\" : \"1\",\n  \"avg\" : \"0.1\",\n  \"ticketCount\" : [ {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-01\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-02\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-03\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-04\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-05\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"1\",\n    \"value\" : \"2018-04-06\",\n    \"referenceValue\" : null\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"2018-04-07\",\n    \"referenceValue\" : null\n  } ],\n  \"groupedBy\" : \"date\"\n}"
						}
					]
				}
			],
			"description": "In following APIs duration param is mapped as follows: LAST_30_DAYS, LAST_7_DAYS,THIS_WEEK,LAST_WEEK,THIS_MONTH,LAST_MONTH,CUSTOM_IN_DATE [mention start and end date in dd-mm-yyyy format],CUSTOM_IN_MILLIS [mention start and end date in milliseconds]."
		},
		{
			"name": "Domain Mapping",
			"item": [
				{
					"name": "Add domain",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/domains",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"domains"
							]
						},
						"description": "This API adds a domain to your help desk.\n#### OAuth Scope\n- `Desk.settings.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| domain (required) | &lt;string&gt;<br />max chars : 46 | Address of the domain \n"
					},
					"response": [
						{
							"name": "Add domain",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain\" : \"support.zylker.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/domains",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"domains"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"appliedTime\" : null,\n  \"sslRequestStatus\" : null,\n  \"sslRequestedBy\" : null,\n  \"isVerified\" : false,\n  \"sslStatus\" : \"NO_SSL\",\n  \"domain\" : \"support.zylker.com\",\n  \"zdSecurityCode\" : \"zdc3b95061484994060a401652cb2a45b2\",\n  \"sslRequestedTime\" : null,\n  \"isApplied\" : false,\n  \"appliedBy\" : null,\n  \"verifiedBy\" : null,\n  \"verifiedTime\" : null\n}"
						}
					]
				},
				{
					"name": "Verify domain",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/domains/verify",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"domains",
								"verify"
							]
						},
						"description": "This API verifies a domain in your help desk.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| domain (required) | &lt;string&gt;<br />max chars : 100 | Domain to be verified. \n| method (required) | &lt;string&gt;<br />max chars : 100 | Domain verification method. `CNAME` or `HTML`. \n"
					},
					"response": [
						{
							"name": "Verify domain",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"method\" : \"CNAME\",\n  \"domain\" : \"support.zylker.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/domains/verify",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"domains",
										"verify"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"appliedTime\" : null,\n  \"sslRequestStatus\" : null,\n  \"sslRequestedBy\" : null,\n  \"isVerified\" : true,\n  \"sslStatus\" : \"NO_SSL\",\n  \"domain\" : \"support.zylker.com\",\n  \"zdSecurityCode\" : null,\n  \"sslRequestedTime\" : null,\n  \"isApplied\" : false,\n  \"appliedBy\" : null,\n  \"verifiedBy\" : \"8000000012800\",\n  \"verifiedTime\" : \"2018-06-03T11:21:07.912Z\"\n}"
						}
					]
				},
				{
					"name": "Apply domain",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/domains/apply",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"domains",
								"apply"
							]
						},
						"description": "This API maps a domain to the default portal in your help desk.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| domain (required) | &lt;string&gt;<br />max chars : 46 | Address of the domain \n"
					},
					"response": [
						{
							"name": "Apply domain",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain\" : \"support.zylker.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/domains/apply",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"domains",
										"apply"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"appliedTime\" : \"2018-06-03T11:25:07.897Z\",\n  \"sslRequestStatus\" : null,\n  \"sslRequestedBy\" : \"8000000012800\",\n  \"isVerified\" : true,\n  \"sslStatus\" : \"VALID\",\n  \"domain\" : \"support.zylker.com\",\n  \"zdSecurityCode\" : null,\n  \"sslRequestedTime\" : \"2018-06-03T11:25:07.897Z\",\n  \"isApplied\" : true,\n  \"appliedBy\" : \"8000000012800\",\n  \"verifiedBy\" : \"8000000012800\",\n  \"verifiedTime\" : \"2018-06-03T11:21:07.912Z\"\n}"
						}
					]
				},
				{
					"name": "Reset current domain",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/domains/reset",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"domains",
								"reset"
							]
						},
						"description": "This API resets the current domain of the default portal in your help desk.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Reset current domain",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/domains/reset",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"domains",
										"reset"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List domains",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/domains",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"domains"
							],
							"query": [
								{
									"key": "isVerified",
									"value": "<boolean>\n",
									"description": "Key that filters domains based on their verification status",
									"disabled": true
								},
								{
									"key": "isApplied",
									"value": "<boolean>\n",
									"description": "Key that filters domains based on their application status in the help desk",
									"disabled": true
								}
							]
						},
						"description": "This API lists the domains configured in your help desk.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "List domains",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/domains?isVerified=true&isApplied=false",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"domains"
									],
									"query": [
										{
											"key": "isVerified",
											"value": "true"
										},
										{
											"key": "isApplied",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"appliedTime\" : null,\n    \"sslRequestStatus\" : null,\n    \"sslRequestedBy\" : null,\n    \"isVerified\" : true,\n    \"sslStatus\" : \"NO_SSL\",\n    \"domain\" : \"supportportal.zylker.com\",\n    \"zdSecurityCode\" : null,\n    \"sslRequestedTime\" : null,\n    \"isApplied\" : false,\n    \"appliedBy\" : null,\n    \"verifiedBy\" : \"8000000012800\",\n    \"verifiedTime\" : \"2018-06-03T11:21:07.912Z\"\n  }, {\n    \"appliedTime\" : null,\n    \"sslRequestStatus\" : null,\n    \"sslRequestedBy\" : null,\n    \"isVerified\" : true,\n    \"sslStatus\" : \"NO_SSL\",\n    \"domain\" : \"customers.zylker.com\",\n    \"zdSecurityCode\" : null,\n    \"sslRequestedTime\" : null,\n    \"isApplied\" : false,\n    \"appliedBy\" : null,\n    \"verifiedBy\" : \"8000000012800\",\n    \"verifiedTime\" : \"2018-06-03T11:21:07.654Z\"\n  }, {\n    \"appliedTime\" : null,\n    \"sslRequestStatus\" : null,\n    \"sslRequestedBy\" : null,\n    \"isVerified\" : true,\n    \"sslStatus\" : \"NO_SSL\",\n    \"domain\" : \"partners.zylker.com\",\n    \"zdSecurityCode\" : null,\n    \"sslRequestedTime\" : null,\n    \"isApplied\" : false,\n    \"appliedBy\" : null,\n    \"verifiedBy\" : \"8000000012800\",\n    \"verifiedTime\" : \"2018-06-03T11:21:07.912Z\"\n  } ]\n}"
						}
					]
				}
			],
			"description": "By default, the web address of your help center is a Zoho Desk sub-domain in the &ldquo;desk.zoho.com/portal/<mycompany>&rdquo; format. However, you can personalize this address, so that your customers can submit their tickets from a sub-domain, such as 'support.mycompany.com'. This feature is called domain/host mapping."
		},
		{
			"name": "Community",
			"item": [
				{
					"name": "Like topic",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/like",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"like"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API enables users to like a topic.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Like topic",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/like?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"like"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Unlike topic",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/unlike",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"unlike"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API enables users to unlike a topic.\n#### OAuth Scope\n- `Desk.forums.UPDATE`\n- `Desk.community.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Unlike topic",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/unlike?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"unlike"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Follow topic",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/follow",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"follow"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API enables users to follow a topic.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Follow topic",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/follow?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"follow"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Unfollow topic",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/unfollow",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"unfollow"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API enables users to unfollow a topic.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Unfollow topic",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/unfollow?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"unfollow"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Lock topic",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/lock",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"lock"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API helps lock a forum topic, so that further user actions are restricted.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Lock topic",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/lock?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"lock"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Unlock topic",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/unlock",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"unlock"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API helps unlock a forum topic, so that further user actions can be performed.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Unlock topic",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/unlock?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"unlock"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Moderate topic",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/moderate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"moderate"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API helps moderate a forum topic, which means user comments are reviewed before publishing.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Moderate topic",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/moderate?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"moderate"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Unmoderate topic",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/unmoderate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"unmoderate"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API helps unmoderate a forum topic, which means user comments are published without reviewing.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Unmoderate topic",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/unmoderate?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"unmoderate"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Trash topic",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/moveToTrash",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"moveToTrash"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API moves a forum topic to trash of your help desk portal.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Trash topic",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/moveToTrash?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"moveToTrash"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Move topic",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/move",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"move"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API moves a forum topic from one community category to another.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| categoryId (required) | &lt;long&gt;<br /> | ID of the community category \n"
					},
					"response": [
						{
							"name": "Move topic",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"categoryId\" : \"1000000012755\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/move?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"move"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Associate tags to topic",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/associateTags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"associateTags"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API associates quick access/reference tags to a forum topic.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| tags (required) | &lt;list&gt;<br /> | Tag phrases \n"
					},
					"response": [
						{
							"name": "Associate tags to topic",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tags\" : [ \"tag1\", \"tag2\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/associateTags?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"associateTags"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[ {\n  \"name\" : \"tag1\",\n  \"permalink\" : \"tag1\"\n}, {\n  \"name\" : \"tag2\",\n  \"permalink\" : \"tag2\"\n} ]"
						}
					]
				},
				{
					"name": "Dissociate tags from topic",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/dissociateTags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"dissociateTags"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API removes quick access/reference tags from a forum topic.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| tags (required) | &lt;list&gt;<br /> | Tag phrases \n"
					},
					"response": [
						{
							"name": "Dissociate tags from topic",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tags\" : [ \"tag1\", \"tag2\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/dissociateTags?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"dissociateTags"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List topic followers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/followers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"followers"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 1,",
									"description": "Index number, starting from which the users must be listed.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 10,",
									"description": "Number of users to list",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API lists a particular number of users who follow a forum topic, based on the limit defined.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "List topic followers",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/followers?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"followers"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 1\",\n    \"id\" : \"7000000015971\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\"\n  }, {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015972/photo?orgId=123456\",\n    \"name\" : \"user 3\",\n    \"id\" : \"7000000015972\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List topic participants",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/participants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"participants"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 1,",
									"description": "Index number, starting from which the users must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 10,",
									"description": "Number of users to list",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API lists a particular number of users who participated in a forum topic, based on the limit defined.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "List topic participants",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/participants?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"participants"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 1\",\n    \"id\" : \"7000000015971\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\"\n  }, {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015972/photo?orgId=123456\",\n    \"name\" : \"user 3\",\n    \"id\" : \"7000000015972\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List topic voters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/voters",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"voters"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 1,",
									"description": "Index number, starting from which the users must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 10,",
									"description": "Number of users to list",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API lists a particular number of users who voted in a forum topic, based on the limit defined.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "List topic voters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/voters?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"voters"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 1\",\n    \"id\" : \"7000000015971\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\"\n  }, {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015972/photo?orgId=123456\",\n    \"name\" : \"user 3\",\n    \"id\" : \"7000000015972\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List forum topics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics"
							],
							"query": [
								{
									"key": "categoryId",
									"value": "<long>\n",
									"description": "ID of the community category from which the topics must be listed",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<int>\ndefault : 1,",
									"description": "Index number, starting from which the topics must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 25,",
									"description": "Number of topics to list",
									"disabled": true
								},
								{
									"key": "isSticky",
									"value": "<boolean>\n",
									"description": "Key that defines whether the topics to list must be sticky posts or not",
									"disabled": true
								},
								{
									"key": "unreplied",
									"value": "<boolean>\n",
									"description": "Key that defines whether the topics to list must contain comments or not",
									"disabled": true
								},
								{
									"key": "type",
									"value": "<String>\n",
									"description": "Type of topics to list. Values allowed are: `ANNOUNCEMENT`, `DISCUSSION`, `IDEA`, `PROBLEM`, and `QUESTION`.",
									"disabled": true
								},
								{
									"key": "tagName",
									"value": "<String>\n",
									"description": "Tag by which topics must be filtered",
									"disabled": true
								},
								{
									"key": "label",
									"value": "<String>\n",
									"description": "Status label by which topics must be filtered. The value of this key varies according to the topic type. Values allowed are: `NOSTATUS`, `NEEDMOREINFO`, `WORKINGONIT`, `ANSWERED`, `UNANSWERED`, `MAYBELATER`, `UNDERREVIEW`, `IMPLEMENTED`, `WILLNOTIMPLEMENT`, `NOTAPROBLEM`, `TEMPORARYFIX`, `ANALYZING`, `SOLVED`, `UNSOLVED`, and `MOSTVOTED`.",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of forum topics, based on the limit defined.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "List forum topics",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"summary\" : \"topic 2's description\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user 1\",\n      \"id\" : \"7000000015971\",\n      \"label\" : null,\n      \"type\" : \"AGENT\"\n    },\n    \"latestCommentTime\" : \"2018-10-16T09:42:12.716Z\",\n    \"subject\" : \"Topic 2\",\n    \"likeCount\" : \"1\",\n    \"label\" : \"NOSTATUS\",\n    \"isVoted\" : true,\n    \"type\" : \"QUESTION\",\n    \"latestCommenter\" : null,\n    \"isSticky\" : false,\n    \"commentCount\" : \"0\",\n    \"portalUrl\" : \"https://desk.zoho.com/portal/portalname/community/topictopic-2\",\n    \"createdTime\" : \"2018-10-16T09:42:12.716Z\",\n    \"id\" : \"4000000019017\",\n    \"permalink\" : \"topic-2\",\n    \"categoryId\" : \"4000000000017\",\n    \"status\" : \"PUBLISHED\"\n  }, {\n    \"summary\" : \"Topic 1 description\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/portalUser/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user2\",\n      \"id\" : \"7000000015972\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      },\n      \"type\" : \"END_USER\"\n    },\n    \"latestCommentTime\" : \"2018-10-16T09:41:46.621Z\",\n    \"subject\" : \"Topic 1\",\n    \"likeCount\" : \"1\",\n    \"label\" : \"NOSTATUS\",\n    \"isVoted\" : true,\n    \"type\" : \"QUESTION\",\n    \"latestCommenter\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user 1\",\n      \"id\" : \"7000000015971\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      },\n      \"type\" : \"AGENT\"\n    },\n    \"isSticky\" : false,\n    \"commentCount\" : \"2\",\n    \"portalUrl\" : \"https://desk.zoho.com/portal/portalname/community/topictopic-1\",\n    \"createdTime\" : \"2018-10-16T09:41:33.202Z\",\n    \"id\" : \"4000000019003\",\n    \"permalink\" : \"topic-1\",\n    \"categoryId\" : \"4000000000017\",\n    \"status\" : \"PUBLISHED\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get topic",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API fetches a forum topic from the user community.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "Get topic",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"creator\" : {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 1\",\n    \"id\" : \"7000000015971\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\"\n  },\n  \"attachments\" : [ {\n    \"size\" : \"1166\",\n    \"name\" : \"download.png\",\n    \"id\" : \"4000000019027\",\n    \"href\" : \"https://desk.zoho.com/api/v1/communityTopics/4000000019003/attachments/4000000019027/content?orgId=123456\"\n  } ],\n  \"isFollowing\" : false,\n  \"subject\" : \"Topic 1\",\n  \"isModerated\" : false,\n  \"likeCount\" : \"1\",\n  \"label\" : \"NOSTATUS\",\n  \"isVoted\" : true,\n  \"type\" : \"QUESTION\",\n  \"isSticky\" : false,\n  \"bestCommentId\" : null,\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\",\n  \"commentCount\" : \"2\",\n  \"portalUrl\" : \"https://desk.zoho.com/portal/portalname/community/topictopic-1\",\n  \"isLocked\" : false,\n  \"createdTime\" : \"2018-10-16T09:41:33.202Z\",\n  \"followersCount\" : \"0\",\n  \"tag\" : [ {\n    \"name\" : \"tag1\",\n    \"permalink\" : \"tag1\"\n  }, {\n    \"name\" : \"tag2\",\n    \"permalink\" : \"tag2\"\n  } ],\n  \"id\" : \"4000000019003\",\n  \"permalink\" : \"topic-1\",\n  \"categoryId\" : \"4000000000017\",\n  \"status\" : \"PUBLISHED\",\n  \"isTicketCreated\" : false\n}"
						}
					]
				},
				{
					"name": "Get topic by permalink",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopicByPermalink?permalink=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopicByPermalink"
							],
							"query": [
								{
									"key": "permalink",
									"value": "<String>\n",
									"description": "permalink of the topic"
								}
							]
						},
						"description": "This API fetches a forum topic, based on the permalink in the API request.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "Get topic by permalink",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopicByPermalink?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopicByPermalink"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"creator\" : {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 1\",\n    \"id\" : \"7000000015971\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"END_USER\"\n  },\n  \"attachments\" : [ {\n    \"size\" : \"1166\",\n    \"name\" : \"download.png\",\n    \"id\" : \"4000000019027\",\n    \"href\" : \"https://desk.zoho.com/api/v1/communityTopics/4000000019003/attachments/4000000019027/content?orgId=123456\"\n  } ],\n  \"isFollowing\" : false,\n  \"subject\" : \"Topic 1\",\n  \"isModerated\" : false,\n  \"likeCount\" : \"1\",\n  \"label\" : \"NOSTATUS\",\n  \"isVoted\" : true,\n  \"type\" : \"QUESTION\",\n  \"isSticky\" : false,\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\",\n  \"bestCommentId\" : null,\n  \"commentCount\" : \"2\",\n  \"portalUrl\" : \"https://desk.zoho.com/portal/portalname/community/topictopic-1\",\n  \"isLocked\" : false,\n  \"createdTime\" : \"2018-10-16T09:41:33.202Z\",\n  \"followersCount\" : \"0\",\n  \"tag\" : [ {\n    \"name\" : \"tag1\",\n    \"permalink\" : \"tag1\"\n  }, {\n    \"name\" : \"tag2\",\n    \"permalink\" : \"tag2\"\n  } ],\n  \"id\" : \"4000000019003\",\n  \"permalink\" : \"topic-1\",\n  \"categoryId\" : \"4000000000017\",\n  \"status\" : \"PUBLISHED\",\n  \"isTicketCreated\" : false\n}"
						}
					]
				},
				{
					"name": "Add topic",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics"
							]
						},
						"description": "This API helps add a forum topic in the user community.\n#### OAuth Scope\n- `Desk.community.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| subject (required) | &lt;String&gt;<br /> | Title of the topic \n| permalink  | &lt;String&gt;<br /> | permalink of the topic to be created \n| content (required) | &lt;String&gt;<br /> | Body content of the topic \n| type (required) | &lt;String&gt;<br /> | Type of topic. Values allowed are: `ANNOUNCEMENT`, `DISCUSSION`, `IDEA`, `PROBLEM`, and `QUESTION`. \n| categoryId (required) | &lt;long&gt;<br /> | ID of the community category in which the topic must be posted \n| isSticky  | &lt;boolean&gt;<br /> | Key that defines whether the topic must be pinned to the topics list page or not \n| notifyMe  | &lt;boolean&gt;<br /> | Key that defines whether the creator of the topic must be notified about further user actions on the topic or not \n| attachmentIds  | &lt;JSONArray&gt;<br /> | IDs of files to attach to the topic \n| tags  | &lt;JSONArray&gt;<br /> | Tag phrases \n| mailTo  | &lt;JSONArray&gt;<br /> | Email IDs to which the topic must be sent after publishing \n"
					},
					"response": [
						{
							"name": "Add topic",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subject\" : \"Topic 1\",\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"mailTo\" : [ \"carol@zylker.com\" ],\n  \"type\" : \"QUESTION\",\n  \"isSticky\" : \"false\",\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\",\n  \"categoryId\" : \"4000000000017\",\n  \"notifyMe\" : \"false\",\n  \"tags\" : [ \"tag1\", \"tag2\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"creator\" : {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 1\",\n    \"id\" : \"7000000015971\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\"\n  },\n  \"attachments\" : [ {\n    \"size\" : \"1166\",\n    \"name\" : \"download.png\",\n    \"id\" : \"4000000019027\",\n    \"href\" : \"https://desk.zoho.com/api/v1/communityTopics/4000000019003/attachments/4000000019027/content?orgId=123456\"\n  } ],\n  \"isFollowing\" : false,\n  \"subject\" : \"Topic 1\",\n  \"isModerated\" : false,\n  \"likeCount\" : \"1\",\n  \"label\" : \"NOSTATUS\",\n  \"isVoted\" : true,\n  \"type\" : \"QUESTION\",\n  \"isSticky\" : false,\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\",\n  \"bestCommentId\" : null,\n  \"commentCount\" : \"2\",\n  \"portalUrl\" : \"https://desk.zoho.com/portal/portalname/community/topictopic-1\",\n  \"isLocked\" : false,\n  \"createdTime\" : \"2018-10-16T09:41:33.202Z\",\n  \"followersCount\" : \"0\",\n  \"tag\" : [ {\n    \"name\" : \"tag1\",\n    \"permalink\" : \"tag1\"\n  }, {\n    \"name\" : \"tag2\",\n    \"permalink\" : \"tag2\"\n  } ],\n  \"id\" : \"4000000019003\",\n  \"permalink\" : \"topic-1\",\n  \"categoryId\" : \"4000000000017\",\n  \"status\" : \"PUBLISHED\",\n  \"isTicketCreated\" : false\n}"
						}
					]
				},
				{
					"name": "Update topic",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API helps update a published forum topic.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| subject  | &lt;String&gt;<br /> | Title of the topic \n| content  | &lt;String&gt;<br /> | Body content of the topic \n| isSticky  | &lt;boolean&gt;<br /> | Key that defines whether the topic must be pinned to the topics list page or not \n| type  | &lt;String&gt;<br /> | Type of topic. Values allowed are: `ANNOUNCEMENT`, `DISCUSSION`, `IDEA`, `PROBLEM`, and `QUESTION`. \n| attachmentIds  | &lt;JSONArray&gt;<br /> | IDs of files to attach to the topic \n| label  | &lt;String&gt;<br /> | Status label of the topic. The value of this key varies according to the topic type. Values allowed are: `NOSTATUS`, `NEEDMOREINFO`, `WORKINGONIT`, `ANSWERED`, `UNANSWERED`, `MAYBELATER`, `UNDERREVIEW`, `IMPLEMENTED`, `WILLNOTIMPLEMENT`, `NOTAPROBLEM`, `TEMPORARYFIX`, `ANALYZING`, `SOLVED`, `UNSOLVED`, and `MOSTVOTED`. \n| notifyMentions  | &lt;boolean&gt;<br />default : false | whether to notify mentioned user while updateing content. \n"
					},
					"response": [
						{
							"name": "Update topic",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subject\" : \"Topic 1\",\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"type\" : \"QUESTION\",\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"creator\" : {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 1\",\n    \"id\" : \"7000000015971\",\n    \"label\" : null,\n    \"type\" : \"AGENT\"\n  },\n  \"attachments\" : [ {\n    \"size\" : \"1166\",\n    \"name\" : \"download.png\",\n    \"id\" : \"4000000019027\",\n    \"href\" : \"https://desk.zoho.com/api/v1/communityTopics/4000000019003/attachments/4000000019027/content?orgId=123456\"\n  } ],\n  \"isFollowing\" : false,\n  \"subject\" : \"Topic 1\",\n  \"isModerated\" : false,\n  \"likeCount\" : \"1\",\n  \"label\" : \"NOSTATUS\",\n  \"isVoted\" : true,\n  \"type\" : \"QUESTION\",\n  \"isSticky\" : false,\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\",\n  \"bestCommentId\" : null,\n  \"commentCount\" : \"2\",\n  \"portalUrl\" : \"https://desk.zoho.com/portal/portalname/community/topictopic-1\",\n  \"isLocked\" : false,\n  \"createdTime\" : \"2018-10-16T09:41:33.202Z\",\n  \"followersCount\" : \"0\",\n  \"tag\" : [ {\n    \"name\" : \"tag1\",\n    \"permalink\" : \"tag1\"\n  }, {\n    \"name\" : \"tag2\",\n    \"permalink\" : \"tag2\"\n  } ],\n  \"id\" : \"4000000019003\",\n  \"permalink\" : \"topic-1\",\n  \"categoryId\" : \"4000000000017\",\n  \"status\" : \"PUBLISHED\",\n  \"isTicketCreated\" : false\n}"
						}
					]
				},
				{
					"name": "Add comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"comments"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API helps add a comment to a forum topic.\n#### OAuth Scope\n- `Desk.community.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| content (required) | &lt;string&gt;<br />max chars : 50000 | Content of the comment \n| attachmentIds  | &lt;JSONArray&gt;<br /> | IDs of files to attach to the comment \n"
					},
					"response": [
						{
							"name": "Add comment",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"content\" : \"Comment 1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/comments?orgId=1233456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"comments"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1233456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2018-10-16T10:21:00.386Z\",\n  \"creator\" : {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 2\",\n    \"id\" : \"7000000015971\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\"\n  },\n  \"attachments\" : [ {\n    \"size\" : \"1166\",\n    \"name\" : \"download.png\",\n    \"id\" : \"4000000019027\",\n    \"href\" : \"https://desk.zoho.com/api/v1/communityTopics/4000000019003/comments/4000000019029/attachments/4000000019027/content?orgId=123456\"\n  } ],\n  \"replies\" : [ ],\n  \"createdTime\" : \"2018-10-16T10:21:00.386Z\",\n  \"id\" : \"4000000019029\",\n  \"content\" : \"Comment 1\",\n  \"status\" : \"PUBLISHED\"\n}"
						}
					]
				},
				{
					"name": "Add reply",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/comments/{id}/replies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"comments",
								"{id}",
								"replies"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API helps add a reply to a comment on a forum topic.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| content (required) | &lt;string&gt;<br />max chars : 50000 | Content of the reply \n| attachmentIds  | &lt;JSONArray&gt;<br /> | IDs of files to attach to the reply \n"
					},
					"response": [
						{
							"name": "Add reply",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"content\" : \"Reply 1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/comments/%7Bid%7D/replies?orgId=1233456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"comments",
										"%7Bid%7D",
										"replies"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1233456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2018-10-16T10:21:00.386Z\",\n  \"creator\" : {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 2\",\n    \"id\" : \"7000000015971\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\"\n  },\n  \"attachments\" : [ {\n    \"size\" : \"1166\",\n    \"name\" : \"download.png\",\n    \"id\" : \"4000000019027\",\n    \"href\" : \"https://desk.zoho.com/api/v1/communityTopics/4000000019003/replies/4000000019031/attachments/4000000019027/content?orgId=123456\"\n  } ],\n  \"createdTime\" : \"2018-10-16T10:21:00.386Z\",\n  \"parentCommentId\" : \"4000000019029\",\n  \"id\" : \"4000000019031\",\n  \"content\" : \"Reply 1\",\n  \"status\" : \"PUBLISHED\"\n}"
						}
					]
				},
				{
					"name": "Update comment",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/comments/{id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"comments",
								"{id}"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API helps update a published comment.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| content  | &lt;string&gt;<br />max chars : 50000 | Content of the comment/reply \n| attachmentIds  | &lt;JSONArray&gt;<br /> | Ids of the attachments added for this topic \n| isBestComment  | &lt;boolean&gt;<br /> | Key that defines whether the comment is the best comment recorded on the topic. A topic can have only on best comment.  \n| notifyMentions  | &lt;boolean&gt;<br />default : false | whether to notify mentioned user while updateing content. \n"
					},
					"response": [
						{
							"name": "Update comment",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"content\" : \"Comment updated 1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/comments/%7Bid%7D?orgId=1233456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"comments",
										"%7Bid%7D"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1233456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2018-10-16T10:21:00.386Z\",\n  \"creator\" : {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 2\",\n    \"id\" : \"7000000015971\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\"\n  },\n  \"attachments\" : [ {\n    \"size\" : \"1166\",\n    \"name\" : \"download.png\",\n    \"id\" : \"4000000019027\",\n    \"href\" : \"https://desk.zoho.com/api/v1/communityTopics/4000000019003/comments/4000000019031/attachments/4000000019027/content?orgId=123456\"\n  } ],\n  \"replies\" : [ ],\n  \"createdTime\" : \"2018-10-16T10:21:00.386Z\",\n  \"id\" : \"4000000019031\",\n  \"content\" : \"Comment updated 1\",\n  \"status\" : \"PUBLISHED\"\n}"
						}
					]
				},
				{
					"name": "Update reply",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/comments/{id}/replies/{id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"comments",
								"{id}",
								"replies",
								"{id}"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API helps update a published reply.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| content  | &lt;string&gt;<br />max chars : 50000 | Content of the comment/reply \n| attachmentIds  | &lt;JSONArray&gt;<br /> | Ids of the attachments added for this topic \n| isBestComment  | &lt;boolean&gt;<br /> | Key that defines whether the comment is the best comment recorded on the topic. A topic can have only on best comment.  \n| notifyMentions  | &lt;boolean&gt;<br />default : false | whether to notify mentioned user while updateing content. \n"
					},
					"response": [
						{
							"name": "Update reply",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"content\" : \"Reply updated 1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/comments/%7Bid%7D/replies?orgId=1233456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"comments",
										"%7Bid%7D",
										"replies"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1233456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2018-10-16T10:21:00.386Z\",\n  \"creator\" : {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 2\",\n    \"id\" : \"7000000015971\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    }\n  },\n  \"attachments\" : [ {\n    \"size\" : \"1166\",\n    \"name\" : \"download.png\",\n    \"id\" : \"4000000019027\",\n    \"href\" : \"https://desk.zoho.com/api/v1/communityTopics/4000000019003/replies/4000000019031/attachments/4000000019027/content?orgId=123456\"\n  } ],\n  \"createdTime\" : \"2018-10-16T10:21:00.386Z\",\n  \"parentCommentId\" : \"4000000019029\",\n  \"id\" : \"4000000019031\",\n  \"content\" : \"Reply updated 1\",\n  \"status\" : \"PUBLISHED\"\n}"
						}
					]
				},
				{
					"name": "List topic comments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"comments"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 1,",
									"description": "Index number, starting from which the comments must be listed ",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 10,",
									"description": "Number of comments to list",
									"disabled": true
								},
								{
									"key": "latestCommentsFirst",
									"value": "<boolean>\ndefault : false",
									"description": "Key that defines the listing order of the comments. Setting `TRUE` lists the latest comments first (descending order) and setting `FALSE` lists the oldest comments first (ascending order).",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API lists a particular number of comments on a topic, based on the limit defined.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "List topic comments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/comments?orgId=1233456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"comments"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1233456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2018-10-16T10:29:15.219Z\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user1\",\n      \"id\" : \"7000000015971\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      }\n    },\n    \"attachments\" : [ {\n      \"size\" : \"1166\",\n      \"name\" : \"download (1).png\",\n      \"id\" : \"4000000019033\",\n      \"href\" : \"https://desk.zoho.com/api/v1/topics/4000000019003/comments/4000000019013/attachments/4000000019033/content?orgId=123456\"\n    } ],\n    \"replies\" : [ ],\n    \"createdTime\" : \"2018-10-16T09:41:40.077Z\",\n    \"id\" : \"4000000019013\",\n    \"content\" : \"<div>comment 1<br /></div>\",\n    \"status\" : \"PUBLISHED\"\n  }, {\n    \"modifiedTime\" : \"2018-10-16T10:28:59.495Z\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user 1\",\n      \"id\" : \"7000000015971\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      }\n    },\n    \"attachments\" : [ ],\n    \"replies\" : [ {\n      \"modifiedTime\" : \"2018-10-16T10:22:46.893Z\",\n      \"creator\" : {\n        \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n        \"name\" : \"user 1\",\n        \"id\" : \"7000000015971\",\n        \"label\" : {\n          \"preferences\" : {\n            \"shape\" : \"RECTANGLE\",\n            \"bgColor\" : \"#23F123\",\n            \"textColor\" : \"#2CA123\"\n          },\n          \"name\" : \"Admin\",\n          \"id\" : \"6000000158001\",\n          \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n        }\n      },\n      \"attachments\" : [ ],\n      \"createdTime\" : \"2018-10-16T10:22:46.893Z\",\n      \"parentCommentId\" : \"4000000019029\",\n      \"id\" : \"4000000019031\",\n      \"content\" : \"test 3\",\n      \"status\" : \"PUBLISHED\"\n    } ],\n    \"createdTime\" : \"2018-10-16T10:21:00.386Z\",\n    \"id\" : \"4000000019029\",\n    \"content\" : \"<div>comment 3</div>\",\n    \"status\" : \"PUBLISHED\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get topic comment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/comments/([0-9]+)",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"comments",
								"([0-9]+)"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API fetches a comment received on a topic.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "Get topic comment",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/comments/%7Bid%7D?orgId=1233456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"comments",
										"%7Bid%7D"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1233456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2018-10-16T10:29:15.219Z\",\n  \"creator\" : {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 1\",\n    \"id\" : \"7000000015971\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    }\n  },\n  \"attachments\" : [ {\n    \"size\" : \"1166\",\n    \"name\" : \"download (1).png\",\n    \"id\" : \"4000000019033\",\n    \"href\" : \"https://desk.zoho.com/api/v1/topics/4000000019003/comments/4000000019013/attachments/4000000019033/content?orgId=123456\"\n  } ],\n  \"replies\" : [ {\n    \"modifiedTime\" : \"2018-10-16T10:34:34.114Z\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user 1\",\n      \"id\" : \"7000000015971\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      }\n    },\n    \"attachments\" : [ {\n      \"size\" : \"1166\",\n      \"name\" : \"download (1).png\",\n      \"id\" : \"4000000019037\",\n      \"href\" : \"https://desk.zoho.com/api/v1/topics/4000000019003/comments/4000000019035/attachments/4000000019037/content?orgId=123456\"\n    } ],\n    \"createdTime\" : \"2018-10-16T10:34:20.858Z\",\n    \"parentCommentId\" : \"4000000019013\",\n    \"id\" : \"4000000019035\",\n    \"content\" : \"<div>test 3<br /></div>\",\n    \"status\" : \"PUBLISHED\"\n  } ],\n  \"createdTime\" : \"2018-10-16T09:41:40.077Z\",\n  \"id\" : \"4000000019013\",\n  \"content\" : \"<div>comment 1<br /></div>\",\n  \"status\" : \"PUBLISHED\"\n}"
						}
					]
				},
				{
					"name": "Trash comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/comments/{id}/moveToTrash",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"comments",
								"{id}",
								"moveToTrash"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API deletes a comment from a topic.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Trash comment",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/comments/%7Bid%7D/moveToTrash?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"comments",
										"%7Bid%7D",
										"moveToTrash"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Trash reply",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/comments/{id}/replies/{id}/moveToTrash",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"comments",
								"{id}",
								"replies",
								"{id}",
								"moveToTrash"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API deletes a reply to a topic comment.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Trash reply",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/comments/%7Bid%7D/replies/%7Bid%7D/moveToTrash?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"comments",
										"%7Bid%7D",
										"replies",
										"%7Bid%7D",
										"moveToTrash"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add attachment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityAttachments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityAttachments"
							]
						},
						"description": "This API uploads files to the storage space allocated for the community module.\n#### OAuth Scope\n- `Desk.community.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n"
					},
					"response": [
						{
							"name": "Add attachment",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityAttachments?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityAttachments"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"size\" : \"1024\",\n  \"name\" : \"attachment.jpeg\",\n  \"id\" : \"1004\"\n}"
						}
					]
				},
				{
					"name": "Get topic attachment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/attachments/{id}/content",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"attachments",
								"{id}",
								"content"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API fetches a file attachment from a topic.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "Get topic attachment",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/attachments/%7Bid%7D/content?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"attachments",
										"%7Bid%7D",
										"content"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get comment attachment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/comments/{id}/attachments/{id}/content",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"comments",
								"{id}",
								"attachments",
								"{id}",
								"content"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API fetches a file attachment from a topic comment.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "Get comment attachment",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/comments/%7Bid%7D/attachments/%7Bid%7D/content?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"comments",
										"%7Bid%7D",
										"attachments",
										"%7Bid%7D",
										"content"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get reply attachment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/replies/{id}/attachments/{id}/content",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"replies",
								"{id}",
								"attachments",
								"{id}",
								"content"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API fetches a file attachment from a reply to a topic comment.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "Get reply attachment",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/replies/%7Bid%7D/attachments/%7Bid%7D/content?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"replies",
										"%7Bid%7D",
										"attachments",
										"%7Bid%7D",
										"content"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Report topic as spam",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/markSpam",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"markSpam"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API marks a forum topic as spam.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| reason (required) | &lt;String&gt;<br /> | Reason for marking the topic as spam \n"
					},
					"response": [
						{
							"name": "Report topic as spam",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"reason\" : \"Reason for marking a topic as spam\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/markSpam?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"markSpam"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Report multiple topics as spam",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/community/markAllTopicsAsSpam",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"community",
								"markAllTopicsAsSpam"
							]
						},
						"description": "This API marks multiple forum topics as spam.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| topicIds (required) | &lt;JSONArray&gt;<br /> | IDs of the topics that must be marked as spam \n| reason (required) | &lt;String&gt;<br /> | Reason for marking the topic as spam \n"
					},
					"response": [
						{
							"name": "Report multiple topics as spam",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"reason\" : \"Reason for marking a topic as spam\",\n  \"topicIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/community/markAllTopicsAsSpam?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"community",
										"markAllTopicsAsSpam"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : \"true\",\n    \"id\" : \"103417000000528003\",\n    \"errors\" : {\n      \"errorCode\" : \"SUCCESS\",\n      \"httpCode\" : \"200\"\n    }\n  }, {\n    \"success\" : \"true\",\n    \"id\" : \"103417000000528006\",\n    \"errors\" : {\n      \"errorCode\" : \"SUCCESS\",\n      \"httpCode\" : \"200\"\n    }\n  }, {\n    \"success\" : \"false\",\n    \"id\" : \"103417000000528008\",\n    \"errors\" : {\n      \"errorCode\" : \"UNAUTHORIZED\",\n      \"httpCode\" : \"401\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Report topic comment as spam",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/:id/comments/{id}/markSpam",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								":id",
								"comments",
								"{id}",
								"markSpam"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API marks a comment on a forum topic as spam.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| reason (required) | &lt;String&gt;<br /> | Reason for marking the topic as spam \n"
					},
					"response": [
						{
							"name": "Report topic comment as spam",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"reason\" : \"Reason for marking a topic as spam\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/comments/%7Bid%7D/markSpam?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"comments",
										"%7Bid%7D",
										"markSpam"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Report multiple comments as spam",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/community/markAllCommentsAsSpam",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"community",
								"markAllCommentsAsSpam"
							]
						},
						"description": "This API marks multiple comments on a forum topic as spam.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| commentIds (required) | &lt;JSONArray&gt;<br /> | IDs of the comments that must be marked as spam \n| reason (required) | &lt;String&gt;<br /> | Reason for marking the comment as spam \n"
					},
					"response": [
						{
							"name": "Report multiple comments as spam",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"reason\" : \"Reason for marking a topics comment as spam\",\n  \"commentIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/community/markAllCommentsAsSpam?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"community",
										"markAllCommentsAsSpam"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : \"true\",\n    \"id\" : \"103417000000528003\",\n    \"errors\" : {\n      \"errorCode\" : \"SUCCESS\",\n      \"httpCode\" : \"200\"\n    }\n  }, {\n    \"success\" : \"true\",\n    \"id\" : \"103417000000528006\",\n    \"errors\" : {\n      \"errorCode\" : \"SUCCESS\",\n      \"httpCode\" : \"200\"\n    }\n  }, {\n    \"success\" : \"false\",\n    \"id\" : \"103417000000528008\",\n    \"errors\" : {\n      \"errorCode\" : \"UNAUTHORIZED\",\n      \"httpCode\" : \"401\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Lock category or forum",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityCategory/([0-9]+)/lock",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityCategory",
								"([0-9]+)",
								"lock"
							]
						},
						"description": "This API locks a community category or forum and restricts posting access to users.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Lock category or forum",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityCategory/([0-9]+)/lock?orgId=1234567",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityCategory",
										"([0-9]+)",
										"lock"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1234567"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Enable category or forum",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityCategory/([0-9]+)/enable",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityCategory",
								"([0-9]+)",
								"enable"
							]
						},
						"description": "This API enables a community category or forum and provides posting access to users.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Enable category or forum",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityCategory/([0-9]+)/enable?orgId=1234567",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityCategory",
										"([0-9]+)",
										"enable"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1234567"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Disable category or forum",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityCategory/([0-9]+)/disable",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityCategory",
								"([0-9]+)",
								"disable"
							]
						},
						"description": "This API disables a community category or forum and restricts posting access to users.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Disable category or forum",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityCategory/([0-9]+)/disable?orgId=1234567",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityCategory",
										"([0-9]+)",
										"disable"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1234567"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Follow a category or forum",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityCategory/([0-9]+)/follow",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityCategory",
								"([0-9]+)",
								"follow"
							]
						},
						"description": "This API helps users to follow a community category or forum.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Follow a category or forum",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityCategory/([0-9]+)/follow?orgId=1234567",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityCategory",
										"([0-9]+)",
										"follow"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1234567"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Unfollow a category or forum",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityCategory/([0-9]+)/unfollow",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityCategory",
								"([0-9]+)",
								"unfollow"
							]
						},
						"description": "This API helps end-users unfollow a community category or forum.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Unfollow a category or forum",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityCategory/([0-9]+)/unfollow?orgId=1234567",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityCategory",
										"([0-9]+)",
										"unfollow"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1234567"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete forum",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityCategory/([0-9]+)",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityCategory",
								"([0-9]+)"
							]
						},
						"description": "This API deletes a forum from a community category. Keep in mind that only empty forums can be deleted.\n#### OAuth Scope\n- `Desk.community.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete forum",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityCategory/([0-9]+)?orgId=1234567",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityCategory",
										"([0-9]+)"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1234567"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Sort categories",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityCategory/sort",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityCategory",
								"sort"
							]
						},
						"description": "This API sorts community categories in a particular order.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| categoryIds (required) | &lt;JSONArray&gt;<br /> | IDs of the community categories that must be sorted \n"
					},
					"response": [
						{
							"name": "Sort categories",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"categoryIds\" : [ \"20628000000020011\", \"20628000000020012\", \"20628000000020013\", \"20628000000020014\", \"20628000000020015\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityCategory/sort?orgId=1234567",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityCategory",
										"sort"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1234567"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Sort forums",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityCategory/([0-9]+)/sort",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityCategory",
								"([0-9]+)",
								"sort"
							]
						},
						"description": "This API sorts forums in a particular order.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| categoryIds (required) | &lt;JSONArray&gt;<br /> | IDs of the forums that must be sorted \n"
					},
					"response": [
						{
							"name": "Sort forums",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"categoryIds\" : [ \"20628000000020011\", \"20628000000020012\", \"20628000000020013\", \"20628000000020014\", \"20628000000020015\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityCategory/([0-9]+)/sort?orgId=1234567",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityCategory",
										"([0-9]+)",
										"sort"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1234567"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get category or forum",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityCategory/([0-9]+)",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityCategory",
								"([0-9]+)"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the category or forum. Values allowed are: `postCount`, `followersCount`, and `commentCount`.",
									"disabled": true
								}
							]
						},
						"description": "This API fetches the details of a community category or forum.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "Get category or forum",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityCategory/([0-9]+)?orgId=1234567",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityCategory",
										"([0-9]+)"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1234567"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"isFollowing\" : \"true\",\n  \"visibility\" : \"ALL_USERS\",\n  \"departmentId\" : \"20628000000020011\",\n  \"description\" : \"description\",\n  \"canAutoConvertTicket\" : true,\n  \"childs\" : [ {\n    \"isFollowing\" : false,\n    \"visibility\" : \"ALL_USERS\",\n    \"departmentId\" : null,\n    \"description\" : \"forum 1\",\n    \"canAutoConvertTicket\" : null,\n    \"commentCount\" : \"491\",\n    \"associatedDepartmentIds\" : [ \"20628000000020011\" ],\n    \"photoUrl\" : null,\n    \"view\" : {\n      \"groupIds\" : [ ],\n      \"permission\" : \"ALL_USERS\"\n    },\n    \"post\" : {\n      \"groupIds\" : [ ],\n      \"permission\" : \"ALL_USERS\"\n    },\n    \"permissions\" : [ \"POST\", \"RESPOND\" ],\n    \"moderation\" : null,\n    \"name\" : \"forum\",\n    \"deparmentIdForTicketCreation\" : \"20628000000020011\",\n    \"postCount\" : \"246\",\n    \"parentCategoryId\" : \"4000000003037\",\n    \"id\" : \"4000000012009\",\n    \"position\" : \"1\",\n    \"followersCount\" : \"38\",\n    \"permalink\" : \"forum-43\",\n    \"respond\" : {\n      \"groupIds\" : [ ],\n      \"permission\" : \"ALL_USERS\"\n    },\n    \"child\" : [ ],\n    \"moderators\" : [ ],\n    \"status\" : \"ENABLED\"\n  } ],\n  \"commentCount\" : \"491\",\n  \"associatedDepartmentIds\" : [ \"20628000000020011\" ],\n  \"photoUrl\" : null,\n  \"view\" : {\n    \"groupIds\" : [ ],\n    \"permission\" : \"ALL_USERS\"\n  },\n  \"post\" : {\n    \"groupIds\" : [ ],\n    \"permission\" : \"ALL_USERS\"\n  },\n  \"permissions\" : [ \"POST\", \"RESPOND\" ],\n  \"moderation\" : \"NONE\",\n  \"name\" : \"new dep\",\n  \"deparmentIdForTicketCreation\" : \"20628000000020011\",\n  \"postCount\" : \"246\",\n  \"parentCategoryId\" : \"null\",\n  \"id\" : \"20628000000020011\",\n  \"position\" : \"1\",\n  \"followersCount\" : \"38\",\n  \"permalink\" : \"new-dep\",\n  \"respond\" : {\n    \"groupIds\" : [ ],\n    \"permission\" : \"ALL_USERS\"\n  },\n  \"status\" : \"ENABLED\",\n  \"moderators\" : [ {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 2\",\n    \"id\" : \"7000000015971\",\n    \"type\" : \"AGENT\"\n  }, {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015972/photo?orgId=123456\",\n    \"name\" : \"user 3\",\n    \"id\" : \"7000000015972\",\n    \"type\" : \"AGENT\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get category or forum by permalink",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityCategoryByPermalink?permalink=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityCategoryByPermalink"
							],
							"query": [
								{
									"key": "permalink",
									"value": "<String>\n",
									"description": "Permalink of the category or forum to fetch"
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the category or forum. Values allowed are: `postCount`, `followersCount`, and `commentCount`.",
									"disabled": true
								}
							]
						},
						"description": "This API fetches the details of a community category or forum, based on the permalink in the API request.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "Get category or forum by permalink",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityCategoryByPermalink?orgId=1234567",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityCategoryByPermalink"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1234567"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"isFollowing\" : \"true\",\n  \"visibility\" : \"ALL_USERS\",\n  \"departmentId\" : \"20628000000020011\",\n  \"description\" : \"description\",\n  \"canAutoConvertTicket\" : true,\n  \"childs\" : [ {\n    \"isFollowing\" : false,\n    \"visibility\" : \"ALL_USERS\",\n    \"departmentId\" : null,\n    \"description\" : \"forum 1\",\n    \"canAutoConvertTicket\" : null,\n    \"commentCount\" : \"491\",\n    \"associatedDepartmentIds\" : [ \"20628000000020011\" ],\n    \"photoUrl\" : null,\n    \"view\" : {\n      \"groupIds\" : [ ],\n      \"permission\" : \"ALL_USERS\"\n    },\n    \"post\" : {\n      \"groupIds\" : [ ],\n      \"permission\" : \"ALL_USERS\"\n    },\n    \"permissions\" : [ \"POST\", \"RESPOND\" ],\n    \"moderation\" : null,\n    \"name\" : \"forum\",\n    \"deparmentIdForTicketCreation\" : \"20628000000020011\",\n    \"postCount\" : \"246\",\n    \"parentCategoryId\" : \"4000000003037\",\n    \"id\" : \"4000000012009\",\n    \"position\" : \"1\",\n    \"followersCount\" : \"38\",\n    \"permalink\" : \"forum-43\",\n    \"respond\" : {\n      \"groupIds\" : [ ],\n      \"permission\" : \"ALL_USERS\"\n    },\n    \"child\" : [ ],\n    \"moderators\" : [ ],\n    \"status\" : \"ENABLED\"\n  } ],\n  \"commentCount\" : \"491\",\n  \"associatedDepartmentIds\" : [ \"20628000000020011\" ],\n  \"photoUrl\" : null,\n  \"view\" : {\n    \"groupIds\" : [ ],\n    \"permission\" : \"ALL_USERS\"\n  },\n  \"post\" : {\n    \"groupIds\" : [ ],\n    \"permission\" : \"ALL_USERS\"\n  },\n  \"permissions\" : [ \"POST\", \"RESPOND\" ],\n  \"moderation\" : \"NONE\",\n  \"name\" : \"new dep\",\n  \"deparmentIdForTicketCreation\" : \"20628000000020011\",\n  \"postCount\" : \"246\",\n  \"parentCategoryId\" : \"null\",\n  \"id\" : \"20628000000020011\",\n  \"position\" : \"1\",\n  \"followersCount\" : \"38\",\n  \"permalink\" : \"new-dep\",\n  \"respond\" : {\n    \"groupIds\" : [ ],\n    \"permission\" : \"ALL_USERS\"\n  },\n  \"status\" : \"ENABLED\",\n  \"moderators\" : [ {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 2\",\n    \"id\" : \"7000000015971\",\n    \"type\" : \"AGENT\"\n  }, {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015972/photo?orgId=123456\",\n    \"name\" : \"user 3\",\n    \"id\" : \"7000000015972\",\n    \"type\" : \"AGENT\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Add forum",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityCategory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityCategory"
							]
						},
						"description": "This API adds a forum in a community category.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name  | &lt;String&gt;<br /> | Name of the forum \n| parentCategoryId  | &lt;long&gt;<br /> | ID of the community category under which the forum must be added \n| description  | &lt;String&gt;<br /> | A brief description of the community category or forum \n| visibility  | &lt;String&gt;<br /> | Visibility setting of the community category or forum. Values allowed are: `ALL`, `LOGGED_IN_USERS`, `GROUPS` and `MODERATORS`. \n| post  | &lt;JSONObject&gt;<br /> | Post permission setting of the community category or forum. \n| respond  | &lt;JSONObject&gt;<br /> | Respond permission setting of the community category or forum. \n| groupIds  | &lt;JSONArray&gt;<br /> | Group Ids to associate \n| moderation  | &lt;String&gt;<br /> | Moderation setting for the community category or forum. Values allowed are: `NONE` (no moderation), `ALL_POSTS` (all posts of category will be moderated) and `FIRST_POST` (only the first forum post of users will be moderated). \n| canAutoConvertTicket  | &lt;boolean&gt;<br /> | Key that defines whether topics posted in the forum must be automatically converted into tickets or not \n| associatedDepartmentIds  | &lt;JSONArray&gt;<br /> | IDs of the deparments to be associated with category \n| deparmentIdForTicketCreation  | &lt;long&gt;<br /> | ID of the deparment in which the ticket must be created \n| logoId  | &lt;long&gt;<br /> | ID of the uploaded community category logo \n"
					},
					"response": [
						{
							"name": "Add forum",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"visibility\" : \"GROUPS\",\n  \"description\" : \"forum 1\",\n  \"canAutoConvertTicket\" : \"true\",\n  \"associatedDepartmentIds\" : [ \"20628000000020011\" ],\n  \"post\" : {\n    \"groupIds\" : [ \"20628000000020011\" ],\n    \"permission\" : \"GROUPS\"\n  },\n  \"moderation\" : \"FIRST_POST\",\n  \"groupIds\" : [ \"700000001671\" ],\n  \"name\" : \"forum\",\n  \"deparmentIdForTicketCreation\" : \"20628000000020011\",\n  \"parentCategoryId\" : \"4000000003037\",\n  \"respond\" : {\n    \"groupIds\" : [ \"20628000000020011\" ],\n    \"permission\" : \"GROUPS\"\n  },\n  \"logoId\" : \"4000000012019\",\n  \"moderators\" : [ \"7000000015971\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityCategory?orgId=1234567",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityCategory"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1234567"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"isFollowing\" : false,\n  \"visibility\" : \"GROUPS\",\n  \"departmentId\" : \"20628000000020011\",\n  \"groups\" : [ \"700000001671\" ],\n  \"description\" : \"forum 1\",\n  \"canAutoConvertTicket\" : \"true\",\n  \"associatedDepartmentIds\" : [ \"20628000000020011\" ],\n  \"photoUrl\" : \"https://desk.zoho.com/api/v1/communityCategory/4000000012009/logo/4000000012019?orgId=1234567\",\n  \"post\" : {\n    \"groupIds\" : [ \"20628000000020011\" ],\n    \"permission\" : \"GROUPS\"\n  },\n  \"permissions\" : [ \"POST\", \"RESPOND\" ],\n  \"moderation\" : \"FIRST_POST\",\n  \"name\" : \"forum\",\n  \"deparmentIdForTicketCreation\" : \"20628000000020011\",\n  \"parentCategoryId\" : \"4000000003037\",\n  \"id\" : \"4000000012009\",\n  \"position\" : \"1\",\n  \"permalink\" : \"forum-1\",\n  \"respond\" : {\n    \"groupIds\" : [ \"20628000000020011\" ],\n    \"permission\" : \"GROUPS\"\n  },\n  \"child\" : [ ],\n  \"moderators\" : [ ],\n  \"status\" : \"ENABLED\"\n}"
						}
					]
				},
				{
					"name": "List categories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityCategory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityCategory"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the categories. Values allowed are: postCount, followersCount, and commentCount.",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of community categories.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "List categories",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityCategory?orgId=1234567",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityCategory"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1234567"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"categories\" : [ {\n    \"isFollowing\" : true,\n    \"visibility\" : \"LOGGED_IN_USERS\",\n    \"departmentId\" : \"2000000012968\",\n    \"description\" : \"category\",\n    \"canAutoConvertTicket\" : false,\n    \"photoUrl\" : null,\n    \"permissions\" : [ \"POST\", \"RESPOND\" ],\n    \"moderation\" : \"NONE\",\n    \"name\" : \"category\",\n    \"parentCategoryId\" : null,\n    \"id\" : \"4000000000017\",\n    \"position\" : \"1\",\n    \"permalink\" : \"category\",\n    \"child\" : [ {\n      \"isFollowing\" : false,\n      \"visibility\" : null,\n      \"departmentId\" : null,\n      \"description\" : \"Forum 1\",\n      \"canAutoConvertTicket\" : null,\n      \"photoUrl\" : null,\n      \"permissions\" : [ \"POST\", \"RESPOND\" ],\n      \"moderation\" : null,\n      \"name\" : \"forum 1\",\n      \"parentCategoryId\" : \"4000000000017\",\n      \"id\" : \"4000000000033\",\n      \"position\" : \"1\",\n      \"permalink\" : \"forum-1\",\n      \"child\" : [ ],\n      \"moderators\" : [ ],\n      \"status\" : \"ENABLED\"\n    } ],\n    \"moderators\" : [ {\n      \"photoUrl\" : null,\n      \"name\" : \"User 1\",\n      \"id\" : \"2000000016079\",\n      \"type\" : \"AGENT\"\n    } ],\n    \"status\" : \"ENABLED\"\n  }, {\n    \"isFollowing\" : false,\n    \"visibility\" : \"LOGGED_IN_USERS\",\n    \"departmentId\" : null,\n    \"description\" : \"\",\n    \"canAutoConvertTicket\" : true,\n    \"photoUrl\" : null,\n    \"permissions\" : [ \"POST\", \"RESPOND\" ],\n    \"moderation\" : \"FIRST_POST\",\n    \"name\" : \"Dep 2\",\n    \"parentCategoryId\" : null,\n    \"id\" : \"4000000002005\",\n    \"position\" : \"2\",\n    \"permalink\" : \"dep-2\",\n    \"child\" : [ ],\n    \"moderators\" : [ ],\n    \"status\" : \"ENABLED\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Update category or forum",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityCategory/([0-9]+)",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityCategory",
								"([0-9]+)"
							]
						},
						"description": "This API updates the details of a category or forum.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name  | &lt;String&gt;<br /> | Name of the community category or forum \n| description  | &lt;String&gt;<br /> | A brief description of the community category or forum \n| visibility  | &lt;String&gt;<br /> | Visibility setting of the community category or forum. Values allowed are: `ALL`, `LOGGED_IN_USERS`, `GROUPS` , `AGENTS` and `MODERATORS`. \n| post  | &lt;JSONObject&gt;<br /> | Post permission setting of the community category or forum. \n| respond  | &lt;JSONObject&gt;<br /> | Respond permission setting of the community category or forum. \n| moderators  | &lt;JSONArray&gt;<br /> | Agents who moderate the community category or forum \n| groupIds  | &lt;JSONArray&gt;<br /> | Group Ids to associate \n| moderation  | &lt;String&gt;<br /> | Moderation setting for the community category or forum. Values allowed are: `NONE` (no moderation), `ALL_POSTS` (all posts of category will be moderated) and `FIRST_POST` (only the first forum post of users will be moderated). \n| canAutoConvertTicket  | &lt;boolean&gt;<br /> | Key that defines whether topics posted in the forum must be automatically converted into tickets or not \n| associatedDepartmentIds  | &lt;JSONArray&gt;<br /> | IDs of the deparments to be associated with category \n| deparmentIdForTicketCreation  | &lt;long&gt;<br /> | ID of the deparment in which the ticket must be created \n| logoId  | &lt;long&gt;<br /> | ID of the uploaded community category logo \n"
					},
					"response": [
						{
							"name": "Update category or forum",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"visibility\" : \"GROUPS\",\n  \"post\" : {\n    \"groupIds\" : [ \"20628000000020011\" ],\n    \"permission\" : \"GROUPS\"\n  },\n  \"moderation\" : \"FIRST_POST\",\n  \"groupIds\" : [ \"700000001671\" ],\n  \"name\" : \"new dep updated\",\n  \"deparmentIdForTicketCreation\" : \"20628000000020011\",\n  \"description\" : \"description\",\n  \"canAutoConvertTicket\" : \"true\",\n  \"respond\" : {\n    \"groupIds\" : [ \"20628000000020011\" ],\n    \"permission\" : \"GROUPS\"\n  },\n  \"logoId\" : \"4000000012019\",\n  \"moderators\" : [ \"7000000015971\" ],\n  \"associatedDepartmentIds\" : [ \"20628000000020011\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityCategory/([0-9]+)?orgId=1234567",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityCategory",
										"([0-9]+)"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1234567"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"isFollowing\" : \"false\",\n  \"visibility\" : \"GROUP\",\n  \"departmentId\" : \"20628000000020011\",\n  \"description\" : \"description\",\n  \"groups\" : [ {\n    \"name\" : \"group - 1\",\n    \"id\" : \"700000001671\"\n  } ],\n  \"canAutoConvertTicket\" : true,\n  \"childs\" : [ ],\n  \"associatedDepartmentIds\" : [ \"20628000000020011\" ],\n  \"photoUrl\" : \"https://desk.zoho.com/api/v1/communityCategory/4000000012009/logo/4000000012019?orgId=1234567\",\n  \"post\" : {\n    \"groupIds\" : [ \"20628000000020011\" ],\n    \"permission\" : \"GROUPS\"\n  },\n  \"permissions\" : [ \"POST\", \"RESPOND\" ],\n  \"moderation\" : \"FIRST_POST\",\n  \"name\" : \"new dep updated\",\n  \"deparmentIdForTicketCreation\" : \"20628000000020011\",\n  \"parentCategoryId\" : \"null\",\n  \"id\" : \"20628000000020011\",\n  \"position\" : \"1\",\n  \"permalink\" : \"new-dep-updated-permalink\",\n  \"respond\" : {\n    \"groupIds\" : [ \"20628000000020011\" ],\n    \"permission\" : \"GROUPS\"\n  },\n  \"status\" : \"ENABLED\",\n  \"moderators\" : [ {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 2\",\n    \"id\" : \"7000000015971\",\n    \"type\" : \"AGENT\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get category logo",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityCategory/([0-9]+)/logo/([0-9]+)",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityCategory",
								"([0-9]+)",
								"logo",
								"([0-9]+)"
							]
						},
						"description": "This API fetches the logo of a community category.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "Get category logo",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityCategory/([0-9]+)/logo/([0-9]+)?orgId=1234567",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityCategory",
										"([0-9]+)",
										"logo",
										"([0-9]+)"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1234567"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List followers of category or forum",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityCategory/([0-9]+)/followers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityCategory",
								"([0-9]+)",
								"followers"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 1,",
									"description": "Index number, starting from which the users must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 10,",
									"description": "Number of users to list",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of users who follow a community category or forum, based on the limit defined.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "List followers of category or forum",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityCategory/([0-9]+)/followers?orgId=1234567",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityCategory",
										"([0-9]+)",
										"followers"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1234567"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 3\",\n    \"id\" : \"7000000015971\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\"\n  }, {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015972/photo?orgId=123456\",\n    \"name\" : \"user 2\",\n    \"id\" : \"7000000015972\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get topic types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopicTypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopicTypes"
							]
						},
						"description": "This API fetches the topic types defined in the user community of your help desk portal.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "Get topic types",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopicTypes?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopicTypes"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"defaultTopicType\" : \"QUESTION\",\n  \"enabledTopicTypes\" : [ \"DISCUSSION\", \"ANNOUNCEMENT\", \"QUESTION\" ],\n  \"disabledTopicTypes\" : [ \"IDEA\", \"PROBLEM\" ]\n}"
						}
					]
				},
				{
					"name": "Update topic type preferences",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopicTypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopicTypes"
							]
						},
						"description": "This API helps set the default topic type and enable/disable other topic types in the user community.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| defaultTopicType  | &lt;String&gt;<br /> | Topic type to set as the default option in the user community. Values allowed are: `DISCUSSION`, `IDEA`, `PROBLEM`, and `QUESTION`. \n| enabledTopicTypes  | &lt;JSONArray&gt;<br /> | Topic types to enable in the user community. Values allowed are: `DISCUSSION`, `IDEA`, `PROBLEM`, and `QUESTION`. \n"
					},
					"response": [
						{
							"name": "Update topic type preferences",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"defaultTopicType\" : \"QUESTION\",\n  \"enabledTopicTypes\" : [ \"DISCUSSION\", \"ANNOUNCEMENT\", \"QUESTION\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopicTypes?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopicTypes"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Disable topic type",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopicTypes/disable",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopicTypes",
								"disable"
							]
						},
						"description": "This API helps to disable topic types in the user community.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| changeExisitingTopicToType (required) | &lt;String&gt;<br /> | Topic type that should be applied to existing topics mapped to the disabled type. Values allowed are: `DISCUSSION`, `IDEA`, `PROBLEM`, and `QUESTION`. \n| type (required) | &lt;String&gt;<br /> | Topic type that must be disabled. Values allowed are: `DISCUSSION`, `IDEA`, `PROBLEM`, and `QUESTION`. \n"
					},
					"response": [
						{
							"name": "Disable topic type",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"changeExisitingTopicToType\" : \"PROBLEM\",\n  \"type\" : \"QUESTION\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopicTypes/disable?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopicTypes",
										"disable"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get community preferences",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityPreferences",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityPreferences"
							]
						},
						"description": "This API fetches the settings defined for the user community in your help desk portal.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "Get community preferences",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityPreferences?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityPreferences"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"landingPage\" : \"ALL_CATEGORY\"\n}"
						}
					]
				},
				{
					"name": "Set community preferences",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityPreferences",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityPreferences"
							]
						},
						"description": "This API helps define the settings for the user community in your help desk portal.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| landingPage (required) | &lt;String&gt;<br /> | Key that determines the content to display on the home page of the user community. Values allowed are: `ALLCATEGORIES` (all community categories are displayed), and `RECENTPOSTS` (only the latest topics in the community are displayed). \n"
					},
					"response": [
						{
							"name": "Set community preferences",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"landingPage\" : \"ALL_CATEGORY\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityPreferences?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityPreferences"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update user status in community",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityUsers/([0-9]+)",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityUsers",
								"([0-9]+)"
							]
						},
						"description": "This API updates the moderation status of end-users in the user community.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| isModerated  | &lt;boolean&gt;<br /> | Key that defines whether the user is moderated or not \n"
					},
					"response": [
						{
							"name": "Update user status in community",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isModerated\" : \"true\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityUsers/7000000015971?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityUsers",
										"7000000015971"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Follow user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityUsers/([0-9]+)/follow",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityUsers",
								"([0-9]+)",
								"follow"
							]
						},
						"description": "This API helps to follow users.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Follow user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityUsers/7000000015971/follow?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityUsers",
										"7000000015971",
										"follow"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Unfollow user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityUsers/([0-9]+)/unfollow",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityUsers",
								"([0-9]+)",
								"unfollow"
							]
						},
						"description": "This API helps to unfollow users.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Unfollow user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityUsers/7000000015971/unfollow?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityUsers",
										"7000000015971",
										"unfollow"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Approve topics",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/approve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								"approve"
							]
						},
						"description": "This API helps to approve topics and publish them on the forum.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| topicIds (required) | &lt;JSONArray&gt;<br /> | IDs of the topics that must be approved \n"
					},
					"response": [
						{
							"name": "Approve topics",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"topicIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/approve?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"approve"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : \"true\",\n    \"id\" : \"103417000000528003\",\n    \"errors\" : \"null\"\n  }, {\n    \"success\" : \"true\",\n    \"id\" : \"103417000000528006\",\n    \"errors\" : \"null\"\n  }, {\n    \"success\" : \"false\",\n    \"id\" : \"103417000000528008\",\n    \"errors\" : {\n      \"errorCode\" : \"FORBIDDEN\",\n      \"httpCode\" : \"403\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Restore trashed topics",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/restore",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								"restore"
							]
						},
						"description": "This API restores topics from trash.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| topicIds (required) | &lt;JSONArray&gt;<br /> | IDs of the topics that must be approved \n"
					},
					"response": [
						{
							"name": "Restore trashed topics",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"topicIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/restore?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"restore"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : \"true\",\n    \"id\" : \"103417000000528003\",\n    \"errors\" : \"null\"\n  }, {\n    \"success\" : \"true\",\n    \"id\" : \"103417000000528006\",\n    \"errors\" : \"null\"\n  }, {\n    \"success\" : \"false\",\n    \"id\" : \"103417000000528008\",\n    \"errors\" : \"null\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Trash unmoderated topics",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/moveToTrash",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								"moveToTrash"
							]
						},
						"description": "This API trashes forum topics that are yet to be moderated for publishing.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| topicIds (required) | &lt;JSONArray&gt;<br /> | IDs of the topics that must be approved \n"
					},
					"response": [
						{
							"name": "Trash unmoderated topics",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"topicIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/moveToTrash?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"moveToTrash"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : \"true\",\n    \"id\" : \"103417000000528003\",\n    \"errors\" : \"null\"\n  }, {\n    \"success\" : \"true\",\n    \"id\" : \"103417000000528006\",\n    \"errors\" : \"null\"\n  }, {\n    \"success\" : \"false\",\n    \"id\" : \"103417000000528008\",\n    \"errors\" : {\n      \"errorCode\" : \"FORBIDDEN\",\n      \"httpCode\" : \"403\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Permanently delete topics",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics"
							]
						},
						"description": "This API permanently deletes forum topics from the trash.\n#### OAuth Scope\n- `Desk.community.DELETE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| topicIds (required) | &lt;JSONArray&gt;<br /> | IDs of the topics that must be approved \n"
					},
					"response": [
						{
							"name": "Permanently delete topics",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"topicIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : \"true\",\n    \"id\" : \"103417000000528003\",\n    \"errors\" : \"null\"\n  }, {\n    \"success\" : \"true\",\n    \"id\" : \"103417000000528006\",\n    \"errors\" : \"null\"\n  }, {\n    \"success\" : \"false\",\n    \"id\" : \"103417000000528008\",\n    \"errors\" : \"null\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Approve comments",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityComments/approve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityComments",
								"approve"
							]
						},
						"description": "This API approves comments that are pending moderation.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| commentIds (required) | &lt;JSONArray&gt;<br /> | Array of comment ids  \n"
					},
					"response": [
						{
							"name": "Approve comments",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"commentIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityComments/approve?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityComments",
										"approve"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : \"true\",\n    \"id\" : \"103417000000528003\",\n    \"errors\" : \"null\"\n  }, {\n    \"success\" : \"true\",\n    \"id\" : \"103417000000528006\",\n    \"errors\" : \"null\"\n  }, {\n    \"success\" : \"false\",\n    \"id\" : \"103417000000528008\",\n    \"errors\" : {\n      \"errorCode\" : \"FORBIDDEN\",\n      \"httpCode\" : \"403\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Restore trashed comments",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityComments/restore",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityComments",
								"restore"
							]
						},
						"description": "This API restores comments that were trashed from forum topics.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| commentIds (required) | &lt;JSONArray&gt;<br /> | Array of comment ids  \n"
					},
					"response": [
						{
							"name": "Restore trashed comments",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"commentIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityComments/restore?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityComments",
										"restore"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : \"true\",\n    \"id\" : \"103417000000528003\",\n    \"errors\" : \"null\"\n  }, {\n    \"success\" : \"true\",\n    \"id\" : \"103417000000528006\",\n    \"errors\" : \"null\"\n  }, {\n    \"success\" : \"false\",\n    \"id\" : \"103417000000528008\",\n    \"errors\" : {\n      \"errorCode\" : \"FORBIDDEN\",\n      \"httpCode\" : \"403\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Trash unmoderated comments",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityComments/moveToTrash",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityComments",
								"moveToTrash"
							]
						},
						"description": "This API trashes comments that are yet to be approved for publishing on a forum topic.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| commentIds (required) | &lt;JSONArray&gt;<br /> | Array of comment ids  \n"
					},
					"response": [
						{
							"name": "Trash unmoderated comments",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"commentIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityComments/moveToTrash?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityComments",
										"moveToTrash"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : \"true\",\n    \"id\" : \"103417000000528003\",\n    \"errors\" : \"null\"\n  }, {\n    \"success\" : \"true\",\n    \"id\" : \"103417000000528006\",\n    \"errors\" : \"null\"\n  }, {\n    \"success\" : \"false\",\n    \"id\" : \"103417000000528008\",\n    \"errors\" : {\n      \"errorCode\" : \"FORBIDDEN\",\n      \"httpCode\" : \"403\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Permanently delete comments",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityComments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityComments"
							]
						},
						"description": "This API permanently deletes comments from the trash of your help desk portal.\n#### OAuth Scope\n- `Desk.community.DELETE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| commentIds (required) | &lt;JSONArray&gt;<br /> | Array of comment ids  \n"
					},
					"response": [
						{
							"name": "Permanently delete comments",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"commentIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityComments?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityComments"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : \"true\",\n    \"id\" : \"103417000000528003\",\n    \"errors\" : \"null\"\n  }, {\n    \"success\" : \"true\",\n    \"id\" : \"103417000000528006\",\n    \"errors\" : \"null\"\n  }, {\n    \"success\" : \"false\",\n    \"id\" : \"103417000000528008\",\n    \"errors\" : {\n      \"errorCode\" : \"FORBIDDEN\",\n      \"httpCode\" : \"403\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "List moderated users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityModeratedUsers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityModeratedUsers"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 1,",
									"description": "Index number, starting from which the users must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 25,",
									"description": "Number of users to list",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of moderated end-users, based on the limit defined.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "List moderated users",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityModeratedUsers?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityModeratedUsers"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"moderatedBy\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015972/photo?orgId=123456\",\n      \"name\" : \"user 2\",\n      \"id\" : \"7000000015972\",\n      \"type\" : \"AGENT\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 1\",\n    \"moderatedOn\" : \"2018-10-16T09:42:12.716Z\",\n    \"id\" : \"7000000015971\",\n    \"type\" : \"AGENT\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"moderatedBy\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015974/photo?orgId=123456\",\n      \"name\" : \"user 4\",\n      \"id\" : \"7000000015974\",\n      \"type\" : \"AGENT\"\n    },\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015972/photo?orgId=123456\",\n    \"name\" : \"user 3\",\n    \"moderatedOn\" : \"2018-10-16T09:42:12.716Z\",\n    \"id\" : \"7000000015972\",\n    \"type\" : \"AGENT\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Unmoderate users",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityUsers/unmoderate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityUsers",
								"unmoderate"
							]
						},
						"description": "This API disables moderation for end-users in the user community.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| userIds (required) | &lt;JSONArray&gt;<br /> | IDs of the users for whom moderation must be disabled \n"
					},
					"response": [
						{
							"name": "Unmoderate users",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userIds\" : [ \"103417000000528003\", \"103417000000528006\", \"103417000000528008\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityUsers/unmoderate?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityUsers",
										"unmoderate"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : \"true\",\n    \"id\" : \"103417000000528003\",\n    \"errors\" : \"null\"\n  }, {\n    \"success\" : \"true\",\n    \"id\" : \"103417000000528006\",\n    \"errors\" : \"null\"\n  }, {\n    \"success\" : \"false\",\n    \"id\" : \"103417000000528008\",\n    \"errors\" : {\n      \"errorCode\" : \"FORBIDDEN\",\n      \"httpCode\" : \"403\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "List followers of user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityUsers/:id/followers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityUsers",
								":id",
								"followers"
							],
							"query": [
								{
									"key": "from",
									"value": "<int>\ndefault : 1,",
									"description": "Index number, starting from which the followers must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 10,",
									"description": "Number of followers to list",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API lists followers of a user, based on the limit defined.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "List followers of user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityUsers/7000000015971/followers?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityUsers",
										"7000000015971",
										"followers"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 1\",\n    \"id\" : \"7000000015971\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015972/photo?orgId=123456\",\n    \"name\" : \"user 3\",\n    \"id\" : \"7000000015972\",\n    \"label\" : {\n      \"preferences\" : {\n        \"shape\" : \"RECTANGLE\",\n        \"bgColor\" : \"#23F123\",\n        \"textColor\" : \"#2CA123\"\n      },\n      \"name\" : \"Admin\",\n      \"id\" : \"6000000158001\",\n      \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n    },\n    \"type\" : \"AGENT\",\n    \"status\" : \"DISABLED\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get user details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityUsers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityUsers",
								":id"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the user. Value allowed is stats.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This API fetches the details of an user from the community.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "Get user details",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityUsers/7000000015971?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityUsers",
										"7000000015971"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n  \"stats\" : {\n    \"postCount\" : \"35\",\n    \"topicTypeWiseCount\" : {\n      \"ANNOUNCEMENT\" : \"3\",\n      \"IDEA\" : \"10\",\n      \"DISCUSSION\" : \"0\",\n      \"PROBLEM\" : \"2\",\n      \"QUESTION\" : \"20\"\n    },\n    \"followersCount\" : \"1\",\n    \"commentCount\" : \"24\"\n  },\n  \"name\" : \"user 1\",\n  \"isModerated\" : true,\n  \"id\" : \"7000000015971\",\n  \"type\" : \"AGENT\",\n  \"status\" : \"ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "List topics by user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityUsers/([0-9]+)/topics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityUsers",
								"([0-9]+)",
								"topics"
							],
							"query": [
								{
									"key": "categoryId",
									"value": "<long>\n",
									"description": "ID of the community category from which the topics must be fetched",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<int>\ndefault : 1,",
									"description": "Index number, starting from which the topics must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 25,",
									"description": "Number of topics to list",
									"disabled": true
								},
								{
									"key": "type",
									"value": "<String>\n",
									"description": "Type of topics. Values allowed are: `ANNOUNCEMENT`, `DISCUSSION`, `IDEA`, `PROBLEM`, and `QUESTION`.",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "<date>\n",
									"description": "Starting time of the time range in which the topics should have been created. The value must be expressed according to the GMT time zone.",
									"disabled": true
								},
								{
									"key": "endTime",
									"value": "<date>\n",
									"description": "Ending time of the time range in which the topics should have been created. The value must be expressed according to the GMT time zone.",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of topics by a user, based on the limit defined.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "List topics by user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityUsers/7000000015972/topics?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityUsers",
										"7000000015972",
										"topics"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"summary\" : \"topic 2's description\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user 2\",\n      \"id\" : \"7000000015972\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      },\n      \"type\" : \"AGENT\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"latestCommentTime\" : \"2018-10-16T10:42:12.716Z\",\n    \"subject\" : \"Topic 2\",\n    \"likeCount\" : \"1\",\n    \"label\" : \"NOSTATUS\",\n    \"type\" : \"QUESTION\",\n    \"latestCommenter\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015172/photo?orgId=123456\",\n      \"name\" : \"user 3\",\n      \"id\" : \"7000000015172\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      },\n      \"type\" : \"AGENT\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"commentCount\" : \"1\",\n    \"createdTime\" : \"2018-10-16T09:42:12.716Z\",\n    \"id\" : \"4000000019017\",\n    \"permalink\" : \"topic-2\",\n    \"categoryId\" : \"4000000000017\",\n    \"status\" : \"PUBLISHED\"\n  }, {\n    \"summary\" : \"Topic 1 description\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user2\",\n      \"id\" : \"7000000015972\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      },\n      \"type\" : \"AGENT\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"latestCommentTime\" : \"2018-10-16T09:41:33.202Z\",\n    \"subject\" : \"Topic 1\",\n    \"likeCount\" : \"1\",\n    \"label\" : \"NOSTATUS\",\n    \"type\" : \"QUESTION\",\n    \"latestCommenter\" : null,\n    \"commentCount\" : \"0\",\n    \"createdTime\" : \"2018-10-16T09:41:33.202Z\",\n    \"id\" : \"4000000019003\",\n    \"permalink\" : \"topic-1\",\n    \"categoryId\" : \"4000000000017\",\n    \"status\" : \"PUBLISHED\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List comments by user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityUsers/([0-9]+)/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityUsers",
								"([0-9]+)",
								"comments"
							],
							"query": [
								{
									"key": "categoryId",
									"value": "<long>\n",
									"description": "ID of the community category from which the comments must be fetched",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<int>\ndefault : 1,",
									"description": "Index number, starting from which the comments must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 25,",
									"description": "Number of comments to list",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "<date>\n",
									"description": "Starting time of the time range in which the comments should have been created. The value must be expressed according to the GMT time zone.",
									"disabled": true
								},
								{
									"key": "endTime",
									"value": "<date>\n",
									"description": "Ending time of the time range in which the comments should have been created. The value must be expressed according to the GMT time zone.",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of comments by a user, based on the limit defined.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "List comments by user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/7000000015971/comments?orgId=1233456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"7000000015971",
										"comments"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1233456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"summary\" : \"Comment 1\",\n    \"topicPeramlink\" : \"zoho-desk-api\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user2\",\n      \"id\" : \"7000000015972\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      },\n      \"type\" : \"AGENT\"\n    },\n    \"topicId\" : \"4000000019013\",\n    \"subject\" : \"Zoho Desk API\",\n    \"createdTime\" : \"2018-10-16T09:41:40.077Z\",\n    \"parentCommentId\" : \"4000000019012\",\n    \"id\" : \"4000000019013\",\n    \"categoryId\" : \"4000000000017\",\n    \"status\" : \"PUBLISHED\",\n    \"topicType\" : \"PROBLEM\"\n  }, {\n    \"summary\" : \"Comment 2\",\n    \"topicPeramlink\" : \"zoho-desk-api-features\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user2\",\n      \"id\" : \"7000000015972\",\n      \"type\" : \"AGENT\"\n    },\n    \"topicId\" : \"4000000019013\",\n    \"subject\" : \"Zoho Desk API Features\",\n    \"createdTime\" : \"2018-10-16T10:21:00.386Z\",\n    \"parentCommentId\" : null,\n    \"id\" : \"4000000019029\",\n    \"categoryId\" : \"4000000000017\",\n    \"status\" : \"PUBLISHED\",\n    \"topicType\" : \"PROBLEM\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List topics pending moderation",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityModeration/topics?status=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityModeration",
								"topics"
							],
							"query": [
								{
									"key": "categoryId",
									"value": "<long>\n",
									"description": "ID of the community category from which the topics must be fetched",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<int>\ndefault : 1,",
									"description": "Index number, starting from which the topics must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 10,",
									"description": "Number of topics to list",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<String>\n",
									"description": "Moderation status of the topics. Values allowed are: `AWAITINGAPPROVAL`, `SPAM`, and `TRASHED`."
								}
							]
						},
						"description": "This API lists a particular number of forum topics that are pending moderation, based on the limit defined.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "List topics pending moderation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityModeration/topics?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityModeration",
										"topics"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"summary\" : \"topic 2's description\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user 2\",\n      \"id\" : \"7000000015972\",\n      \"label\" : null,\n      \"type\" : \"AGENT\"\n    },\n    \"trashedBy\" : null,\n    \"subject\" : \"Topic 2\",\n    \"createdTime\" : \"2018-10-16T09:42:12.716Z\",\n    \"id\" : \"4000000019017\",\n    \"type\" : \"QUESTION\",\n    \"permalink\" : \"topic-2\",\n    \"categoryId\" : \"4000000000017\",\n    \"status\" : \"AWAITINGAPPROVAL\"\n  }, {\n    \"summary\" : \"Topic 1 dscription\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/portalUser/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user2\",\n      \"id\" : \"7000000015972\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      },\n      \"type\" : \"END_USER\"\n    },\n    \"trashedBy\" : null,\n    \"subject\" : \"Topic 1\",\n    \"createdTime\" : \"2018-10-16T09:41:33.202Z\",\n    \"id\" : \"4000000019003\",\n    \"type\" : \"QUESTION\",\n    \"permalink\" : \"topic-1\",\n    \"categoryId\" : \"4000000000017\",\n    \"status\" : \"AWAITINGAPPROVAL\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List comments pending moderation",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityModeration/comments?status=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityModeration",
								"comments"
							],
							"query": [
								{
									"key": "categoryId",
									"value": "<long>\n",
									"description": "ID of the community category from which the comments must be fetched",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<int>\ndefault : 1,",
									"description": "Index number, starting from which the comments must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 25,",
									"description": "Number of comments to list",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<String>\n",
									"description": "Moderation status of the comments. Values allowed are: `AWAITINGAPPROVAL`, `SPAM`, and `TRASHED`."
								}
							]
						},
						"description": "This API lists a particular number of comments that are pending moderation, based on the limit defined.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "List comments pending moderation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/%7Bid%7D/comments?orgId=1233456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"%7Bid%7D",
										"comments"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1233456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"summary\" : \"Comment 1\",\n    \"topicPeramlink\" : \"zoho-desk-api\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user1\",\n      \"id\" : \"7000000015971\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      },\n      \"type\" : \"END_USER\"\n    },\n    \"topicId\" : \"4000000019013\",\n    \"trashedBy\" : null,\n    \"subject\" : \"Zoho Desk API\",\n    \"createdTime\" : \"2018-10-16T09:41:40.077Z\",\n    \"id\" : \"4000000019013\",\n    \"categoryId\" : \"4000000019012\",\n    \"status\" : \"AWAITINGAPPROVAL\"\n  }, {\n    \"summary\" : \"Comment 2\",\n    \"topicPeramlink\" : \"zoho-desk-api-features\",\n    \"modifiedTime\" : \"2018-10-16T10:28:59.495Z\",\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user 1\",\n      \"id\" : \"7000000015971\",\n      \"label\" : {\n        \"preferences\" : {\n          \"shape\" : \"RECTANGLE\",\n          \"bgColor\" : \"#23F123\",\n          \"textColor\" : \"#2CA123\"\n        },\n        \"name\" : \"Admin\",\n        \"id\" : \"6000000158001\",\n        \"logoUrl\" : \"https://desk.zoho.com/portal/api/publicImages/6000000158231?orgId=14132\"\n      },\n      \"type\" : \"END_USER\"\n    },\n    \"topicId\" : \"4000000019013\",\n    \"trashedBy\" : null,\n    \"subject\" : \"Zoho Desk API Features\",\n    \"createdTime\" : \"2018-10-16T10:21:00.386Z\",\n    \"id\" : \"4000000019029\",\n    \"categoryId\" : \"4000000019012\",\n    \"status\" : \"AWAITINGAPPROVAL\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Draft topic",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/saveDraft",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								"saveDraft"
							]
						},
						"description": "This API saves a draft of a forum topic.\n#### OAuth Scope\n- `Desk.community.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| subject (required) | &lt;String&gt;<br /> | Title of the topic \n| permalink  | &lt;String&gt;<br /> | permalink of the topic to be created \n| content (required) | &lt;String&gt;<br /> | Body content of the topic \n| type (required) | &lt;String&gt;<br /> | Type of topic. Values allowed are: `ANNOUNCEMENT`, `DISCUSSION`, `IDEA`, `PROBLEM`, and `QUESTION`. \n| categoryId (required) | &lt;long&gt;<br /> | ID of the community category in which the topic must be posted \n| isSticky  | &lt;boolean&gt;<br /> | Key that defines whether the topic must be pinned to the topics list page or not \n| notifyMe  | &lt;boolean&gt;<br /> | Key that defines whether the creator of the topic must be notified about further user actions on the topic or not \n| attachmentIds  | &lt;JSONArray&gt;<br /> | IDs of files to attach to the topic \n| tags  | &lt;JSONArray&gt;<br /> | Tag phrases \n"
					},
					"response": [
						{
							"name": "Draft topic",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subject\" : \"Topic 1\",\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"type\" : \"QUESTION\",\n  \"isSticky\" : \"false\",\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\",\n  \"categoryId\" : \"4000000000017\",\n  \"notifyMe\" : \"false\",\n  \"tags\" : [ \"tag1\", \"tag2\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/saveDraft?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"saveDraft"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"attachments\" : [ {\n    \"size\" : \"1166\",\n    \"name\" : \"download.png\",\n    \"id\" : \"4000000019027\",\n    \"href\" : \"https://desk.zoho.com/api/v1/communityTopics/4000000019003/attachments/4000000019027/content?orgId=123456\"\n  } ],\n  \"subject\" : \"Topic 1\",\n  \"createdTime\" : \"2018-10-16T09:41:33.202Z\",\n  \"tag\" : [ {\n    \"name\" : \"tag1\",\n    \"permalink\" : \"tag1\"\n  }, {\n    \"name\" : \"tag2\",\n    \"permalink\" : \"tag2\"\n  } ],\n  \"id\" : \"4000000019003\",\n  \"type\" : \"QUESTION\",\n  \"isSticky\" : false,\n  \"categoryId\" : \"4000000000017\",\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\",\n  \"notifyMe\" : true\n}"
						}
					]
				},
				{
					"name": "Update Drafted Topic",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/([0-9]+)/updateDraft",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								"([0-9]+)",
								"updateDraft"
							]
						},
						"description": "This API helps update the draft of a forum topic.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| subject (required) | &lt;String&gt;<br /> | Title of the topic \n| permalink  | &lt;String&gt;<br /> | permalink of the topic to be created \n| content (required) | &lt;String&gt;<br /> | Body content of the topic \n| type (required) | &lt;String&gt;<br /> | Type of topic. Values allowed are: `ANNOUNCEMENT`, `DISCUSSION`, `IDEA`, `PROBLEM`, and `QUESTION`. \n| categoryId (required) | &lt;long&gt;<br /> | ID of the community category in which the topic must be posted \n| isSticky  | &lt;boolean&gt;<br /> | Key that defines whether the topic must be pinned to the topics list page or not \n| notifyMe  | &lt;boolean&gt;<br /> | Key that defines whether the creator of the topic must be notified about further user actions on the topic or not \n| attachmentIds  | &lt;JSONArray&gt;<br /> | IDs of files to attach to the topic \n| tags  | &lt;JSONArray&gt;<br /> | Tag phrases \n"
					},
					"response": [
						{
							"name": "Update Drafted Topic",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subject\" : \"Topic 1\",\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"type\" : \"QUESTION\",\n  \"isSticky\" : \"false\",\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\",\n  \"categoryId\" : \"4000000000017\",\n  \"notifyMe\" : \"false\",\n  \"tags\" : [ \"tag1\", \"tag2\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/([0-9]+)/updateDraft?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"([0-9]+)",
										"updateDraft"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"attachments\" : [ {\n    \"size\" : \"1166\",\n    \"name\" : \"download.png\",\n    \"id\" : \"4000000019027\",\n    \"href\" : \"https://desk.zoho.com/api/v1/communityTopics/4000000019003/attachments/4000000019027/content?orgId=123456\"\n  } ],\n  \"subject\" : \"Topic 1\",\n  \"createdTime\" : \"2018-10-16T09:41:33.202Z\",\n  \"tag\" : [ {\n    \"name\" : \"tag1\",\n    \"permalink\" : \"tag1\"\n  }, {\n    \"name\" : \"tag2\",\n    \"permalink\" : \"tag2\"\n  } ],\n  \"id\" : \"4000000019003\",\n  \"type\" : \"QUESTION\",\n  \"isSticky\" : false,\n  \"categoryId\" : \"4000000000017\",\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\",\n  \"notifyMe\" : true\n}"
						}
					]
				},
				{
					"name": "Publish topic draft",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/([0-9]+)/publishDraft",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								"([0-9]+)",
								"publishDraft"
							]
						},
						"description": "This API publishes the draft of a forum topic.\n#### OAuth Scope\n- `Desk.community.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| subject (required) | &lt;String&gt;<br /> | Title of the topic \n| permalink  | &lt;String&gt;<br /> | permalink of the topic to be created \n| content (required) | &lt;String&gt;<br /> | Body content of the topic \n| type (required) | &lt;String&gt;<br /> | Type of topic. Values allowed are: `ANNOUNCEMENT`, `DISCUSSION`, `IDEA`, `PROBLEM`, and `QUESTION`. \n| categoryId (required) | &lt;long&gt;<br /> | ID of the community category in which the topic must be posted \n| isSticky  | &lt;boolean&gt;<br /> | Key that defines whether the topic must be pinned to the topics list page or not \n| notifyMe  | &lt;boolean&gt;<br /> | Key that defines whether the creator of the topic must be notified about further user actions on the topic or not \n| attachmentIds  | &lt;JSONArray&gt;<br /> | IDs of files to attach to the topic \n| tags  | &lt;JSONArray&gt;<br /> | Tag phrases \n| mailTo  | &lt;JSONArray&gt;<br /> | Email IDs to which the topic must be sent after publishing \n"
					},
					"response": [
						{
							"name": "Publish topic draft",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subject\" : \"Topic 1\",\n  \"attachmentIds\" : [ \"4000000019027\" ],\n  \"mailTo\" : [ \"carol@zylker.com\" ],\n  \"type\" : \"QUESTION\",\n  \"isSticky\" : \"false\",\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\",\n  \"categoryId\" : \"4000000000017\",\n  \"notifyMe\" : \"false\",\n  \"tags\" : [ \"tag1\", \"tag2\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/([0-9]+)/publishDraft?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"([0-9]+)",
										"publishDraft"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"attachments\" : [ {\n    \"size\" : \"1166\",\n    \"name\" : \"download.png\",\n    \"id\" : \"4000000019027\",\n    \"href\" : \"https://desk.zoho.com/api/v1/communityTopics/4000000019003/attachments/4000000019027/content?orgId=123456\"\n  } ],\n  \"subject\" : \"Topic 1\",\n  \"isModerated\" : false,\n  \"likeCount\" : \"1\",\n  \"type\" : \"QUESTION\",\n  \"isSticky\" : false,\n  \"content\" : \"<div style=\\\"font-size: 13px; font-family: Arial, Helvetica, Verdana, sans-serif\\\"><div>Topic 1 dscription<br /></div></div>\",\n  \"bestCommentId\" : null,\n  \"isLocked\" : false,\n  \"createdTime\" : \"2018-10-16T09:41:33.202Z\",\n  \"tag\" : [ {\n    \"name\" : \"tag1\",\n    \"permalink\" : \"tag1\"\n  }, {\n    \"name\" : \"tag2\",\n    \"permalink\" : \"tag2\"\n  } ],\n  \"id\" : \"4000000019003\",\n  \"viewCount\" : \"1\",\n  \"isTicketCreated\" : false,\n  \"creator\" : {\n    \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n    \"name\" : \"user 1\",\n    \"id\" : \"7000000015971\",\n    \"type\" : \"AGENT\"\n  },\n  \"isFollowing\" : false,\n  \"label\" : \"NOSTATUS\",\n  \"isVoted\" : true,\n  \"commentCount\" : \"2\",\n  \"portalUrl\" : \"https://desk.zoho.com/portal/portalname/community/topictopic-1\",\n  \"followersCount\" : \"0\",\n  \"permalink\" : \"topic-1\",\n  \"categoryId\" : \"4000000000017\",\n  \"status\" : \"PUBLISHED\",\n  \"notifyMe\" : false\n}"
						}
					]
				},
				{
					"name": "Delete topic draft",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/([0-9]+)/deleteDraft",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								"([0-9]+)",
								"deleteDraft"
							]
						},
						"description": "This API deletes a topic draft from the user community.\n#### OAuth Scope\n- `Desk.community.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete topic draft",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/([0-9]+)/deleteDraft?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"([0-9]+)",
										"deleteDraft"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get moderation stats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityModeration/counts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityModeration",
								"counts"
							],
							"query": [
								{
									"key": "categoryId",
									"value": "<long>\n",
									"description": "ID of the community category for which the statistics must be fetched",
									"disabled": true
								}
							]
						},
						"description": "This API fetches statistics related to topic/comment moderation in the user community.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "Get moderation stats",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityModeration/counts?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityModeration",
										"counts"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"awaitingApproval\" : {\n    \"comments\" : \"35\",\n    \"topic\" : \"25\"\n  },\n  \"moderated\" : {\n    \"topic\" : \"25\"\n  },\n  \"spam\" : {\n    \"comments\" : \"35\",\n    \"topic\" : \"25\"\n  },\n  \"trash\" : {\n    \"comments\" : \"35\",\n    \"topic\" : \"25\"\n  }\n}"
						}
					]
				},
				{
					"name": "List moderated topics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityModeratedTopics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityModeratedTopics"
							],
							"query": [
								{
									"key": "categoryId",
									"value": "<long>\n",
									"description": "ID of the community category from which the topics must be fetched",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<int>\ndefault : 1,",
									"description": "Index number, starting from which the topics must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<int>\ndefault : 25,",
									"description": "Number of topics to list",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of moderated topics, based on the limit defined.\n#### OAuth Scope\n- `Desk.community.READ`\n\n"
					},
					"response": [
						{
							"name": "List moderated topics",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityModeratedTopics?orgId=123456",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityModeratedTopics"
									],
									"query": [
										{
											"key": "orgId",
											"value": "123456"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"summary\" : \"topic 2's description\",\n    \"moderatedBy\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015972/photo?orgId=123456\",\n      \"name\" : \"user 2\",\n      \"id\" : \"7000000015972\",\n      \"type\" : \"AGENT\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user 2\",\n      \"id\" : \"7000000015972\",\n      \"type\" : \"AGENT\"\n    },\n    \"subject\" : \"Topic 2\",\n    \"moderatedOn\" : \"2018-10-16T09:42:12.716Z\",\n    \"createdTime\" : \"2018-10-16T09:42:12.716Z\",\n    \"id\" : \"4000000019017\",\n    \"type\" : \"QUESTION\",\n    \"permalink\" : \"topic-2\",\n    \"categoryId\" : \"4000000000017\",\n    \"status\" : \"PUBLISHED\"\n  }, {\n    \"summary\" : \"Topic 1 dscription\",\n    \"moderatedBy\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/agents/7000000015972/photo?orgId=123456\",\n      \"name\" : \"user 2\",\n      \"id\" : \"7000000015972\",\n      \"type\" : \"AGENT\",\n      \"status\" : \"ACTIVE\"\n    },\n    \"creator\" : {\n      \"photoUrl\" : \"https://desk.zoho.com/api/v1/portalUser/7000000015971/photo?orgId=123456\",\n      \"name\" : \"user2\",\n      \"id\" : \"7000000015972\",\n      \"type\" : \"END_USER\"\n    },\n    \"subject\" : \"Topic 1\",\n    \"moderatedOn\" : \"2018-10-16T09:42:12.716Z\",\n    \"createdTime\" : \"2018-10-16T09:41:33.202Z\",\n    \"id\" : \"4000000019003\",\n    \"type\" : \"QUESTION\",\n    \"permalink\" : \"topic-1\",\n    \"categoryId\" : \"4000000000017\",\n    \"status\" : \"PUBLISHED\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Check Permalink Availability",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/permalink/availability?permalink=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								"permalink",
								"availability"
							],
							"query": [
								{
									"key": "permalink",
									"value": "<String>\n",
									"description": "Permalink for which the availablilty need to be checked"
								}
							]
						},
						"description": "API to check whether the given permalink is available\n#### OAuth Scope\n- `Desk.community.GET`\n\n"
					},
					"response": [
						{
							"name": "Check Permalink Availability",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/permalink/availability?orgId=1234567",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"permalink",
										"availability"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1234567"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"available\" : \"true\"\n}"
						}
					]
				},
				{
					"name": "Get Topic Permalinks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/([0-9]+)/permalinks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								"([0-9]+)",
								"permalinks"
							]
						},
						"description": "API to get all permalinks of a topic\n#### OAuth Scope\n- `Desk.community.GET`\n\n"
					},
					"response": [
						{
							"name": "Get Topic Permalinks",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/1234567890/permalinks?orgId=1234567",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"1234567890",
										"permalinks"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1234567"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"isPrimary\" : \"true\",\n    \"permalink\" : \"community-topic-permalink-primary\"\n  }, {\n    \"isPrimary\" : \"false\",\n    \"permalink\" : \"community-topic-permalink-secondary-1\"\n  }, {\n    \"isPrimary\" : \"false\",\n    \"permalink\" : \"community-topic-permalink-secondary-2\"\n  }, {\n    \"isPrimary\" : \"false\",\n    \"permalink\" : \"community-topic-permalink-secondary-3\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Update Topic Permalinks",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/communityTopics/([0-9]+)/permalinks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"communityTopics",
								"([0-9]+)",
								"permalinks"
							]
						},
						"description": "API to update all permalinks of a topic\n#### OAuth Scope\n- `Desk.community.PATCH`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| primaryPermalink  | &lt;String&gt;<br /> | holds the primary permalink of a topic \n| secondaryPermalink  | &lt;JSONArray&gt;<br /> | holds the secondary permalink of a topic as array \n"
					},
					"response": [
						{
							"name": "Update Topic Permalinks",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"primaryPermalink\" : \"community-topic-permalink-primary\",\n  \"secondaryPermalink\" : [ \"community-topic-permalink-secondary-1\", \"community-topic-permalink-secondary-2\", \"community-topic-permalink-secondary-3\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/communityTopics/1234567890/permalinks?orgId=1234567",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"communityTopics",
										"1234567890",
										"permalinks"
									],
									"query": [
										{
											"key": "orgId",
											"value": "1234567"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"isPrimary\" : \"true\",\n    \"permalink\" : \"community-topic-permalink-primary\"\n  }, {\n    \"isPrimary\" : \"false\",\n    \"permalink\" : \"community-topic-permalink-secondary-1\"\n  }, {\n    \"isPrimary\" : \"false\",\n    \"permalink\" : \"community-topic-permalink-secondary-2\"\n  }, {\n    \"isPrimary\" : \"false\",\n    \"permalink\" : \"community-topic-permalink-secondary-3\"\n  } ]\n}"
						}
					]
				}
			],
			"description": "Community refers to the user community module, which consists of your end-customers.This help module serves as a peer-to-peer knowledge sharing platform, where customers can discuss product issues with each other and share solutions."
		},
		{
			"name": "BugTracker",
			"item": [
				{
					"name": "Get Linked Tickets by Bug Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/bug/:bugId/tickets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"bug",
								":bugId",
								"tickets"
							],
							"variable": [
								{
									"key": "bugId"
								}
							]
						},
						"description": "This API fetches support tickets associated with the Bug Id specified in the API request.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Linked Tickets by Bug Id",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/bug/4000000003023/tickets",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"bug",
										"4000000003023",
										"tickets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"123\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : \"2018-06-21T16:16:16.000Z\",\n    \"id\" : \"104202000003153007\",\n    \"status\" : \"Open\",\n    \"commentCount\" : \"5\"\n  }, {\n    \"ticketNumber\" : \"456\",\n    \"subject\" : \"Problem while reset password.\",\n    \"dueDate\" : \"2018-07-21T16:16:16.000Z\",\n    \"id\" : \"104202000003153015\",\n    \"priority\" : \"High\",\n    \"status\" : \"Closed\",\n    \"commentCount\" : \"3\"\n  } ]\n}"
						}
					]
				}
			],
			"description": "Bug tracker related REST API's"
		},
		{
			"name": "Ticket Count",
			"item": [
				{
					"name": "Get ticket count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/ticketsCount",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"ticketsCount"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which ticket count must be fetched. If you do not pass this parameter in the API request, ticket count across all departments will be returned.&nbsp;",
									"disabled": true
								},
								{
									"key": "assigneeId",
									"value": "<long>\n",
									"description": "ID of the agent assigned to resolve the ticket",
									"disabled": true
								},
								{
									"key": "contactId",
									"value": "<long>\n",
									"description": "ID of the contact who raised the ticket ",
									"disabled": true
								},
								{
									"key": "category",
									"value": "<String>\n",
									"description": "Category of the ticket",
									"disabled": true
								},
								{
									"key": "customField1",
									"value": "<String>\n",
									"description": "User-defined field in the ticket ",
									"disabled": true
								},
								{
									"key": "customField2",
									"value": "<String>\n",
									"description": "User-defined field in the ticket ",
									"disabled": true
								},
								{
									"key": "customField3",
									"value": "<String>\n",
									"description": "User-defined field in the ticket ",
									"disabled": true
								},
								{
									"key": "createdTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters tickets created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								},
								{
									"key": "modifiedTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters tickets modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								}
							]
						},
						"description": "This API returns the ticket count of your help desk.\n#### OAuth Scope\n- `Desk.search.READ`\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get ticket count",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/ticketsCount",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"ticketsCount"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"count\" : 200\n}"
						}
					]
				},
				{
					"name": "Get ticket count by field",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/ticketsCountByFieldValues?field=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"ticketsCountByFieldValues"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which ticket count must be fetched. If you do not pass this parameter in the API request, ticket count across all departments will be returned.&nbsp;",
									"disabled": true
								},
								{
									"key": "assigneeId",
									"value": "<long>\n",
									"description": "ID of the agent assigned to resolve the ticket ",
									"disabled": true
								},
								{
									"key": "contactId",
									"value": "<long>\n",
									"description": "ID of the contact who raised the ticket ",
									"disabled": true
								},
								{
									"key": "accountId",
									"value": "<long>\n",
									"description": "ID of the account to which the ticket is mapped",
									"disabled": true
								},
								{
									"key": "category",
									"value": "<String>\n",
									"description": "Category of the ticket",
									"disabled": true
								},
								{
									"key": "customField1",
									"value": "<String>\n",
									"description": "User-defined field in the ticket ",
									"disabled": true
								},
								{
									"key": "customField2",
									"value": "<String>\n",
									"description": "User-defined field in the ticket ",
									"disabled": true
								},
								{
									"key": "customField3",
									"value": "<String>\n",
									"description": "User-defined field in the ticket ",
									"disabled": true
								},
								{
									"key": "createdTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters tickets created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								},
								{
									"key": "modifiedTimeRange",
									"value": "<timestamp>\n",
									"description": "Key that filters tickets modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z",
									"disabled": true
								},
								{
									"key": "field",
									"value": "<String>\n",
									"description": "Field by which the ticket count must be filtered. Values allowed are. <br>`status,`<br> <br>`priority,`<br> <br>`channel,`<br> <br>`statusType,`<br> <br>`spam,`<br> <br>`overDue`<br>"
								}
							]
						},
						"description": "This API returns the ticket count of your help desk, filtered by a specific field.\n#### OAuth Scope\n- `Desk.search.READ`\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get ticket count by field",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/ticketsCountByFieldValues?field=statusType,status,priority,channel,spam,overDue",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"ticketsCountByFieldValues"
									],
									"query": [
										{
											"key": "field",
											"value": "statusType,status,priority,channel,spam,overDue"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"overDue\" : 2,\n  \"statusType\" : [ {\n    \"count\" : \"13\",\n    \"value\" : \"OPEN\"\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"ONHOLD\"\n  }, {\n    \"count\" : \"0\",\n    \"value\" : \"CLOSED\"\n  } ],\n  \"channel\" : [ {\n    \"count\" : \"6\",\n    \"value\" : \"twitter\"\n  }, {\n    \"count\" : \"3\",\n    \"value\" : \"forums\"\n  }, {\n    \"count\" : \"2\",\n    \"value\" : \"chat\"\n  }, {\n    \"count\" : \"2\",\n    \"value\" : \"web\"\n  } ],\n  \"priority\" : [ {\n    \"count\" : \"8\",\n    \"value\" : \"high\"\n  }, {\n    \"count\" : \"5\",\n    \"value\" : \"medium\"\n  } ],\n  \"spam\" : 10,\n  \"status\" : [ {\n    \"count\" : \"9\",\n    \"value\" : \"open\"\n  }, {\n    \"count\" : \"4\",\n    \"value\" : \"escalated\"\n  } ]\n}"
						}
					]
				}
			],
			"description": "Ticket count refers to the number of tickets raised across all the departments in your help desk.<br/><br/>Note:<br/>1. Query parameters, especially those of string type, pertaining to count APIs must be URL-encoded.<br/>2. New resources added to your help desk might take some time to be indexed for search. Therefore, if API responses do not reflect the updated ticket count, wait for a few minutes and try again.<br/><br/><br/>Example of CustomField Data Without URL Encoding:<br/>customField1=cf_ModelName:F3z3<br/>customField2=cf_phone:9022334455<br/>customField3=cf_permanentAddress: Wall Street<br/><br/>Example of CustomField Data with URL Encoding:<br/>customField1=cf_ModelName%3AF3z3<br/>customField2=cf_phone%3A9022334455<br/>customField3=cf_permanentAddress%3AWall%20Street"
		},
		{
			"name": "Jira",
			"item": [
				{
					"name": "Get Linked Tickets by Jira Issue Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/jiraIssue/:issueId/tickets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"jiraIssue",
								":issueId",
								"tickets"
							],
							"query": [
								{
									"key": "from",
									"value": "<long>\n",
									"description": "Start index",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<long>\nrange : 1-100",
									"description": "length of the response",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "issueId"
								}
							]
						},
						"description": "This API fetches support tickets associated with the Jira issue specified in the API request.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Linked Tickets by Jira Issue Id",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/jiraIssue/190176/tickets",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"jiraIssue",
										"190176",
										"tickets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"123\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : \"2018-06-21T16:16:16.000Z\",\n    \"id\" : \"104202000003153007\",\n    \"assignee\" : {\n      \"firstName\" : \"Robert\",\n      \"lastName\" : \"John\"\n    },\n    \"priority\" : \"High\",\n    \"status\" : \"Open\",\n    \"commentCount\" : \"5\"\n  }, {\n    \"ticketNumber\" : \"456\",\n    \"subject\" : \"Problem while reset password.\",\n    \"dueDate\" : \"2018-07-21T16:16:16.000Z\",\n    \"id\" : \"104202000003153015\",\n    \"assignee\" : {\n      \"firstName\" : \"Steve\",\n      \"lastName\" : \"Smith\"\n    },\n    \"priority\" : \"High\",\n    \"status\" : \"Closed\",\n    \"commentCount\" : \"3\"\n  } ]\n}"
						}
					]
				}
			],
			"description": "Jira, developed by Atlassian, is one of the leading bug-tracking tools in the industry. Jira’s integration with Zoho Desk helps in instantly filing issues in Jira right from a customer support ticket in Desk. These APIs pertain to the integration between these tools."
		},
		{
			"name": "Badgification",
			"item": [
				{
					"name": "List badges",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/badges",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"badges"
							],
							"query": [
								{
									"key": "from",
									"value": "<Integer>\ndefault : 1,",
									"description": "Index number starting from which the badges must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<Integer>\ndefault : 10,",
									"description": "Number of badges to list",
									"disabled": true
								},
								{
									"key": "type",
									"value": "<string>\nmax chars : 100",
									"description": "Type of badge: default or custom",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of default and custom badges, based on the limit defined.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List badges",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/badges",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"badges"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[ {\n  \"name\" : \"Badge 1\",\n  \"isCustom\" : \"false\",\n  \"description\" : \"Best Contributor\",\n  \"levelName\" : null,\n  \"id\" : \"1\",\n  \"iconUrl\" : \"https://www.zylker.com/badge1.jpg\"\n} ]"
						}
					]
				},
				{
					"name": "Add badge",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/badges",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"badges"
							]
						},
						"description": "This API adds a badge to your user community.\n#### OAuth Scope\n- `Desk.settings.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name (required) | &lt;string&gt;<br />max chars : 200 | Name of the badge \n| description  | &lt;string&gt;<br />max chars : 200 | Description of the badge \n| isCustom (required) | &lt;boolean&gt;<br /> | Key that specifies if the badge is user-defined or not \n| customIconId  | &lt;int&gt;<br /> | ID of the file attachment that contains the badge icon \n| defaultIconId  | &lt;int&gt;<br /> | ID of the default icon \n"
					},
					"response": [
						{
							"name": "Add badge",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"Badge 1\",\n  \"isCustom\" : \"true\",\n  \"description\" : \"Best Contributor\",\n  \"defaultIconId\" : \"1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/badges",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"badges"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"name\" : \"Badge 1\",\n  \"isCustom\" : \"true\",\n  \"description\" : \"Best Contributor\",\n  \"levelName\" : null,\n  \"id\" : \"1\",\n  \"iconUrl\" : \"https://www.zylker.com/badge1.jpg\"\n}"
						}
					]
				},
				{
					"name": "Update badge",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/badges/([0-9]+)",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"badges",
								"([0-9]+)"
							]
						},
						"description": "This API updates the details of a badge.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name (required) | &lt;string&gt;<br />max chars : 200 | Name of the badge \n| description  | &lt;string&gt;<br />max chars : 200 | Description of the badge \n| customIconId  | &lt;int&gt;<br /> | ID of the file attachment that contains the badge icon \n| defaultIconId  | &lt;int&gt;<br /> | ID of the default icon \n"
					},
					"response": [
						{
							"name": "Update badge",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"Badge 2\",\n  \"description\" : \"Top Contributor\",\n  \"customIconId\" : \"3000000000017\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/badges/3000000000010",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"badges",
										"3000000000010"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"name\" : \"Badge 2\",\n  \"isCustom\" : \"true\",\n  \"description\" : \"Top Contributor\",\n  \"levelName\" : null,\n  \"id\" : \"3000000000010\",\n  \"iconUrl\" : \"https://www.zylker.com/badge2.jpg\"\n}"
						}
					]
				},
				{
					"name": "Delete badge",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/badges/([0-9]+)",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"badges",
								"([0-9]+)"
							]
						},
						"description": "This API deletes a badge from the user community.\n#### OAuth Scope\n- `Desk.settings.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete badge",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/badges/3000000000010",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"badges",
										"3000000000010"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List levels",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/levels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"levels"
							],
							"query": [
								{
									"key": "from",
									"value": "<Integer>\ndefault : 1,",
									"description": "Index number, starting from which the levels must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<Integer>\ndefault : 10,",
									"description": "Number of limits to list",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of levels, based on the limit defined.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List levels",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/levels",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"levels"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[ {\n  \"badge\" : {\n    \"name\" : \"Best Contributor\",\n    \"id\" : \"3000000000345\",\n    \"iconUrl\" : \"https://www.zylker.com/badge1.jpg\"\n  },\n  \"pointsToReach\" : \"200\",\n  \"name\" : \"Level 1\",\n  \"description\" : \"Beginner\",\n  \"id\" : \"3000000000335\"\n} ]"
						}
					]
				},
				{
					"name": "Add level",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/levels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"levels"
							]
						},
						"description": "This API adds a level to the user community.\n#### OAuth Scope\n- `Desk.settings.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name (required) | &lt;string&gt;<br />max chars : 200 | Name of the level \n| description  | &lt;string&gt;<br />max chars : 200 | Description of the level \n| badgeId  | &lt;long&gt;<br /> | ID of the badge to associate with the level \n| pointsToReach (required) | &lt;double&gt;<br /> | Minimum number of credits a user needs to reach the level \n"
					},
					"response": [
						{
							"name": "Add level",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pointsToReach\" : \"200\",\n  \"badgeId\" : \"3000000000345\",\n  \"name\" : \"Level 1\",\n  \"description\" : \"Beginner\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/levels",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"levels"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"badge\" : {\n    \"name\" : \"Best Contributor\",\n    \"id\" : \"3000000000395\",\n    \"iconUrl\" : \"https://www.zylker.com/badge1.jpg\"\n  },\n  \"pointsToReach\" : \"200\",\n  \"name\" : \"Level 1\",\n  \"description\" : \"Beginner\",\n  \"id\" : \"1\"\n}"
						}
					]
				},
				{
					"name": "Update level",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/levels/([0-9]+)",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"levels",
								"([0-9]+)"
							]
						},
						"description": "This API updates the details of a level.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name (required) | &lt;string&gt;<br />max chars : 200 | Name of the level \n| description  | &lt;string&gt;<br />max chars : 200 | Description of the level \n| badgeId  | &lt;long&gt;<br /> | ID of the badge to associate with the level \n| pointsToReach (required) | &lt;double&gt;<br /> | Minimum number of credits a user needs to reach the level \n"
					},
					"response": [
						{
							"name": "Update level",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pointsToReach\" : \"300\",\n  \"name\" : \"Level 2\",\n  \"description\" : \"Beginner\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/levels/3000000000345",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"levels",
										"3000000000345"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"badge\" : {\n    \"name\" : \"Best Contributor\",\n    \"id\" : \"3000000000356\",\n    \"iconUrl\" : \"https://www.zylker.com/badge1.jpg\"\n  },\n  \"pointsToReach\" : \"300\",\n  \"name\" : \"Level2\",\n  \"description\" : \"Beginner\",\n  \"id\" : \"3000000000345\"\n}"
						}
					]
				},
				{
					"name": "Delete level",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/levels/([0-9]+)",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"levels",
								"([0-9]+)"
							]
						},
						"description": "This API deletes a level from the user community.\n#### OAuth Scope\n- `Desk.settings.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete level",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/levels/3000000000345",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"levels",
										"3000000000345"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List creditworthy activities",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/credits",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"credits"
							],
							"query": [
								{
									"key": "from",
									"value": "<Integer>\ndefault : 1,",
									"description": "Index number, starting from which the activities must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<Integer>\ndefault : 10,",
									"description": "Number of activities to list",
									"disabled": true
								},
								{
									"key": "type",
									"value": "<string>\nmax chars : 100",
									"description": "Type of creditworthy activity: default of custom",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of creditworthy activities, based on the limit defined.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List creditworthy activities",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/credits",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"credits"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[ {\n  \"isEnabled\" : \"true\",\n  \"name\" : \"Post Idea\",\n  \"isCustom\" : \"false\",\n  \"description\" : \"Post an Idea to get 100 points\",\n  \"id\" : \"3000000000315\",\n  \"points\" : \"100\"\n}, {\n  \"isEnabled\" : \"true\",\n  \"name\" : \"Post Question\",\n  \"isCustom\" : \"false\",\n  \"description\" : \"Post a Question to get 50 points\",\n  \"id\" : \"3000000000320\",\n  \"points\" : \"50\"\n} ]"
						}
					]
				},
				{
					"name": "Add creditworthy activity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/credits",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"credits"
							]
						},
						"description": "This API adds a creditworthy activity to the user community.\n#### OAuth Scope\n- `Desk.settings.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name (required) | &lt;string&gt;<br />max chars : 200 | Name of the creditworthy activity \n| description  | &lt;string&gt;<br />max chars : 200 | Description of the creditworthy activity \n| points (required) | &lt;double&gt;<br /> | Number of credits associated with the activity \n"
					},
					"response": [
						{
							"name": "Add creditworthy activity",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"Custom Credit\",\n  \"description\" : \"This is given to the people who have attended Webinar\",\n  \"points\" : \"100\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/credits",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"credits"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"isEnabled\" : \"true\",\n  \"name\" : \"Custom Credit\",\n  \"isCustom\" : \"true\",\n  \"description\" : \"This is given to the people who have attended Webinar\",\n  \"id\" : \"3000000000343\",\n  \"points\" : \"100\"\n}"
						}
					]
				},
				{
					"name": "Update creditworthy activity",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/credits/([0-9]+)",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"credits",
								"([0-9]+)"
							]
						},
						"description": "This API updates a creditworthy activity.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name (required) | &lt;string&gt;<br />max chars : 200 | Name of the creditworthy activity \n| description  | &lt;string&gt;<br />max chars : 200 | Description of the creditworthy activity \n| isEnabled  | &lt;boolean&gt;<br /> | Key that specifies if the activity is enabled or not \n| points (required) | &lt;double&gt;<br /> | Number of credits associated with the activity \n"
					},
					"response": [
						{
							"name": "Update creditworthy activity",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"Active User\",\n  \"description\" : \"This is given to the people who are active\",\n  \"points\" : \"200\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/credits/3000000000335",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"credits",
										"3000000000335"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"isEnabled\" : \"true\",\n  \"name\" : \"Active User\",\n  \"isCustom\" : \"true\",\n  \"description\" : \"This is given to the people who are highly active\",\n  \"id\" : \"3000000000335\",\n  \"points\" : \"200\"\n}"
						}
					]
				},
				{
					"name": "Delete creditworthy activity",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/credits/([0-9]+)",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"credits",
								"([0-9]+)"
							]
						},
						"description": "This API deletes a creditworthy activity from the user community.\n#### OAuth Scope\n- `Desk.settings.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete creditworthy activity",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/credits/3000000000375",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"credits",
										"3000000000375"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List credit holders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/credits/([0-9]+)/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"credits",
								"([0-9]+)",
								"users"
							],
							"query": [
								{
									"key": "from",
									"value": "<Integer>\ndefault : 1,",
									"description": "Index number, starting from which the users must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<Integer>\ndefault : 10,",
									"description": "Number of users to list",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of users with credits, based on the limit defined.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List credit holders",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/credits/3000000000435/users",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"credits",
										"3000000000435",
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"users\" : [ {\n    \"name\" : \"Jade Tywin\",\n    \"id\" : \"3000000000485\"\n  }, {\n    \"name\" : \"Steve\",\n    \"id\" : \"3000000000487\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Add credit holders",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/credits/([0-9]+)/associateUsers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"credits",
								"([0-9]+)",
								"associateUsers"
							]
						},
						"description": "This API adds the users specified in the request to the credit holders list.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| userIds (required) | &lt;list&gt;<br /> | IDs of the users who must be added as credit holders \n"
					},
					"response": [
						{
							"name": "Add credit holders",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userIds\" : [ \"3000000000985\", \"3000000000485\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/credits/3000000000300/associateUsers",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"credits",
										"3000000000300",
										"associateUsers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove credit holders",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/credits/([0-9]+)/dissociateUsers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"credits",
								"([0-9]+)",
								"dissociateUsers"
							]
						},
						"description": "This API removes users from the custom holders list.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| userIds (required) | &lt;list&gt;<br /> | IDs of the users who must be added as credit holders \n"
					},
					"response": [
						{
							"name": "Remove credit holders",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userIds\" : [ \"3000000000885\", \"3000000000495\", \"3000000000285\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/credits/3000000000300/dissociateUsers",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"credits",
										"3000000000300",
										"dissociateUsers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List badge holders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/badges/([0-9]+)/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"badges",
								"([0-9]+)",
								"users"
							],
							"query": [
								{
									"key": "from",
									"value": "<Integer>\ndefault : 1,",
									"description": "Index number, starting from which the users must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<Integer>\ndefault : 10,",
									"description": "Number of users to list",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of users with badges, based on the limit defined.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List badge holders",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/badges/3000000000185/users",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"badges",
										"3000000000185",
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"users\" : [ {\n    \"name\" : \"Jade Tywin\",\n    \"id\" : \"3000000000455\"\n  }, {\n    \"name\" : \"Steve\",\n    \"id\" : \"3000000000385\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Add badge holders",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/badges/([0-9]+)/associateUsers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"badges",
								"([0-9]+)",
								"associateUsers"
							]
						},
						"description": "This API adds the users specified in the request to the badge holders list.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| userIds (required) | &lt;list&gt;<br /> | IDs of the users who must be added as badge holders \n"
					},
					"response": [
						{
							"name": "Add badge holders",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userIds\" : [ \"3000000000378\", \"3000000000395\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/badges/3000000000375/associateUsers",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"badges",
										"3000000000375",
										"associateUsers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove badge holders",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/badges/([0-9]+)/dissociateUsers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"badges",
								"([0-9]+)",
								"dissociateUsers"
							]
						},
						"description": "This API removes users from the badge holders list.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| userIds (required) | &lt;list&gt;<br /> | IDs of the users who must be added as badge holders \n"
					},
					"response": [
						{
							"name": "Remove badge holders",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userIds\" : [ \"3000000000813\", \"3000000000193\", \"3000000000903\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/badges/3000000000893/dissociateUsers",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"badges",
										"3000000000893",
										"dissociateUsers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List available icons",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/availableBadgeIcons",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"availableBadgeIcons"
							]
						},
						"description": "This API lists all icons that are not assigned to any badges in the user community.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List available icons",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/availableBadgeIcons",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"availableBadgeIcons"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[ {\n  \"id\" : \"3000000000234\",\n  \"iconUrl\" : \"https://www.zylker.com/pic1.jpg\"\n}, {\n  \"id\" : \"3000000000722\",\n  \"iconUrl\" : \"https://www.zylker.com/pic2.jpg\"\n} ]"
						}
					]
				}
			],
			"description": "Gamification refers to the concept of applying game-based practices, principles, and incentives for non-game activities in any environment. This is generally done in the form of providing points, virtual badges and trophies, and so on to individuals who show deep involvement in the activity. In Zoho Desk, gamification is currently available in the user community. End-customers who actively participate in community forum discussions receive badges and credits and move up from one level to the next when they fulfill certain conditions. The expected outcome of gamification in this context is more solutions from customers and lesser burden on support agents."
		},
		{
			"name": "HolidayList",
			"item": [
				{
					"name": "Create holiday list",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/holidayList",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"holidayList"
							]
						},
						"description": "This API creates a holiday list in your help desk portal\n#### OAuth Scope\n- `Desk.settings.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name (required) | &lt;String&gt;<br /> | Name of the holiday list \n| holidays (required) | &lt;list&gt;<br /> | Holidays to define in the list \n| status (required) | &lt;String&gt;<br /> | Activation status of the holiday list. Values allowed are `ACTIVE` and `INACTIVE` \n| associatedBusinessHourIds  | &lt;list&gt;<br /> | IDs of the business hour sets associated with the holiday list \n"
					},
					"response": [
						{
							"name": "Create holiday list",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"associatedBusinessHourIds\" : [ \"4000000101003\", \"4000000101005\", \"4000000103001\" ],\n  \"holidays\" : [ {\n    \"from\" : \"02-20\",\n    \"to\" : \"02-21\",\n    \"holidayName\" : \"Holiday1\"\n  }, {\n    \"from\" : \"03-26\",\n    \"to\" : \"03-26\",\n    \"holidayName\" : \"Holiday2\"\n  }, {\n    \"from\" : \"12-24\",\n    \"to\" : \"12-25\",\n    \"holidayName\" : \"Christmas Holidays\"\n  } ],\n  \"name\" : \"My Company Holidays\",\n  \"status\" : \"ACTIVE\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/holidayList",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"holidayList"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2018-12-10T10:36:53.136Z\",\n  \"associatedBusinessHours\" : [ {\n    \"businessHourStatus\" : \"ACTIVE\",\n    \"businessHourId\" : \"4000000101003\",\n    \"businessHourName\" : \"UK Day Shift\"\n  }, {\n    \"businessHourStatus\" : \"ACTIVE\",\n    \"businessHourId\" : \"4000000101005\",\n    \"businessHourName\" : \"Indian Night Shift\"\n  }, {\n    \"businessHourStatus\" : \"ACTIVE\",\n    \"businessHourId\" : \"4000000103001\",\n    \"businessHourName\" : \"UK Night Shift\"\n  } ],\n  \"holidays\" : [ {\n    \"from\" : \"02-20\",\n    \"to\" : \"02-21\",\n    \"holidayName\" : \"Holiday1\"\n  }, {\n    \"from\" : \"03-26\",\n    \"to\" : \"03-26\",\n    \"holidayName\" : \"Holiday2\"\n  }, {\n    \"from\" : \"12-24\",\n    \"to\" : \"12-25\",\n    \"holidayName\" : \"Christmas Holidays\"\n  } ],\n  \"createdBy\" : \"4000000016079\",\n  \"name\" : \"My Company Holidays\",\n  \"createdTime\" : \"2018-12-10T10:36:53.136Z\",\n  \"modifiedBy\" : \"4000000016079\",\n  \"id\" : \"4000000191371\",\n  \"status\" : \"ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "Get holiday list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/holidayList/:holidayListId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"holidayList",
								":holidayListId"
							],
							"variable": [
								{
									"key": "holidayListId"
								}
							]
						},
						"description": "This API fetches the details of a holiday list configured in your help desk portal\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get holiday list",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/holidayList/4000000191371",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"holidayList",
										"4000000191371"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2018-12-10T10:36:53.136Z\",\n  \"associatedBusinessHours\" : [ {\n    \"businessHourStatus\" : \"ACTIVE\",\n    \"businessHourId\" : \"4000000101003\",\n    \"businessHourName\" : \"UK Day Shift\"\n  }, {\n    \"businessHourStatus\" : \"ACTIVE\",\n    \"businessHourId\" : \"4000000101005\",\n    \"businessHourName\" : \"Indian Night Shift\"\n  }, {\n    \"businessHourStatus\" : \"ACTIVE\",\n    \"businessHourId\" : \"4000000103001\",\n    \"businessHourName\" : \"UK Night Shift\"\n  } ],\n  \"holidays\" : [ {\n    \"from\" : \"02-20\",\n    \"to\" : \"02-21\",\n    \"holidayName\" : \"Holiday1\"\n  }, {\n    \"from\" : \"03-26\",\n    \"to\" : \"03-26\",\n    \"holidayName\" : \"Holiday2\"\n  }, {\n    \"from\" : \"12-24\",\n    \"to\" : \"12-25\",\n    \"holidayName\" : \"Christmas Holidays\"\n  } ],\n  \"createdBy\" : \"4000000016079\",\n  \"name\" : \"My Company Holidays\",\n  \"createdTime\" : \"2018-12-10T10:36:53.136Z\",\n  \"modifiedBy\" : \"4000000016079\",\n  \"id\" : \"4000000191371\",\n  \"status\" : \"ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "Update holiday list",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/holidayList/:holidayListId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"holidayList",
								":holidayListId"
							],
							"variable": [
								{
									"key": "holidayListId"
								}
							]
						},
						"description": "This API updates the details of a holiday list configured in your help desk portal\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name  | &lt;String&gt;<br /> | Name of the holiday list \n| holidays  | &lt;list&gt;<br /> | Holidays to define in the list \n| status  | &lt;String&gt;<br /> | Activation status of the holiday list. Values allowed are `ACTIVE` and `INACTIVE` \n| associatedBusinessHourIds  | &lt;list&gt;<br /> | IDs of the business hour sets associated with the holiday list \n"
					},
					"response": [
						{
							"name": "Update holiday list",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"associatedBusinessHourIds\" : [ \"4000000101003\", \"4000000103001\" ],\n  \"name\" : \"My Holidays\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/holidayList/6000000045009",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"holidayList",
										"6000000045009"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2018-12-10T10:44:46.247Z\",\n  \"associatedBusinessHours\" : [ {\n    \"businessHourStatus\" : \"ACTIVE\",\n    \"businessHourId\" : \"4000000101003\",\n    \"businessHourName\" : \"UK Day Shift\"\n  }, {\n    \"businessHourStatus\" : \"ACTIVE\",\n    \"businessHourId\" : \"4000000103001\",\n    \"businessHourName\" : \"UK Night Shift\"\n  } ],\n  \"holidays\" : [ {\n    \"from\" : \"02-20\",\n    \"to\" : \"02-21\",\n    \"holidayName\" : \"Holiday1\"\n  }, {\n    \"from\" : \"03-26\",\n    \"to\" : \"03-26\",\n    \"holidayName\" : \"Holiday2\"\n  }, {\n    \"from\" : \"12-24\",\n    \"to\" : \"12-25\",\n    \"holidayName\" : \"Christmas Holidays\"\n  } ],\n  \"createdBy\" : \"4000000016079\",\n  \"name\" : \"My Holidays\",\n  \"createdTime\" : \"2018-12-10T10:36:53.136Z\",\n  \"modifiedBy\" : \"4000000016079\",\n  \"id\" : \"4000000191371\",\n  \"status\" : \"ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "Delete holiday list",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/holidayList/:holidayListId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"holidayList",
								":holidayListId"
							],
							"variable": [
								{
									"key": "holidayListId"
								}
							]
						},
						"description": "This API deletes a holiday list from your help desk portal\n#### OAuth Scope\n- `Desk.settings.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete holiday list",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/holidayList/4000000191371",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"holidayList",
										"4000000191371"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List holiday lists",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/holidayList",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"holidayList"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the holiday lists must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-50",
									"description": "Number of holiday lists to list",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<String>\n",
									"description": "Activation status of the holiday list. Values allowed are `ACTIVE` and `INACTIVE`",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of holiday lists, based on the limit specified\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List holiday lists",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/holidayList",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"holidayList"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2018-12-10T10:48:48.772Z\",\n    \"associatedBusinessHours\" : [ {\n      \"businessHourStatus\" : \"ACTIVE\",\n      \"businessHourId\" : \"4000000101003\",\n      \"businessHourName\" : \"UK Day Shift\"\n    }, {\n      \"businessHourStatus\" : \"ACTIVE\",\n      \"businessHourId\" : \"4000000103001\",\n      \"businessHourName\" : \"UK Night Shift\"\n    }, {\n      \"businessHourStatus\" : \"ACTIVE\",\n      \"businessHourId\" : \"4000000101005\",\n      \"businessHourName\" : \"Indian Night Shift\"\n    } ],\n    \"createdBy\" : \"4000000016079\",\n    \"name\" : \"My Company Holidays\",\n    \"createdTime\" : \"2018-12-10T10:48:48.772Z\",\n    \"modifiedBy\" : \"4000000016079\",\n    \"id\" : \"4000000191456\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2018-12-10T10:35:36.071Z\",\n    \"associatedBusinessHours\" : [ ],\n    \"createdBy\" : \"4000000016079\",\n    \"name\" : \"My Holidays\",\n    \"createdTime\" : \"2018-12-10T10:35:36.071Z\",\n    \"modifiedBy\" : \"4000000016079\",\n    \"id\" : \"4000000191337\",\n    \"status\" : \"INACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2018-12-04T14:56:17.481Z\",\n    \"associatedBusinessHours\" : [ ],\n    \"createdBy\" : \"4000000016079\",\n    \"name\" : \"Overlapping Holidays\",\n    \"createdTime\" : \"2018-12-03T13:27:30.454Z\",\n    \"modifiedBy\" : \"4000000016079\",\n    \"id\" : \"4000000117001\",\n    \"status\" : \"INACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2018-12-03T07:16:54.223Z\",\n    \"associatedBusinessHours\" : [ {\n      \"businessHourStatus\" : \"INACTIVE\",\n      \"businessHourId\" : \"4000000101009\",\n      \"businessHourName\" : \"Indian Shift\"\n    } ],\n    \"createdBy\" : \"4000000016079\",\n    \"name\" : \"General HolidayList\",\n    \"createdTime\" : \"2018-11-28T13:04:53.327Z\",\n    \"modifiedBy\" : \"4000000016079\",\n    \"id\" : \"4000000105030\",\n    \"status\" : \"ACTIVE\"\n  } ]\n}"
						}
					]
				}
			],
			"description": "Holiday list refers to the list of public holidays applicable to your help desk. In Zoho Desk, you can configure multiple holiday lists, based on the regions you cater to. Holiday lists are factored in calculating the due time for responding to and resolving tickets. They play a critical role in time tracking and SLAs. You can associate a holiday list with multiple business hour sets, but each business hour set can include only one holiday list."
		},
		{
			"name": "Notification",
			"item": [
				{
					"name": "List email delivery failure alerts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/emailFailureAlerts?department=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"emailFailureAlerts"
							],
							"query": [
								{
									"key": "department",
									"value": "<String>\n",
									"description": "ID of the department from which the email delivery failure alerts must be fetched. You can pass a specific department ID or `allDepartment` in the API request."
								},
								{
									"key": "from",
									"value": "<Integer>\n",
									"description": "Index number, starting from which the alerts must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<Integer>\nrange : 1-50",
									"description": "Number of alerts to list",
									"disabled": true
								}
							]
						},
						"description": "This API lists the email delivery failure alerts configured in a particular department.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "List email delivery failure alerts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/emailFailureAlerts?department=1892000000056007&from=1&limit=20",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"emailFailureAlerts"
									],
									"query": [
										{
											"key": "department",
											"value": "1892000000056007"
										},
										{
											"key": "from",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "20"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"departmentName\" : \"Sales\",\n    \"threadId\" : \"4000002350527\",\n    \"ticketNumber\" : \"102\",\n    \"reason\" : \"452 4.3.1 Temporary System Error\",\n    \"subject\" : \"zPhone not working\",\n    \"departmentId\" : \"4000000019077\",\n    \"channel\" : \"EMAIL\",\n    \"errorMessage\" : \"Error while processing the request! Unable to send message;\",\n    \"assignee\" : {\n      \"firstName\" : \"John\",\n      \"lastName\" : \"Carol\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo\",\n      \"id\" : \"1892000000056007\",\n      \"email\" : \"carol@zylker.com\"\n    },\n    \"ticketId\" : \"4000000014345\"\n  }, {\n    \"departmentName\" : \"Marketing\",\n    \"threadId\" : \"4000002353427\",\n    \"ticketNumber\" : \"102\",\n    \"reason\" : \"Email reply failed from being sent! Momentary issues with the mail server, Try resending this email again.\",\n    \"subject\" : \"zPhone not working\",\n    \"departmentId\" : \"4000000019067\",\n    \"channel\" : \"TWITTER\",\n    \"errorMessage\" : \"null\",\n    \"assignee\" : {\n      \"firstName\" : \"John\",\n      \"lastName\" : \"Carol\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo\",\n      \"id\" : \"1892000000056007\",\n      \"email\" : \"carol@zylker.com\"\n    },\n    \"ticketId\" : \"4000000014335\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Clear email delivery failure alerts",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/emailFailureAlerts?department=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"emailFailureAlerts"
							],
							"query": [
								{
									"key": "department",
									"value": "<String>\n",
									"description": "ID of the department from which the email delivery failure alerts must be deleted. You can pass a specific department ID or `allDepartment` in the API request"
								}
							]
						},
						"description": "This API deletes all email delivery failure alerts configured in a particular department.\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Clear email delivery failure alerts",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/emailFailureAlerts?department=1892000000056007",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"emailFailureAlerts"
									],
									"query": [
										{
											"key": "department",
											"value": "1892000000056007"
										}
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get my pending approvals",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/myPendingApprovals?department=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"myPendingApprovals"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\nrange : >=0",
									"description": "Index number, starting from which the pending approvals for a give user must be fetched.",
									"disabled": true
								},
								{
									"key": "department",
									"value": "<String>\n",
									"description": "ID of the department from which pending approvals must be fetched. You can pass a specific department ID or `allDepartment` in the API request."
								},
								{
									"key": "limit",
									"value": "<integer>\ndefault : 10,",
									"description": "Number of pending approvals to list",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort by a specific attribute: `createdTime`. The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								}
							]
						},
						"description": "This API lists the pending approvals for a given user\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get my pending approvals",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/myPendingApprovals?department=1892000000056007&from=10&limit=20",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"myPendingApprovals"
									],
									"query": [
										{
											"key": "department",
											"value": "1892000000056007"
										},
										{
											"key": "from",
											"value": "10"
										},
										{
											"key": "limit",
											"value": "20"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"myPendingApprovals\" : [ {\n    \"departmentName\" : \"Sales\",\n    \"requester\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"Smith\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/5000000012902/photo\",\n      \"id\" : \"5000000012902\",\n      \"email\" : null\n    },\n    \"ticketNumber\" : \"102\",\n    \"subject\" : \"Sample subject\",\n    \"departmentId\" : \"4000000019077\",\n    \"createdTime\" : \"2019-06-21T13:16:14.000Z\",\n    \"description\" : \"Sample description\",\n    \"id\" : \"4000002350527\",\n    \"ticketId\" : \"4000002350527\"\n  }, {\n    \"departmentName\" : \"Marketing\",\n    \"requester\" : {\n      \"firstName\" : \"\",\n      \"lastName\" : \"John\",\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agent/5000000012932/photo\",\n      \"id\" : \"5000000012932\",\n      \"email\" : null\n    },\n    \"ticketNumber\" : \"102\",\n    \"subject\" : \"Sample subject\",\n    \"departmentId\" : \"4000000019067\",\n    \"createdTime\" : \"2019-06-21T13:16:14.000Z\",\n    \"description\" : \"\",\n    \"id\" : \"4000002350527\",\n    \"ticketId\" : \"4000000014335\"\n  } ],\n  \"assignee\" : {\n    \"firstName\" : \"John\",\n    \"lastName\" : \"Carol\",\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/1892000000056007/photo\",\n    \"id\" : \"1892000000056007\",\n    \"email\" : \"carol@zylker.com\"\n  }\n}"
						}
					]
				}
			],
			"description": "Notifications are automated messages that alert end-users, including contacts and agents, of any support-related activities or updates"
		},
		{
			"name": "Data Sharing Rules",
			"item": [
				{
					"name": "Get data sharing rules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dataSharingRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dataSharingRules"
							]
						},
						"description": "This API fetches the different data sharing rules configured in your help desk portal.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get data sharing rules",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/dataSharingRules",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dataSharingRules"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"tickets\" : \"public\",\n  \"calls\" : \"public read only\",\n  \"accounts\" : \"public read only\",\n  \"contracts\" : \"private\",\n  \"contacts\" : \"public\",\n  \"tasks\" : \"private\",\n  \"events\" : \"public\",\n  \"products\" : \"public\"\n}"
						}
					]
				},
				{
					"name": "Update data sharing rules",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/dataSharingRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"dataSharingRules"
							]
						},
						"description": "This API updates the data sharing rules configured in your help desk portal.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| contracts  | &lt;string&gt;<br />max chars : 100 | Data sharing rules related to SLA contracts \n| tickets  | &lt;string&gt;<br />max chars : 100 | Data sharing rules related to tickets \n| contacts  | &lt;string&gt;<br />max chars : 100 | Data sharing rules related to contacts \n| accounts  | &lt;string&gt;<br />max chars : 100 | Data sharing rules related to accounts \n| products  | &lt;string&gt;<br />max chars : 100 | Data sharing rules related to products \n| tasks  | &lt;string&gt;<br />max chars : 100 | Data sharing rules related to tasks \n| calls  | &lt;string&gt;<br />max chars : 100 | Data sharing rules related to calls \n| events  | &lt;string&gt;<br />max chars : 100 | Data sharing rules related to events \n"
					},
					"response": [
						{
							"name": "Update data sharing rules",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tickets\" : \"public\",\n  \"calls\" : \"public read only\",\n  \"accounts\" : \"public read only\",\n  \"contracts\" : \"private\",\n  \"contacts\" : \"public\",\n  \"tasks\" : \"private\",\n  \"events\" : \"public\",\n  \"products\" : \"public\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/dataSharingRules",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"dataSharingRules"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Data sharing rules refer to user permissions related to viewing and/or editing resources in the different modules in Zoho Desk."
		},
		{
			"name": "Finance",
			"item": [
				{
					"name": "Update estimate status",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/zohoFinance/:financeService/estimates/{id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"zohoFinance",
								":financeService",
								"estimates",
								"{id}"
							],
							"variable": [
								{
									"key": "financeService"
								}
							]
						},
						"description": "This will update status of estimate.\n#### OAuth Scope\n- `Desk.integrations.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| status  | &lt;string&gt;<br />max chars : 100 | status to be updated \n"
					},
					"response": [
						{
							"name": "Update estimate status",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\" : \"draft\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/zohoFinance/books/estimates/1332784000000108001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"zohoFinance",
										"books",
										"estimates",
										"1332784000000108001"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List invoices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/zohoFinance/:financeService/invoices?deskModuleName=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"zohoFinance",
								":financeService",
								"invoices"
							],
							"query": [
								{
									"key": "deskEntityId",
									"value": "<long>\n",
									"description": "To fetch invoice by desk contact or account or ticket id",
									"disabled": true
								},
								{
									"key": "deskModuleName",
									"value": "<String>\n",
									"description": "Desk Module Name:  Contacts or Cases or Accounts"
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "Department Id",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<string>\nmax chars : 100",
									"description": "To fetch invoice by status, Available status are sent, draft, overdue, paid, void, unpaid, partially_paid and viewed",
									"disabled": true
								},
								{
									"key": "pageNumber",
									"value": "<integer>\n",
									"description": "page number",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "financeService"
								}
							]
						},
						"description": "To list invoices.\n#### OAuth Scope\n- `Desk.integrations.READ`\n\n"
					},
					"response": [
						{
							"name": "List invoices",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/zohoFinance/books/invoices",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"zohoFinance",
										"books",
										"invoices"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"deskEntityId\" : \"5000000014010\",\n  \"data\" : [ {\n    \"date\" : \"2018-09-23\",\n    \"total\" : 117,\n    \"isViewdByClient\" : false,\n    \"totalFormatted\" : \"AED117.00\",\n    \"invoiceNumber\" : \"INV-000025\",\n    \"id\" : \"1332784000000108001\",\n    \"dateFormatted\" : \"23 Sep 2018\",\n    \"currencyCode\" : \"AED\",\n    \"statusFormatted\" : \"Draft\",\n    \"status\" : \"draft\"\n  } ],\n  \"deskModuleName\" : \"Contacts\"\n}"
						}
					]
				},
				{
					"name": "Update invoice status",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/zohoFinance/:financeService/invoices/{id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"zohoFinance",
								":financeService",
								"invoices",
								"{id}"
							],
							"variable": [
								{
									"key": "financeService"
								}
							]
						},
						"description": "This will update status of invoice.\n#### OAuth Scope\n- `Desk.integrations.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| status  | &lt;string&gt;<br />max chars : 100 | status to be updated \n"
					},
					"response": [
						{
							"name": "Update invoice status",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\" : \"draft\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/zohoFinance/books/invoices/1332784000000108001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"zohoFinance",
										"books",
										"invoices",
										"1332784000000108001"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "MarkAllInvoicesSent",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/zohoFinance/:financeService/invoices/markAsSent",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"zohoFinance",
								":financeService",
								"invoices",
								"markAsSent"
							],
							"variable": [
								{
									"key": "financeService"
								}
							]
						},
						"description": "This will update status of invoice to sent.\n#### OAuth Scope\n- `Desk.integrations.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids  | &lt;JSONArray&gt;<br /> | id of the invoice or estimate \n"
					},
					"response": [
						{
							"name": "MarkAllInvoicesSent",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\" : [ \"1332784000000108001\", \"1332784000000108004\", \"1332784000000108006\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/zohoFinance/books/invoices/markAsSent",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"zohoFinance",
										"books",
										"invoices",
										"markAsSent"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List estimates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/zohoFinance/:financeService/estimates?deskModuleName=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"zohoFinance",
								":financeService",
								"estimates"
							],
							"query": [
								{
									"key": "deskEntityId",
									"value": "<long>\n",
									"description": "To fetch estimates by desk contact or account or ticket id",
									"disabled": true
								},
								{
									"key": "deskModuleName",
									"value": "<String>\n",
									"description": "Desk Module Name. allowed modules are Contacts, Cases, Accounts"
								},
								{
									"key": "status",
									"value": "<string>\nmax chars : 100",
									"description": "To fetch estimates by status, Available status are draft, sent, invoiced , accepted, declined and expired",
									"disabled": true
								},
								{
									"key": "pageNumber",
									"value": "<integer>\n",
									"description": "page number",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "financeService"
								}
							]
						},
						"description": "To list estimates.\n#### OAuth Scope\n- `Desk.integrations.READ`\n\n"
					},
					"response": [
						{
							"name": "List estimates",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/zohoFinance/books/estimates",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"zohoFinance",
										"books",
										"estimates"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"deskEntityId\" : \"5000000014010\",\n  \"data\" : [ {\n    \"date\" : \"2018-09-23\",\n    \"total\" : 117,\n    \"isViewdByClient\" : false,\n    \"estimateNumber\" : \"INV-000025\",\n    \"totalFormatted\" : \"AED117.00\",\n    \"id\" : \"1332784000000108001\",\n    \"dateFormatted\" : \"23 Sep 2018\",\n    \"currencyCode\" : \"AED\",\n    \"statusFormatted\" : \"Draft\",\n    \"status\" : \"draft\"\n  } ],\n  \"deskModuleName\" : \"Contacts\"\n}"
						}
					]
				},
				{
					"name": "Get tickets for invoices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/finance/invoices/:id/tickets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"finance",
								"invoices",
								":id",
								"tickets"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "To get associated tickets for invoice id.\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get tickets for invoices",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/finance/invoices/7388387778738/tickets",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"finance",
										"invoices",
										"7388387778738",
										"tickets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ticketNumber\" : \"123\",\n    \"subject\" : \"Hi. There is a sudden delay in the processing of the orders. Check this with high priority\",\n    \"dueDate\" : \"2018-06-21T16:16:16.000Z\",\n    \"id\" : \"104202000003153007\",\n    \"assignee\" : {\n      \"firstName\" : \"Robert\",\n      \"lastName\" : \"John\"\n    },\n    \"priority\" : \"High\",\n    \"status\" : \"Open\",\n    \"commentCount\" : \"5\"\n  }, {\n    \"ticketNumber\" : \"456\",\n    \"subject\" : \"Problem while reset password.\",\n    \"dueDate\" : \"2018-07-21T16:16:16.000Z\",\n    \"id\" : \"104202000003153015\",\n    \"assignee\" : {\n      \"firstName\" : \"Steve\",\n      \"lastName\" : \"Smith\"\n    },\n    \"priority\" : \"High\",\n    \"status\" : \"Closed\",\n    \"commentCount\" : \"3\"\n  } ]\n}"
						}
					]
				}
			],
			"description": "Finance related REST API's"
		},
		{
			"name": "agentAvailability",
			"item": [
				{
					"name": "Update Agent Availability Configuration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agentAvailabilityConfig",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agentAvailabilityConfig"
							]
						},
						"description": "This API updates the agent availability setting configured in your help desk portal.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n- `Desk.basic.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| treatIdleAgentsAsOffline  | &lt;boolean&gt;<br /> | Key that specifies if idle agents should be marked as offline after a particular duration. \n| agentIdleTime  | &lt;int&gt;<br />range : 1-60 | Duration after which idle agents should be marked as offline. The value can range from 1 to 60. \n"
					},
					"response": [
						{
							"name": "Update Agent Availability Configuration",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agentIdleTime\" : \"30\",\n  \"treatIdleAgentsAsOffline\" : true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/agentAvailabilityConfig",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agentAvailabilityConfig"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Agent Availability Configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agentAvailabilityConfig",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agentAvailabilityConfig"
							]
						},
						"description": "This API fetches the agent availability setting configured in your help desk portal.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Agent Availability Configuration",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/agentAvailabilityConfig",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agentAvailabilityConfig"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"agentIdleTime\" : \"30\",\n  \"treatIdleAgentsAsOffline\" : true\n}"
						}
					]
				},
				{
					"name": "Get Current Availability",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/agentAvailability?departmentId=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"agentAvailability"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the availability details should be fetched. To include all accessible departments, pass the value of this key as `-1`."
								},
								{
									"key": "include",
									"value": "<String>\n",
									"description": "Key that includes additional, channel-specific information. Values allowed are: `mailStatus`, `phoneStatus`, `phoneMode`, `chatStatus`, and `presenceStatus`.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\ndefault : 20,",
									"description": "Number of agents to list. The default and the maximum value allowed is 20.",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\ndefault : 0,",
									"description": "Index number, starting from which the agents must be fetched. The default value is 0 and the maximum value allowed is 5999.",
									"disabled": true
								}
							]
						},
						"description": "This API lists the current availability of agents in a particular department.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Current Availability",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/agentAvailability?orgId=2389290&departmentid=892000000008634&include=mailStatus,phoneStatus,chatStatus,phoneMode,presenceStatus",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agentAvailability"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "departmentid",
											"value": "892000000008634"
										},
										{
											"key": "include",
											"value": "mailStatus,phoneStatus,chatStatus,phoneMode,presenceStatus"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"chatStatus\" : \"OFFLINE\",\n    \"agentId\" : \"892000000008734\",\n    \"phoneMode\" : \"WEB\",\n    \"phoneStatus\" : \"OFFLINE\",\n    \"mailStatus\" : \"OFFLINE\",\n    \"presenceStatus\" : \"ONLINE\",\n    \"status\" : \"OFFLINE\"\n  }, {\n    \"chatStatus\" : \"ONLINE\",\n    \"agentId\" : \"8920000000056010\",\n    \"phoneMode\" : \"WEB\",\n    \"phoneStatus\" : \"ONLINE\",\n    \"mailStatus\" : \"OFFLINE\",\n    \"presenceStatus\" : \"ONLINE\",\n    \"status\" : \"ONLINE\"\n  } ],\n  \"totalAgentsCount\" : \"2\",\n  \"hasMore\" : false\n}"
						}
					]
				},
				{
					"name": "Get Online Agents",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/onlineAgents?departmentId=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"onlineAgents"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the availability details should be fetched. To include all accessible departments, pass the value of this key as `-1`."
								},
								{
									"key": "include",
									"value": "<String>\n",
									"description": "Key that includes additional, channel-specific information. Values allowed are: `mailStatus`, `phoneStatus`, `phoneMode`, `chatStatus`, and `presenceStatus`.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\ndefault : 20,",
									"description": "Number of agents to list. The default value is 20 and the maximum value allowed is 6000.",
									"disabled": true
								}
							]
						},
						"description": "This API lists the agents who are currently online in a particular department.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Online Agents",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/onlineAgents?orgId=2389290&departmentid=892000000008634&include=mailStatus,phoneStatus,chatStatus,phoneMode,presenceStatus",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"onlineAgents"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "departmentid",
											"value": "892000000008634"
										},
										{
											"key": "include",
											"value": "mailStatus,phoneStatus,chatStatus,phoneMode,presenceStatus"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"chatStatus\" : \"ONLINE\",\n    \"agentId\" : \"892000000008734\",\n    \"phoneMode\" : \"WEB\",\n    \"phoneStatus\" : \"ONLINE\",\n    \"mailStatus\" : \"OFFLINE\",\n    \"presenceStatus\" : \"ONLINE\",\n    \"status\" : \"ONLINE\"\n  }, {\n    \"chatStatus\" : \"ONLINE\",\n    \"agentId\" : \"8920000000056010\",\n    \"phoneMode\" : \"WEB\",\n    \"phoneStatus\" : \"ONLINE\",\n    \"mailStatus\" : \"OFFLINE\",\n    \"presenceStatus\" : \"ONLINE\",\n    \"status\" : \"ONLINE\"\n  } ],\n  \"totalAgentsCount\" : \"2\",\n  \"hasMore\" : false\n}"
						}
					]
				},
				{
					"name": "Get Offline Agents",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/offlineAgents?departmentId=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"offlineAgents"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department from which the availability details should be fetched. To include all accessible departments, pass the value of this key as `-1`."
								},
								{
									"key": "include",
									"value": "<String>\n",
									"description": "Key that includes additional, channel-specific information. Values allowed are: `mailStatus`, `phoneStatus`, `phoneMode`, `chatStatus`, and `presenceStatus`.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\ndefault : 20,",
									"description": "Number of agents to list. The default value is 20 and the maximum value allowed is 6000.",
									"disabled": true
								}
							]
						},
						"description": "This API lists the agents who are currently offline in a particular department.\n#### OAuth Scope\n- `Desk.settings.READ`\n- `Desk.basic.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Offline Agents",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/offlineAgents?orgId=2389290&departmentid=892000000008634&include=mailStatus,phoneStatus,chatStatus,phoneMode,presenceStatus",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"offlineAgents"
									],
									"query": [
										{
											"key": "orgId",
											"value": "2389290"
										},
										{
											"key": "departmentid",
											"value": "892000000008634"
										},
										{
											"key": "include",
											"value": "mailStatus,phoneStatus,chatStatus,phoneMode,presenceStatus"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"chatStatus\" : \"ONLINE\",\n    \"agentId\" : \"892000000008734\",\n    \"phoneMode\" : \"WEB\",\n    \"phoneStatus\" : \"ONLINE\",\n    \"mailStatus\" : \"OFFLINE\",\n    \"presenceStatus\" : \"OFFLINE\",\n    \"status\" : \"OFFLINE\"\n  }, {\n    \"chatStatus\" : \"ONLINE\",\n    \"agentId\" : \"8920000000056010\",\n    \"phoneMode\" : \"WEB\",\n    \"phoneStatus\" : \"ONLINE\",\n    \"mailStatus\" : \"OFFLINE\",\n    \"presenceStatus\" : \"OFFLINE\",\n    \"status\" : \"OFFLINE\"\n  } ],\n  \"totalAgentsCount\" : \"2\",\n  \"hasMore\" : false\n}"
						}
					]
				}
			],
			"description": "Agent availability refers to your support agents' presence for responding to customers."
		},
		{
			"name": "AutomationFeatureCount",
			"item": [
				{
					"name": "Get Automation Feature Count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/automationFeatureCount?feature=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"automationFeatureCount"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "Department Id",
									"disabled": true
								},
								{
									"key": "module",
									"value": "<String>\n",
									"description": "Module, allowed values `tickets`,`contacts`,`contracts`,`accounts`,`tasks`,`products`,`timeEntry`",
									"disabled": true
								},
								{
									"key": "feature",
									"value": "<String>\n",
									"description": "Feature, allowed values `businesshours`,`holidaylist`,`Skills`,`SkillType`,`workflows`,`blueprints`"
								}
							]
						},
						"description": "This API is used to Get Automation Feature Limits, For BusinessHours and HoldiayList, There are no mandatory params, For Workflows valid and mandatory params are module and departmentId, Valid module param values for Workflows are tickets,contacts,contracts,accounts,tasks,products,timeEntry. For Skills and SkillTye departmentId is mandatory param\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Automation Feature Count",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/automationFeatureCount?departmentId=1000000013248&module=tickets&feature=workflows",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"automationFeatureCount"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "1000000013248"
										},
										{
											"key": "module",
											"value": "tickets"
										},
										{
											"key": "feature",
											"value": "workflows"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"featureName\" : \"workflows\",\n  \"maxTotalCount\" : \"40\",\n  \"maxActiveCount\" : \"20\",\n  \"usedCountInfo\" : {\n    \"usedTotalCount\" : \"3\",\n    \"usedActiveCount\" : \"2\"\n  }\n}"
						}
					]
				}
			],
			"description": "A Common API to get various limits for Automation Features."
		},
		{
			"name": "Skills",
			"item": [
				{
					"name": "Create skill",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/skills",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"skills"
							]
						},
						"description": "This API Creates a skill\n#### OAuth Scope\n- `Desk.settings.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name (required) | &lt;String&gt;<br /> | Name of the skill \n| description  | &lt;String&gt;<br /> | description of the skill \n| status (required) | &lt;String&gt;<br /> | Values allowed are `ACTIVE` and `INACTIVE` \n| skillTypeId (required) | &lt;long&gt;<br /> | ID of the Skill Type \n| criteria (required) | &lt;list&gt;<br /> | The criteria details for the skill \n| agentIds  | &lt;list&gt;<br /> | IDs of the agents mapped with the skill \n"
					},
					"response": [
						{
							"name": "Create skill",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"skillTypeId\" : \"1000000173001\",\n  \"criteria\" : {\n    \"fieldConditions\" : [ {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"Subject\",\n      \"fieldModule\" : \"tickets\",\n      \"value\" : [ \"India\" ]\n    }, {\n      \"condition\" : \"is\",\n      \"fieldName\" : \"Phone\",\n      \"fieldModule\" : \"tickets\",\n      \"value\" : [ \"987532114\" ]\n    } ],\n    \"pattern\" : \"(1or2)\"\n  },\n  \"name\" : \"India\",\n  \"description\" : \"Country is India\",\n  \"status\" : \"ACTIVE\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/skills",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"skills"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2020-07-23T12:44:42.574Z\",\n  \"agentIds\" : [ ],\n  \"skillType\" : {\n    \"skillTypeId\" : \"1000000173001\",\n    \"skillTypeName\" : \"Country\"\n  },\n  \"orderId\" : \"1\",\n  \"criteria\" : {\n    \"fieldConditions\" : [ {\n      \"displayValue\" : [ \"India\" ],\n      \"condition\" : \"is\",\n      \"fieldName\" : \"Subject\",\n      \"fieldModule\" : \"tickets\",\n      \"value\" : [ \"India\" ]\n    }, {\n      \"displayValue\" : [ \"987532114\" ],\n      \"condition\" : \"is\",\n      \"fieldName\" : \"Phone\",\n      \"fieldModule\" : \"tickets\",\n      \"value\" : [ \"987532114\" ]\n    } ],\n    \"pattern\" : \"(1or2)\"\n  },\n  \"departmentId\" : \"1000000013248\",\n  \"description\" : \"Country is India\",\n  \"skillTypeId\" : \"1000000173001\",\n  \"createdBy\" : \"1000000000059\",\n  \"name\" : \"India\",\n  \"createdTime\" : \"2020-07-23T12:44:42.574Z\",\n  \"modifiedBy\" : \"1000000000059\",\n  \"id\" : \"1000000173029\",\n  \"status\" : \"ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "View skill",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/skills/:skillId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"skills",
								":skillId"
							],
							"variable": [
								{
									"key": "skillId"
								}
							]
						},
						"description": "This API Gets the details of a skill\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "View skill",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/skills/1000000173145",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"skills",
										"1000000173145"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2020-07-23T13:08:36.093Z\",\n  \"agentIds\" : [ \"1000000000059\" ],\n  \"skillType\" : {\n    \"skillTypeId\" : \"1000000173013\",\n    \"skillTypeName\" : \"Language\"\n  },\n  \"orderId\" : \"5\",\n  \"criteria\" : {\n    \"fieldConditions\" : [ {\n      \"displayValue\" : [ \"Malayalam\" ],\n      \"condition\" : \"contains\",\n      \"fieldName\" : \"Subject\",\n      \"fieldModule\" : \"tickets\",\n      \"value\" : [ \"Malayalam\" ]\n    } ],\n    \"pattern\" : \"1\"\n  },\n  \"departmentId\" : \"1000000013248\",\n  \"description\" : \"Language is Malayalam\",\n  \"skillTypeId\" : \"1000000173013\",\n  \"createdBy\" : \"1000000000059\",\n  \"name\" : \"Malayalam\",\n  \"createdTime\" : \"2020-07-23T13:08:36.093Z\",\n  \"modifiedBy\" : \"1000000000059\",\n  \"id\" : \"1000000173145\",\n  \"status\" : \"ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "Update skill",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/skills/:skillId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"skills",
								":skillId"
							],
							"variable": [
								{
									"key": "skillId"
								}
							]
						},
						"description": "This API Updates a skill\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name  | &lt;String&gt;<br /> | Name of the skill \n| description  | &lt;String&gt;<br /> | description of the skill \n| status  | &lt;String&gt;<br /> | Values allowed are `ACTIVE` and `INACTIVE` \n| skillTypeId  | &lt;long&gt;<br /> | ID of the Skill Type \n| criteria  | &lt;list&gt;<br /> | The criteria details for the skill \n| agentIds  | &lt;list&gt;<br /> | IDs of the agents mapped with the skill \n"
					},
					"response": [
						{
							"name": "Update skill",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"Malayalam\",\n  \"description\" : \"Malayali\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/skills/1000000173145",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"skills",
										"1000000173145"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2020-07-23T13:08:36.093Z\",\n  \"agentIds\" : [ \"1000000000059\" ],\n  \"skillType\" : {\n    \"skillTypeId\" : \"1000000173013\",\n    \"skillTypeName\" : \"Language\"\n  },\n  \"orderId\" : \"5\",\n  \"criteria\" : {\n    \"fieldConditions\" : [ {\n      \"displayValue\" : [ \"Malayalam\" ],\n      \"condition\" : \"contains\",\n      \"fieldName\" : \"Subject\",\n      \"fieldModule\" : \"tickets\",\n      \"value\" : [ \"Malayalam\" ]\n    } ],\n    \"pattern\" : \"1\"\n  },\n  \"departmentId\" : \"1000000013248\",\n  \"description\" : \"Malayali\",\n  \"skillTypeId\" : \"1000000173013\",\n  \"createdBy\" : \"1000000000059\",\n  \"name\" : \"Malayalam\",\n  \"createdTime\" : \"2020-07-23T13:08:36.093Z\",\n  \"modifiedBy\" : \"1000000000059\",\n  \"id\" : \"1000000173145\",\n  \"status\" : \"ACTIVE\"\n}"
						}
					]
				},
				{
					"name": "Delete skill",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/skills/:skillId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"skills",
								":skillId"
							],
							"variable": [
								{
									"key": "skillId"
								}
							]
						},
						"description": "This API deletes a skill from your help desk portal\n#### OAuth Scope\n- `Desk.settings.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete skill",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/skills/6000000033001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"skills",
										"6000000033001"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all skills",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/skills?departmentId=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"skills"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "Department Id"
								},
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the skills must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of skill to list, `allowed minimum value 1, maximum value 100,default is 100`",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<String>\n",
									"description": "Active inactive filter for Skills. Values allowed are `ACTIVE` and `INACTIVE`",
									"disabled": true
								},
								{
									"key": "searchString",
									"value": "<String>\n",
									"description": "Search string, Used to filter skills by name starting with this string",
									"disabled": true
								},
								{
									"key": "skillTypeId",
									"value": "<long>\n",
									"description": "Skill Type Id, to Filter Skills by SkillType",
									"disabled": true
								}
							]
						},
						"description": "This API lists all skills in a department\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List all skills",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/skills?departmentId=1000000013248",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"skills"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "1000000013248"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2020-07-23T12:44:42.574Z\",\n    \"agentIds\" : [ ],\n    \"skillType\" : {\n      \"skillTypeId\" : \"1000000173001\",\n      \"skillTypeName\" : \"Country\"\n    },\n    \"orderId\" : \"1\",\n    \"criteria\" : {\n      \"fieldConditions\" : [ {\n        \"displayValue\" : [ \"India\" ],\n        \"condition\" : \"is\",\n        \"fieldName\" : \"Subject\",\n        \"fieldModule\" : \"tickets\",\n        \"value\" : [ \"India\" ]\n      }, {\n        \"displayValue\" : [ \"987532114\" ],\n        \"condition\" : \"is\",\n        \"fieldName\" : \"Phone\",\n        \"fieldModule\" : \"tickets\",\n        \"value\" : [ \"987532114\" ]\n      } ],\n      \"pattern\" : \"(1or2)\"\n    },\n    \"departmentId\" : \"1000000013248\",\n    \"description\" : \"Country is India\",\n    \"skillTypeId\" : \"1000000173001\",\n    \"createdBy\" : \"1000000000059\",\n    \"name\" : \"India\",\n    \"createdTime\" : \"2020-07-23T12:44:42.574Z\",\n    \"modifiedBy\" : \"1000000000059\",\n    \"id\" : \"1000000173029\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2020-07-23T13:03:12.994Z\",\n    \"agentIds\" : [ \"1000000000059\" ],\n    \"skillType\" : {\n      \"skillTypeId\" : \"1000000173001\",\n      \"skillTypeName\" : \"Country\"\n    },\n    \"orderId\" : \"2\",\n    \"criteria\" : {\n      \"fieldConditions\" : [ {\n        \"displayValue\" : [ \"Russia\" ],\n        \"condition\" : \"is\",\n        \"fieldName\" : \"Subject\",\n        \"fieldModule\" : \"tickets\",\n        \"value\" : [ \"Russia\" ]\n      }, {\n        \"displayValue\" : [ \"987532114\" ],\n        \"condition\" : \"is\",\n        \"fieldName\" : \"Phone\",\n        \"fieldModule\" : \"tickets\",\n        \"value\" : [ \"987532114\" ]\n      } ],\n      \"pattern\" : \"(1or2)\"\n    },\n    \"departmentId\" : \"1000000013248\",\n    \"description\" : \"Country is Russia\",\n    \"skillTypeId\" : \"1000000173001\",\n    \"createdBy\" : \"1000000000059\",\n    \"name\" : \"Russia\",\n    \"createdTime\" : \"2020-07-23T13:03:12.994Z\",\n    \"modifiedBy\" : \"1000000000059\",\n    \"id\" : \"1000000173047\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2020-07-23T13:07:51.838Z\",\n    \"agentIds\" : [ \"1000000000059\" ],\n    \"skillType\" : {\n      \"skillTypeId\" : \"1000000173013\",\n      \"skillTypeName\" : \"Language\"\n    },\n    \"orderId\" : \"3\",\n    \"criteria\" : {\n      \"fieldConditions\" : [ {\n        \"displayValue\" : [ \"English\" ],\n        \"condition\" : \"contains\",\n        \"fieldName\" : \"Subject\",\n        \"fieldModule\" : \"tickets\",\n        \"value\" : [ \"English\" ]\n      } ],\n      \"pattern\" : \"1\"\n    },\n    \"departmentId\" : \"1000000013248\",\n    \"description\" : \"Language is English\",\n    \"skillTypeId\" : \"1000000173013\",\n    \"createdBy\" : \"1000000000059\",\n    \"name\" : \"English\",\n    \"createdTime\" : \"2020-07-23T13:07:51.838Z\",\n    \"modifiedBy\" : \"1000000000059\",\n    \"id\" : \"1000000173097\",\n    \"status\" : \"ACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2020-07-23T13:08:16.891Z\",\n    \"agentIds\" : [ \"1000000000059\" ],\n    \"skillType\" : {\n      \"skillTypeId\" : \"1000000173013\",\n      \"skillTypeName\" : \"Language\"\n    },\n    \"orderId\" : \"4\",\n    \"criteria\" : {\n      \"fieldConditions\" : [ {\n        \"displayValue\" : [ \"Tamil\" ],\n        \"condition\" : \"contains\",\n        \"fieldName\" : \"Subject\",\n        \"fieldModule\" : \"tickets\",\n        \"value\" : [ \"Tamil\" ]\n      } ],\n      \"pattern\" : \"1\"\n    },\n    \"departmentId\" : \"1000000013248\",\n    \"description\" : \"Language is Tamil\",\n    \"skillTypeId\" : \"1000000173013\",\n    \"createdBy\" : \"1000000000059\",\n    \"name\" : \"Tamil\",\n    \"createdTime\" : \"2020-07-23T13:08:16.891Z\",\n    \"modifiedBy\" : \"1000000000059\",\n    \"id\" : \"1000000173121\",\n    \"status\" : \"INACTIVE\"\n  }, {\n    \"modifiedTime\" : \"2020-07-23T13:08:36.093Z\",\n    \"agentIds\" : [ \"1000000000059\" ],\n    \"skillType\" : {\n      \"skillTypeId\" : \"1000000173013\",\n      \"skillTypeName\" : \"Language\"\n    },\n    \"orderId\" : \"5\",\n    \"criteria\" : {\n      \"fieldConditions\" : [ {\n        \"displayValue\" : [ \"Malayalam\" ],\n        \"condition\" : \"contains\",\n        \"fieldName\" : \"Subject\",\n        \"fieldModule\" : \"tickets\",\n        \"value\" : [ \"Malayalam\" ]\n      } ],\n      \"pattern\" : \"1\"\n    },\n    \"departmentId\" : \"1000000013248\",\n    \"description\" : \"Malayali\",\n    \"skillTypeId\" : \"1000000173013\",\n    \"createdBy\" : \"1000000000059\",\n    \"name\" : \"Malayalam\",\n    \"createdTime\" : \"2020-07-23T13:08:36.093Z\",\n    \"modifiedBy\" : \"1000000000059\",\n    \"id\" : \"1000000173145\",\n    \"status\" : \"ACTIVE\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "List associated automation rules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/skills/:skillId/relatedRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"skills",
								":skillId",
								"relatedRules"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the related rules must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of rules to list,  `allowed minimum value 1, maximum value 100,default is 100`",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "skillId"
								}
							]
						},
						"description": "This API lists a particular number of automation rules that include a skill,based on the limit specified\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List associated automation rules",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/skills/10000000317019/relatedRules",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"skills",
										"10000000317019",
										"relatedRules"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"ruleType\" : \"SUPERVISE\",\n    \"ruleName\" : \"TBA1\",\n    \"ruleId\" : \"6000000019012\"\n  }, {\n    \"ruleType\" : \"SLA\",\n    \"ruleName\" : \"Priority-based SLAs\",\n    \"ruleId\" : \"6000000013508\"\n  }, {\n    \"ruleType\" : \"SLA\",\n    \"ruleName\" : \"Bronze SLAs\",\n    \"ruleId\" : \"6000000013514\"\n  }, {\n    \"ruleType\" : \"BLUEPRINT\",\n    \"ruleName\" : \"Default Blueprint\",\n    \"ruleId\" : \"6000000016083\"\n  }, {\n    \"ruleType\" : \"BLUEPRINT\",\n    \"ruleName\" : \"BH BP\",\n    \"ruleId\" : \"6000000018143\"\n  }, {\n    \"ruleType\" : \"BLUEPRINT\",\n    \"ruleName\" : \"Third Bp\",\n    \"ruleId\" : \"6000000023018\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Reorder Skills in a Department",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/skills/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"skills",
								"order"
							]
						},
						"description": "This API lists reorders Skills in a Department\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| skillIds (required) | &lt;JSONArray&gt;<br /> | List of skill ids to reorder \n| departmentId (required) | &lt;long&gt;<br /> | department of the skills to be reordered \n"
					},
					"response": [
						{
							"name": "Reorder Skills in a Department",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"skillIds\" : [ \"1000000173121\", \"1000000173029\", \"1000000173047\", \"1000000173097\", \"1000000173145\" ],\n  \"departmentId\" : \"1000000013248\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/skills/order",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"skills",
										"order"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Skills of an Agent",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agents/:agentId/skills?departmentIds=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								":agentId",
								"skills"
							],
							"query": [
								{
									"key": "departmentIds",
									"value": "<long>\n",
									"description": "list of Department Ids separated by commas,Maximum `10` department ids allowed"
								}
							],
							"variable": [
								{
									"key": "agentId"
								}
							]
						},
						"description": "Returns skills mapped with an agent by department\n#### OAuth Scope\n- `Desk.tickets.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Skills of an Agent",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/agents/1000000003234/skills?departmentIds=10000000030987,10000000038722,10000000030294",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agents",
										"1000000003234",
										"skills"
									],
									"query": [
										{
											"key": "departmentIds",
											"value": "10000000030987,10000000038722,10000000030294"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"associatedSkills\" : [ {\n      \"skillName\" : \"French\",\n      \"skillId\" : \"1000000005432\",\n      \"skillTypeId\" : \"1000000019013\"\n    }, {\n      \"skillName\" : \"Blueprint\",\n      \"skillId\" : \"10000000036323\",\n      \"skillTypeId\" : \"1000000019025\"\n    }, {\n      \"skillName\" : \"Reports\",\n      \"skillId\" : \"10000000036323\",\n      \"skillTypeId\" : \"1000000019025\"\n    } ],\n    \"departmentId\" : \"10000000030987\"\n  }, {\n    \"associatedSkills\" : [ {\n      \"skillName\" : \"Workflow\",\n      \"skillId\" : \"1000000005432\",\n      \"skillTypeId\" : \"1000000019089\"\n    }, {\n      \"skillName\" : \"English\",\n      \"skillId\" : \"10000000036323\",\n      \"skillTypeId\" : \"100000001342\"\n    } ],\n    \"departmentId\" : \"10000000038722\"\n  }, {\n    \"associatedSkills\" : [ {\n      \"skillName\" : \"Malayalam\",\n      \"skillId\" : \"1000000059234\",\n      \"skillTypeId\" : \"100000001421\"\n    }, {\n      \"skillName\" : \"Tamil\",\n      \"skillId\" : \"1000000003967\",\n      \"skillTypeId\" : \"100000001423\"\n    } ],\n    \"departmentId\" : \"10000000030294\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Map Skills in a Department with an Agent",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/agents/:agentId/mapSkills",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								":agentId",
								"mapSkills"
							],
							"variable": [
								{
									"key": "agentId"
								}
							]
						},
						"description": "This API modifies skills mapped for an agent in a department\n#### OAuth Scope\n- `Desk.tickets.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| departmentId (required) | &lt;long&gt;<br /> | ID of the Department \n| skillIds  | &lt;list&gt;<br /> | Ids of skills to be mapped \n"
					},
					"response": [
						{
							"name": "Map Skills in a Department with an Agent",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"skillIds\" : [ \"1000000173047\", \"1000000173121\", \"1000000173029\" ],\n  \"departmentId\" : \"1000000013248\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/agents/1000000000059/mapSkills?orgId=15157826",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"agents",
										"1000000000059",
										"mapSkills"
									],
									"query": [
										{
											"key": "orgId",
											"value": "15157826"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"associatedSkills\" : [ {\n      \"skillName\" : \"India\",\n      \"skillId\" : \"1000000173029\",\n      \"skillTypeId\" : \"1000000173001\"\n    }, {\n      \"skillName\" : \"Tamil\",\n      \"skillId\" : \"1000000173121\",\n      \"skillTypeId\" : \"1000000173013\"\n    }, {\n      \"skillName\" : \"Russia\",\n      \"skillId\" : \"1000000173047\",\n      \"skillTypeId\" : \"1000000173001\"\n    } ],\n    \"departmentId\" : \"1000000013248\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get Criteria Fields for Skill in a Department",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/skills/criteriaFields?departmentId=<long>\n&module=<String>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"skills",
								"criteriaFields"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "Department Id"
								},
								{
									"key": "module",
									"value": "<String>\n",
									"description": "Module, Allowed values are `tickets`,`contacts` and `accounts`"
								}
							]
						},
						"description": "This API returns list of fields supported in criteria for Skills by module\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Criteria Fields for Skill in a Department",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/skills/criteriaFields?orgId=15157826&departmentId=1000000013248&module=tickets",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"skills",
										"criteriaFields"
									],
									"query": [
										{
											"key": "orgId",
											"value": "15157826"
										},
										{
											"key": "departmentId",
											"value": "1000000013248"
										},
										{
											"key": "module",
											"value": "tickets"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"criteriaFields\" : [ {\n    \"displayLabel\" : \"Tickets\",\n    \"name\" : \"tickets\",\n    \"fieldDetails\" : [ {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Account Name\",\n      \"i18NLabel\" : \"Account Name\",\n      \"type\" : \"lookup\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Contact Name\",\n      \"i18NLabel\" : \"Contact Name\",\n      \"type\" : \"lookup\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"i18NCondition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"i18NCondition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"i18NCondition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"i18NCondition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Email\",\n      \"i18NLabel\" : \"Email\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"i18NCondition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"i18NCondition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"i18NCondition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"i18NCondition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Phone\",\n      \"i18NLabel\" : \"Phone\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"i18NCondition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"i18NCondition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"i18NCondition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"i18NCondition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Subject\",\n      \"i18NLabel\" : \"Subject\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"i18NCondition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"i18NCondition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"i18NCondition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"i18NCondition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Description\",\n      \"i18NLabel\" : \"Description\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is OPEN\",\n        \"i18NCondition\" : \"is OPEN\",\n        \"value\" : [ \"${OPEN}\" ]\n      }, {\n        \"condition\" : \"is ON HOLD\",\n        \"i18NCondition\" : \"is ON HOLD\",\n        \"value\" : [ \"${ONHOLD}\" ]\n      }, {\n        \"condition\" : \"is CLOSED\",\n        \"i18NCondition\" : \"is CLOSED\",\n        \"value\" : [ \"${CLOSED}\" ]\n      }, {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"i18NCondition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"i18NCondition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"i18NCondition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"i18NCondition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      } ],\n      \"fieldLabel\" : \"Status\",\n      \"i18NLabel\" : \"Status\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Case Owner\",\n      \"i18NLabel\" : \"Ticket Owner\",\n      \"type\" : \"user\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      } ],\n      \"fieldLabel\" : \"Created By\",\n      \"i18NLabel\" : \"Created By\",\n      \"type\" : \"user\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      } ],\n      \"fieldLabel\" : \"Modified By\",\n      \"i18NLabel\" : \"Modified By\",\n      \"type\" : \"user\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is after\",\n        \"i18NCondition\" : \"is after\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${DUEDATE}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is before\",\n        \"i18NCondition\" : \"is before\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${DUEDATE}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"between\",\n        \"i18NCondition\" : \"between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      }, {\n        \"condition\" : \"not between\",\n        \"i18NCondition\" : \"not between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      } ],\n      \"fieldLabel\" : \"Created Time\",\n      \"i18NLabel\" : \"Created Time\",\n      \"type\" : \"dateTime\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is after\",\n        \"i18NCondition\" : \"is after\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${DUEDATE}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is before\",\n        \"i18NCondition\" : \"is before\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${DUEDATE}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"between\",\n        \"i18NCondition\" : \"between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      }, {\n        \"condition\" : \"not between\",\n        \"i18NCondition\" : \"not between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Case On Hold Time\",\n      \"i18NLabel\" : \"Ticket On Hold Time\",\n      \"type\" : \"dateTime\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is after\",\n        \"i18NCondition\" : \"is after\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${DUEDATE}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is before\",\n        \"i18NCondition\" : \"is before\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${DUEDATE}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"between\",\n        \"i18NCondition\" : \"between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      }, {\n        \"condition\" : \"not between\",\n        \"i18NCondition\" : \"not between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Case Closed Time\",\n      \"i18NLabel\" : \"Ticket Closed Time\",\n      \"type\" : \"dateTime\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is after\",\n        \"i18NCondition\" : \"is after\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${DUEDATE}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is before\",\n        \"i18NCondition\" : \"is before\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${DUEDATE}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"between\",\n        \"i18NCondition\" : \"between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      }, {\n        \"condition\" : \"not between\",\n        \"i18NCondition\" : \"not between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      } ],\n      \"fieldLabel\" : \"Modified Time\",\n      \"i18NLabel\" : \"Modified Time\",\n      \"type\" : \"dateTime\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"=\",\n        \"i18NCondition\" : \"=\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"<>\",\n        \"i18NCondition\" : \"<>\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"<\",\n        \"i18NCondition\" : \"<\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"<=\",\n        \"i18NCondition\" : \"<=\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \">\",\n        \"i18NCondition\" : \">\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \">=\",\n        \"i18NCondition\" : \">=\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Request Id\",\n      \"i18NLabel\" : \"Ticket Id\",\n      \"type\" : \"integer\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"i18NCondition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"i18NCondition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"i18NCondition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"i18NCondition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"To Address\",\n      \"i18NLabel\" : \"To Address\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"=\",\n        \"i18NCondition\" : \"=\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"<>\",\n        \"i18NCondition\" : \"<>\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"<\",\n        \"i18NCondition\" : \"<\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"<=\",\n        \"i18NCondition\" : \"<=\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \">\",\n        \"i18NCondition\" : \">\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \">=\",\n        \"i18NCondition\" : \">=\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      } ],\n      \"fieldLabel\" : \"Thread Count\",\n      \"i18NLabel\" : \"Number of Threads\",\n      \"type\" : \"integer\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"=\",\n        \"i18NCondition\" : \"=\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"<>\",\n        \"i18NCondition\" : \"<>\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"<\",\n        \"i18NCondition\" : \"<\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"<=\",\n        \"i18NCondition\" : \"<=\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \">\",\n        \"i18NCondition\" : \">\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \">=\",\n        \"i18NCondition\" : \">=\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      } ],\n      \"fieldLabel\" : \"Comment Count\",\n      \"i18NLabel\" : \"Number of Comments\",\n      \"type\" : \"integer\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"Good\", \"Bad\", \"Okay\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"Good\", \"Bad\", \"Okay\" ]\n      }, {\n        \"condition\" : \"is received\",\n        \"i18NCondition\" : \"is received\",\n        \"value\" : [ ]\n      }, {\n        \"condition\" : \"is not received\",\n        \"i18NCondition\" : \"is not received\",\n        \"value\" : [ ]\n      }, {\n        \"condition\" : \"link provided\",\n        \"i18NCondition\" : \"link provided\",\n        \"value\" : [ ]\n      }, {\n        \"condition\" : \"link not provided\",\n        \"i18NCondition\" : \"link not provided\",\n        \"value\" : [ ]\n      } ],\n      \"fieldLabel\" : \"Happiness Rating\",\n      \"i18NLabel\" : \"Happiness Rating\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"has agents\",\n        \"i18NCondition\" : \"has agents\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Team\",\n      \"i18NLabel\" : \"Team\",\n      \"type\" : \"team\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is after\",\n        \"i18NCondition\" : \"is after\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is before\",\n        \"i18NCondition\" : \"is before\",\n        \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"between\",\n        \"i18NCondition\" : \"between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      }, {\n        \"condition\" : \"not between\",\n        \"i18NCondition\" : \"not between\",\n        \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Due Date\",\n      \"i18NLabel\" : \"Due Date\",\n      \"type\" : \"dateTime\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      } ],\n      \"fieldLabel\" : \"Tags\",\n      \"i18NLabel\" : \"Tags\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"i18NCondition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"i18NCondition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"i18NCondition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"i18NCondition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Priority\",\n      \"i18NLabel\" : \"Priority\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"i18NCondition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"i18NCondition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"i18NCondition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"i18NCondition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Mode\",\n      \"i18NLabel\" : \"Channel\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"true\", \"false\" ]\n      } ],\n      \"fieldLabel\" : \"Is Overdue\",\n      \"i18NLabel\" : \"Is Overdue\",\n      \"type\" : \"boolean\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"true\", \"false\" ]\n      } ],\n      \"fieldLabel\" : \"Is Escalated\",\n      \"i18NLabel\" : \"Is Escalated\",\n      \"type\" : \"boolean\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"i18NCondition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"i18NCondition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"i18NCondition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"i18NCondition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Resolution\",\n      \"i18NLabel\" : \"Resolution\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is Less Than\",\n        \"i18NCondition\" : \"is Less Than\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is Greater Than\",\n        \"i18NCondition\" : \"is Greater Than\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      } ],\n      \"fieldLabel\" : \"Time to Respond\",\n      \"i18NLabel\" : \"Time to Respond\",\n      \"type\" : \"integer\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"isn't\",\n        \"i18NCondition\" : \"isn't\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"starts with\",\n        \"i18NCondition\" : \"starts with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains\",\n        \"i18NCondition\" : \"contains\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"doesn't contain\",\n        \"i18NCondition\" : \"doesn't contain\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"ends with\",\n        \"i18NCondition\" : \"ends with\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      } ],\n      \"fieldLabel\" : \"Skill\",\n      \"i18NLabel\" : \"Skill\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is empty\",\n        \"i18NCondition\" : \"is empty\",\n        \"value\" : [ \"${EMPTY}\" ]\n      }, {\n        \"condition\" : \"is not empty\",\n        \"i18NCondition\" : \"is not empty\",\n        \"value\" : [ \"${NOTEMPTY}\" ]\n      }, {\n        \"condition\" : \"contain all of\",\n        \"i18NCondition\" : \"contain all of\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contain any of\",\n        \"i18NCondition\" : \"contain any of\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contain none of\",\n        \"i18NCondition\" : \"contain none of\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      } ],\n      \"fieldLabel\" : \"Skills\",\n      \"i18NLabel\" : \"Skills\",\n      \"type\" : \"text\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"true\", \"false\" ]\n      } ],\n      \"fieldLabel\" : \"Is Response Overdue\",\n      \"i18NLabel\" : \"Is Response Overdue\",\n      \"type\" : \"boolean\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"during business hours of\",\n        \"i18NCondition\" : \"during business hours of\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"outside business hours of\",\n        \"i18NCondition\" : \"outside business hours of\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"on a holiday of\",\n        \"i18NCondition\" : \"on a holiday of\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"not a holiday of\",\n        \"i18NCondition\" : \"not a holiday of\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      } ],\n      \"fieldLabel\" : \"Execution Time\",\n      \"i18NLabel\" : \"Execution Time\",\n      \"type\" : \"businesshour\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"is\",\n        \"i18NCondition\" : \"is\",\n        \"value\" : [ \"Public\", \"Private\" ]\n      } ],\n      \"fieldLabel\" : \"Recent Comment Type\",\n      \"i18NLabel\" : \"Recent Comment Type\",\n      \"type\" : \"commenttype\"\n    }, {\n      \"availableConditions\" : [ {\n        \"condition\" : \"contains one of the following words\",\n        \"i18NCondition\" : \"contains one of the following words\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains none of the following words\",\n        \"i18NCondition\" : \"contains none of the following words\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"contains the string\",\n        \"i18NCondition\" : \"contains the string\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"does not contain the string\",\n        \"i18NCondition\" : \"does not contain the string\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      }, {\n        \"condition\" : \"has @ mentions of\",\n        \"i18NCondition\" : \"has @ mentions of\",\n        \"value\" : [ \"${CUSTOM}\" ]\n      } ],\n      \"fieldLabel\" : \"Recent Comment\",\n      \"i18NLabel\" : \"Recent Comment\",\n      \"type\" : \"comment\"\n    } ]\n  } ]\n}"
						}
					]
				}
			],
			"description": "Skills, They are area of expertises which can be mapped with Tickets and Agents"
		},
		{
			"name": "SkillTypes",
			"item": [
				{
					"name": "Create Skill Type",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/skillTypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"skillTypes"
							]
						},
						"description": "This API Creates a Skill Type\n#### OAuth Scope\n- `Desk.settings.CREATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name (required) | &lt;String&gt;<br /> | Name of the skilltype \n| departmentId (required) | &lt;long&gt;<br /> | departmentId of the Skill Type \n"
					},
					"response": [
						{
							"name": "Create Skill Type",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"departmentId\" : \"1000000013248\",\n  \"name\" : \"Country\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/skillTypes",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"skillTypes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2020-07-23T12:36:44.544Z\",\n  \"associatedSkills\" : [ ],\n  \"createdBy\" : \"1000000000059\",\n  \"departmentId\" : \"1000000013248\",\n  \"name\" : \"Country\",\n  \"createdTime\" : \"2020-07-23T12:36:44.544Z\",\n  \"modifiedBy\" : \"1000000000059\",\n  \"id\" : \"1000000173001\"\n}"
						}
					]
				},
				{
					"name": "View Skill Type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/skillTypes/:skilTypeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"skillTypes",
								":skilTypeId"
							],
							"variable": [
								{
									"key": "skilTypeId"
								}
							]
						},
						"description": "This API Gets the details of a Skill Type\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "View Skill Type",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/skillTypes/1000000173001",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"skillTypes",
										"1000000173001"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2020-07-23T12:36:44.544Z\",\n  \"associatedSkills\" : [ {\n    \"skillName\" : \"India\",\n    \"skillId\" : \"1000000173029\",\n    \"skillStatus\" : \"ACTIVE\"\n  }, {\n    \"skillName\" : \"Russia\",\n    \"skillId\" : \"1000000173047\",\n    \"skillStatus\" : \"ACTIVE\"\n  } ],\n  \"createdBy\" : \"1000000000059\",\n  \"departmentId\" : \"1000000013248\",\n  \"name\" : \"Country\",\n  \"createdTime\" : \"2020-07-23T12:36:44.544Z\",\n  \"modifiedBy\" : \"1000000000059\",\n  \"id\" : \"1000000173001\"\n}"
						}
					]
				},
				{
					"name": "Update a Skill Type",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/skillTypes/:skilTypeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"skillTypes",
								":skilTypeId"
							],
							"variable": [
								{
									"key": "skilTypeId"
								}
							]
						},
						"description": "This API Updates a Skill Type\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| name  | &lt;String&gt;<br /> | Name of the skilltype \n"
					},
					"response": [
						{
							"name": "Update a Skill Type",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\" : \"Product\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/skillTypes/4000003016645",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"skillTypes",
										"4000003016645"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2020-07-23T12:39:11.776Z\",\n  \"associatedSkills\" : [ ],\n  \"createdBy\" : \"1000000000059\",\n  \"departmentId\" : \"1000000013248\",\n  \"name\" : \"Product\",\n  \"createdTime\" : \"2020-07-23T12:39:11.776Z\",\n  \"modifiedBy\" : \"1000000000059\",\n  \"id\" : \"1000000173019\"\n}"
						}
					]
				},
				{
					"name": "Delete a Skill Type",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/skillTypes/:skilTypeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"skillTypes",
								":skilTypeId"
							],
							"variable": [
								{
									"key": "skilTypeId"
								}
							]
						},
						"description": "This API Deletes a Skill Type\n#### OAuth Scope\n- `Desk.settings.DELETE`\n\n"
					},
					"response": [
						{
							"name": "Delete a Skill Type",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/skillTypes/4000003016645",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"skillTypes",
										"4000003016645"
									]
								}
							},
							"status": "No content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all Skill Types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/skillTypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"skillTypes"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "Department Id",
									"disabled": true
								},
								{
									"key": "from",
									"value": "<integer>\n",
									"description": "Index number, starting from which the skills must be listed",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of skilltypes to list,  `allowed minimum value 1, maximum value 100,default is 100`",
									"disabled": true
								},
								{
									"key": "mappedSkillsStatus",
									"value": "<String>\n",
									"description": "Filter skill types by associated skills status, allowed values `ACTIVE` and `INACTIVE`",
									"disabled": true
								}
							]
						},
						"description": "This API Lists all Skill Types in a department\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List all Skill Types",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/skillTypes?departmentId=4000003016008",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"skillTypes"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "4000003016008"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"modifiedTime\" : \"2020-07-23T12:36:44.544Z\",\n    \"associatedSkills\" : [ {\n      \"skillName\" : \"India\",\n      \"skillId\" : \"1000000173029\",\n      \"skillStatus\" : \"ACTIVE\"\n    }, {\n      \"skillName\" : \"Russia\",\n      \"skillId\" : \"1000000173047\",\n      \"skillStatus\" : \"ACTIVE\"\n    } ],\n    \"mappedSkillsStatus\" : [ \"ACTIVE\" ],\n    \"createdBy\" : \"1000000000059\",\n    \"departmentId\" : \"1000000013248\",\n    \"name\" : \"Country\",\n    \"createdTime\" : \"2020-07-23T12:36:44.544Z\",\n    \"modifiedBy\" : \"1000000000059\",\n    \"id\" : \"1000000173001\"\n  }, {\n    \"modifiedTime\" : \"2020-07-23T12:38:59.455Z\",\n    \"associatedSkills\" : [ {\n      \"skillName\" : \"English\",\n      \"skillId\" : \"1000000173097\",\n      \"skillStatus\" : \"ACTIVE\"\n    }, {\n      \"skillName\" : \"Malayalam\",\n      \"skillId\" : \"1000000173145\",\n      \"skillStatus\" : \"ACTIVE\"\n    }, {\n      \"skillName\" : \"Tamil\",\n      \"skillId\" : \"1000000173121\",\n      \"skillStatus\" : \"INACTIVE\"\n    } ],\n    \"mappedSkillsStatus\" : [ \"INACTIVE\", \"ACTIVE\" ],\n    \"createdBy\" : \"1000000000059\",\n    \"departmentId\" : \"1000000013248\",\n    \"name\" : \"Language\",\n    \"createdTime\" : \"2020-07-23T12:38:59.455Z\",\n    \"modifiedBy\" : \"1000000000059\",\n    \"id\" : \"1000000173013\"\n  }, {\n    \"modifiedTime\" : \"2020-07-23T12:39:47.900Z\",\n    \"associatedSkills\" : [ ],\n    \"mappedSkillsStatus\" : [ ],\n    \"createdBy\" : \"1000000000059\",\n    \"departmentId\" : \"1000000013248\",\n    \"name\" : \"Product\",\n    \"createdTime\" : \"2020-07-23T12:39:11.776Z\",\n    \"modifiedBy\" : \"1000000000059\",\n    \"id\" : \"1000000173019\"\n  }, {\n    \"modifiedTime\" : \"2020-07-23T12:38:53.429Z\",\n    \"associatedSkills\" : [ ],\n    \"mappedSkillsStatus\" : [ ],\n    \"createdBy\" : \"1000000000059\",\n    \"departmentId\" : \"1000000013248\",\n    \"name\" : \"Region\",\n    \"createdTime\" : \"2020-07-23T12:38:53.429Z\",\n    \"modifiedBy\" : \"1000000000059\",\n    \"id\" : \"1000000173007\"\n  } ]\n}"
						}
					]
				}
			],
			"description": "SkillType is a Category for grouping skills"
		},
		{
			"name": "SkillConfiguration",
			"item": [
				{
					"name": "Get Skill Configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/skillConfiguration?departmentId=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"skillConfiguration"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "Department Id"
								}
							]
						},
						"description": "This API gets Configuration of Skill in a Department\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Skill Configuration",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/skillConfiguration?departmentId=1000000013248",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"skillConfiguration"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "1000000013248"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"autoSkillStamping\" : \"ACTIVE\",\n  \"departmentId\" : \"1000000013248\",\n  \"attachSkillsOption\" : \"AT_THE_END\"\n}"
						}
					]
				},
				{
					"name": "Update Skill Configuration",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/skillConfiguration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"skillConfiguration"
							]
						},
						"description": "This API updates Configuration of Skill in a Department\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| departmentId  | &lt;long&gt;<br /> | ID of the Department \n| attachSkillsOption  | &lt;string&gt;<br />max chars : 100 | Append new skills at `AT_FIRST` or `AT_THE_END` or `BY_SKILL_ORDER` \n| autoSkillStamping  | &lt;string&gt;<br />max chars : 100 | This indicates Auto Stamping is Active or not, Allowed values `ACTIVE` or `INACTIVE` \n"
					},
					"response": [
						{
							"name": "Update Skill Configuration",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"autoSkillStamping\" : \"INACTIVE\",\n  \"departmentId\" : \"1000000013248\",\n  \"attachSkillsOption\" : \"AT_FIRST\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/skillConfiguration",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"skillConfiguration"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"autoSkillStamping\" : \"INACTIVE\",\n  \"departmentId\" : \"1000000013248\",\n  \"attachSkillsOption\" : \"AT_FIRST\"\n}"
						}
					]
				}
			],
			"description": "Department Level Configurations for Skill Stamping"
		},
		{
			"name": "RoutingPreference",
			"item": [
				{
					"name": "Get Routing Preferences",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/routingPreferences?departmentId=<long>\n",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"routingPreferences"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "Department Id"
								}
							]
						},
						"description": "This API is used to Get the Routing Preferences for a Department\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get Routing Preferences",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/routingPreferences?departmentId=1000000013248",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"routingPreferences"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "1000000013248"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"assignBacklog\" : true,\n  \"assignToOfflineAgents\" : true,\n  \"thresholdLimit\" : \"40\",\n  \"backLogLimit\" : \"5\",\n  \"isThresholdEnabled\" : true,\n  \"departmentId\" : \"1000000013248\",\n  \"assignBacklogsBy\" : \"DUEDATE\",\n  \"freshTicketAssignMode\" : \"IMMEDIATE\"\n}"
						}
					]
				},
				{
					"name": "Update Routing Preferences",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/routingPreferences",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"routingPreferences"
							]
						},
						"description": "This API is used to Update the Routing Preferences for a Department\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| departmentId  | &lt;long&gt;<br /> | department Id \n| isThresholdEnabled  | &lt;boolean&gt;<br /> | Used to enable/disable ticket threshold for Round Robin \n| thresholdLimit  | &lt;integer&gt;<br />range : 1-200 | Threshold Per Agent, Range 1-200,thresholdEnabled has to be True to Update this limit \n| assignBacklog  | &lt;boolean&gt;<br /> | Will bulk-assign tickets that were created when agents were unavailable. \n| backLogLimit  | &lt;integer&gt;<br />range : 1-50 | Max. number of backlog tickets that can be bulk-assigned to an agent. Range 1-50 \n| assignBacklogsBy  | &lt;String&gt;<br /> | Assign Backlogs Based on Due Date or Created Time, Allowed values `DUEDATE` and `CREATEDTIME` \n| assignToOfflineAgents  | &lt;boolean&gt;<br /> | Will include mail-channel offline agents also while assigning tickets. \n| freshTicketAssignMode  | &lt;String&gt;<br /> | Fresh Ticket Assignment Mode, allowed values are `IMMEDIATE`,`MOVE_TO_BACKLOG` \n"
					},
					"response": [
						{
							"name": "Update Routing Preferences",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"assignBacklog\" : true,\n  \"isThresholdEnabled\" : \"true\",\n  \"backLogLimit\" : \"22\",\n  \"departmentId\" : \"1000000013248\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/routingPreferences",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"routingPreferences"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"assignBacklog\" : true,\n  \"assignToOfflineAgents\" : true,\n  \"thresholdLimit\" : \"40\",\n  \"backLogLimit\" : \"22\",\n  \"isThresholdEnabled\" : true,\n  \"departmentId\" : \"1000000013248\",\n  \"assignBacklogsBy\" : \"DUEDATE\",\n  \"freshTicketAssignMode\" : \"IMMEDIATE\"\n}"
						}
					]
				}
			],
			"description": "Common Configurations for Routing Rules"
		},
		{
			"name": "Recycle Bin",
			"item": [
				{
					"name": "List deleted resources",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/recycleBin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"recycleBin"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\nrange : >=0",
									"description": "Index number, starting from which the resources must be fetched.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of resources to list. The default value is 10 and the maximum value supported is 100.",
									"disabled": true
								},
								{
									"key": "departmentId",
									"value": "<long>\n",
									"description": "ID of the department to which the deleted resources belong.",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "<string>\nmax chars : 100",
									"description": "Sort by a specific attribute: `name`, `type`, `department`, `deletedBy`, or `deletedTime`. The default sorting order is ascending. A `-` prefix denotes descending order of sorting.",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the resources. Values allowed are: `department` and `deletedBy`. You can pass multiple values by separating them with commas in the API request.",
									"disabled": true
								},
								{
									"key": "module",
									"value": "<String>\n",
									"description": "Filter by a specific module: `accounts`, `contacts`, `tickets`, `tasks`, `timeEntry`, `calls`, `events`, `contracts`, `products`, `topics`, or `solutions`",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of deleted resources, based on the limit specified.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List deleted resources",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/recyleBin?include=deletedBy,department",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"recyleBin"
									],
									"query": [
										{
											"key": "include",
											"value": "deletedBy,department"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"displayName\" : \"Sample display name\",\n    \"departmentId\" : null,\n    \"deletedById\" : \"4000000000059\",\n    \"id\" : \"4000000046163\",\n    \"type\" : \"Attachments\",\n    \"deletedTime\" : \"2020-06-21T16:16:16.000Z\"\n  }, {\n    \"displayName\" : \"Sample display name\",\n    \"departmentId\" : \"4000000013244\",\n    \"deletedById\" : \"4000000000059\",\n    \"id\" : \"4000000046093\",\n    \"type\" : \"Calls\",\n    \"deletedTime\" : \"2020-06-21T16:16:16.000Z\"\n  }, {\n    \"displayName\" : \"Sample display name\",\n    \"departmentId\" : \"4000000013244\",\n    \"deletedById\" : \"4000000000059\",\n    \"id\" : \"4000000017184\",\n    \"type\" : \"Tickets\",\n    \"deletedTime\" : \"2020-06-21T16:16:16.000Z\"\n  }, {\n    \"displayName\" : \"Sample display name\",\n    \"departmentId\" : \"4000000013244\",\n    \"deletedById\" : \"4000000000059\",\n    \"id\" : \"4000000046029\",\n    \"type\" : \"Tickets\",\n    \"deletedTime\" : \"2020-06-21T16:16:16.000Z\"\n  }, {\n    \"displayName\" : \"Sample display name\",\n    \"departmentId\" : null,\n    \"deletedById\" : \"4000000000059\",\n    \"id\" : \"4000000019005\",\n    \"type\" : \"Contacts\",\n    \"deletedTime\" : \"2020-06-21T16:16:16.000Z\"\n  }, {\n    \"displayName\" : \"Sample display name\",\n    \"departmentId\" : \"4000000013244\",\n    \"deletedById\" : \"4000000000059\",\n    \"id\" : \"4000000046131\",\n    \"type\" : \"Events\",\n    \"deletedTime\" : \"2020-06-21T16:16:16.000Z\"\n  }, {\n    \"displayName\" : \"Sample display name\",\n    \"departmentId\" : \"4000000013244\",\n    \"deletedById\" : \"4000000000059\",\n    \"id\" : \"4000000046111\",\n    \"type\" : \"Tasks\",\n    \"deletedTime\" : \"2020-06-21T16:16:16.000Z\"\n  }, {\n    \"displayName\" : \"Sample display name\",\n    \"departmentId\" : \"4000000013244\",\n    \"deletedById\" : \"4000000000059\",\n    \"id\" : \"4000000046153\",\n    \"type\" : \"Time Entry\",\n    \"deletedTime\" : \"2020-06-21T16:16:16.000Z\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Restore deleted resources",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/recycleBin/restore",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"recycleBin",
								"restore"
							]
						},
						"description": "This API restores the deleted resources specified in the API request. Additionally, the parent resources are also restored.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | Array containing the IDs of the resources to restore \n| isChildNeedToBeRestored  | &lt;boolean&gt;<br /> | Key that denotes whether the child resources must be restored or not. \n"
					},
					"response": [
						{
							"name": "Restore deleted resources",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isChildNeedToBeRestored\" : \"true\",\n  \"ids\" : [ \"232323\", \"400000005634\", \"232\", \"4000000056156\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/recycleBin/restore",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"recycleBin",
										"restore"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : true,\n    \"id\" : \"4000000056156\",\n    \"errors\" : null\n  }, {\n    \"success\" : false,\n    \"id\" : \"232323\",\n    \"errors\" : {\n      \"errorMessage\" : null,\n      \"errorCode\" : \"UNPROCESSABLE_ENTITY\",\n      \"httpCode\" : \"422\"\n    }\n  }, {\n    \"success\" : false,\n    \"id\" : \"400000005634\",\n    \"errors\" : {\n      \"errorMessage\" : null,\n      \"errorCode\" : \"FORBIDDEN\",\n      \"httpCode\" : \"403\"\n    }\n  }, {\n    \"success\" : false,\n    \"id\" : \"232\",\n    \"errors\" : {\n      \"errorMessage\" : null,\n      \"errorCode\" : \"UNPROCESSABLE_ENTITY\",\n      \"httpCode\" : \"422\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Restore all resources from Recycle Bin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/recycleBin/restoreAll",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"recycleBin",
								"restoreAll"
							]
						},
						"description": "This API restores all deleted resources from the Recycle Bin.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Restore all resources from Recycle Bin",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/recyleBin/restoreAll",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"recyleBin",
										"restoreAll"
									]
								}
							},
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete resources from Recycle Bin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/recycleBin/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"recycleBin",
								"delete"
							]
						},
						"description": "This API permanently deletes the resources specified in the API request. Additionally, the child resources are also permanently deleted.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | Array containing the IDs of the resources to delete. \n"
					},
					"response": [
						{
							"name": "Delete resources from Recycle Bin",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\" : [ \"232323\", \"3213123\", \"40000000561232\", \"4000000056156\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/recycleBin/delete",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"recycleBin",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\" : [ {\n    \"success\" : true,\n    \"id\" : \"4000000056156\",\n    \"errors\" : null\n  }, {\n    \"success\" : false,\n    \"id\" : \"232323\",\n    \"errors\" : {\n      \"errorMessage\" : null,\n      \"errorCode\" : \"UNPROCESSABLE_ENTITY\",\n      \"httpCode\" : \"422\"\n    }\n  }, {\n    \"success\" : false,\n    \"id\" : \"3213123\",\n    \"errors\" : {\n      \"errorMessage\" : null,\n      \"errorCode\" : \"UNPROCESSABLE_ENTITY\",\n      \"httpCode\" : \"422\"\n    }\n  }, {\n    \"success\" : false,\n    \"id\" : \"40000000561232\",\n    \"errors\" : {\n      \"errorMessage\" : null,\n      \"errorCode\" : \"FORBIDDEN\",\n      \"httpCode\" : \"403\"\n    }\n  } ]\n}"
						}
					]
				},
				{
					"name": "Delete all resources from Recycle Bin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/recycleBin/deleteAll",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"recycleBin",
								"deleteAll"
							]
						},
						"description": "This API permanently deletes all resources from the Recycle Bin.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n"
					},
					"response": [
						{
							"name": "Delete all resources from Recycle Bin",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/recyleBin/deleteAll",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"recyleBin",
										"deleteAll"
									]
								}
							},
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "The Recycle Bin is the location where deleted resources, such as tickets, contacts, tasks, and time entries among others, are temporarily stored. From this location, users can retrieve resources that may have been accidentally deleted."
		},
		{
			"name": "Subject Access Requests",
			"item": [
				{
					"name": "List subject access requests",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/subjectAccessRequests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"subjectAccessRequests"
							],
							"query": [
								{
									"key": "from",
									"value": "<integer>\nrange : >=1",
									"description": "Index number, starting from which the requests must be fetched.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<integer>\nrange : 1-100",
									"description": "Number of requests to list. The default value is `10` and the maximum value supported is `100`.",
									"disabled": true
								},
								{
									"key": "contactEmailId",
									"value": "<string>\nmax chars : 100",
									"description": "Email ID of the contact who made the request.",
									"disabled": true
								},
								{
									"key": "status",
									"value": "<string>\nmax chars : 100",
									"description": "Processing status of the request. Values allowed are: `INITIATED`, `INPROGRESS`, `COMPLETED`, `CANCELED`, `EXPORTED`, `PARTIALLY_COMPLETED`, `PARTIALLY_EXPORTED` and `FAILED`. You can pass multiple values by separating them using commas in the API request.",
									"disabled": true
								},
								{
									"key": "duration",
									"value": "<string>\nmax chars : 100",
									"description": "Period in which the requests were made. Values allowed are: `TODAY`, `LAST_24_HOURS`, `LAST_7_DAYS`, `LAST_30_DAYS`, `CURRENT_WEEK`, and `CURRENT_MONTH`. ",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "<string>\nmax chars : 100",
									"description": "Starting time of the time range in which the requests should have been created. The time should be in the UTC time zone and expressed in a timestamp.",
									"disabled": true
								},
								{
									"key": "endTime",
									"value": "<string>\nmax chars : 100",
									"description": "Ending time of the time range in which the requests should have been created. The time should be in the UTC time zone and expressed in a timestamp.",
									"disabled": true
								},
								{
									"key": "requestType",
									"value": "<string>\nmax chars : 100",
									"description": "Filter by type of the request. Values allowed are: `ACCESS_REQUEST`, `ERASURE_REQUEST`. You can pass multiple values by separating them using commas in the API request.",
									"disabled": true
								},
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the requests. Values allowed are: `createdBy` and `modifiedBy`. You can pass multiple values by separating them using commas in the API request.",
									"disabled": true
								}
							]
						},
						"description": "This API lists a particular number of subject access requests, based on the limit specified.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "List subject access requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/subjectAccessRequests?include=createdBy,modifiedBy",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"subjectAccessRequests"
									],
									"query": [
										{
											"key": "include",
											"value": "createdBy,modifiedBy"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"referencereferenceTicketNumber\" : \"105\",\n    \"contactEmailId\" : \"john@zylker.com\",\n    \"modifiedById\" : \"7000000000247\",\n    \"createdBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n      \"firstName\" : \"Jack\",\n      \"lastName\" : \"Carol\",\n      \"id\" : \"7000000000247\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"sarNumber\" : \"141\",\n    \"createdTime\" : \"2020-10-29T12:11:51.890Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n      \"firstName\" : \"Jack\",\n      \"lastName\" : \"Carol\",\n      \"id\" : \"7000000000247\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"id\" : \"7000000092437\",\n    \"createdById\" : \"7000000000247\",\n    \"status\" : \"COMPLETED\"\n  }, {\n    \"contactEmailId\" : \"nirmal@zylker.com\",\n    \"modifiedById\" : \"7000000000247\",\n    \"createdBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n      \"firstName\" : \"Jack\",\n      \"lastName\" : \"Carol\",\n      \"id\" : \"7000000000247\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"referenceTicketNumber\" : null,\n    \"sarNumber\" : \"140\",\n    \"createdTime\" : \"2020-10-29T12:10:16.890Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n      \"firstName\" : \"Jack\",\n      \"lastName\" : \"Carol\",\n      \"id\" : \"7000000000247\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"id\" : \"7000000092243\",\n    \"createdById\" : \"7000000000247\",\n    \"status\" : \"INITIATED\"\n  }, {\n    \"contactEmailId\" : \"mark@zylker.com\",\n    \"modifiedById\" : \"7000000000247\",\n    \"createdBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n      \"firstName\" : \"Jack\",\n      \"lastName\" : \"Carol\",\n      \"id\" : \"7000000000247\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"referenceTicketNumber\" : \"102\",\n    \"sarNumber\" : \"139\",\n    \"createdTime\" : \"2020-10-29T12:08:18.838Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n      \"firstName\" : \"Jack\",\n      \"lastName\" : \"Carol\",\n      \"id\" : \"7000000000247\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"id\" : \"7000000092049\",\n    \"createdById\" : \"7000000000247\",\n    \"status\" : \"INPROGRESS\"\n  }, {\n    \"contactEmailId\" : \"john@zylker.com\",\n    \"modifiedById\" : \"7000000000247\",\n    \"createdBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n      \"firstName\" : \"Jack\",\n      \"lastName\" : \"Carol\",\n      \"id\" : \"7000000000247\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"referenceTicketNumber\" : null,\n    \"sarNumber\" : \"138\",\n    \"createdTime\" : \"2020-10-29T12:02:29.954Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n      \"firstName\" : \"Jack\",\n      \"lastName\" : \"Carol\",\n      \"id\" : \"7000000000247\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"id\" : \"7000000091353\",\n    \"createdById\" : \"7000000000247\",\n    \"status\" : \"INPROGRESS\"\n  }, {\n    \"contactEmailId\" : \"mark@zylker.com\",\n    \"modifiedById\" : \"7000000000247\",\n    \"createdBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n      \"firstName\" : \"Jack\",\n      \"lastName\" : \"Carol\",\n      \"id\" : \"7000000000247\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"referenceTicketNumber\" : null,\n    \"sarNumber\" : \"137\",\n    \"createdTime\" : \"2020-10-29T11:59:26.592Z\",\n    \"modifiedBy\" : {\n      \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n      \"firstName\" : \"Jack\",\n      \"lastName\" : \"Carol\",\n      \"id\" : \"7000000000247\",\n      \"email\" : \"jack@zylker.com\"\n    },\n    \"id\" : \"7000000091159\",\n    \"createdById\" : \"7000000000247\",\n    \"status\" : \"INITIATED\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get subject access request",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/subjectAccessRequests/:subjectAccessRequest_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"subjectAccessRequests",
								":subjectAccessRequest_id"
							],
							"query": [
								{
									"key": "include",
									"value": "<string>\nmax chars : 100",
									"description": "Additional information related to the request. Values allowed are: `createdBy` and `modifiedBy`. You can pass multiple values by separating them using commas in the API request.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "subjectAccessRequest_id"
								}
							]
						},
						"description": "This API fetches the details of a particular SAR.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get subject access request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/subjectAccessRequests/400000005634",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"subjectAccessRequests",
										"400000005634"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"contactEmailId\" : \"carrol@zylker.com\",\n  \"requestType\" : \"ERASURE_REQUEST\",\n  \"recordType\" : \"SPECIFIC\",\n  \"module\" : \"tickets\",\n  \"query\" : {\n    \"criteriaFields\" : [ {\n      \"condition\" : \"is before\",\n      \"field\" : {\n        \"apiName\" : \"createdTime\",\n        \"fieldLabel\" : \"Created Time\"\n      },\n      \"value\" : {\n        \"primitive\" : [ {\n          \"displayKey\" : \"${CURRENTTIME}\",\n          \"key\" : \"${CURRENTTIME}\"\n        } ],\n        \"type\" : \"primitive\"\n      }\n    } ],\n    \"criteriaPattern\" : \"1\"\n  },\n  \"downloadURL\" : null,\n  \"modifiedById\" : \"7000000000247\",\n  \"createdBy\" : {\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n    \"firstName\" : \"Nirmal\",\n    \"lastName\" : \"Kumar\",\n    \"id\" : \"7000000000247\",\n    \"email\" : \"nirmal@zylker.com\"\n  },\n  \"referenceTicketNumber\" : null,\n  \"sarNumber\" : \"141\",\n  \"createdTime\" : \"2020-10-29T12:11:51.890Z\",\n  \"modifiedBy\" : {\n    \"photoURL\" : \"https://desk.zoho.com/api/v1/agents/7000000000247/photo?orgId=15273347\",\n    \"firstName\" : \"Nirmal\",\n    \"lastName\" : \"Kumar\",\n    \"id\" : \"7000000000247\",\n    \"email\" : \"john@zylker.com\"\n  },\n  \"id\" : \"7000000092437\",\n  \"createdById\" : \"7000000000247\",\n  \"status\" : \"INPROGRESS\"\n}"
						}
					]
				},
				{
					"name": "List resources related to subject",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/subjectAccessRequests/entities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"subjectAccessRequests",
								"entities"
							]
						},
						"description": "This API lists a particular number of resources related to the subject, based on the limit specified.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| module (required) | &lt;string&gt;<br />max chars : 100 | Name of the modules from which the resources must be fetched. Values allowed are `tickets` and `contacts`. If you want to fetch resources from both modules, pass the value `allEntities`. \n| contactEmailId (required) | &lt;string&gt;<br />max chars : 100 | Email ID of the contact who made the request. \n| from  | &lt;integer&gt;<br />range : >=1 | Index number, starting from which the resources must be fetched. \n| limit  | &lt;integer&gt;<br />range : 1-50 | Number of resources to list. The default value is `10` and the maximum value supported is `50`. \n| fieldConditions  | &lt;list&gt;<br /> | Field-related conditions, based on which the resources must be filtered. \n"
					},
					"response": [
						{
							"name": "List resources related to subject",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fieldConditions\" : [ {\n    \"condition\" : \"is\",\n    \"fieldName\" : \"Last Name\",\n    \"value\" : [ \"Carol\" ]\n  } ],\n  \"contactEmailId\" : \"johncarol@zylker.com\",\n  \"module\" : \"contacts\",\n  \"limit\" : \"5\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/subjectAccessRequests/entities",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"subjectAccessRequests",
										"entities"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"data\" : [ {\n    \"firstName\" : \"John\",\n    \"lastName\" : \"Carol\",\n    \"accountId\" : null,\n    \"phone\" : null,\n    \"webUrl\" : \"https://desk.zoho.com/support/zylker/ShowHomePage.do#Contacts/dv/7000000092456\",\n    \"mobile\" : null,\n    \"createdTime\" : \"2019-09-24T05:06:58.000Z\",\n    \"id\" : \"7000000092456\",\n    \"type\" : null,\n    \"email\" : \"johncarol@zylker.com\",\n    \"account\" : null\n  } ]\n}"
						}
					]
				},
				{
					"name": "Get count of resources related to request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/subjectAccessRequests/count",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"subjectAccessRequests",
								"count"
							]
						},
						"description": "This API returns the number of resources related to a subject access request.\n#### OAuth Scope\n- `Desk.settings.READ`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| fieldConditions  | &lt;list&gt;<br /> | Field-related conditions, based on which the resources must be filtered \n| module (required) | &lt;string&gt;<br />max chars : 100 | Name of the modules from which the data must be exported. Values allowed are `tickets` and `contacts`. If you want to fetch data from both modules, pass the value `allEntities`. \n| contactEmailId (required) | &lt;string&gt;<br />max chars : 100 | Email ID of the user who made the request. \n"
					},
					"response": [
						{
							"name": "Get count of resources related to request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contactEmailId\" : \"johncarol@zylker.com\",\n  \"module\" : \"allEntities\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/subjectAccessRequests/count",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"subjectAccessRequests",
										"count"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"count\" : \"3\"\n}"
						}
					]
				},
				{
					"name": "Export all subject data from Zoho Desk",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/subjectAccessRequests/exportAll",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"subjectAccessRequests",
								"exportAll"
							]
						},
						"description": "This API exports data related to the subject, from your Zoho Desk portal.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| module (required) | &lt;string&gt;<br />max chars : 100 | Name of the modules from which the resources must be fetched. Values allowed are `tickets` and `contacts`. If you want to fetch resources from both modules, pass the value `allEntities`. \n| fieldConditions  | &lt;list&gt;<br /> | Field-related conditions, based on which the data must be filtered. \n| contactEmailId (required) | &lt;string&gt;<br />max chars : 100 | Email ID of the user who made the request. \n"
					},
					"response": [
						{
							"name": "Export all subject data from Zoho Desk",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fieldConditions\" : [ {\n    \"condition\" : \"is\",\n    \"fieldName\" : \"Last Name\",\n    \"value\" : [ \"carol\" ]\n  } ],\n  \"contactEmailId\" : \"jackcarol@zylker.com\",\n  \"module\" : \"contact\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/subjectAccessRequests/exportAll",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"subjectAccessRequests",
										"exportAll"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2020-10-29T12:11:51.890Z\",\n  \"contactEmailId\" : \"jackcarol@zylker.com\",\n  \"requestType\" : \"ACCESS_REQUEST\",\n  \"recordType\" : \"ALL\",\n  \"module\" : \"allEntities\",\n  \"query\" : null,\n  \"downloadURL\" : null,\n  \"modifiedById\" : \"7000000000247\",\n  \"referenceTicketNumber\" : null,\n  \"sarNumber\" : \"141\",\n  \"createdTime\" : \"2020-10-29T12:11:51.890Z\",\n  \"id\" : \"7000000092437\",\n  \"createdById\" : \"7000000000247\",\n  \"status\" : \"INITIATED\"\n}"
						}
					]
				},
				{
					"name": "Export specific resources",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/subjectAccessRequests/export",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"subjectAccessRequests",
								"export"
							]
						},
						"description": "This API exports specific resources related to a subject access request.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | Array containing the IDs of the resources that must be exported. \n| contactEmailId (required) | &lt;string&gt;<br />max chars : 100 | Email ID of the user who made the request. \n"
					},
					"response": [
						{
							"name": "Export specific resources",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contactEmailId\" : \"jackcarol@zylker.com\",\n  \"ids\" : [ \"7000000075023\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/subjectAccessRequests/export",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"subjectAccessRequests",
										"export"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2020-10-26T16:10:18.930Z\",\n  \"contactEmailId\" : \"nirmal@zylker.com\",\n  \"requestType\" : \"ACCESS_REQUEST\",\n  \"recordType\" : \"SPECIFIC\",\n  \"module\" : \"tickets\",\n  \"query\" : {\n    \"criteriaFields\" : [ {\n      \"condition\" : \"is before\",\n      \"field\" : {\n        \"apiName\" : \"createdTime\",\n        \"fieldLabel\" : \"Created Time\"\n      },\n      \"value\" : {\n        \"primitive\" : [ {\n          \"displayKey\" : \"${CURRENTTIME}\",\n          \"key\" : \"${CURRENTTIME}\"\n        } ],\n        \"type\" : \"primitive\"\n      }\n    } ],\n    \"criteriaPattern\" : \"1\"\n  },\n  \"downloadURL\" : \"https://download.zoho.com/webdownload?x-service=desk&event-id=d7c93cfe30f48f884b41171390d582f3c0cdb2&x-cli-msg=%7B%22portalname%22%3A%22jordan%22%2C%22inline%22%3A%22false%22%7D\",\n  \"modifiedById\" : \"7000000000247\",\n  \"referenceTicketNumber\" : null,\n  \"sarNumber\" : \"91\",\n  \"createdTime\" : \"2020-10-26T16:10:18.930Z\",\n  \"id\" : \"7000000075001\",\n  \"createdById\" : \"7000000000247\",\n  \"status\" : \"COMPLETED\"\n}"
						}
					]
				},
				{
					"name": "Get fields and conditions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/subjectAccessRequests/fieldsAndConditions?module=<string>\nmax chars : 100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"subjectAccessRequests",
								"fieldsAndConditions"
							],
							"query": [
								{
									"key": "module",
									"value": "<string>\nmax chars : 100",
									"description": "Name of the modules from which the resources must be fetched. Values allowed are `tickets` and `contacts`. If you want to fetch resources from both modules, pass the value `allEntities`."
								}
							]
						},
						"description": "This API fetchs possible fileds list and conditions\n#### OAuth Scope\n- `Desk.settings.READ`\n\n"
					},
					"response": [
						{
							"name": "Get fields and conditions",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"url": {
									"raw": "desk.zoho.com/api/v1/subjectAccessRequests/fieldsAndConditions",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"subjectAccessRequests",
										"fieldsAndConditions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"displayLabel\" : \"AllEntities\",\n  \"name\" : \"AllEntities\",\n  \"fieldDetails\" : [ {\n    \"availableConditions\" : [ {\n      \"condition\" : \"is\",\n      \"i18NCondition\" : \"is\",\n      \"value\" : [ \"${CUSTOM}\" ]\n    }, {\n      \"condition\" : \"isn't\",\n      \"i18NCondition\" : \"isn't\",\n      \"value\" : [ \"${CUSTOM}\" ]\n    }, {\n      \"condition\" : \"starts with\",\n      \"i18NCondition\" : \"starts with\",\n      \"value\" : [ \"${CUSTOM}\" ]\n    }, {\n      \"condition\" : \"is empty\",\n      \"i18NCondition\" : \"is empty\",\n      \"value\" : [ \"${EMPTY}\" ]\n    }, {\n      \"condition\" : \"is not empty\",\n      \"i18NCondition\" : \"is not empty\",\n      \"value\" : [ \"${NOTEMPTY}\" ]\n    } ],\n    \"fieldLabel\" : \"Phone\",\n    \"i18NLabel\" : \"Phone\",\n    \"type\" : \"text\"\n  }, {\n    \"availableConditions\" : [ {\n      \"condition\" : \"is\",\n      \"i18NCondition\" : \"is\",\n      \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n    }, {\n      \"condition\" : \"isn't\",\n      \"i18NCondition\" : \"isn't\",\n      \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n    }, {\n      \"condition\" : \"is after\",\n      \"i18NCondition\" : \"is after\",\n      \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n    }, {\n      \"condition\" : \"is before\",\n      \"i18NCondition\" : \"is before\",\n      \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n    }, {\n      \"condition\" : \"between\",\n      \"i18NCondition\" : \"between\",\n      \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n    }, {\n      \"condition\" : \"not between\",\n      \"i18NCondition\" : \"not between\",\n      \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n    } ],\n    \"fieldLabel\" : \"Created Time\",\n    \"i18NLabel\" : \"Created Time\",\n    \"type\" : \"dateTime\"\n  }, {\n    \"availableConditions\" : [ {\n      \"condition\" : \"is\",\n      \"i18NCondition\" : \"is\",\n      \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n    }, {\n      \"condition\" : \"isn't\",\n      \"i18NCondition\" : \"isn't\",\n      \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n    }, {\n      \"condition\" : \"is after\",\n      \"i18NCondition\" : \"is after\",\n      \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n    }, {\n      \"condition\" : \"is before\",\n      \"i18NCondition\" : \"is before\",\n      \"value\" : [ \"${CURRENTTIME}\", \"${CUSTOM}\" ]\n    }, {\n      \"condition\" : \"between\",\n      \"i18NCondition\" : \"between\",\n      \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n    }, {\n      \"condition\" : \"not between\",\n      \"i18NCondition\" : \"not between\",\n      \"value\" : [ [ \"${CURRENTTIME}\", \"${CUSTOM}\" ], [ \"${CURRENTTIME}\", \"${CUSTOM}\" ] ]\n    } ],\n    \"fieldLabel\" : \"Modified Time\",\n    \"i18NLabel\" : \"Modified Time\",\n    \"type\" : \"dateTime\"\n  } ]\n}"
						}
					]
				},
				{
					"name": "Erase all subject data from Zoho Desk",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/subjectAccessRequests/eraseAll",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"subjectAccessRequests",
								"eraseAll"
							]
						},
						"description": "This API erases data related to the subject, from your Zoho Desk portal.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| module (required) | &lt;string&gt;<br />max chars : 100 | Name of the modules from which the resources must be fetched. Values allowed are `tickets` and `contacts`. If you want to fetch resources from both modules, pass the value `allEntities`. \n| fieldConditions  | &lt;list&gt;<br /> | Field-related conditions, based on which the data must be filtered. \n| contactEmailId (required) | &lt;string&gt;<br />max chars : 100 | Email ID of the user who made the request. \n"
					},
					"response": [
						{
							"name": "Erase all subject data from Zoho Desk",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fieldConditions\" : [ {\n    \"condition\" : \"is\",\n    \"fieldName\" : \"Last Name\",\n    \"value\" : [ \"carol\" ]\n  } ],\n  \"contactEmailId\" : \"jackcarol@zylker.com\",\n  \"module\" : \"contact\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/subjectAccessRequests/eraseAll",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"subjectAccessRequests",
										"eraseAll"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2020-10-29T12:11:51.890Z\",\n  \"contactEmailId\" : \"jackcarol@zylker.com\",\n  \"requestType\" : \"ERASURE_REQUEST\",\n  \"recordType\" : \"ALL\",\n  \"module\" : \"allEntities\",\n  \"query\" : null,\n  \"downloadURL\" : null,\n  \"modifiedById\" : \"7000000000247\",\n  \"referenceTicketNumber\" : null,\n  \"sarNumber\" : \"141\",\n  \"createdTime\" : \"2020-10-29T12:11:51.890Z\",\n  \"id\" : \"7000000092437\",\n  \"createdById\" : \"7000000000247\",\n  \"status\" : \"INITIATED\"\n}"
						}
					]
				},
				{
					"name": "Erase specific resources",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Zoho-oauthtoken {{access_token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/subjectAccessRequests/erase",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"subjectAccessRequests",
								"erase"
							]
						},
						"description": "This API erases specific resources related to a subject access request.\n#### OAuth Scope\n- `Desk.settings.UPDATE`\n\n\n#### Attributes\n| Attribute Name | Data Type | Description |\n| ---- | ---- | ---- |\n| ids (required) | &lt;list&gt;<br /> | Array containing the IDs of the resources that must be exported. \n| contactEmailId (required) | &lt;string&gt;<br />max chars : 100 | Email ID of the user who made the request. \n"
					},
					"response": [
						{
							"name": "Erase specific resources",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orgId",
										"value": "2389290"
									},
									{
										"key": "Authorization",
										"value": "Zoho-oauthtoken 1000.3d0a155402dbb59f776fd63adb1e67c0.a41ea557a6a8d7e402690098b2056f60s"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contactEmailId\" : \"jackcarol@zylker.com\",\n  \"ids\" : [ \"7000000075023\" ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "desk.zoho.com/api/v1/subjectAccessRequests/erase",
									"host": [
										"desk",
										"zoho",
										"com"
									],
									"path": [
										"api",
										"v1",
										"subjectAccessRequests",
										"erase"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"modifiedTime\" : \"2020-10-26T16:10:18.930Z\",\n  \"contactEmailId\" : \"nirmal@zylker.com\",\n  \"requestType\" : \"ERASURE_REQUEST\",\n  \"recordType\" : \"SPECIFIC\",\n  \"module\" : \"tickets\",\n  \"query\" : {\n    \"criteriaFields\" : [ {\n      \"condition\" : \"is before\",\n      \"field\" : {\n        \"apiName\" : \"createdTime\",\n        \"fieldLabel\" : \"Created Time\"\n      },\n      \"value\" : {\n        \"primitive\" : [ {\n          \"displayKey\" : \"${CURRENTTIME}\",\n          \"key\" : \"${CURRENTTIME}\"\n        } ],\n        \"type\" : \"primitive\"\n      }\n    } ],\n    \"criteriaPattern\" : \"1\"\n  },\n  \"downloadURL\" : \"https://download.zoho.com/webdownload?x-service=desk&event-id=d7c93cfe30f48f884b41171390d582f3c0cdb2&x-cli-msg=%7B%22portalname%22%3A%22jordan%22%2C%22inline%22%3A%22false%22%7D\",\n  \"modifiedById\" : \"7000000000247\",\n  \"referenceTicketNumber\" : null,\n  \"sarNumber\" : \"91\",\n  \"createdTime\" : \"2020-10-26T16:10:18.930Z\",\n  \"id\" : \"7000000075001\",\n  \"createdById\" : \"7000000000247\",\n  \"status\" : \"COMPLETED\"\n}"
						}
					]
				}
			],
			"description": "As part of the General Data Protection Regulation (GDPR), which is the core of Europe's digital privacy legislation, every customer or end-user has the right to ask an organization whether or not their personal information is used and/or stored. This is called the right of access, and exercising this right is called making a Subject Access Request (SAR)."
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "accessTokenUrl",
				"value": "https://accounts.zoho.com/oauth/v2/token",
				"type": "string"
			},
			{
				"key": "authUrl",
				"value": "https://accounts.zoho.com/oauth/v2/auth",
				"type": "string"
			},
			{
				"key": "state",
				"value": "{{state}}",
				"type": "string"
			},
			{
				"key": "scope",
				"value": "{{scope}}",
				"type": "string"
			},
			{
				"key": "clientSecret",
				"value": "{{client_secret}}",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "{{client_id}}",
				"type": "string"
			},
			{
				"key": "headerPrefix",
				"value": "Zoho-oauthtoken",
				"type": "string"
			},
			{
				"key": "Authorization",
				"value": "Zoho-oauthtoken {{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}